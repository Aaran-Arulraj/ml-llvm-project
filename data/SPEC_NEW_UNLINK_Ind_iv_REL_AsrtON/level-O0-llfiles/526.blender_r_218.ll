; ModuleID = 'blender/source/blender/blenkernel/intern/pointcache.c'
source_filename = "blender/source/blender/blenkernel/intern/pointcache.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type { %struct.EffectorWeights*, %struct.Group*, %struct.Object**, %struct.Group*, i32, float, %struct.PointCache*, %struct.ListBase, i32, i16, i16, i32, float, i8* }
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.Group = type opaque
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.Ipo = type opaque
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Cloth = type { %struct.ClothVertex*, %struct.LinkNode*, i32, i32, i32, i8, i8, i16, %struct.BVHTree*, %struct.BVHTree*, %struct.MFace*, %struct.Implicit_Data*, %struct.Implicit_Data*, %struct.EdgeSet*, i32, i32 }
%struct.ClothVertex = type { i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], float*, i32, float, float, float, float, i32, float }
%struct.LinkNode = type opaque
%struct.MFace = type opaque
%struct.Implicit_Data = type opaque
%struct.EdgeSet = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.DerivedMesh = type opaque
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type { i8*, i8*, i16, i16, i32, i32, i16, i16, float, float, float, float, float, float, float, float, [4 x float], [3 x float], float }
%struct.RigidBodyCon = type { %struct.Object*, %struct.Object*, i16, i16, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32*, float, float, float, float, i16, float, float }
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.PTCacheExtra = type { %struct.PTCacheExtra*, %struct.PTCacheExtra*, i32, i32, i8* }
%struct.SmokeModifierData = type { %struct.ModifierData, %struct.SmokeDomainSettings*, %struct.SmokeFlowSettings*, %struct.SmokeCollSettings*, float, i32 }
%struct.SmokeDomainSettings = type { %struct.SmokeModifierData*, %struct.FLUID_3D*, i8*, %struct.Group*, %struct.Group*, %struct.Group*, %struct.WTURBULENCE*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, float*, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x i32], [3 x float], [3 x float], [4 x [4 x float]], [4 x [4 x float]], [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, float, float, i32, i32, float, float, float, i32, i32, i32, i32, i16, i16, i32, float, [3 x i32], float, i32, i32, [2 x %struct.PointCache*], [2 x %struct.ListBase], %struct.EffectorWeights*, i32, float, float, i32, [3 x float], i32, float, float, float, float, float, [3 x float] }
%struct.FLUID_3D = type opaque
%struct.WTURBULENCE = type opaque
%struct.SmokeFlowSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Tex*, float*, i32, float, float, float, float, [3 x float], float, float, float, float, float, i32, float, float, i32, [64 x i8], i16, i16, i16, i16, i32 }
%struct.SmokeCollSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, float*, i32, i16, i16 }
%struct.DynamicPaintSurface = type { %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface*, %struct.DynamicPaintCanvasSettings*, %struct.PaintSurfaceData*, %struct.Group*, %struct.EffectorWeights*, %struct.PointCache*, %struct.ListBase, i32, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x float], %struct.Tex*, [64 x i8], i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [64 x i8], [1024 x i8], [64 x i8], [64 x i8] }
%struct.DynamicPaintCanvasSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ListBase, i16, i16, i32, [64 x i8] }
%struct.DynamicPaintModifierData = type { %struct.ModifierData, %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintBrushSettings*, i32, i32 }
%struct.DynamicPaintBrushSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Material*, i32, i32, float, float, float, float, float, float, float, float, %struct.ColorBand*, %struct.ColorBand*, i16, i16, i16, i16, float, float, float, float }
%struct.PaintSurfaceData = type { i8*, i8*, %struct.PaintAdjData*, %struct.PaintBakeData*, i32 }
%struct.PaintAdjData = type opaque
%struct.PaintBakeData = type opaque
%struct.DupliObject = type { %struct.DupliObject*, %struct.DupliObject*, %struct.Object*, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], %struct.ParticleSystem* }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.PTCacheBaker = type { %struct.Main*, %struct.Scene*, i32, i32, i32, i32, %struct.PTCacheID*, i32 (i8*)*, i8*, void (i8*, i32)*, void (i8*)*, i8* }
%struct.ptcache_bake_data = type { i32, i32, i32, i32, i32*, %struct.Main*, %struct.Scene* }

@ptcache_data_size = internal global [8 x i32] [i32 4, i32 12, i32 12, i32 16, i32 12, i32 4, i32 12, i32 20], align 16, !dbg !0
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [10 x i8] c"PTCacheID\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"Adding Dupli\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"_%02u.bphys\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.3 = private unnamed_addr constant [20 x i8] c"cached frames array\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c".bphys\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"PointCache\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"File must be saved before using disk cache!\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"_%02d.bphys\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"%i frames found!\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"%i points found!\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"No valid data to read!\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"%i cells + High Resolution cached\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"%i cells cached\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"%i frames on disk\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"%i frames in memory (%.1f %s)\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"Mb\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"kb\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"%s, cache is outdated!\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"%s, not exact since frame %i\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"%s.\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"Point cache: fluid extra data\00", align 1
@ptcache_extra_datasize = internal global [2 x i32] [i32 0, i32 16], align 4, !dbg !2737
@.str.23 = private unnamed_addr constant [24 x i8] c"Point cache: extra data\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.24 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"1.01\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"pointcache_lzo_buffer\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"tmp\00", align 1
@.str.28 = private unnamed_addr constant [51 x i8] c"Dynamic Paint: Invalid cache version: '%c%c%c%c'!\0A\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"pointcache_compressed_buffer\00", align 1
@.str.30 = private unnamed_addr constant [46 x i8] c"Number of points in cache does not match mesh\00", align 1
@.str.31 = private unnamed_addr constant [43 x i8] c"Error opening disk cache file for reading\0A\00", align 1
@.str.32 = private unnamed_addr constant [32 x i8] c"Failed to read point cache file\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"Point cache file has wrong type\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"Failed to read point cache file header\00", align 1
@.str.35 = private unnamed_addr constant [37 x i8] c"Failed to read point cache file data\00", align 1
@.str.36 = private unnamed_addr constant [43 x i8] c"Error opening disk cache file for writing\0A\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"Error writing to disk cache\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"BPHYSICS\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"Pointcache mem\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"PTCache Data\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"//blendcache_%s\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"%sblendcache_\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"_%06d_%02u.bphys\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"_%06d.bphys\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"bake: frame %d :: %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [53 x i8] c"Baked for %s, current frame: %i/%i (%.3fs), ETC: %s\0D\00", align 1
@.str.48 = private unnamed_addr constant [36 x i8] c"\0ABake %s %s (%i frames simulated).\0A\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"canceled after\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"finished in\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"%ih %im %is\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"%im %is\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"%is\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"Pointcache extradata\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"Pointcache extradata->data\00", align 1
@.str.56 = private unnamed_addr constant [31 x i8] c"Error reading from disk cache\0A\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.60 = private unnamed_addr constant [12 x i8] c"PTCacheFile\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %key, i32 %index, i8** %data, float %time) #0 !dbg !2745 {
entry:
  %key.addr = alloca %struct.ParticleKey*, align 8
  %index.addr = alloca i32, align 4
  %data.addr = alloca i8**, align 8
  %time.addr = alloca float, align 4
  store %struct.ParticleKey* %key, %struct.ParticleKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %key.addr, metadata !2749, metadata !DIExpression()), !dbg !2750
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2751, metadata !DIExpression()), !dbg !2752
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2753, metadata !DIExpression()), !dbg !2754
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !2755, metadata !DIExpression()), !dbg !2756
  %0 = load i8**, i8*** %data.addr, align 8, !dbg !2757
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !2757
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2757
  %tobool = icmp ne i8* %1, null, !dbg !2757
  br i1 %tobool, label %if.then, label %if.end, !dbg !2759

if.then:                                          ; preds = %entry
  %2 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2760
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %2, i32 0, i32 0, !dbg !2760
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2760
  %3 = bitcast float* %arraydecay to i8*, !dbg !2760
  %4 = load i8**, i8*** %data.addr, align 8, !dbg !2760
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !2760
  %5 = load i8*, i8** %arrayidx1, align 8, !dbg !2760
  %6 = load i32, i32* %index.addr, align 4, !dbg !2760
  %tobool2 = icmp ne i32 %6, 0, !dbg !2760
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !2760

cond.true:                                        ; preds = %if.then
  %7 = load i32, i32* %index.addr, align 4, !dbg !2760
  %8 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !2760
  %mul = mul nsw i32 %7, %8, !dbg !2760
  br label %cond.end, !dbg !2760

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ 0, %cond.false ], !dbg !2760
  %idx.ext = sext i32 %cond to i64, !dbg !2760
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2760
  %9 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !2760
  %conv = sext i32 %9 to i64, !dbg !2760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 1 %add.ptr, i64 %conv, i1 false), !dbg !2760
  br label %if.end, !dbg !2760

if.end:                                           ; preds = %cond.end, %entry
  %10 = load i8**, i8*** %data.addr, align 8, !dbg !2762
  %arrayidx3 = getelementptr inbounds i8*, i8** %10, i64 2, !dbg !2762
  %11 = load i8*, i8** %arrayidx3, align 8, !dbg !2762
  %tobool4 = icmp ne i8* %11, null, !dbg !2762
  br i1 %tobool4, label %if.then5, label %if.end17, !dbg !2764

if.then5:                                         ; preds = %if.end
  %12 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2765
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %12, i32 0, i32 1, !dbg !2765
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !2765
  %13 = bitcast float* %arraydecay6 to i8*, !dbg !2765
  %14 = load i8**, i8*** %data.addr, align 8, !dbg !2765
  %arrayidx7 = getelementptr inbounds i8*, i8** %14, i64 2, !dbg !2765
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !2765
  %16 = load i32, i32* %index.addr, align 4, !dbg !2765
  %tobool8 = icmp ne i32 %16, 0, !dbg !2765
  br i1 %tobool8, label %cond.true9, label %cond.false11, !dbg !2765

cond.true9:                                       ; preds = %if.then5
  %17 = load i32, i32* %index.addr, align 4, !dbg !2765
  %18 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !2765
  %mul10 = mul nsw i32 %17, %18, !dbg !2765
  br label %cond.end12, !dbg !2765

cond.false11:                                     ; preds = %if.then5
  br label %cond.end12, !dbg !2765

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi i32 [ %mul10, %cond.true9 ], [ 0, %cond.false11 ], !dbg !2765
  %idx.ext14 = sext i32 %cond13 to i64, !dbg !2765
  %add.ptr15 = getelementptr inbounds i8, i8* %15, i64 %idx.ext14, !dbg !2765
  %19 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !2765
  %conv16 = sext i32 %19 to i64, !dbg !2765
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 1 %add.ptr15, i64 %conv16, i1 false), !dbg !2765
  br label %if.end17, !dbg !2765

if.end17:                                         ; preds = %cond.end12, %if.end
  %20 = load i8**, i8*** %data.addr, align 8, !dbg !2767
  %arrayidx18 = getelementptr inbounds i8*, i8** %20, i64 3, !dbg !2767
  %21 = load i8*, i8** %arrayidx18, align 8, !dbg !2767
  %cmp = icmp eq i8* %21, null, !dbg !2769
  br i1 %cmp, label %if.then20, label %if.else, !dbg !2770

if.then20:                                        ; preds = %if.end17
  %22 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2771
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %22, i32 0, i32 2, !dbg !2773
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !2771
  %23 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2774
  %vel22 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %23, i32 0, i32 1, !dbg !2775
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %vel22, i64 0, i64 0, !dbg !2774
  call void @vec_to_quat(float* %arraydecay21, float* %arraydecay23, i16 signext 3, i16 signext 2), !dbg !2776
  br label %if.end40, !dbg !2777

if.else:                                          ; preds = %if.end17
  %24 = load i8**, i8*** %data.addr, align 8, !dbg !2778
  %arrayidx24 = getelementptr inbounds i8*, i8** %24, i64 3, !dbg !2778
  %25 = load i8*, i8** %arrayidx24, align 8, !dbg !2778
  %tobool25 = icmp ne i8* %25, null, !dbg !2778
  br i1 %tobool25, label %if.then26, label %if.end39, !dbg !2781

if.then26:                                        ; preds = %if.else
  %26 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2782
  %rot27 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %26, i32 0, i32 2, !dbg !2782
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %rot27, i64 0, i64 0, !dbg !2782
  %27 = bitcast float* %arraydecay28 to i8*, !dbg !2782
  %28 = load i8**, i8*** %data.addr, align 8, !dbg !2782
  %arrayidx29 = getelementptr inbounds i8*, i8** %28, i64 3, !dbg !2782
  %29 = load i8*, i8** %arrayidx29, align 8, !dbg !2782
  %30 = load i32, i32* %index.addr, align 4, !dbg !2782
  %tobool30 = icmp ne i32 %30, 0, !dbg !2782
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !2782

cond.true31:                                      ; preds = %if.then26
  %31 = load i32, i32* %index.addr, align 4, !dbg !2782
  %32 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 3), align 4, !dbg !2782
  %mul32 = mul nsw i32 %31, %32, !dbg !2782
  br label %cond.end34, !dbg !2782

cond.false33:                                     ; preds = %if.then26
  br label %cond.end34, !dbg !2782

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi i32 [ %mul32, %cond.true31 ], [ 0, %cond.false33 ], !dbg !2782
  %idx.ext36 = sext i32 %cond35 to i64, !dbg !2782
  %add.ptr37 = getelementptr inbounds i8, i8* %29, i64 %idx.ext36, !dbg !2782
  %33 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 3), align 4, !dbg !2782
  %conv38 = sext i32 %33 to i64, !dbg !2782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 1 %add.ptr37, i64 %conv38, i1 false), !dbg !2782
  br label %if.end39, !dbg !2782

if.end39:                                         ; preds = %cond.end34, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then20
  %34 = load i8**, i8*** %data.addr, align 8, !dbg !2784
  %arrayidx41 = getelementptr inbounds i8*, i8** %34, i64 4, !dbg !2784
  %35 = load i8*, i8** %arrayidx41, align 8, !dbg !2784
  %tobool42 = icmp ne i8* %35, null, !dbg !2784
  br i1 %tobool42, label %if.then43, label %if.end55, !dbg !2786

if.then43:                                        ; preds = %if.end40
  %36 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2787
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %36, i32 0, i32 3, !dbg !2787
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !2787
  %37 = bitcast float* %arraydecay44 to i8*, !dbg !2787
  %38 = load i8**, i8*** %data.addr, align 8, !dbg !2787
  %arrayidx45 = getelementptr inbounds i8*, i8** %38, i64 4, !dbg !2787
  %39 = load i8*, i8** %arrayidx45, align 8, !dbg !2787
  %40 = load i32, i32* %index.addr, align 4, !dbg !2787
  %tobool46 = icmp ne i32 %40, 0, !dbg !2787
  br i1 %tobool46, label %cond.true47, label %cond.false49, !dbg !2787

cond.true47:                                      ; preds = %if.then43
  %41 = load i32, i32* %index.addr, align 4, !dbg !2787
  %42 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 4), align 16, !dbg !2787
  %mul48 = mul nsw i32 %41, %42, !dbg !2787
  br label %cond.end50, !dbg !2787

cond.false49:                                     ; preds = %if.then43
  br label %cond.end50, !dbg !2787

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi i32 [ %mul48, %cond.true47 ], [ 0, %cond.false49 ], !dbg !2787
  %idx.ext52 = sext i32 %cond51 to i64, !dbg !2787
  %add.ptr53 = getelementptr inbounds i8, i8* %39, i64 %idx.ext52, !dbg !2787
  %43 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 4), align 16, !dbg !2787
  %conv54 = sext i32 %43 to i64, !dbg !2787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 1 %add.ptr53, i64 %conv54, i1 false), !dbg !2787
  br label %if.end55, !dbg !2787

if.end55:                                         ; preds = %cond.end50, %if.end40
  %44 = load float, float* %time.addr, align 4, !dbg !2789
  %45 = load %struct.ParticleKey*, %struct.ParticleKey** %key.addr, align 8, !dbg !2790
  %time56 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %45, i32 0, i32 4, !dbg !2791
  store float %44, float* %time56, align 4, !dbg !2792
  ret void, !dbg !2793
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local void @vec_to_quat(float*, float*, i16 signext, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_softbody(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.SoftBody* %sb) #0 !dbg !2794 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sb.addr = alloca %struct.SoftBody*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !2803, metadata !DIExpression()), !dbg !2804
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2805, metadata !DIExpression()), !dbg !2806
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !2807, metadata !DIExpression()), !dbg !2808
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2809
  %1 = bitcast %struct.PTCacheID* %0 to i8*, !dbg !2810
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 200, i1 false), !dbg !2810
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2811
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2812
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 3, !dbg !2813
  store %struct.Object* %2, %struct.Object** %ob1, align 8, !dbg !2814
  %4 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2815
  %5 = bitcast %struct.SoftBody* %4 to i8*, !dbg !2815
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2816
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 4, !dbg !2817
  store i8* %5, i8** %calldata, align 8, !dbg !2818
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2819
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !2820
  store i32 0, i32* %type, align 8, !dbg !2821
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2822
  %pointcache = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 47, !dbg !2823
  %9 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !2823
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2824
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !2825
  store %struct.PointCache* %9, %struct.PointCache** %cache, align 8, !dbg !2826
  %11 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2827
  %pointcache2 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %11, i32 0, i32 47, !dbg !2828
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2829
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 26, !dbg !2830
  store %struct.PointCache** %pointcache2, %struct.PointCache*** %cache_ptr, align 8, !dbg !2831
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !2832
  %ptcaches = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 48, !dbg !2833
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2834
  %ptcaches3 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 27, !dbg !2835
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches3, align 8, !dbg !2836
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2837
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 22, !dbg !2838
  store i32 (i8*, i32)* @ptcache_softbody_totpoint, i32 (i8*, i32)** %totwrite, align 8, !dbg !2839
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2840
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 20, !dbg !2841
  store i32 (i8*, i32)* @ptcache_softbody_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !2842
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2843
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 21, !dbg !2844
  store void (i8*, i8*)* @ptcache_softbody_error, void (i8*, i8*)** %error, align 8, !dbg !2845
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2846
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 12, !dbg !2847
  store i32 (i32, i8*, i8**, i32)* @ptcache_softbody_write, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !2848
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2849
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 13, !dbg !2850
  store void (i32, i8*, i8**, float, float*)* @ptcache_softbody_read, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !2851
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2852
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 14, !dbg !2853
  store void (i32, i8*, i8**, float, float, float, float*)* @ptcache_softbody_interpolate, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !2854
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2855
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 15, !dbg !2856
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !2857
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2858
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 16, !dbg !2859
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !2860
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2861
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 17, !dbg !2862
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !2863
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2864
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 18, !dbg !2865
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !2866
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2867
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 19, !dbg !2868
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !2869
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2870
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 23, !dbg !2871
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !2872
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2873
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 24, !dbg !2874
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !2875
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2876
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 10, !dbg !2877
  store i32 6, i32* %data_types, align 4, !dbg !2878
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2879
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 11, !dbg !2880
  store i32 0, i32* %info_types, align 8, !dbg !2881
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2882
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 25, !dbg !2883
  %31 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !2883
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 12, !dbg !2884
  %32 = load i32, i32* %index, align 8, !dbg !2884
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2885
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 6, !dbg !2886
  store i32 %32, i32* %stack_index, align 4, !dbg !2887
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2888
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 8, !dbg !2889
  store i32 10, i32* %default_step, align 4, !dbg !2890
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !2891
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 9, !dbg !2892
  store i32 20, i32* %max_step, align 8, !dbg !2893
  ret void, !dbg !2894
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_softbody_totpoint(i8* %soft_v, i32 %UNUSED_cfra) #0 !dbg !2895 {
entry:
  %soft_v.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %soft = alloca %struct.SoftBody*, align 8
  store i8* %soft_v, i8** %soft_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %soft_v.addr, metadata !2896, metadata !DIExpression()), !dbg !2897
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !2898, metadata !DIExpression()), !dbg !2899
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %soft, metadata !2900, metadata !DIExpression()), !dbg !2901
  %0 = load i8*, i8** %soft_v.addr, align 8, !dbg !2902
  %1 = bitcast i8* %0 to %struct.SoftBody*, !dbg !2902
  store %struct.SoftBody* %1, %struct.SoftBody** %soft, align 8, !dbg !2901
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2903
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 0, !dbg !2904
  %3 = load i32, i32* %totpoint, align 8, !dbg !2904
  ret i32 %3, !dbg !2905
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_softbody_error(i8* %UNUSED_soft_v, i8* %UNUSED_message) #0 !dbg !2906 {
entry:
  %UNUSED_soft_v.addr = alloca i8*, align 8
  %UNUSED_message.addr = alloca i8*, align 8
  store i8* %UNUSED_soft_v, i8** %UNUSED_soft_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_soft_v.addr, metadata !2907, metadata !DIExpression()), !dbg !2908
  store i8* %UNUSED_message, i8** %UNUSED_message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_message.addr, metadata !2909, metadata !DIExpression()), !dbg !2910
  ret void, !dbg !2911
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_softbody_write(i32 %index, i8* %soft_v, i8** %data, i32 %UNUSED_cfra) #0 !dbg !2912 {
entry:
  %index.addr = alloca i32, align 4
  %soft_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %soft = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  store i8* %soft_v, i8** %soft_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %soft_v.addr, metadata !2915, metadata !DIExpression()), !dbg !2916
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2917, metadata !DIExpression()), !dbg !2918
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !2919, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %soft, metadata !2921, metadata !DIExpression()), !dbg !2922
  %0 = load i8*, i8** %soft_v.addr, align 8, !dbg !2923
  %1 = bitcast i8* %0 to %struct.SoftBody*, !dbg !2923
  store %struct.SoftBody* %1, %struct.SoftBody** %soft, align 8, !dbg !2922
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !2924, metadata !DIExpression()), !dbg !2927
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2928
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 2, !dbg !2929
  %3 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2929
  %4 = load i32, i32* %index.addr, align 4, !dbg !2930
  %idx.ext = sext i32 %4 to i64, !dbg !2931
  %add.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %3, i64 %idx.ext, !dbg !2931
  store %struct.BodyPoint* %add.ptr, %struct.BodyPoint** %bp, align 8, !dbg !2927
  %5 = load i8**, i8*** %data.addr, align 8, !dbg !2932
  %arrayidx = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !2932
  %6 = load i8*, i8** %arrayidx, align 8, !dbg !2932
  %tobool = icmp ne i8* %6, null, !dbg !2932
  br i1 %tobool, label %if.then, label %if.end, !dbg !2934

if.then:                                          ; preds = %entry
  %7 = load i8**, i8*** %data.addr, align 8, !dbg !2935
  %arrayidx1 = getelementptr inbounds i8*, i8** %7, i64 1, !dbg !2935
  %8 = load i8*, i8** %arrayidx1, align 8, !dbg !2935
  %9 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2935
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %9, i32 0, i32 3, !dbg !2935
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !2935
  %10 = bitcast float* %arraydecay to i8*, !dbg !2935
  %11 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !2935
  %conv = sext i32 %11 to i64, !dbg !2935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 4 %10, i64 %conv, i1 false), !dbg !2935
  br label %if.end, !dbg !2935

if.end:                                           ; preds = %if.then, %entry
  %12 = load i8**, i8*** %data.addr, align 8, !dbg !2937
  %arrayidx2 = getelementptr inbounds i8*, i8** %12, i64 2, !dbg !2937
  %13 = load i8*, i8** %arrayidx2, align 8, !dbg !2937
  %tobool3 = icmp ne i8* %13, null, !dbg !2937
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !2939

if.then4:                                         ; preds = %if.end
  %14 = load i8**, i8*** %data.addr, align 8, !dbg !2940
  %arrayidx5 = getelementptr inbounds i8*, i8** %14, i64 2, !dbg !2940
  %15 = load i8*, i8** %arrayidx5, align 8, !dbg !2940
  %16 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2940
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %16, i32 0, i32 4, !dbg !2940
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2940
  %17 = bitcast float* %arraydecay6 to i8*, !dbg !2940
  %18 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !2940
  %conv7 = sext i32 %18 to i64, !dbg !2940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 8 %17, i64 %conv7, i1 false), !dbg !2940
  br label %if.end8, !dbg !2940

if.end8:                                          ; preds = %if.then4, %if.end
  ret i32 1, !dbg !2942
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_softbody_read(i32 %index, i8* %soft_v, i8** %data, float %UNUSED_cfra, float* %old_data) #0 !dbg !2943 {
entry:
  %index.addr = alloca i32, align 4
  %soft_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %soft = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  store i8* %soft_v, i8** %soft_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %soft_v.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %soft, metadata !2954, metadata !DIExpression()), !dbg !2955
  %0 = load i8*, i8** %soft_v.addr, align 8, !dbg !2956
  %1 = bitcast i8* %0 to %struct.SoftBody*, !dbg !2956
  store %struct.SoftBody* %1, %struct.SoftBody** %soft, align 8, !dbg !2955
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !2957, metadata !DIExpression()), !dbg !2958
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !2959
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 2, !dbg !2960
  %3 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !2960
  %4 = load i32, i32* %index.addr, align 4, !dbg !2961
  %idx.ext = sext i32 %4 to i64, !dbg !2962
  %add.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %3, i64 %idx.ext, !dbg !2962
  store %struct.BodyPoint* %add.ptr, %struct.BodyPoint** %bp, align 8, !dbg !2958
  %5 = load float*, float** %old_data.addr, align 8, !dbg !2963
  %tobool = icmp ne float* %5, null, !dbg !2963
  br i1 %tobool, label %if.then, label %if.else, !dbg !2965

if.then:                                          ; preds = %entry
  %6 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2966
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %6, i32 0, i32 3, !dbg !2968
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !2969
  %7 = bitcast float* %arraydecay to i8*, !dbg !2969
  %8 = load i8**, i8*** %data.addr, align 8, !dbg !2970
  %9 = bitcast i8** %8 to i8*, !dbg !2969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %9, i64 12, i1 false), !dbg !2969
  %10 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2971
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %10, i32 0, i32 4, !dbg !2972
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !2973
  %11 = bitcast float* %arraydecay1 to i8*, !dbg !2973
  %12 = load i8**, i8*** %data.addr, align 8, !dbg !2974
  %add.ptr2 = getelementptr inbounds i8*, i8** %12, i64 3, !dbg !2975
  %13 = bitcast i8** %add.ptr2 to i8*, !dbg !2973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %13, i64 12, i1 false), !dbg !2973
  br label %if.end18, !dbg !2976

if.else:                                          ; preds = %entry
  %14 = load i8**, i8*** %data.addr, align 8, !dbg !2977
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 1, !dbg !2977
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !2977
  %tobool3 = icmp ne i8* %15, null, !dbg !2977
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !2980

if.then4:                                         ; preds = %if.else
  %16 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2981
  %pos5 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %16, i32 0, i32 3, !dbg !2981
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %pos5, i64 0, i64 0, !dbg !2981
  %17 = bitcast float* %arraydecay6 to i8*, !dbg !2981
  %18 = load i8**, i8*** %data.addr, align 8, !dbg !2981
  %arrayidx7 = getelementptr inbounds i8*, i8** %18, i64 1, !dbg !2981
  %19 = load i8*, i8** %arrayidx7, align 8, !dbg !2981
  %add.ptr8 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !2981
  %20 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !2981
  %conv = sext i32 %20 to i64, !dbg !2981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %add.ptr8, i64 %conv, i1 false), !dbg !2981
  br label %if.end, !dbg !2981

if.end:                                           ; preds = %if.then4, %if.else
  %21 = load i8**, i8*** %data.addr, align 8, !dbg !2983
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 2, !dbg !2983
  %22 = load i8*, i8** %arrayidx9, align 8, !dbg !2983
  %tobool10 = icmp ne i8* %22, null, !dbg !2983
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !2985

if.then11:                                        ; preds = %if.end
  %23 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !2986
  %vec12 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %23, i32 0, i32 4, !dbg !2986
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vec12, i64 0, i64 0, !dbg !2986
  %24 = bitcast float* %arraydecay13 to i8*, !dbg !2986
  %25 = load i8**, i8*** %data.addr, align 8, !dbg !2986
  %arrayidx14 = getelementptr inbounds i8*, i8** %25, i64 2, !dbg !2986
  %26 = load i8*, i8** %arrayidx14, align 8, !dbg !2986
  %add.ptr15 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !2986
  %27 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !2986
  %conv16 = sext i32 %27 to i64, !dbg !2986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %add.ptr15, i64 %conv16, i1 false), !dbg !2986
  br label %if.end17, !dbg !2986

if.end17:                                         ; preds = %if.then11, %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !2988
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_softbody_interpolate(i32 %index, i8* %soft_v, i8** %data, float %cfra, float %cfra1, float %cfra2, float* %old_data) #0 !dbg !2989 {
entry:
  %index.addr = alloca i32, align 4
  %soft_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca float, align 4
  %cfra1.addr = alloca float, align 4
  %cfra2.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %soft = alloca %struct.SoftBody*, align 8
  %bp = alloca %struct.BodyPoint*, align 8
  %keys = alloca [4 x %struct.ParticleKey], align 16
  %dfra = alloca float, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2990, metadata !DIExpression()), !dbg !2991
  store i8* %soft_v, i8** %soft_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %soft_v.addr, metadata !2992, metadata !DIExpression()), !dbg !2993
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2994, metadata !DIExpression()), !dbg !2995
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !2996, metadata !DIExpression()), !dbg !2997
  store float %cfra1, float* %cfra1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra1.addr, metadata !2998, metadata !DIExpression()), !dbg !2999
  store float %cfra2, float* %cfra2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra2.addr, metadata !3000, metadata !DIExpression()), !dbg !3001
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %soft, metadata !3004, metadata !DIExpression()), !dbg !3005
  %0 = load i8*, i8** %soft_v.addr, align 8, !dbg !3006
  %1 = bitcast i8* %0 to %struct.SoftBody*, !dbg !3006
  store %struct.SoftBody* %1, %struct.SoftBody** %soft, align 8, !dbg !3005
  call void @llvm.dbg.declare(metadata %struct.BodyPoint** %bp, metadata !3007, metadata !DIExpression()), !dbg !3008
  %2 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !3009
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %2, i32 0, i32 2, !dbg !3010
  %3 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint, align 8, !dbg !3010
  %4 = load i32, i32* %index.addr, align 4, !dbg !3011
  %idx.ext = sext i32 %4 to i64, !dbg !3012
  %add.ptr = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %3, i64 %idx.ext, !dbg !3012
  store %struct.BodyPoint* %add.ptr, %struct.BodyPoint** %bp, align 8, !dbg !3008
  call void @llvm.dbg.declare(metadata [4 x %struct.ParticleKey]* %keys, metadata !3013, metadata !DIExpression()), !dbg !3015
  call void @llvm.dbg.declare(metadata float* %dfra, metadata !3016, metadata !DIExpression()), !dbg !3017
  %5 = load float, float* %cfra1.addr, align 4, !dbg !3018
  %6 = load float, float* %cfra2.addr, align 4, !dbg !3020
  %cmp = fcmp oeq float %5, %6, !dbg !3021
  br i1 %cmp, label %if.then, label %if.end, !dbg !3022

if.then:                                          ; preds = %entry
  br label %return, !dbg !3023

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3024
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx, i32 0, i32 0, !dbg !3025
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3024
  %7 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3026
  %pos = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %7, i32 0, i32 3, !dbg !3027
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !3026
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !3028
  %arrayidx2 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3029
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx2, i32 0, i32 1, !dbg !3030
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !3029
  %8 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3031
  %vec = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %8, i32 0, i32 4, !dbg !3032
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3031
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !3033
  %9 = load float*, float** %old_data.addr, align 8, !dbg !3034
  %tobool = icmp ne float* %9, null, !dbg !3034
  br i1 %tobool, label %if.then5, label %if.else, !dbg !3036

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3037
  %co7 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx6, i32 0, i32 0, !dbg !3039
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !3040
  %10 = bitcast float* %arraydecay8 to i8*, !dbg !3040
  %11 = load float*, float** %old_data.addr, align 8, !dbg !3041
  %12 = bitcast float* %11 to i8*, !dbg !3040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 4 %12, i64 12, i1 false), !dbg !3040
  %arrayidx9 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3042
  %vel10 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx9, i32 0, i32 1, !dbg !3043
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vel10, i64 0, i64 0, !dbg !3044
  %13 = bitcast float* %arraydecay11 to i8*, !dbg !3044
  %14 = load float*, float** %old_data.addr, align 8, !dbg !3045
  %add.ptr12 = getelementptr inbounds float, float* %14, i64 3, !dbg !3046
  %15 = bitcast float* %add.ptr12 to i8*, !dbg !3044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %15, i64 12, i1 false), !dbg !3044
  br label %if.end15, !dbg !3047

if.else:                                          ; preds = %if.end
  %arraydecay13 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3048
  %add.ptr14 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay13, i64 2, !dbg !3049
  %16 = load i8**, i8*** %data.addr, align 8, !dbg !3050
  %17 = load float, float* %cfra2.addr, align 4, !dbg !3051
  call void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %add.ptr14, i32 0, i8** %16, float %17), !dbg !3052
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then5
  %18 = load float, float* %cfra2.addr, align 4, !dbg !3053
  %19 = load float, float* %cfra1.addr, align 4, !dbg !3054
  %sub = fsub float %18, %19, !dbg !3055
  store float %sub, float* %dfra, align 4, !dbg !3056
  %arrayidx16 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3057
  %vel17 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx16, i32 0, i32 1, !dbg !3058
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vel17, i64 0, i64 0, !dbg !3057
  %20 = load float, float* %dfra, align 4, !dbg !3059
  call void @mul_v3_fl(float* %arraydecay18, float %20), !dbg !3060
  %arrayidx19 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3061
  %vel20 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx19, i32 0, i32 1, !dbg !3062
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vel20, i64 0, i64 0, !dbg !3061
  %21 = load float, float* %dfra, align 4, !dbg !3063
  call void @mul_v3_fl(float* %arraydecay21, float %21), !dbg !3064
  %arraydecay22 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3065
  %22 = load float, float* %cfra.addr, align 4, !dbg !3066
  %23 = load float, float* %cfra1.addr, align 4, !dbg !3067
  %sub23 = fsub float %22, %23, !dbg !3068
  %24 = load float, float* %dfra, align 4, !dbg !3069
  %div = fdiv float %sub23, %24, !dbg !3070
  %arraydecay24 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3071
  call void @psys_interpolate_particle(i16 signext -1, %struct.ParticleKey* %arraydecay22, float %div, %struct.ParticleKey* %arraydecay24, i32 1), !dbg !3072
  %arraydecay25 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3073
  %vel26 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay25, i32 0, i32 1, !dbg !3073
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %vel26, i64 0, i64 0, !dbg !3074
  %25 = load float, float* %dfra, align 4, !dbg !3075
  %div28 = fdiv float 1.000000e+00, %25, !dbg !3076
  call void @mul_v3_fl(float* %arraydecay27, float %div28), !dbg !3077
  %26 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3078
  %pos29 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %26, i32 0, i32 3, !dbg !3079
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %pos29, i64 0, i64 0, !dbg !3078
  %arraydecay31 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3080
  %co32 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay31, i32 0, i32 0, !dbg !3080
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !3081
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay33), !dbg !3082
  %27 = load %struct.BodyPoint*, %struct.BodyPoint** %bp, align 8, !dbg !3083
  %vec34 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %27, i32 0, i32 4, !dbg !3084
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %vec34, i64 0, i64 0, !dbg !3083
  %arraydecay36 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3085
  %vel37 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay36, i32 0, i32 1, !dbg !3085
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %vel37, i64 0, i64 0, !dbg !3086
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay38), !dbg !3087
  br label %return, !dbg !3088

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !3088
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_basic_header_write(%struct.PTCacheFile* %pf) #0 !dbg !3089 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !3090, metadata !DIExpression()), !dbg !3091
  %0 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3092
  %totpoint = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %0, i32 0, i32 3, !dbg !3094
  %1 = bitcast i32* %totpoint to i8*, !dbg !3095
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3096
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %2, i32 0, i32 0, !dbg !3097
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3097
  %call = call i64 @fwrite(i8* %1, i64 4, i64 1, %struct._IO_FILE* %3), !dbg !3098
  %tobool = icmp ne i64 %call, 0, !dbg !3098
  br i1 %tobool, label %if.end, label %if.then, !dbg !3099

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3100
  br label %return, !dbg !3100

if.end:                                           ; preds = %entry
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3101
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %4, i32 0, i32 5, !dbg !3103
  %5 = bitcast i32* %data_types to i8*, !dbg !3104
  %6 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3105
  %fp1 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %6, i32 0, i32 0, !dbg !3106
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !dbg !3106
  %call2 = call i64 @fwrite(i8* %5, i64 4, i64 1, %struct._IO_FILE* %7), !dbg !3107
  %tobool3 = icmp ne i64 %call2, 0, !dbg !3107
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !3108

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3109
  br label %return, !dbg !3109

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3110
  br label %return, !dbg !3110

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !3111
  ret i32 %8, !dbg !3111
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_basic_header_read(%struct.PTCacheFile* %pf) #0 !dbg !3112 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %error = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !3113, metadata !DIExpression()), !dbg !3114
  call void @llvm.dbg.declare(metadata i32* %error, metadata !3115, metadata !DIExpression()), !dbg !3116
  store i32 0, i32* %error, align 4, !dbg !3116
  %0 = load i32, i32* %error, align 4, !dbg !3117
  %tobool = icmp ne i32 %0, 0, !dbg !3117
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3119

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3120
  %totpoint = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %1, i32 0, i32 3, !dbg !3121
  %2 = bitcast i32* %totpoint to i8*, !dbg !3122
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3123
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %3, i32 0, i32 0, !dbg !3124
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3124
  %call = call i64 @fread(i8* %2, i64 4, i64 1, %struct._IO_FILE* %4), !dbg !3125
  %tobool1 = icmp ne i64 %call, 0, !dbg !3125
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3126

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %error, align 4, !dbg !3127
  br label %if.end, !dbg !3128

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %error, align 4, !dbg !3129
  %tobool2 = icmp ne i32 %5, 0, !dbg !3129
  br i1 %tobool2, label %if.end8, label %land.lhs.true3, !dbg !3131

land.lhs.true3:                                   ; preds = %if.end
  %6 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3132
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %6, i32 0, i32 5, !dbg !3133
  %7 = bitcast i32* %data_types to i8*, !dbg !3134
  %8 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !3135
  %fp4 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %8, i32 0, i32 0, !dbg !3136
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp4, align 8, !dbg !3136
  %call5 = call i64 @fread(i8* %7, i64 4, i64 1, %struct._IO_FILE* %9), !dbg !3137
  %tobool6 = icmp ne i64 %call5, 0, !dbg !3137
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !3138

if.then7:                                         ; preds = %land.lhs.true3
  store i32 1, i32* %error, align 4, !dbg !3139
  br label %if.end8, !dbg !3140

if.end8:                                          ; preds = %if.then7, %land.lhs.true3, %if.end
  %10 = load i32, i32* %error, align 4, !dbg !3141
  %tobool9 = icmp ne i32 %10, 0, !dbg !3142
  %lnot = xor i1 %tobool9, true, !dbg !3142
  %lnot.ext = zext i1 %lnot to i32, !dbg !3142
  ret i32 %lnot.ext, !dbg !3143
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.ParticleSystem* %psys) #0 !dbg !3144 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !3147, metadata !DIExpression()), !dbg !3148
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3149, metadata !DIExpression()), !dbg !3150
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3151, metadata !DIExpression()), !dbg !3152
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3153
  %1 = bitcast %struct.PTCacheID* %0 to i8*, !dbg !3154
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 200, i1 false), !dbg !3154
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3155
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3156
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 3, !dbg !3157
  store %struct.Object* %2, %struct.Object** %ob1, align 8, !dbg !3158
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3159
  %5 = bitcast %struct.ParticleSystem* %4 to i8*, !dbg !3159
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3160
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 4, !dbg !3161
  store i8* %5, i8** %calldata, align 8, !dbg !3162
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3163
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !3164
  store i32 1, i32* %type, align 8, !dbg !3165
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3166
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 40, !dbg !3167
  %9 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3167
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 12, !dbg !3168
  %10 = load i32, i32* %index, align 8, !dbg !3168
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3169
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 6, !dbg !3170
  store i32 %10, i32* %stack_index, align 4, !dbg !3171
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3172
  %pointcache2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 40, !dbg !3173
  %13 = load %struct.PointCache*, %struct.PointCache** %pointcache2, align 8, !dbg !3173
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3174
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 25, !dbg !3175
  store %struct.PointCache* %13, %struct.PointCache** %cache, align 8, !dbg !3176
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3177
  %pointcache3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 40, !dbg !3178
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3179
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 26, !dbg !3180
  store %struct.PointCache** %pointcache3, %struct.PointCache*** %cache_ptr, align 8, !dbg !3181
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3182
  %ptcaches = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 41, !dbg !3183
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3184
  %ptcaches4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 27, !dbg !3185
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches4, align 8, !dbg !3186
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3187
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 2, !dbg !3189
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3189
  %type5 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 7, !dbg !3190
  %21 = load i16, i16* %type5, align 8, !dbg !3190
  %conv = sext i16 %21 to i32, !dbg !3187
  %cmp = icmp ne i32 %conv, 2, !dbg !3191
  br i1 %cmp, label %if.then, label %if.end, !dbg !3192

if.then:                                          ; preds = %entry
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3193
  %flag = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 7, !dbg !3194
  %23 = load i32, i32* %flag, align 8, !dbg !3195
  %or = or i32 %23, 1, !dbg !3195
  store i32 %or, i32* %flag, align 8, !dbg !3195
  br label %if.end, !dbg !3193

if.end:                                           ; preds = %if.then, %entry
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3196
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 20, !dbg !3197
  store i32 (i8*, i32)* @ptcache_particle_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !3198
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3199
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 22, !dbg !3200
  store i32 (i8*, i32)* @ptcache_particle_totwrite, i32 (i8*, i32)** %totwrite, align 8, !dbg !3201
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3202
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 21, !dbg !3203
  store void (i8*, i8*)* @ptcache_particle_error, void (i8*, i8*)** %error, align 8, !dbg !3204
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3205
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 12, !dbg !3206
  store i32 (i32, i8*, i8**, i32)* @ptcache_particle_write, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !3207
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3208
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 13, !dbg !3209
  store void (i32, i8*, i8**, float, float*)* @ptcache_particle_read, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !3210
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3211
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 14, !dbg !3212
  store void (i32, i8*, i8**, float, float, float, float*)* @ptcache_particle_interpolate, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !3213
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3214
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 15, !dbg !3215
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !3216
  %31 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3217
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %31, i32 0, i32 16, !dbg !3218
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !3219
  %32 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3220
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %32, i32 0, i32 17, !dbg !3221
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !3222
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3223
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 18, !dbg !3224
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !3225
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3226
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 19, !dbg !3227
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !3228
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3229
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 23, !dbg !3230
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !3231
  %36 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3232
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %36, i32 0, i32 24, !dbg !3233
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !3234
  %37 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3235
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %37, i32 0, i32 10, !dbg !3236
  store i32 7, i32* %data_types, align 4, !dbg !3237
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3238
  %part7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 2, !dbg !3240
  %39 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part7, align 8, !dbg !3240
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %39, i32 0, i32 11, !dbg !3241
  %40 = load i16, i16* %phystype, align 8, !dbg !3241
  %conv8 = sext i16 %40 to i32, !dbg !3238
  %cmp9 = icmp eq i32 %conv8, 3, !dbg !3242
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3243

if.then11:                                        ; preds = %if.end
  %41 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3244
  %data_types12 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %41, i32 0, i32 10, !dbg !3245
  %42 = load i32, i32* %data_types12, align 4, !dbg !3246
  %or13 = or i32 %42, 152, !dbg !3246
  store i32 %or13, i32* %data_types12, align 4, !dbg !3246
  br label %if.end29, !dbg !3244

if.else:                                          ; preds = %if.end
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3247
  %part14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %43, i32 0, i32 2, !dbg !3249
  %44 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part14, align 8, !dbg !3249
  %phystype15 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %44, i32 0, i32 11, !dbg !3250
  %45 = load i16, i16* %phystype15, align 8, !dbg !3250
  %conv16 = sext i16 %45 to i32, !dbg !3247
  %cmp17 = icmp eq i32 %conv16, 4, !dbg !3251
  br i1 %cmp17, label %land.lhs.true, label %if.end28, !dbg !3252

land.lhs.true:                                    ; preds = %if.else
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3253
  %part19 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 2, !dbg !3254
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part19, align 8, !dbg !3254
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 3, !dbg !3255
  %48 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !3255
  %tobool = icmp ne %struct.SPHFluidSettings* %48, null, !dbg !3253
  br i1 %tobool, label %land.lhs.true20, label %if.end28, !dbg !3256

land.lhs.true20:                                  ; preds = %land.lhs.true
  %49 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3257
  %part21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %49, i32 0, i32 2, !dbg !3258
  %50 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part21, align 8, !dbg !3258
  %fluid22 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %50, i32 0, i32 3, !dbg !3259
  %51 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid22, align 8, !dbg !3259
  %flag23 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %51, i32 0, i32 13, !dbg !3260
  %52 = load i32, i32* %flag23, align 4, !dbg !3260
  %and = and i32 %52, 1, !dbg !3261
  %tobool24 = icmp ne i32 %and, 0, !dbg !3261
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !3262

if.then25:                                        ; preds = %land.lhs.true20
  %53 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3263
  %write_extra_data26 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %53, i32 0, i32 17, !dbg !3265
  store void (i8*, %struct.PTCacheMem*, i32)* @ptcache_particle_extra_write, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data26, align 8, !dbg !3266
  %54 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3267
  %read_extra_data27 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %54, i32 0, i32 18, !dbg !3268
  store void (i8*, %struct.PTCacheMem*, float)* @ptcache_particle_extra_read, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data27, align 8, !dbg !3269
  br label %if.end28, !dbg !3270

if.end28:                                         ; preds = %if.then25, %land.lhs.true20, %land.lhs.true, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then11
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3271
  %part30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 2, !dbg !3273
  %56 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part30, align 8, !dbg !3273
  %flag31 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %56, i32 0, i32 5, !dbg !3274
  %57 = load i32, i32* %flag31, align 8, !dbg !3274
  %and32 = and i32 %57, 512, !dbg !3275
  %tobool33 = icmp ne i32 %and32, 0, !dbg !3275
  br i1 %tobool33, label %if.then34, label %if.end53, !dbg !3276

if.then34:                                        ; preds = %if.end29
  %58 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3277
  %data_types35 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %58, i32 0, i32 10, !dbg !3279
  %59 = load i32, i32* %data_types35, align 4, !dbg !3280
  %or36 = or i32 %59, 8, !dbg !3280
  store i32 %or36, i32* %data_types35, align 4, !dbg !3280
  %60 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3281
  %part37 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %60, i32 0, i32 2, !dbg !3283
  %61 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part37, align 8, !dbg !3283
  %rotmode = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %61, i32 0, i32 12, !dbg !3284
  %62 = load i16, i16* %rotmode, align 2, !dbg !3284
  %conv38 = sext i16 %62 to i32, !dbg !3281
  %cmp39 = icmp ne i32 %conv38, 2, !dbg !3285
  br i1 %cmp39, label %if.then49, label %lor.lhs.false, !dbg !3286

lor.lhs.false:                                    ; preds = %if.then34
  %63 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3287
  %part41 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %63, i32 0, i32 2, !dbg !3288
  %64 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part41, align 8, !dbg !3288
  %avemode = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %64, i32 0, i32 13, !dbg !3289
  %65 = load i16, i16* %avemode, align 4, !dbg !3289
  %conv42 = sext i16 %65 to i32, !dbg !3287
  %cmp43 = icmp eq i32 %conv42, 2, !dbg !3290
  br i1 %cmp43, label %if.then49, label %lor.lhs.false45, !dbg !3291

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %66 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3292
  %part46 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %66, i32 0, i32 2, !dbg !3293
  %67 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part46, align 8, !dbg !3293
  %avefac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %67, i32 0, i32 77, !dbg !3294
  %68 = load float, float* %avefac, align 4, !dbg !3294
  %cmp47 = fcmp une float %68, 0.000000e+00, !dbg !3295
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !3296

if.then49:                                        ; preds = %lor.lhs.false45, %lor.lhs.false, %if.then34
  %69 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3297
  %data_types50 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %69, i32 0, i32 10, !dbg !3299
  %70 = load i32, i32* %data_types50, align 4, !dbg !3300
  %or51 = or i32 %70, 16, !dbg !3300
  store i32 %or51, i32* %data_types50, align 4, !dbg !3300
  br label %if.end52, !dbg !3301

if.end52:                                         ; preds = %if.then49, %lor.lhs.false45
  br label %if.end53, !dbg !3302

if.end53:                                         ; preds = %if.end52, %if.end29
  %71 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3303
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %71, i32 0, i32 11, !dbg !3304
  store i32 64, i32* %info_types, align 8, !dbg !3305
  %72 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3306
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %72, i32 0, i32 8, !dbg !3307
  store i32 10, i32* %default_step, align 4, !dbg !3308
  %73 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3309
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %73, i32 0, i32 9, !dbg !3310
  store i32 20, i32* %max_step, align 8, !dbg !3311
  ret void, !dbg !3312
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_particle_totpoint(i8* %psys_v, i32 %UNUSED_cfra) #0 !dbg !3313 {
entry:
  %psys_v.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3314, metadata !DIExpression()), !dbg !3315
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !3316, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3318, metadata !DIExpression()), !dbg !3319
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3320
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3320
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3319
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3321
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 26, !dbg !3322
  %3 = load i32, i32* %totpart, align 8, !dbg !3322
  ret i32 %3, !dbg !3323
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_particle_totwrite(i8* %psys_v, i32 %cfra) #0 !dbg !3324 {
entry:
  %retval = alloca i32, align 4
  %psys_v.addr = alloca i8*, align 8
  %cfra.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %step = alloca i32, align 4
  %totwrite = alloca i32, align 4
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3325, metadata !DIExpression()), !dbg !3326
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3329, metadata !DIExpression()), !dbg !3330
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3331
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3331
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3330
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3332, metadata !DIExpression()), !dbg !3333
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3334
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 3, !dbg !3335
  %3 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3335
  store %struct.ParticleData* %3, %struct.ParticleData** %pa, align 8, !dbg !3333
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3336, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.declare(metadata i32* %step, metadata !3338, metadata !DIExpression()), !dbg !3339
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3340
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 40, !dbg !3341
  %5 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3341
  %step1 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 3, !dbg !3342
  %6 = load i32, i32* %step1, align 4, !dbg !3342
  store i32 %6, i32* %step, align 4, !dbg !3339
  call void @llvm.dbg.declare(metadata i32* %totwrite, metadata !3343, metadata !DIExpression()), !dbg !3344
  store i32 0, i32* %totwrite, align 4, !dbg !3344
  %7 = load i32, i32* %cfra.addr, align 4, !dbg !3345
  %cmp = icmp eq i32 %7, 0, !dbg !3347
  br i1 %cmp, label %if.then, label %if.end, !dbg !3348

if.then:                                          ; preds = %entry
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3349
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 26, !dbg !3350
  %9 = load i32, i32* %totpart, align 8, !dbg !3350
  store i32 %9, i32* %retval, align 4, !dbg !3351
  br label %return, !dbg !3351

if.end:                                           ; preds = %entry
  store i32 0, i32* %p, align 4, !dbg !3352
  br label %for.cond, !dbg !3354

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %p, align 4, !dbg !3355
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3357
  %totpart2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 26, !dbg !3358
  %12 = load i32, i32* %totpart2, align 8, !dbg !3358
  %cmp3 = icmp slt i32 %10, %12, !dbg !3359
  br i1 %cmp3, label %for.body, label %for.end, !dbg !3360

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %cfra.addr, align 4, !dbg !3361
  %conv = sitofp i32 %13 to float, !dbg !3361
  %14 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3362
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %14, i32 0, i32 6, !dbg !3363
  %15 = load float, float* %time, align 4, !dbg !3363
  %16 = load i32, i32* %step, align 4, !dbg !3364
  %conv4 = sitofp i32 %16 to float, !dbg !3364
  %sub = fsub float %15, %conv4, !dbg !3365
  %cmp5 = fcmp oge float %conv, %sub, !dbg !3366
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !3367

land.rhs:                                         ; preds = %for.body
  %17 = load i32, i32* %cfra.addr, align 4, !dbg !3368
  %conv7 = sitofp i32 %17 to float, !dbg !3368
  %18 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3369
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i32 0, i32 8, !dbg !3370
  %19 = load float, float* %dietime, align 4, !dbg !3370
  %20 = load i32, i32* %step, align 4, !dbg !3371
  %conv8 = sitofp i32 %20 to float, !dbg !3371
  %add = fadd float %19, %conv8, !dbg !3372
  %cmp9 = fcmp ole float %conv7, %add, !dbg !3373
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %21 = phi i1 [ false, %for.body ], [ %cmp9, %land.rhs ], !dbg !3374
  %land.ext = zext i1 %21 to i32, !dbg !3367
  %22 = load i32, i32* %totwrite, align 4, !dbg !3375
  %add11 = add nsw i32 %22, %land.ext, !dbg !3375
  store i32 %add11, i32* %totwrite, align 4, !dbg !3375
  br label %for.inc, !dbg !3376

for.inc:                                          ; preds = %land.end
  %23 = load i32, i32* %p, align 4, !dbg !3377
  %inc = add nsw i32 %23, 1, !dbg !3377
  store i32 %inc, i32* %p, align 4, !dbg !3377
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3378
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 1, !dbg !3378
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !3378
  br label %for.cond, !dbg !3379, !llvm.loop !3380

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %totwrite, align 4, !dbg !3382
  store i32 %25, i32* %retval, align 4, !dbg !3383
  br label %return, !dbg !3383

return:                                           ; preds = %for.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !3384
  ret i32 %26, !dbg !3384
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_particle_error(i8* %UNUSED_psys_v, i8* %UNUSED_message) #0 !dbg !3385 {
entry:
  %UNUSED_psys_v.addr = alloca i8*, align 8
  %UNUSED_message.addr = alloca i8*, align 8
  store i8* %UNUSED_psys_v, i8** %UNUSED_psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_psys_v.addr, metadata !3386, metadata !DIExpression()), !dbg !3387
  store i8* %UNUSED_message, i8** %UNUSED_message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_message.addr, metadata !3388, metadata !DIExpression()), !dbg !3389
  ret void, !dbg !3390
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_particle_write(i32 %index, i8* %psys_v, i8** %data, i32 %cfra) #0 !dbg !3391 {
entry:
  %retval = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %psys_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %boid = alloca %struct.BoidParticle*, align 8
  %times = alloca [3 x float], align 4
  %step = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3392, metadata !DIExpression()), !dbg !3393
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3400, metadata !DIExpression()), !dbg !3401
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3402
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3402
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3401
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3403, metadata !DIExpression()), !dbg !3404
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3405
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 3, !dbg !3406
  %3 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3406
  %4 = load i32, i32* %index.addr, align 4, !dbg !3407
  %idx.ext = sext i32 %4 to i64, !dbg !3408
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %3, i64 %idx.ext, !dbg !3408
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !3404
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %boid, metadata !3409, metadata !DIExpression()), !dbg !3410
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3411
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !3412
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3412
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 11, !dbg !3413
  %7 = load i16, i16* %phystype, align 8, !dbg !3413
  %conv = sext i16 %7 to i32, !dbg !3411
  %cmp = icmp eq i32 %conv, 3, !dbg !3414
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3415

cond.true:                                        ; preds = %entry
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3416
  %boid2 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 4, !dbg !3417
  %9 = load %struct.BoidParticle*, %struct.BoidParticle** %boid2, align 8, !dbg !3417
  br label %cond.end, !dbg !3415

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BoidParticle* [ %9, %cond.true ], [ null, %cond.false ], !dbg !3415
  store %struct.BoidParticle* %cond, %struct.BoidParticle** %boid, align 8, !dbg !3410
  call void @llvm.dbg.declare(metadata [3 x float]* %times, metadata !3418, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata i32* %step, metadata !3420, metadata !DIExpression()), !dbg !3421
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3422
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 40, !dbg !3423
  %11 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3423
  %step3 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 3, !dbg !3424
  %12 = load i32, i32* %step3, align 4, !dbg !3424
  store i32 %12, i32* %step, align 4, !dbg !3421
  %13 = load i8**, i8*** %data.addr, align 8, !dbg !3425
  %arrayidx = getelementptr inbounds i8*, i8** %13, i64 0, !dbg !3425
  %14 = load i8*, i8** %arrayidx, align 8, !dbg !3425
  %tobool = icmp ne i8* %14, null, !dbg !3425
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3427

land.lhs.true:                                    ; preds = %cond.end
  %15 = load i32, i32* %cfra.addr, align 4, !dbg !3428
  %conv4 = sitofp i32 %15 to float, !dbg !3428
  %16 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3429
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %16, i32 0, i32 6, !dbg !3430
  %17 = load float, float* %time, align 4, !dbg !3430
  %18 = load i32, i32* %step, align 4, !dbg !3431
  %conv5 = sitofp i32 %18 to float, !dbg !3431
  %sub = fsub float %17, %conv5, !dbg !3432
  %cmp6 = fcmp olt float %conv4, %sub, !dbg !3433
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !3434

lor.lhs.false:                                    ; preds = %land.lhs.true
  %19 = load i32, i32* %cfra.addr, align 4, !dbg !3435
  %conv8 = sitofp i32 %19 to float, !dbg !3435
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3436
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 8, !dbg !3437
  %21 = load float, float* %dietime, align 4, !dbg !3437
  %22 = load i32, i32* %step, align 4, !dbg !3438
  %conv9 = sitofp i32 %22 to float, !dbg !3438
  %add = fadd float %21, %conv9, !dbg !3439
  %cmp10 = fcmp ogt float %conv8, %add, !dbg !3440
  br i1 %cmp10, label %if.then, label %if.end, !dbg !3441

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !3442
  br label %return, !dbg !3442

if.end:                                           ; preds = %lor.lhs.false, %cond.end
  %23 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3443
  %time12 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %23, i32 0, i32 6, !dbg !3444
  %24 = load float, float* %time12, align 4, !dbg !3444
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 0, !dbg !3445
  store float %24, float* %arrayidx13, align 4, !dbg !3446
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3447
  %dietime14 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 8, !dbg !3448
  %26 = load float, float* %dietime14, align 4, !dbg !3448
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 1, !dbg !3449
  store float %26, float* %arrayidx15, align 4, !dbg !3450
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3451
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 7, !dbg !3452
  %28 = load float, float* %lifetime, align 8, !dbg !3452
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 2, !dbg !3453
  store float %28, float* %arrayidx16, align 4, !dbg !3454
  %29 = load i8**, i8*** %data.addr, align 8, !dbg !3455
  %arrayidx17 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !3455
  %30 = load i8*, i8** %arrayidx17, align 8, !dbg !3455
  %tobool18 = icmp ne i8* %30, null, !dbg !3455
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !3457

if.then19:                                        ; preds = %if.end
  %31 = load i8**, i8*** %data.addr, align 8, !dbg !3458
  %arrayidx20 = getelementptr inbounds i8*, i8** %31, i64 0, !dbg !3458
  %32 = load i8*, i8** %arrayidx20, align 8, !dbg !3458
  %33 = bitcast i32* %index.addr to i8*, !dbg !3458
  %34 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 0), align 16, !dbg !3458
  %conv21 = sext i32 %34 to i64, !dbg !3458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 4 %33, i64 %conv21, i1 false), !dbg !3458
  br label %if.end22, !dbg !3458

if.end22:                                         ; preds = %if.then19, %if.end
  %35 = load i8**, i8*** %data.addr, align 8, !dbg !3460
  %arrayidx23 = getelementptr inbounds i8*, i8** %35, i64 1, !dbg !3460
  %36 = load i8*, i8** %arrayidx23, align 8, !dbg !3460
  %tobool24 = icmp ne i8* %36, null, !dbg !3460
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !3462

if.then25:                                        ; preds = %if.end22
  %37 = load i8**, i8*** %data.addr, align 8, !dbg !3463
  %arrayidx26 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !3463
  %38 = load i8*, i8** %arrayidx26, align 8, !dbg !3463
  %39 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3463
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i32 0, i32 0, !dbg !3463
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !3463
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3463
  %40 = bitcast float* %arraydecay to i8*, !dbg !3463
  %41 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !3463
  %conv27 = sext i32 %41 to i64, !dbg !3463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 8 %40, i64 %conv27, i1 false), !dbg !3463
  br label %if.end28, !dbg !3463

if.end28:                                         ; preds = %if.then25, %if.end22
  %42 = load i8**, i8*** %data.addr, align 8, !dbg !3465
  %arrayidx29 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !3465
  %43 = load i8*, i8** %arrayidx29, align 8, !dbg !3465
  %tobool30 = icmp ne i8* %43, null, !dbg !3465
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !3467

if.then31:                                        ; preds = %if.end28
  %44 = load i8**, i8*** %data.addr, align 8, !dbg !3468
  %arrayidx32 = getelementptr inbounds i8*, i8** %44, i64 2, !dbg !3468
  %45 = load i8*, i8** %arrayidx32, align 8, !dbg !3468
  %46 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3468
  %state33 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %46, i32 0, i32 0, !dbg !3468
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state33, i32 0, i32 1, !dbg !3468
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !3468
  %47 = bitcast float* %arraydecay34 to i8*, !dbg !3468
  %48 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !3468
  %conv35 = sext i32 %48 to i64, !dbg !3468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 4 %47, i64 %conv35, i1 false), !dbg !3468
  br label %if.end36, !dbg !3468

if.end36:                                         ; preds = %if.then31, %if.end28
  %49 = load i8**, i8*** %data.addr, align 8, !dbg !3470
  %arrayidx37 = getelementptr inbounds i8*, i8** %49, i64 3, !dbg !3470
  %50 = load i8*, i8** %arrayidx37, align 8, !dbg !3470
  %tobool38 = icmp ne i8* %50, null, !dbg !3470
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !3472

if.then39:                                        ; preds = %if.end36
  %51 = load i8**, i8*** %data.addr, align 8, !dbg !3473
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 3, !dbg !3473
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !3473
  %53 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3473
  %state41 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %53, i32 0, i32 0, !dbg !3473
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state41, i32 0, i32 2, !dbg !3473
  %arraydecay42 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !3473
  %54 = bitcast float* %arraydecay42 to i8*, !dbg !3473
  %55 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 3), align 4, !dbg !3473
  %conv43 = sext i32 %55 to i64, !dbg !3473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 8 %54, i64 %conv43, i1 false), !dbg !3473
  br label %if.end44, !dbg !3473

if.end44:                                         ; preds = %if.then39, %if.end36
  %56 = load i8**, i8*** %data.addr, align 8, !dbg !3475
  %arrayidx45 = getelementptr inbounds i8*, i8** %56, i64 4, !dbg !3475
  %57 = load i8*, i8** %arrayidx45, align 8, !dbg !3475
  %tobool46 = icmp ne i8* %57, null, !dbg !3475
  br i1 %tobool46, label %if.then47, label %if.end52, !dbg !3477

if.then47:                                        ; preds = %if.end44
  %58 = load i8**, i8*** %data.addr, align 8, !dbg !3478
  %arrayidx48 = getelementptr inbounds i8*, i8** %58, i64 4, !dbg !3478
  %59 = load i8*, i8** %arrayidx48, align 8, !dbg !3478
  %60 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3478
  %state49 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %60, i32 0, i32 0, !dbg !3478
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state49, i32 0, i32 3, !dbg !3478
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !3478
  %61 = bitcast float* %arraydecay50 to i8*, !dbg !3478
  %62 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 4), align 16, !dbg !3478
  %conv51 = sext i32 %62 to i64, !dbg !3478
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 8 %61, i64 %conv51, i1 false), !dbg !3478
  br label %if.end52, !dbg !3478

if.end52:                                         ; preds = %if.then47, %if.end44
  %63 = load i8**, i8*** %data.addr, align 8, !dbg !3480
  %arrayidx53 = getelementptr inbounds i8*, i8** %63, i64 5, !dbg !3480
  %64 = load i8*, i8** %arrayidx53, align 8, !dbg !3480
  %tobool54 = icmp ne i8* %64, null, !dbg !3480
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !3482

if.then55:                                        ; preds = %if.end52
  %65 = load i8**, i8*** %data.addr, align 8, !dbg !3483
  %arrayidx56 = getelementptr inbounds i8*, i8** %65, i64 5, !dbg !3483
  %66 = load i8*, i8** %arrayidx56, align 8, !dbg !3483
  %67 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3483
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 13, !dbg !3483
  %68 = bitcast float* %size to i8*, !dbg !3483
  %69 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 5), align 4, !dbg !3483
  %conv57 = sext i32 %69 to i64, !dbg !3483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 4 %68, i64 %conv57, i1 false), !dbg !3483
  br label %if.end58, !dbg !3483

if.end58:                                         ; preds = %if.then55, %if.end52
  %70 = load i8**, i8*** %data.addr, align 8, !dbg !3485
  %arrayidx59 = getelementptr inbounds i8*, i8** %70, i64 6, !dbg !3485
  %71 = load i8*, i8** %arrayidx59, align 8, !dbg !3485
  %tobool60 = icmp ne i8* %71, null, !dbg !3485
  br i1 %tobool60, label %if.then61, label %if.end65, !dbg !3487

if.then61:                                        ; preds = %if.end58
  %72 = load i8**, i8*** %data.addr, align 8, !dbg !3488
  %arrayidx62 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !3488
  %73 = load i8*, i8** %arrayidx62, align 8, !dbg !3488
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 0, !dbg !3488
  %74 = bitcast float* %arraydecay63 to i8*, !dbg !3488
  %75 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 6), align 8, !dbg !3488
  %conv64 = sext i32 %75 to i64, !dbg !3488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 4 %74, i64 %conv64, i1 false), !dbg !3488
  br label %if.end65, !dbg !3488

if.end65:                                         ; preds = %if.then61, %if.end58
  %76 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !3490
  %tobool66 = icmp ne %struct.BoidParticle* %76, null, !dbg !3490
  br i1 %tobool66, label %if.then67, label %if.end75, !dbg !3492

if.then67:                                        ; preds = %if.end65
  %77 = load i8**, i8*** %data.addr, align 8, !dbg !3493
  %arrayidx68 = getelementptr inbounds i8*, i8** %77, i64 7, !dbg !3493
  %78 = load i8*, i8** %arrayidx68, align 8, !dbg !3493
  %tobool69 = icmp ne i8* %78, null, !dbg !3493
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !3496

if.then70:                                        ; preds = %if.then67
  %79 = load i8**, i8*** %data.addr, align 8, !dbg !3497
  %arrayidx71 = getelementptr inbounds i8*, i8** %79, i64 7, !dbg !3497
  %80 = load i8*, i8** %arrayidx71, align 8, !dbg !3497
  %81 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !3497
  %data72 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %81, i32 0, i32 1, !dbg !3497
  %82 = bitcast %struct.BoidData* %data72 to i8*, !dbg !3497
  %83 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 7), align 4, !dbg !3497
  %conv73 = sext i32 %83 to i64, !dbg !3497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 8 %82, i64 %conv73, i1 false), !dbg !3497
  br label %if.end74, !dbg !3497

if.end74:                                         ; preds = %if.then70, %if.then67
  br label %if.end75, !dbg !3499

if.end75:                                         ; preds = %if.end74, %if.end65
  %84 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3500
  %state76 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 0, !dbg !3501
  %time77 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state76, i32 0, i32 4, !dbg !3502
  %85 = load float, float* %time77, align 4, !dbg !3502
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3503
  %time78 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 6, !dbg !3504
  %87 = load float, float* %time78, align 4, !dbg !3504
  %cmp79 = fcmp oge float %85, %87, !dbg !3505
  br i1 %cmp79, label %land.rhs, label %land.end, !dbg !3506

land.rhs:                                         ; preds = %if.end75
  %88 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3507
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %88, i32 0, i32 1, !dbg !3508
  %time81 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 4, !dbg !3509
  %89 = load float, float* %time81, align 4, !dbg !3509
  %90 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3510
  %time82 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %90, i32 0, i32 6, !dbg !3511
  %91 = load float, float* %time82, align 4, !dbg !3511
  %cmp83 = fcmp ole float %89, %91, !dbg !3512
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end75
  %92 = phi i1 [ false, %if.end75 ], [ %cmp83, %land.rhs ], !dbg !3513
  %land.ext = zext i1 %92 to i32, !dbg !3506
  %add85 = add nsw i32 1, %land.ext, !dbg !3514
  store i32 %add85, i32* %retval, align 4, !dbg !3515
  br label %return, !dbg !3515

return:                                           ; preds = %land.end, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !3516
  ret i32 %93, !dbg !3516
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_particle_read(i32 %index, i8* %psys_v, i8** %data, float %cfra, float* %old_data) #0 !dbg !3517 {
entry:
  %index.addr = alloca i32, align 4
  %psys_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %boid = alloca %struct.BoidParticle*, align 8
  %timestep = alloca float, align 4
  %times = alloca [3 x float], align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !3522, metadata !DIExpression()), !dbg !3523
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !3524, metadata !DIExpression()), !dbg !3525
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3528, metadata !DIExpression()), !dbg !3529
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3530
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3530
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3529
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3531, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %boid, metadata !3533, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.declare(metadata float* %timestep, metadata !3535, metadata !DIExpression()), !dbg !3536
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3537
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !3538
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3538
  %timetweak = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 57, !dbg !3539
  %4 = load float, float* %timetweak, align 4, !dbg !3539
  %mul = fmul float 0x3FA47AE140000000, %4, !dbg !3540
  store float %mul, float* %timestep, align 4, !dbg !3536
  %5 = load i32, i32* %index.addr, align 4, !dbg !3541
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3543
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 26, !dbg !3544
  %7 = load i32, i32* %totpart, align 8, !dbg !3544
  %cmp = icmp sge i32 %5, %7, !dbg !3545
  br i1 %cmp, label %if.then, label %if.end, !dbg !3546

if.then:                                          ; preds = %entry
  br label %if.end115, !dbg !3547

if.end:                                           ; preds = %entry
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3548
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 3, !dbg !3549
  %9 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3549
  %10 = load i32, i32* %index.addr, align 4, !dbg !3550
  %idx.ext = sext i32 %10 to i64, !dbg !3551
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %9, i64 %idx.ext, !dbg !3551
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !3552
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3553
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 2, !dbg !3554
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !3554
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %12, i32 0, i32 11, !dbg !3555
  %13 = load i16, i16* %phystype, align 8, !dbg !3555
  %conv = sext i16 %13 to i32, !dbg !3553
  %cmp2 = icmp eq i32 %conv, 3, !dbg !3556
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3557

cond.true:                                        ; preds = %if.end
  %14 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3558
  %boid4 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %14, i32 0, i32 4, !dbg !3559
  %15 = load %struct.BoidParticle*, %struct.BoidParticle** %boid4, align 8, !dbg !3559
  br label %cond.end, !dbg !3557

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BoidParticle* [ %15, %cond.true ], [ null, %cond.false ], !dbg !3557
  store %struct.BoidParticle* %cond, %struct.BoidParticle** %boid, align 8, !dbg !3560
  %16 = load float, float* %cfra.addr, align 4, !dbg !3561
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3563
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 0, !dbg !3564
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 4, !dbg !3565
  %18 = load float, float* %time, align 4, !dbg !3565
  %cmp5 = fcmp ogt float %16, %18, !dbg !3566
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !3567

if.then7:                                         ; preds = %cond.end
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3568
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %19, i32 0, i32 1, !dbg !3569
  %20 = bitcast %struct.ParticleKey* %prev_state to i8*, !dbg !3570
  %21 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3571
  %state8 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %21, i32 0, i32 0, !dbg !3572
  %22 = bitcast %struct.ParticleKey* %state8 to i8*, !dbg !3570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 56, i1 false), !dbg !3570
  br label %if.end9, !dbg !3570

if.end9:                                          ; preds = %if.then7, %cond.end
  %23 = load float*, float** %old_data.addr, align 8, !dbg !3573
  %tobool = icmp ne float* %23, null, !dbg !3573
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !3575

if.then10:                                        ; preds = %if.end9
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3576
  %state11 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 0, !dbg !3578
  %25 = bitcast %struct.ParticleKey* %state11 to i8*, !dbg !3579
  %26 = load float*, float** %old_data.addr, align 8, !dbg !3580
  %27 = bitcast float* %26 to i8*, !dbg !3579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %27, i64 56, i1 false), !dbg !3579
  br label %if.end115, !dbg !3581

if.end12:                                         ; preds = %if.end9
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3582
  %state13 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 0, !dbg !3583
  %29 = load i8**, i8*** %data.addr, align 8, !dbg !3584
  %30 = load float, float* %cfra.addr, align 4, !dbg !3585
  call void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %state13, i32 0, i8** %29, float %30), !dbg !3586
  %31 = load float, float* %cfra.addr, align 4, !dbg !3587
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3589
  %time14 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 6, !dbg !3590
  %33 = load float, float* %time14, align 4, !dbg !3590
  %cmp15 = fcmp olt float %31, %33, !dbg !3591
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !3592

if.then17:                                        ; preds = %if.end12
  %34 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3593
  %time18 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %34, i32 0, i32 6, !dbg !3594
  %35 = load float, float* %time18, align 4, !dbg !3594
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3595
  %state19 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 0, i32 0, !dbg !3596
  %time20 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state19, i32 0, i32 4, !dbg !3597
  store float %35, float* %time20, align 4, !dbg !3598
  br label %if.end28, !dbg !3595

if.else:                                          ; preds = %if.end12
  %37 = load float, float* %cfra.addr, align 4, !dbg !3599
  %38 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3601
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 0, i32 8, !dbg !3602
  %39 = load float, float* %dietime, align 4, !dbg !3602
  %cmp21 = fcmp ogt float %37, %39, !dbg !3603
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !3604

if.then23:                                        ; preds = %if.else
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3605
  %dietime24 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %40, i32 0, i32 8, !dbg !3606
  %41 = load float, float* %dietime24, align 4, !dbg !3606
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3607
  %state25 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %42, i32 0, i32 0, !dbg !3608
  %time26 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state25, i32 0, i32 4, !dbg !3609
  store float %41, float* %time26, align 4, !dbg !3610
  br label %if.end27, !dbg !3607

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %43 = load i8**, i8*** %data.addr, align 8, !dbg !3611
  %arrayidx = getelementptr inbounds i8*, i8** %43, i64 5, !dbg !3611
  %44 = load i8*, i8** %arrayidx, align 8, !dbg !3611
  %tobool29 = icmp ne i8* %44, null, !dbg !3611
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !3613

if.then30:                                        ; preds = %if.end28
  %45 = load i8**, i8*** %data.addr, align 8, !dbg !3614
  %arrayidx31 = getelementptr inbounds i8*, i8** %45, i64 5, !dbg !3614
  %46 = load i8*, i8** %arrayidx31, align 8, !dbg !3614
  %tobool32 = icmp ne i8* %46, null, !dbg !3614
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !3617

if.then33:                                        ; preds = %if.then30
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3618
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i32 0, i32 13, !dbg !3618
  %48 = bitcast float* %size to i8*, !dbg !3618
  %49 = load i8**, i8*** %data.addr, align 8, !dbg !3618
  %arrayidx34 = getelementptr inbounds i8*, i8** %49, i64 5, !dbg !3618
  %50 = load i8*, i8** %arrayidx34, align 8, !dbg !3618
  %add.ptr35 = getelementptr inbounds i8, i8* %50, i64 0, !dbg !3618
  %51 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 5), align 4, !dbg !3618
  %conv36 = sext i32 %51 to i64, !dbg !3618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 1 %add.ptr35, i64 %conv36, i1 false), !dbg !3618
  br label %if.end37, !dbg !3618

if.end37:                                         ; preds = %if.then33, %if.then30
  br label %if.end38, !dbg !3620

if.end38:                                         ; preds = %if.end37, %if.end28
  %52 = load i8**, i8*** %data.addr, align 8, !dbg !3621
  %arrayidx39 = getelementptr inbounds i8*, i8** %52, i64 6, !dbg !3621
  %53 = load i8*, i8** %arrayidx39, align 8, !dbg !3621
  %tobool40 = icmp ne i8* %53, null, !dbg !3621
  br i1 %tobool40, label %if.then41, label %if.end54, !dbg !3623

if.then41:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata [3 x float]* %times, metadata !3624, metadata !DIExpression()), !dbg !3626
  %54 = load i8**, i8*** %data.addr, align 8, !dbg !3627
  %arrayidx42 = getelementptr inbounds i8*, i8** %54, i64 6, !dbg !3627
  %55 = load i8*, i8** %arrayidx42, align 8, !dbg !3627
  %tobool43 = icmp ne i8* %55, null, !dbg !3627
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !3629

if.then44:                                        ; preds = %if.then41
  %56 = bitcast [3 x float]* %times to i8*, !dbg !3630
  %57 = load i8**, i8*** %data.addr, align 8, !dbg !3630
  %arrayidx45 = getelementptr inbounds i8*, i8** %57, i64 6, !dbg !3630
  %58 = load i8*, i8** %arrayidx45, align 8, !dbg !3630
  %add.ptr46 = getelementptr inbounds i8, i8* %58, i64 0, !dbg !3630
  %59 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 6), align 8, !dbg !3630
  %conv47 = sext i32 %59 to i64, !dbg !3630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 1 %add.ptr46, i64 %conv47, i1 false), !dbg !3630
  br label %if.end48, !dbg !3630

if.end48:                                         ; preds = %if.then44, %if.then41
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 0, !dbg !3632
  %60 = load float, float* %arrayidx49, align 4, !dbg !3632
  %61 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3633
  %time50 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 0, i32 6, !dbg !3634
  store float %60, float* %time50, align 4, !dbg !3635
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 1, !dbg !3636
  %62 = load float, float* %arrayidx51, align 4, !dbg !3636
  %63 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3637
  %dietime52 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %63, i32 0, i32 8, !dbg !3638
  store float %62, float* %dietime52, align 4, !dbg !3639
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %times, i64 0, i64 2, !dbg !3640
  %64 = load float, float* %arrayidx53, align 4, !dbg !3640
  %65 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3641
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %65, i32 0, i32 7, !dbg !3642
  store float %64, float* %lifetime, align 8, !dbg !3643
  br label %if.end54, !dbg !3644

if.end54:                                         ; preds = %if.end48, %if.end38
  %66 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !3645
  %tobool55 = icmp ne %struct.BoidParticle* %66, null, !dbg !3645
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !3647

if.then56:                                        ; preds = %if.end54
  %67 = load i8**, i8*** %data.addr, align 8, !dbg !3648
  %arrayidx57 = getelementptr inbounds i8*, i8** %67, i64 7, !dbg !3648
  %68 = load i8*, i8** %arrayidx57, align 8, !dbg !3648
  %tobool58 = icmp ne i8* %68, null, !dbg !3648
  br i1 %tobool58, label %if.then59, label %if.end64, !dbg !3651

if.then59:                                        ; preds = %if.then56
  %69 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !3652
  %data60 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %69, i32 0, i32 1, !dbg !3652
  %70 = bitcast %struct.BoidData* %data60 to i8*, !dbg !3652
  %71 = load i8**, i8*** %data.addr, align 8, !dbg !3652
  %arrayidx61 = getelementptr inbounds i8*, i8** %71, i64 7, !dbg !3652
  %72 = load i8*, i8** %arrayidx61, align 8, !dbg !3652
  %add.ptr62 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !3652
  %73 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 7), align 4, !dbg !3652
  %conv63 = sext i32 %73 to i64, !dbg !3652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 1 %add.ptr62, i64 %conv63, i1 false), !dbg !3652
  br label %if.end64, !dbg !3652

if.end64:                                         ; preds = %if.then59, %if.then56
  br label %if.end65, !dbg !3654

if.end65:                                         ; preds = %if.end64, %if.end54
  %74 = load i8**, i8*** %data.addr, align 8, !dbg !3655
  %arrayidx66 = getelementptr inbounds i8*, i8** %74, i64 1, !dbg !3655
  %75 = load i8*, i8** %arrayidx66, align 8, !dbg !3655
  %tobool67 = icmp ne i8* %75, null, !dbg !3655
  br i1 %tobool67, label %land.lhs.true, label %if.end106, !dbg !3657

land.lhs.true:                                    ; preds = %if.end65
  %76 = load i8**, i8*** %data.addr, align 8, !dbg !3658
  %arrayidx68 = getelementptr inbounds i8*, i8** %76, i64 2, !dbg !3658
  %77 = load i8*, i8** %arrayidx68, align 8, !dbg !3658
  %tobool69 = icmp ne i8* %77, null, !dbg !3658
  br i1 %tobool69, label %if.end106, label %if.then70, !dbg !3659

if.then70:                                        ; preds = %land.lhs.true
  %78 = load float, float* %cfra.addr, align 4, !dbg !3660
  %79 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3663
  %prev_state71 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %79, i32 0, i32 1, !dbg !3664
  %time72 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state71, i32 0, i32 4, !dbg !3665
  %80 = load float, float* %time72, align 4, !dbg !3665
  %cmp73 = fcmp ogt float %78, %80, !dbg !3666
  br i1 %cmp73, label %if.then75, label %if.else88, !dbg !3667

if.then75:                                        ; preds = %if.then70
  %81 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3668
  %state76 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %81, i32 0, i32 0, !dbg !3670
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state76, i32 0, i32 1, !dbg !3671
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !3668
  %82 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3672
  %state77 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %82, i32 0, i32 0, !dbg !3673
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state77, i32 0, i32 0, !dbg !3674
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3672
  %83 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3675
  %prev_state79 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %83, i32 0, i32 1, !dbg !3676
  %co80 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state79, i32 0, i32 0, !dbg !3677
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 0, !dbg !3675
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay78, float* %arraydecay81), !dbg !3678
  %84 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3679
  %state82 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 0, !dbg !3680
  %vel83 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state82, i32 0, i32 1, !dbg !3681
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vel83, i64 0, i64 0, !dbg !3679
  %85 = load float, float* %cfra.addr, align 4, !dbg !3682
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3683
  %prev_state85 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 1, !dbg !3684
  %time86 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state85, i32 0, i32 4, !dbg !3685
  %87 = load float, float* %time86, align 4, !dbg !3685
  %sub = fsub float %85, %87, !dbg !3686
  %88 = load float, float* %timestep, align 4, !dbg !3687
  %mul87 = fmul float %sub, %88, !dbg !3688
  call void @mul_v3_fl(float* %arraydecay84, float %mul87), !dbg !3689
  br label %if.end105, !dbg !3690

if.else88:                                        ; preds = %if.then70
  %89 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3691
  %state89 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %89, i32 0, i32 0, !dbg !3693
  %vel90 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state89, i32 0, i32 1, !dbg !3694
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vel90, i64 0, i64 0, !dbg !3691
  %90 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3695
  %prev_state92 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %90, i32 0, i32 1, !dbg !3696
  %co93 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state92, i32 0, i32 0, !dbg !3697
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !3695
  %91 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3698
  %state95 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %91, i32 0, i32 0, !dbg !3699
  %co96 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state95, i32 0, i32 0, !dbg !3700
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %co96, i64 0, i64 0, !dbg !3698
  call void @sub_v3_v3v3(float* %arraydecay91, float* %arraydecay94, float* %arraydecay97), !dbg !3701
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3702
  %state98 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 0, !dbg !3703
  %vel99 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state98, i32 0, i32 1, !dbg !3704
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %vel99, i64 0, i64 0, !dbg !3702
  %93 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3705
  %prev_state101 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %93, i32 0, i32 1, !dbg !3706
  %time102 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state101, i32 0, i32 4, !dbg !3707
  %94 = load float, float* %time102, align 4, !dbg !3707
  %95 = load float, float* %cfra.addr, align 4, !dbg !3708
  %sub103 = fsub float %94, %95, !dbg !3709
  %96 = load float, float* %timestep, align 4, !dbg !3710
  %mul104 = fmul float %sub103, %96, !dbg !3711
  call void @mul_v3_fl(float* %arraydecay100, float %mul104), !dbg !3712
  br label %if.end105

if.end105:                                        ; preds = %if.else88, %if.then75
  br label %if.end106, !dbg !3713

if.end106:                                        ; preds = %if.end105, %land.lhs.true, %if.end65
  %97 = load i8**, i8*** %data.addr, align 8, !dbg !3714
  %arrayidx107 = getelementptr inbounds i8*, i8** %97, i64 1, !dbg !3714
  %98 = load i8*, i8** %arrayidx107, align 8, !dbg !3714
  %tobool108 = icmp ne i8* %98, null, !dbg !3714
  br i1 %tobool108, label %land.lhs.true109, label %if.end115, !dbg !3716

land.lhs.true109:                                 ; preds = %if.end106
  %99 = load i8**, i8*** %data.addr, align 8, !dbg !3717
  %arrayidx110 = getelementptr inbounds i8*, i8** %99, i64 3, !dbg !3717
  %100 = load i8*, i8** %arrayidx110, align 8, !dbg !3717
  %tobool111 = icmp ne i8* %100, null, !dbg !3717
  br i1 %tobool111, label %if.end115, label %if.then112, !dbg !3718

if.then112:                                       ; preds = %land.lhs.true109
  %101 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3719
  %state113 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %101, i32 0, i32 0, !dbg !3721
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state113, i32 0, i32 2, !dbg !3722
  %arraydecay114 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !3719
  call void @unit_qt(float* %arraydecay114), !dbg !3723
  br label %if.end115, !dbg !3724

if.end115:                                        ; preds = %if.then, %if.then10, %if.then112, %land.lhs.true109, %if.end106
  ret void, !dbg !3725
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_particle_interpolate(i32 %index, i8* %psys_v, i8** %data, float %cfra, float %cfra1, float %cfra2, float* %old_data) #0 !dbg !3726 {
entry:
  %index.addr = alloca i32, align 4
  %psys_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca float, align 4
  %cfra1.addr = alloca float, align 4
  %cfra2.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %keys = alloca [4 x %struct.ParticleKey], align 16
  %dfra = alloca float, align 4
  %timestep = alloca float, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3727, metadata !DIExpression()), !dbg !3728
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !3731, metadata !DIExpression()), !dbg !3732
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !3733, metadata !DIExpression()), !dbg !3734
  store float %cfra1, float* %cfra1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra1.addr, metadata !3735, metadata !DIExpression()), !dbg !3736
  store float %cfra2, float* %cfra2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra2.addr, metadata !3737, metadata !DIExpression()), !dbg !3738
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !3739, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3741, metadata !DIExpression()), !dbg !3742
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3743
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3743
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3742
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3744, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.declare(metadata [4 x %struct.ParticleKey]* %keys, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.declare(metadata float* %dfra, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata float* %timestep, metadata !3750, metadata !DIExpression()), !dbg !3751
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3752
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !3753
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3753
  %timetweak = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 57, !dbg !3754
  %4 = load float, float* %timetweak, align 4, !dbg !3754
  %mul = fmul float 0x3FA47AE140000000, %4, !dbg !3755
  store float %mul, float* %timestep, align 4, !dbg !3751
  %5 = load i32, i32* %index.addr, align 4, !dbg !3756
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3758
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 26, !dbg !3759
  %7 = load i32, i32* %totpart, align 8, !dbg !3759
  %cmp = icmp sge i32 %5, %7, !dbg !3760
  br i1 %cmp, label %if.then, label %if.end, !dbg !3761

if.then:                                          ; preds = %entry
  br label %return, !dbg !3762

if.end:                                           ; preds = %entry
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3763
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 3, !dbg !3764
  %9 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3764
  %10 = load i32, i32* %index.addr, align 4, !dbg !3765
  %idx.ext = sext i32 %10 to i64, !dbg !3766
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %9, i64 %idx.ext, !dbg !3766
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !3767
  %11 = load float, float* %cfra1.addr, align 4, !dbg !3768
  %conv = fptosi float %11 to i32, !dbg !3770
  %conv1 = sitofp i32 %conv to float, !dbg !3770
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3771
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %12, i32 0, i32 6, !dbg !3772
  %13 = load float, float* %time, align 4, !dbg !3772
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3773
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 40, !dbg !3774
  %15 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3774
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %15, i32 0, i32 3, !dbg !3775
  %16 = load i32, i32* %step, align 4, !dbg !3775
  %conv2 = sitofp i32 %16 to float, !dbg !3773
  %sub = fsub float %13, %conv2, !dbg !3776
  %cmp3 = fcmp olt float %conv1, %sub, !dbg !3777
  br i1 %cmp3, label %if.then12, label %lor.lhs.false, !dbg !3778

lor.lhs.false:                                    ; preds = %if.end
  %17 = load float, float* %cfra1.addr, align 4, !dbg !3779
  %conv5 = fptosi float %17 to i32, !dbg !3780
  %conv6 = sitofp i32 %conv5 to float, !dbg !3780
  %18 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3781
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i32 0, i32 8, !dbg !3782
  %19 = load float, float* %dietime, align 4, !dbg !3782
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3783
  %pointcache7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 40, !dbg !3784
  %21 = load %struct.PointCache*, %struct.PointCache** %pointcache7, align 8, !dbg !3784
  %step8 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %21, i32 0, i32 3, !dbg !3785
  %22 = load i32, i32* %step8, align 4, !dbg !3785
  %conv9 = sitofp i32 %22 to float, !dbg !3783
  %add = fadd float %19, %conv9, !dbg !3786
  %cmp10 = fcmp ogt float %conv6, %add, !dbg !3787
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3788

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  br label %return, !dbg !3789

if.end13:                                         ; preds = %lor.lhs.false
  %23 = load float, float* %cfra.addr, align 4, !dbg !3790
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3790
  %dietime14 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 8, !dbg !3790
  %25 = load float, float* %dietime14, align 4, !dbg !3790
  %cmp15 = fcmp olt float %23, %25, !dbg !3790
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !3790

cond.true:                                        ; preds = %if.end13
  %26 = load float, float* %cfra.addr, align 4, !dbg !3790
  br label %cond.end, !dbg !3790

cond.false:                                       ; preds = %if.end13
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3790
  %dietime17 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 8, !dbg !3790
  %28 = load float, float* %dietime17, align 4, !dbg !3790
  br label %cond.end, !dbg !3790

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %26, %cond.true ], [ %28, %cond.false ], !dbg !3790
  store float %cond, float* %cfra.addr, align 4, !dbg !3791
  %29 = load float, float* %cfra1.addr, align 4, !dbg !3792
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3792
  %dietime18 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 8, !dbg !3792
  %31 = load float, float* %dietime18, align 4, !dbg !3792
  %cmp19 = fcmp olt float %29, %31, !dbg !3792
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !3792

cond.true21:                                      ; preds = %cond.end
  %32 = load float, float* %cfra1.addr, align 4, !dbg !3792
  br label %cond.end24, !dbg !3792

cond.false22:                                     ; preds = %cond.end
  %33 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3792
  %dietime23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %33, i32 0, i32 8, !dbg !3792
  %34 = load float, float* %dietime23, align 4, !dbg !3792
  br label %cond.end24, !dbg !3792

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi float [ %32, %cond.true21 ], [ %34, %cond.false22 ], !dbg !3792
  store float %cond25, float* %cfra1.addr, align 4, !dbg !3793
  %35 = load float, float* %cfra2.addr, align 4, !dbg !3794
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3794
  %dietime26 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 0, i32 8, !dbg !3794
  %37 = load float, float* %dietime26, align 4, !dbg !3794
  %cmp27 = fcmp olt float %35, %37, !dbg !3794
  br i1 %cmp27, label %cond.true29, label %cond.false30, !dbg !3794

cond.true29:                                      ; preds = %cond.end24
  %38 = load float, float* %cfra2.addr, align 4, !dbg !3794
  br label %cond.end32, !dbg !3794

cond.false30:                                     ; preds = %cond.end24
  %39 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3794
  %dietime31 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i32 0, i32 8, !dbg !3794
  %40 = load float, float* %dietime31, align 4, !dbg !3794
  br label %cond.end32, !dbg !3794

cond.end32:                                       ; preds = %cond.false30, %cond.true29
  %cond33 = phi float [ %38, %cond.true29 ], [ %40, %cond.false30 ], !dbg !3794
  store float %cond33, float* %cfra2.addr, align 4, !dbg !3795
  %41 = load float, float* %cfra1.addr, align 4, !dbg !3796
  %42 = load float, float* %cfra2.addr, align 4, !dbg !3798
  %cmp34 = fcmp oeq float %41, %42, !dbg !3799
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !3800

if.then36:                                        ; preds = %cond.end32
  br label %return, !dbg !3801

if.end37:                                         ; preds = %cond.end32
  %arraydecay = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3802
  %add.ptr38 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay, i64 1, !dbg !3803
  %43 = bitcast %struct.ParticleKey* %add.ptr38 to i8*, !dbg !3804
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3805
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 0, !dbg !3806
  %45 = bitcast %struct.ParticleKey* %state to i8*, !dbg !3804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 8 %45, i64 56, i1 false), !dbg !3804
  %46 = load float*, float** %old_data.addr, align 8, !dbg !3807
  %tobool = icmp ne float* %46, null, !dbg !3807
  br i1 %tobool, label %if.then39, label %if.else, !dbg !3809

if.then39:                                        ; preds = %if.end37
  %arraydecay40 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3810
  %add.ptr41 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay40, i64 2, !dbg !3811
  %47 = bitcast %struct.ParticleKey* %add.ptr41 to i8*, !dbg !3812
  %48 = load float*, float** %old_data.addr, align 8, !dbg !3813
  %49 = bitcast float* %48 to i8*, !dbg !3812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %49, i64 56, i1 false), !dbg !3812
  br label %if.end44, !dbg !3812

if.else:                                          ; preds = %if.end37
  %arraydecay42 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3814
  %add.ptr43 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay42, i64 2, !dbg !3815
  %50 = load i8**, i8*** %data.addr, align 8, !dbg !3816
  %51 = load float, float* %cfra2.addr, align 4, !dbg !3817
  call void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %add.ptr43, i32 0, i8** %50, float %51), !dbg !3818
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then39
  %52 = load i8**, i8*** %data.addr, align 8, !dbg !3819
  %arrayidx = getelementptr inbounds i8*, i8** %52, i64 1, !dbg !3819
  %53 = load i8*, i8** %arrayidx, align 8, !dbg !3819
  %tobool45 = icmp ne i8* %53, null, !dbg !3819
  br i1 %tobool45, label %land.lhs.true, label %if.end92, !dbg !3821

land.lhs.true:                                    ; preds = %if.end44
  %54 = load i8**, i8*** %data.addr, align 8, !dbg !3822
  %arrayidx46 = getelementptr inbounds i8*, i8** %54, i64 2, !dbg !3822
  %55 = load i8*, i8** %arrayidx46, align 8, !dbg !3822
  %tobool47 = icmp ne i8* %55, null, !dbg !3822
  br i1 %tobool47, label %if.end92, label %if.then48, !dbg !3823

if.then48:                                        ; preds = %land.lhs.true
  %arrayidx49 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3824
  %time50 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx49, i32 0, i32 4, !dbg !3827
  %56 = load float, float* %time50, align 4, !dbg !3827
  %arrayidx51 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3828
  %time52 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx51, i32 0, i32 4, !dbg !3829
  %57 = load float, float* %time52, align 4, !dbg !3829
  %cmp53 = fcmp ogt float %56, %57, !dbg !3830
  br i1 %cmp53, label %if.then55, label %if.else72, !dbg !3831

if.then55:                                        ; preds = %if.then48
  %arrayidx56 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3832
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx56, i32 0, i32 1, !dbg !3834
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !3832
  %arrayidx58 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3835
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx58, i32 0, i32 0, !dbg !3836
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3835
  %arrayidx60 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3837
  %co61 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx60, i32 0, i32 0, !dbg !3838
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co61, i64 0, i64 0, !dbg !3837
  call void @sub_v3_v3v3(float* %arraydecay57, float* %arraydecay59, float* %arraydecay62), !dbg !3839
  %arrayidx63 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3840
  %vel64 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx63, i32 0, i32 1, !dbg !3841
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %vel64, i64 0, i64 0, !dbg !3840
  %arrayidx66 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3842
  %time67 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx66, i32 0, i32 4, !dbg !3843
  %58 = load float, float* %time67, align 4, !dbg !3843
  %arrayidx68 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3844
  %time69 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx68, i32 0, i32 4, !dbg !3845
  %59 = load float, float* %time69, align 4, !dbg !3845
  %sub70 = fsub float %58, %59, !dbg !3846
  %60 = load float, float* %timestep, align 4, !dbg !3847
  %mul71 = fmul float %sub70, %60, !dbg !3848
  call void @mul_v3_fl(float* %arraydecay65, float %mul71), !dbg !3849
  br label %if.end91, !dbg !3850

if.else72:                                        ; preds = %if.then48
  %arrayidx73 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3851
  %vel74 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx73, i32 0, i32 1, !dbg !3853
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %vel74, i64 0, i64 0, !dbg !3851
  %arrayidx76 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3854
  %co77 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx76, i32 0, i32 0, !dbg !3855
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %co77, i64 0, i64 0, !dbg !3854
  %arrayidx79 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3856
  %co80 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx79, i32 0, i32 0, !dbg !3857
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 0, !dbg !3856
  call void @sub_v3_v3v3(float* %arraydecay75, float* %arraydecay78, float* %arraydecay81), !dbg !3858
  %arrayidx82 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3859
  %vel83 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx82, i32 0, i32 1, !dbg !3860
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vel83, i64 0, i64 0, !dbg !3859
  %arrayidx85 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3861
  %time86 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx85, i32 0, i32 4, !dbg !3862
  %61 = load float, float* %time86, align 4, !dbg !3862
  %arrayidx87 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3863
  %time88 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx87, i32 0, i32 4, !dbg !3864
  %62 = load float, float* %time88, align 4, !dbg !3864
  %sub89 = fsub float %61, %62, !dbg !3865
  %63 = load float, float* %timestep, align 4, !dbg !3866
  %mul90 = fmul float %sub89, %63, !dbg !3867
  call void @mul_v3_fl(float* %arraydecay84, float %mul90), !dbg !3868
  br label %if.end91

if.end91:                                         ; preds = %if.else72, %if.then55
  br label %if.end92, !dbg !3869

if.end92:                                         ; preds = %if.end91, %land.lhs.true, %if.end44
  %64 = load i8**, i8*** %data.addr, align 8, !dbg !3870
  %arrayidx93 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !3870
  %65 = load i8*, i8** %arrayidx93, align 8, !dbg !3870
  %tobool94 = icmp ne i8* %65, null, !dbg !3870
  br i1 %tobool94, label %land.lhs.true95, label %if.end104, !dbg !3872

land.lhs.true95:                                  ; preds = %if.end92
  %66 = load i8**, i8*** %data.addr, align 8, !dbg !3873
  %arrayidx96 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !3873
  %67 = load i8*, i8** %arrayidx96, align 8, !dbg !3873
  %tobool97 = icmp ne i8* %67, null, !dbg !3873
  br i1 %tobool97, label %if.end104, label %if.then98, !dbg !3874

if.then98:                                        ; preds = %land.lhs.true95
  %arrayidx99 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3875
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx99, i32 0, i32 2, !dbg !3877
  %arraydecay100 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !3875
  %arrayidx101 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3878
  %vel102 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx101, i32 0, i32 1, !dbg !3879
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %vel102, i64 0, i64 0, !dbg !3878
  call void @vec_to_quat(float* %arraydecay100, float* %arraydecay103, i16 signext 3, i16 signext 2), !dbg !3880
  br label %if.end104, !dbg !3881

if.end104:                                        ; preds = %if.then98, %land.lhs.true95, %if.end92
  %68 = load float, float* %cfra.addr, align 4, !dbg !3882
  %69 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3884
  %time105 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %69, i32 0, i32 6, !dbg !3885
  %70 = load float, float* %time105, align 4, !dbg !3885
  %cmp106 = fcmp ogt float %68, %70, !dbg !3886
  br i1 %cmp106, label %if.then108, label %if.end117, !dbg !3887

if.then108:                                       ; preds = %if.end104
  %71 = load float, float* %cfra1.addr, align 4, !dbg !3888
  %72 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3888
  %time109 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %72, i32 0, i32 6, !dbg !3888
  %73 = load float, float* %time109, align 4, !dbg !3888
  %cmp110 = fcmp ogt float %71, %73, !dbg !3888
  br i1 %cmp110, label %cond.true112, label %cond.false113, !dbg !3888

cond.true112:                                     ; preds = %if.then108
  %74 = load float, float* %cfra1.addr, align 4, !dbg !3888
  br label %cond.end115, !dbg !3888

cond.false113:                                    ; preds = %if.then108
  %75 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3888
  %time114 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %75, i32 0, i32 6, !dbg !3888
  %76 = load float, float* %time114, align 4, !dbg !3888
  br label %cond.end115, !dbg !3888

cond.end115:                                      ; preds = %cond.false113, %cond.true112
  %cond116 = phi float [ %74, %cond.true112 ], [ %76, %cond.false113 ], !dbg !3888
  store float %cond116, float* %cfra1.addr, align 4, !dbg !3889
  br label %if.end117, !dbg !3890

if.end117:                                        ; preds = %cond.end115, %if.end104
  %77 = load float, float* %cfra2.addr, align 4, !dbg !3891
  %78 = load float, float* %cfra1.addr, align 4, !dbg !3892
  %sub118 = fsub float %77, %78, !dbg !3893
  store float %sub118, float* %dfra, align 4, !dbg !3894
  %arrayidx119 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3895
  %vel120 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx119, i32 0, i32 1, !dbg !3896
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %vel120, i64 0, i64 0, !dbg !3895
  %79 = load float, float* %dfra, align 4, !dbg !3897
  %80 = load float, float* %timestep, align 4, !dbg !3898
  %mul122 = fmul float %79, %80, !dbg !3899
  call void @mul_v3_fl(float* %arraydecay121, float %mul122), !dbg !3900
  %arrayidx123 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3901
  %vel124 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx123, i32 0, i32 1, !dbg !3902
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %vel124, i64 0, i64 0, !dbg !3901
  %81 = load float, float* %dfra, align 4, !dbg !3903
  %82 = load float, float* %timestep, align 4, !dbg !3904
  %mul126 = fmul float %81, %82, !dbg !3905
  call void @mul_v3_fl(float* %arraydecay125, float %mul126), !dbg !3906
  %arraydecay127 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !3907
  %83 = load float, float* %cfra.addr, align 4, !dbg !3908
  %84 = load float, float* %cfra1.addr, align 4, !dbg !3909
  %sub128 = fsub float %83, %84, !dbg !3910
  %85 = load float, float* %dfra, align 4, !dbg !3911
  %div = fdiv float %sub128, %85, !dbg !3912
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3913
  %state129 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 0, !dbg !3914
  call void @psys_interpolate_particle(i16 signext -1, %struct.ParticleKey* %arraydecay127, float %div, %struct.ParticleKey* %state129, i32 1), !dbg !3915
  %87 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3916
  %state130 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %87, i32 0, i32 0, !dbg !3917
  %rot131 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state130, i32 0, i32 2, !dbg !3918
  %arraydecay132 = getelementptr inbounds [4 x float], [4 x float]* %rot131, i64 0, i64 0, !dbg !3916
  %arrayidx133 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !3919
  %rot134 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx133, i32 0, i32 2, !dbg !3920
  %arraydecay135 = getelementptr inbounds [4 x float], [4 x float]* %rot134, i64 0, i64 0, !dbg !3919
  %arrayidx136 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !3921
  %rot137 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx136, i32 0, i32 2, !dbg !3922
  %arraydecay138 = getelementptr inbounds [4 x float], [4 x float]* %rot137, i64 0, i64 0, !dbg !3921
  %88 = load float, float* %cfra.addr, align 4, !dbg !3923
  %89 = load float, float* %cfra1.addr, align 4, !dbg !3924
  %sub139 = fsub float %88, %89, !dbg !3925
  %90 = load float, float* %dfra, align 4, !dbg !3926
  %div140 = fdiv float %sub139, %90, !dbg !3927
  call void @interp_qt_qtqt(float* %arraydecay132, float* %arraydecay135, float* %arraydecay138, float %div140), !dbg !3928
  %91 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3929
  %state141 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %91, i32 0, i32 0, !dbg !3930
  %vel142 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state141, i32 0, i32 1, !dbg !3931
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %vel142, i64 0, i64 0, !dbg !3929
  %92 = load float, float* %dfra, align 4, !dbg !3932
  %93 = load float, float* %timestep, align 4, !dbg !3933
  %mul144 = fmul float %92, %93, !dbg !3934
  %div145 = fdiv float 1.000000e+00, %mul144, !dbg !3935
  call void @mul_v3_fl(float* %arraydecay143, float %div145), !dbg !3936
  %94 = load float, float* %cfra.addr, align 4, !dbg !3937
  %95 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3938
  %state146 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %95, i32 0, i32 0, !dbg !3939
  %time147 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state146, i32 0, i32 4, !dbg !3940
  store float %94, float* %time147, align 4, !dbg !3941
  br label %return, !dbg !3942

return:                                           ; preds = %if.end117, %if.then36, %if.then12, %if.then
  ret void, !dbg !3942
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_particle_extra_write(i8* %psys_v, %struct.PTCacheMem* %pm, i32 %UNUSED_cfra) #0 !dbg !3943 {
entry:
  %psys_v.addr = alloca i8*, align 8
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !3954, metadata !DIExpression()), !dbg !3955
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !3956
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !3956
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !3955
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !3957, metadata !DIExpression()), !dbg !3968
  store %struct.PTCacheExtra* null, %struct.PTCacheExtra** %extra, align 8, !dbg !3968
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3969
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !3971
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3971
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 11, !dbg !3972
  %4 = load i16, i16* %phystype, align 8, !dbg !3972
  %conv = sext i16 %4 to i32, !dbg !3969
  %cmp = icmp eq i32 %conv, 4, !dbg !3973
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3974

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3975
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !3976
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !3976
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 3, !dbg !3977
  %7 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !3977
  %tobool = icmp ne %struct.SPHFluidSettings* %7, null, !dbg !3975
  br i1 %tobool, label %land.lhs.true3, label %if.end, !dbg !3978

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3979
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 2, !dbg !3980
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !3980
  %fluid5 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 3, !dbg !3981
  %10 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid5, align 8, !dbg !3981
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %10, i32 0, i32 13, !dbg !3982
  %11 = load i32, i32* %flag, align 4, !dbg !3982
  %and = and i32 %11, 1, !dbg !3983
  %tobool6 = icmp ne i32 %and, 0, !dbg !3983
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !3984

land.lhs.true7:                                   ; preds = %land.lhs.true3
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3985
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 44, !dbg !3986
  %13 = load i32, i32* %tot_fluidsprings, align 8, !dbg !3986
  %tobool8 = icmp ne i32 %13, 0, !dbg !3985
  br i1 %tobool8, label %land.lhs.true9, label %if.end, !dbg !3987

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3988
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 43, !dbg !3989
  %15 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !3989
  %tobool10 = icmp ne %struct.ParticleSpring* %15, null, !dbg !3988
  br i1 %tobool10, label %if.then, label %if.end, !dbg !3990

if.then:                                          ; preds = %land.lhs.true9
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3991
  %call = call i8* %16(i64 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0)), !dbg !3991
  %17 = bitcast i8* %call to %struct.PTCacheExtra*, !dbg !3991
  store %struct.PTCacheExtra* %17, %struct.PTCacheExtra** %extra, align 8, !dbg !3993
  %18 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !3994
  %type = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %18, i32 0, i32 2, !dbg !3995
  store i32 1, i32* %type, align 8, !dbg !3996
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3997
  %tot_fluidsprings11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 44, !dbg !3998
  %20 = load i32, i32* %tot_fluidsprings11, align 8, !dbg !3998
  %21 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !3999
  %totdata = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %21, i32 0, i32 3, !dbg !4000
  store i32 %20, i32* %totdata, align 4, !dbg !4001
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4002
  %23 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4003
  %totdata12 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %23, i32 0, i32 3, !dbg !4004
  %24 = load i32, i32* %totdata12, align 4, !dbg !4004
  %25 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4005
  %type13 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %25, i32 0, i32 2, !dbg !4006
  %26 = load i32, i32* %type13, align 8, !dbg !4006
  %idxprom = zext i32 %26 to i64, !dbg !4007
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom, !dbg !4007
  %27 = load i32, i32* %arrayidx, align 4, !dbg !4007
  %mul = mul i32 %24, %27, !dbg !4008
  %conv14 = zext i32 %mul to i64, !dbg !4003
  %call15 = call i8* %22(i64 %conv14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0)), !dbg !4002
  %28 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4009
  %data = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %28, i32 0, i32 4, !dbg !4010
  store i8* %call15, i8** %data, align 8, !dbg !4011
  %29 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4012
  %data16 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %29, i32 0, i32 4, !dbg !4013
  %30 = load i8*, i8** %data16, align 8, !dbg !4013
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4014
  %fluid_springs17 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 43, !dbg !4015
  %32 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs17, align 8, !dbg !4015
  %33 = bitcast %struct.ParticleSpring* %32 to i8*, !dbg !4016
  %34 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4017
  %totdata18 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %34, i32 0, i32 3, !dbg !4018
  %35 = load i32, i32* %totdata18, align 4, !dbg !4018
  %36 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4019
  %type19 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %36, i32 0, i32 2, !dbg !4020
  %37 = load i32, i32* %type19, align 8, !dbg !4020
  %idxprom20 = zext i32 %37 to i64, !dbg !4021
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom20, !dbg !4021
  %38 = load i32, i32* %arrayidx21, align 4, !dbg !4021
  %mul22 = mul i32 %35, %38, !dbg !4022
  %conv23 = zext i32 %mul22 to i64, !dbg !4017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 4 %33, i64 %conv23, i1 false), !dbg !4016
  %39 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !4023
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %39, i32 0, i32 8, !dbg !4024
  %40 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4025
  %41 = bitcast %struct.PTCacheExtra* %40 to i8*, !dbg !4025
  call void @BLI_addtail(%struct.ListBase* %extradata, i8* %41), !dbg !4026
  br label %if.end, !dbg !4027

if.end:                                           ; preds = %if.then, %land.lhs.true9, %land.lhs.true7, %land.lhs.true3, %land.lhs.true, %entry
  ret void, !dbg !4028
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_particle_extra_read(i8* %psys_v, %struct.PTCacheMem* %pm, float %UNUSED_cfra) #0 !dbg !4029 {
entry:
  %psys_v.addr = alloca i8*, align 8
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  store i8* %psys_v, i8** %psys_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psys_v.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !4034, metadata !DIExpression()), !dbg !4035
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !4038, metadata !DIExpression()), !dbg !4039
  %0 = load i8*, i8** %psys_v.addr, align 8, !dbg !4040
  %1 = bitcast i8* %0 to %struct.ParticleSystem*, !dbg !4040
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !4039
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !4041, metadata !DIExpression()), !dbg !4042
  %2 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !4043
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %2, i32 0, i32 8, !dbg !4044
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !4045
  %3 = load i8*, i8** %first, align 8, !dbg !4045
  %4 = bitcast i8* %3 to %struct.PTCacheExtra*, !dbg !4043
  store %struct.PTCacheExtra* %4, %struct.PTCacheExtra** %extra, align 8, !dbg !4042
  br label %for.cond, !dbg !4046

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4047
  %tobool = icmp ne %struct.PTCacheExtra* %5, null, !dbg !4050
  br i1 %tobool, label %for.body, label %for.end, !dbg !4050

for.body:                                         ; preds = %for.cond
  %6 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4051
  %type = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %6, i32 0, i32 2, !dbg !4053
  %7 = load i32, i32* %type, align 8, !dbg !4053
  switch i32 %7, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !4054

sw.bb:                                            ; preds = %for.body
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4055
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 43, !dbg !4059
  %9 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !4059
  %tobool1 = icmp ne %struct.ParticleSpring* %9, null, !dbg !4055
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4060

if.then:                                          ; preds = %sw.bb
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4061
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4062
  %fluid_springs2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 43, !dbg !4063
  %12 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs2, align 8, !dbg !4063
  %13 = bitcast %struct.ParticleSpring* %12 to i8*, !dbg !4062
  call void %10(i8* %13), !dbg !4061
  br label %if.end, !dbg !4061

if.end:                                           ; preds = %if.then, %sw.bb
  %14 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4064
  %15 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4065
  %data = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %15, i32 0, i32 4, !dbg !4066
  %16 = load i8*, i8** %data, align 8, !dbg !4066
  %call = call i8* %14(i8* %16), !dbg !4064
  %17 = bitcast i8* %call to %struct.ParticleSpring*, !dbg !4064
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4067
  %fluid_springs3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 43, !dbg !4068
  store %struct.ParticleSpring* %17, %struct.ParticleSpring** %fluid_springs3, align 8, !dbg !4069
  %19 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4070
  %totdata = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %19, i32 0, i32 3, !dbg !4071
  %20 = load i32, i32* %totdata, align 4, !dbg !4071
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4072
  %alloc_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 45, !dbg !4073
  store i32 %20, i32* %alloc_fluidsprings, align 4, !dbg !4074
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4075
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 44, !dbg !4076
  store i32 %20, i32* %tot_fluidsprings, align 8, !dbg !4077
  br label %sw.epilog, !dbg !4078

sw.epilog:                                        ; preds = %for.body, %if.end
  br label %for.inc, !dbg !4079

for.inc:                                          ; preds = %sw.epilog
  %23 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !4080
  %next = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %23, i32 0, i32 0, !dbg !4081
  %24 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %next, align 8, !dbg !4081
  store %struct.PTCacheExtra* %24, %struct.PTCacheExtra** %extra, align 8, !dbg !4082
  br label %for.cond, !dbg !4083, !llvm.loop !4084

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4086
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_cloth(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.ClothModifierData* %clmd) #0 !dbg !4087 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %clmd.addr = alloca %struct.ClothModifierData*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store %struct.ClothModifierData* %clmd, %struct.ClothModifierData** %clmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4096
  %1 = bitcast %struct.PTCacheID* %0 to i8*, !dbg !4097
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 200, i1 false), !dbg !4097
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4098
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4099
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 3, !dbg !4100
  store %struct.Object* %2, %struct.Object** %ob1, align 8, !dbg !4101
  %4 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd.addr, align 8, !dbg !4102
  %5 = bitcast %struct.ClothModifierData* %4 to i8*, !dbg !4102
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4103
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 4, !dbg !4104
  store i8* %5, i8** %calldata, align 8, !dbg !4105
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4106
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !4107
  store i32 2, i32* %type, align 8, !dbg !4108
  %8 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd.addr, align 8, !dbg !4109
  %point_cache = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %8, i32 0, i32 5, !dbg !4110
  %9 = load %struct.PointCache*, %struct.PointCache** %point_cache, align 8, !dbg !4110
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 12, !dbg !4111
  %10 = load i32, i32* %index, align 8, !dbg !4111
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4112
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 6, !dbg !4113
  store i32 %10, i32* %stack_index, align 4, !dbg !4114
  %12 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd.addr, align 8, !dbg !4115
  %point_cache2 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %12, i32 0, i32 5, !dbg !4116
  %13 = load %struct.PointCache*, %struct.PointCache** %point_cache2, align 8, !dbg !4116
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4117
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 25, !dbg !4118
  store %struct.PointCache* %13, %struct.PointCache** %cache, align 8, !dbg !4119
  %15 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd.addr, align 8, !dbg !4120
  %point_cache3 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %15, i32 0, i32 5, !dbg !4121
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4122
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 26, !dbg !4123
  store %struct.PointCache** %point_cache3, %struct.PointCache*** %cache_ptr, align 8, !dbg !4124
  %17 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd.addr, align 8, !dbg !4125
  %ptcaches = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %17, i32 0, i32 6, !dbg !4126
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4127
  %ptcaches4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 27, !dbg !4128
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches4, align 8, !dbg !4129
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4130
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 22, !dbg !4131
  store i32 (i8*, i32)* @ptcache_cloth_totpoint, i32 (i8*, i32)** %totwrite, align 8, !dbg !4132
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4133
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 20, !dbg !4134
  store i32 (i8*, i32)* @ptcache_cloth_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !4135
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4136
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 21, !dbg !4137
  store void (i8*, i8*)* @ptcache_cloth_error, void (i8*, i8*)** %error, align 8, !dbg !4138
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4139
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 12, !dbg !4140
  store i32 (i32, i8*, i8**, i32)* @ptcache_cloth_write, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !4141
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4142
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 13, !dbg !4143
  store void (i32, i8*, i8**, float, float*)* @ptcache_cloth_read, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !4144
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4145
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 14, !dbg !4146
  store void (i32, i8*, i8**, float, float, float, float*)* @ptcache_cloth_interpolate, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !4147
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4148
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 15, !dbg !4149
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !4150
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4151
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 16, !dbg !4152
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !4153
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4154
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 17, !dbg !4155
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !4156
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4157
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 18, !dbg !4158
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !4159
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4160
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 19, !dbg !4161
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !4162
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4163
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 23, !dbg !4164
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !4165
  %31 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4166
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %31, i32 0, i32 24, !dbg !4167
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !4168
  %32 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4169
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %32, i32 0, i32 10, !dbg !4170
  store i32 22, i32* %data_types, align 4, !dbg !4171
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4172
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 11, !dbg !4173
  store i32 0, i32* %info_types, align 8, !dbg !4174
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4175
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 8, !dbg !4176
  store i32 1, i32* %default_step, align 4, !dbg !4177
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4178
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 9, !dbg !4179
  store i32 1, i32* %max_step, align 8, !dbg !4180
  ret void, !dbg !4181
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_cloth_totpoint(i8* %cloth_v, i32 %UNUSED_cfra) #0 !dbg !4182 {
entry:
  %cloth_v.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %clmd = alloca %struct.ClothModifierData*, align 8
  store i8* %cloth_v, i8** %cloth_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cloth_v.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4185, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !4187, metadata !DIExpression()), !dbg !4188
  %0 = load i8*, i8** %cloth_v.addr, align 8, !dbg !4189
  %1 = bitcast i8* %0 to %struct.ClothModifierData*, !dbg !4189
  store %struct.ClothModifierData* %1, %struct.ClothModifierData** %clmd, align 8, !dbg !4188
  %2 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4190
  %clothObject = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %2, i32 0, i32 2, !dbg !4191
  %3 = load %struct.Cloth*, %struct.Cloth** %clothObject, align 8, !dbg !4191
  %tobool = icmp ne %struct.Cloth* %3, null, !dbg !4190
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4190

cond.true:                                        ; preds = %entry
  %4 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4192
  %clothObject1 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %4, i32 0, i32 2, !dbg !4193
  %5 = load %struct.Cloth*, %struct.Cloth** %clothObject1, align 8, !dbg !4193
  %numverts = getelementptr inbounds %struct.Cloth, %struct.Cloth* %5, i32 0, i32 2, !dbg !4194
  %6 = load i32, i32* %numverts, align 8, !dbg !4194
  br label %cond.end, !dbg !4190

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ 0, %cond.false ], !dbg !4190
  ret i32 %cond, !dbg !4195
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_cloth_error(i8* %cloth_v, i8* %message) #0 !dbg !4196 {
entry:
  %cloth_v.addr = alloca i8*, align 8
  %message.addr = alloca i8*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  store i8* %cloth_v, i8** %cloth_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cloth_v.addr, metadata !4197, metadata !DIExpression()), !dbg !4198
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !4199, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !4201, metadata !DIExpression()), !dbg !4202
  %0 = load i8*, i8** %cloth_v.addr, align 8, !dbg !4203
  %1 = bitcast i8* %0 to %struct.ClothModifierData*, !dbg !4203
  store %struct.ClothModifierData* %1, %struct.ClothModifierData** %clmd, align 8, !dbg !4202
  %2 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4204
  %modifier = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %2, i32 0, i32 0, !dbg !4205
  %3 = load i8*, i8** %message.addr, align 8, !dbg !4206
  call void (%struct.ModifierData*, i8*, ...) @modifier_setError(%struct.ModifierData* %modifier, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %3), !dbg !4207
  ret void, !dbg !4208
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_cloth_write(i32 %index, i8* %cloth_v, i8** %data, i32 %UNUSED_cfra) #0 !dbg !4209 {
entry:
  %index.addr = alloca i32, align 4
  %cloth_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %clmd = alloca %struct.ClothModifierData*, align 8
  %cloth = alloca %struct.Cloth*, align 8
  %vert = alloca %struct.ClothVertex*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4210, metadata !DIExpression()), !dbg !4211
  store i8* %cloth_v, i8** %cloth_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cloth_v.addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !4214, metadata !DIExpression()), !dbg !4215
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !4218, metadata !DIExpression()), !dbg !4219
  %0 = load i8*, i8** %cloth_v.addr, align 8, !dbg !4220
  %1 = bitcast i8* %0 to %struct.ClothModifierData*, !dbg !4220
  store %struct.ClothModifierData* %1, %struct.ClothModifierData** %clmd, align 8, !dbg !4219
  call void @llvm.dbg.declare(metadata %struct.Cloth** %cloth, metadata !4221, metadata !DIExpression()), !dbg !4224
  %2 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4225
  %clothObject = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %2, i32 0, i32 2, !dbg !4226
  %3 = load %struct.Cloth*, %struct.Cloth** %clothObject, align 8, !dbg !4226
  store %struct.Cloth* %3, %struct.Cloth** %cloth, align 8, !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.ClothVertex** %vert, metadata !4227, metadata !DIExpression()), !dbg !4230
  %4 = load %struct.Cloth*, %struct.Cloth** %cloth, align 8, !dbg !4231
  %verts = getelementptr inbounds %struct.Cloth, %struct.Cloth* %4, i32 0, i32 0, !dbg !4232
  %5 = load %struct.ClothVertex*, %struct.ClothVertex** %verts, align 8, !dbg !4232
  %6 = load i32, i32* %index.addr, align 4, !dbg !4233
  %idx.ext = sext i32 %6 to i64, !dbg !4234
  %add.ptr = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %5, i64 %idx.ext, !dbg !4234
  store %struct.ClothVertex* %add.ptr, %struct.ClothVertex** %vert, align 8, !dbg !4230
  %7 = load i8**, i8*** %data.addr, align 8, !dbg !4235
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 1, !dbg !4235
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !4235
  %tobool = icmp ne i8* %8, null, !dbg !4235
  br i1 %tobool, label %if.then, label %if.end, !dbg !4237

if.then:                                          ; preds = %entry
  %9 = load i8**, i8*** %data.addr, align 8, !dbg !4238
  %arrayidx1 = getelementptr inbounds i8*, i8** %9, i64 1, !dbg !4238
  %10 = load i8*, i8** %arrayidx1, align 8, !dbg !4238
  %11 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4238
  %x = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %11, i32 0, i32 3, !dbg !4238
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x, i64 0, i64 0, !dbg !4238
  %12 = bitcast float* %arraydecay to i8*, !dbg !4238
  %13 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !4238
  %conv = sext i32 %13 to i64, !dbg !4238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 4 %12, i64 %conv, i1 false), !dbg !4238
  br label %if.end, !dbg !4238

if.end:                                           ; preds = %if.then, %entry
  %14 = load i8**, i8*** %data.addr, align 8, !dbg !4240
  %arrayidx2 = getelementptr inbounds i8*, i8** %14, i64 2, !dbg !4240
  %15 = load i8*, i8** %arrayidx2, align 8, !dbg !4240
  %tobool3 = icmp ne i8* %15, null, !dbg !4240
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !4242

if.then4:                                         ; preds = %if.end
  %16 = load i8**, i8*** %data.addr, align 8, !dbg !4243
  %arrayidx5 = getelementptr inbounds i8*, i8** %16, i64 2, !dbg !4243
  %17 = load i8*, i8** %arrayidx5, align 8, !dbg !4243
  %18 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4243
  %v = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %18, i32 0, i32 1, !dbg !4243
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !4243
  %19 = bitcast float* %arraydecay6 to i8*, !dbg !4243
  %20 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !4243
  %conv7 = sext i32 %20 to i64, !dbg !4243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 4 %19, i64 %conv7, i1 false), !dbg !4243
  br label %if.end8, !dbg !4243

if.end8:                                          ; preds = %if.then4, %if.end
  %21 = load i8**, i8*** %data.addr, align 8, !dbg !4245
  %arrayidx9 = getelementptr inbounds i8*, i8** %21, i64 4, !dbg !4245
  %22 = load i8*, i8** %arrayidx9, align 8, !dbg !4245
  %tobool10 = icmp ne i8* %22, null, !dbg !4245
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !4247

if.then11:                                        ; preds = %if.end8
  %23 = load i8**, i8*** %data.addr, align 8, !dbg !4248
  %arrayidx12 = getelementptr inbounds i8*, i8** %23, i64 4, !dbg !4248
  %24 = load i8*, i8** %arrayidx12, align 8, !dbg !4248
  %25 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4248
  %xconst = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %25, i32 0, i32 2, !dbg !4248
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %xconst, i64 0, i64 0, !dbg !4248
  %26 = bitcast float* %arraydecay13 to i8*, !dbg !4248
  %27 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 4), align 16, !dbg !4248
  %conv14 = sext i32 %27 to i64, !dbg !4248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 8 %26, i64 %conv14, i1 false), !dbg !4248
  br label %if.end15, !dbg !4248

if.end15:                                         ; preds = %if.then11, %if.end8
  ret i32 1, !dbg !4250
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_cloth_read(i32 %index, i8* %cloth_v, i8** %data, float %UNUSED_cfra, float* %old_data) #0 !dbg !4251 {
entry:
  %index.addr = alloca i32, align 4
  %cloth_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  %cloth = alloca %struct.Cloth*, align 8
  %vert = alloca %struct.ClothVertex*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4252, metadata !DIExpression()), !dbg !4253
  store i8* %cloth_v, i8** %cloth_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cloth_v.addr, metadata !4254, metadata !DIExpression()), !dbg !4255
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !4256, metadata !DIExpression()), !dbg !4257
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !4258, metadata !DIExpression()), !dbg !4259
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !4260, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !4262, metadata !DIExpression()), !dbg !4263
  %0 = load i8*, i8** %cloth_v.addr, align 8, !dbg !4264
  %1 = bitcast i8* %0 to %struct.ClothModifierData*, !dbg !4264
  store %struct.ClothModifierData* %1, %struct.ClothModifierData** %clmd, align 8, !dbg !4263
  call void @llvm.dbg.declare(metadata %struct.Cloth** %cloth, metadata !4265, metadata !DIExpression()), !dbg !4266
  %2 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4267
  %clothObject = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %2, i32 0, i32 2, !dbg !4268
  %3 = load %struct.Cloth*, %struct.Cloth** %clothObject, align 8, !dbg !4268
  store %struct.Cloth* %3, %struct.Cloth** %cloth, align 8, !dbg !4266
  call void @llvm.dbg.declare(metadata %struct.ClothVertex** %vert, metadata !4269, metadata !DIExpression()), !dbg !4270
  %4 = load %struct.Cloth*, %struct.Cloth** %cloth, align 8, !dbg !4271
  %verts = getelementptr inbounds %struct.Cloth, %struct.Cloth* %4, i32 0, i32 0, !dbg !4272
  %5 = load %struct.ClothVertex*, %struct.ClothVertex** %verts, align 8, !dbg !4272
  %6 = load i32, i32* %index.addr, align 4, !dbg !4273
  %idx.ext = sext i32 %6 to i64, !dbg !4274
  %add.ptr = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %5, i64 %idx.ext, !dbg !4274
  store %struct.ClothVertex* %add.ptr, %struct.ClothVertex** %vert, align 8, !dbg !4270
  %7 = load float*, float** %old_data.addr, align 8, !dbg !4275
  %tobool = icmp ne float* %7, null, !dbg !4275
  br i1 %tobool, label %if.then, label %if.else, !dbg !4277

if.then:                                          ; preds = %entry
  %8 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4278
  %x = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %8, i32 0, i32 3, !dbg !4280
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x, i64 0, i64 0, !dbg !4281
  %9 = bitcast float* %arraydecay to i8*, !dbg !4281
  %10 = load i8**, i8*** %data.addr, align 8, !dbg !4282
  %11 = bitcast i8** %10 to i8*, !dbg !4281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %11, i64 12, i1 false), !dbg !4281
  %12 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4283
  %xconst = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %12, i32 0, i32 2, !dbg !4284
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %xconst, i64 0, i64 0, !dbg !4285
  %13 = bitcast float* %arraydecay1 to i8*, !dbg !4285
  %14 = load i8**, i8*** %data.addr, align 8, !dbg !4286
  %add.ptr2 = getelementptr inbounds i8*, i8** %14, i64 3, !dbg !4287
  %15 = bitcast i8** %add.ptr2 to i8*, !dbg !4285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %15, i64 12, i1 false), !dbg !4285
  %16 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4288
  %v = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %16, i32 0, i32 1, !dbg !4289
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !4290
  %17 = bitcast float* %arraydecay3 to i8*, !dbg !4290
  %18 = load i8**, i8*** %data.addr, align 8, !dbg !4291
  %add.ptr4 = getelementptr inbounds i8*, i8** %18, i64 6, !dbg !4292
  %19 = bitcast i8** %add.ptr4 to i8*, !dbg !4290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 8 %19, i64 12, i1 false), !dbg !4290
  br label %if.end29, !dbg !4293

if.else:                                          ; preds = %entry
  %20 = load i8**, i8*** %data.addr, align 8, !dbg !4294
  %arrayidx = getelementptr inbounds i8*, i8** %20, i64 1, !dbg !4294
  %21 = load i8*, i8** %arrayidx, align 8, !dbg !4294
  %tobool5 = icmp ne i8* %21, null, !dbg !4294
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !4297

if.then6:                                         ; preds = %if.else
  %22 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4298
  %x7 = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %22, i32 0, i32 3, !dbg !4298
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %x7, i64 0, i64 0, !dbg !4298
  %23 = bitcast float* %arraydecay8 to i8*, !dbg !4298
  %24 = load i8**, i8*** %data.addr, align 8, !dbg !4298
  %arrayidx9 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !4298
  %25 = load i8*, i8** %arrayidx9, align 8, !dbg !4298
  %add.ptr10 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !4298
  %26 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !4298
  %conv = sext i32 %26 to i64, !dbg !4298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 1 %add.ptr10, i64 %conv, i1 false), !dbg !4298
  br label %if.end, !dbg !4298

if.end:                                           ; preds = %if.then6, %if.else
  %27 = load i8**, i8*** %data.addr, align 8, !dbg !4300
  %arrayidx11 = getelementptr inbounds i8*, i8** %27, i64 2, !dbg !4300
  %28 = load i8*, i8** %arrayidx11, align 8, !dbg !4300
  %tobool12 = icmp ne i8* %28, null, !dbg !4300
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !4302

if.then13:                                        ; preds = %if.end
  %29 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4303
  %v14 = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %29, i32 0, i32 1, !dbg !4303
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %v14, i64 0, i64 0, !dbg !4303
  %30 = bitcast float* %arraydecay15 to i8*, !dbg !4303
  %31 = load i8**, i8*** %data.addr, align 8, !dbg !4303
  %arrayidx16 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !4303
  %32 = load i8*, i8** %arrayidx16, align 8, !dbg !4303
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !4303
  %33 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 2), align 8, !dbg !4303
  %conv18 = sext i32 %33 to i64, !dbg !4303
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 1 %add.ptr17, i64 %conv18, i1 false), !dbg !4303
  br label %if.end19, !dbg !4303

if.end19:                                         ; preds = %if.then13, %if.end
  %34 = load i8**, i8*** %data.addr, align 8, !dbg !4305
  %arrayidx20 = getelementptr inbounds i8*, i8** %34, i64 4, !dbg !4305
  %35 = load i8*, i8** %arrayidx20, align 8, !dbg !4305
  %tobool21 = icmp ne i8* %35, null, !dbg !4305
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !4307

if.then22:                                        ; preds = %if.end19
  %36 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4308
  %xconst23 = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %36, i32 0, i32 2, !dbg !4308
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %xconst23, i64 0, i64 0, !dbg !4308
  %37 = bitcast float* %arraydecay24 to i8*, !dbg !4308
  %38 = load i8**, i8*** %data.addr, align 8, !dbg !4308
  %arrayidx25 = getelementptr inbounds i8*, i8** %38, i64 4, !dbg !4308
  %39 = load i8*, i8** %arrayidx25, align 8, !dbg !4308
  %add.ptr26 = getelementptr inbounds i8, i8* %39, i64 0, !dbg !4308
  %40 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 4), align 16, !dbg !4308
  %conv27 = sext i32 %40 to i64, !dbg !4308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 1 %add.ptr26, i64 %conv27, i1 false), !dbg !4308
  br label %if.end28, !dbg !4308

if.end28:                                         ; preds = %if.then22, %if.end19
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  ret void, !dbg !4310
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_cloth_interpolate(i32 %index, i8* %cloth_v, i8** %data, float %cfra, float %cfra1, float %cfra2, float* %old_data) #0 !dbg !4311 {
entry:
  %index.addr = alloca i32, align 4
  %cloth_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca float, align 4
  %cfra1.addr = alloca float, align 4
  %cfra2.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  %cloth = alloca %struct.Cloth*, align 8
  %vert = alloca %struct.ClothVertex*, align 8
  %keys = alloca [4 x %struct.ParticleKey], align 16
  %dfra = alloca float, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4312, metadata !DIExpression()), !dbg !4313
  store i8* %cloth_v, i8** %cloth_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cloth_v.addr, metadata !4314, metadata !DIExpression()), !dbg !4315
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !4316, metadata !DIExpression()), !dbg !4317
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !4318, metadata !DIExpression()), !dbg !4319
  store float %cfra1, float* %cfra1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra1.addr, metadata !4320, metadata !DIExpression()), !dbg !4321
  store float %cfra2, float* %cfra2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra2.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !4326, metadata !DIExpression()), !dbg !4327
  %0 = load i8*, i8** %cloth_v.addr, align 8, !dbg !4328
  %1 = bitcast i8* %0 to %struct.ClothModifierData*, !dbg !4328
  store %struct.ClothModifierData* %1, %struct.ClothModifierData** %clmd, align 8, !dbg !4327
  call void @llvm.dbg.declare(metadata %struct.Cloth** %cloth, metadata !4329, metadata !DIExpression()), !dbg !4330
  %2 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !4331
  %clothObject = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %2, i32 0, i32 2, !dbg !4332
  %3 = load %struct.Cloth*, %struct.Cloth** %clothObject, align 8, !dbg !4332
  store %struct.Cloth* %3, %struct.Cloth** %cloth, align 8, !dbg !4330
  call void @llvm.dbg.declare(metadata %struct.ClothVertex** %vert, metadata !4333, metadata !DIExpression()), !dbg !4334
  %4 = load %struct.Cloth*, %struct.Cloth** %cloth, align 8, !dbg !4335
  %verts = getelementptr inbounds %struct.Cloth, %struct.Cloth* %4, i32 0, i32 0, !dbg !4336
  %5 = load %struct.ClothVertex*, %struct.ClothVertex** %verts, align 8, !dbg !4336
  %6 = load i32, i32* %index.addr, align 4, !dbg !4337
  %idx.ext = sext i32 %6 to i64, !dbg !4338
  %add.ptr = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %5, i64 %idx.ext, !dbg !4338
  store %struct.ClothVertex* %add.ptr, %struct.ClothVertex** %vert, align 8, !dbg !4334
  call void @llvm.dbg.declare(metadata [4 x %struct.ParticleKey]* %keys, metadata !4339, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.declare(metadata float* %dfra, metadata !4341, metadata !DIExpression()), !dbg !4342
  %7 = load float, float* %cfra1.addr, align 4, !dbg !4343
  %8 = load float, float* %cfra2.addr, align 4, !dbg !4345
  %cmp = fcmp oeq float %7, %8, !dbg !4346
  br i1 %cmp, label %if.then, label %if.end, !dbg !4347

if.then:                                          ; preds = %entry
  br label %return, !dbg !4348

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !4349
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx, i32 0, i32 0, !dbg !4350
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4349
  %9 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4351
  %x = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %9, i32 0, i32 3, !dbg !4352
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %x, i64 0, i64 0, !dbg !4351
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !4353
  %arrayidx2 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !4354
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx2, i32 0, i32 1, !dbg !4355
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4354
  %10 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4356
  %v = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %10, i32 0, i32 1, !dbg !4357
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !4356
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !4358
  %11 = load float*, float** %old_data.addr, align 8, !dbg !4359
  %tobool = icmp ne float* %11, null, !dbg !4359
  br i1 %tobool, label %if.then5, label %if.else, !dbg !4361

if.then5:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !4362
  %co7 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx6, i32 0, i32 0, !dbg !4364
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !4365
  %12 = bitcast float* %arraydecay8 to i8*, !dbg !4365
  %13 = load float*, float** %old_data.addr, align 8, !dbg !4366
  %14 = bitcast float* %13 to i8*, !dbg !4365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 4 %14, i64 12, i1 false), !dbg !4365
  %arrayidx9 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !4367
  %vel10 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx9, i32 0, i32 1, !dbg !4368
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vel10, i64 0, i64 0, !dbg !4369
  %15 = bitcast float* %arraydecay11 to i8*, !dbg !4369
  %16 = load float*, float** %old_data.addr, align 8, !dbg !4370
  %add.ptr12 = getelementptr inbounds float, float* %16, i64 6, !dbg !4371
  %17 = bitcast float* %add.ptr12 to i8*, !dbg !4369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 12, i1 false), !dbg !4369
  br label %if.end15, !dbg !4372

if.else:                                          ; preds = %if.end
  %arraydecay13 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4373
  %add.ptr14 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay13, i64 2, !dbg !4374
  %18 = load i8**, i8*** %data.addr, align 8, !dbg !4375
  %19 = load float, float* %cfra2.addr, align 4, !dbg !4376
  call void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %add.ptr14, i32 0, i8** %18, float %19), !dbg !4377
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then5
  %20 = load float, float* %cfra2.addr, align 4, !dbg !4378
  %21 = load float, float* %cfra1.addr, align 4, !dbg !4379
  %sub = fsub float %20, %21, !dbg !4380
  store float %sub, float* %dfra, align 4, !dbg !4381
  %arrayidx16 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !4382
  %vel17 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx16, i32 0, i32 1, !dbg !4383
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vel17, i64 0, i64 0, !dbg !4382
  %22 = load float, float* %dfra, align 4, !dbg !4384
  call void @mul_v3_fl(float* %arraydecay18, float %22), !dbg !4385
  %arrayidx19 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !4386
  %vel20 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx19, i32 0, i32 1, !dbg !4387
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vel20, i64 0, i64 0, !dbg !4386
  %23 = load float, float* %dfra, align 4, !dbg !4388
  call void @mul_v3_fl(float* %arraydecay21, float %23), !dbg !4389
  %arraydecay22 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4390
  %24 = load float, float* %cfra.addr, align 4, !dbg !4391
  %25 = load float, float* %cfra1.addr, align 4, !dbg !4392
  %sub23 = fsub float %24, %25, !dbg !4393
  %26 = load float, float* %dfra, align 4, !dbg !4394
  %div = fdiv float %sub23, %26, !dbg !4395
  %arraydecay24 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4396
  call void @psys_interpolate_particle(i16 signext -1, %struct.ParticleKey* %arraydecay22, float %div, %struct.ParticleKey* %arraydecay24, i32 1), !dbg !4397
  %arraydecay25 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4398
  %vel26 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay25, i32 0, i32 1, !dbg !4398
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %vel26, i64 0, i64 0, !dbg !4399
  %27 = load float, float* %dfra, align 4, !dbg !4400
  %div28 = fdiv float 1.000000e+00, %27, !dbg !4401
  call void @mul_v3_fl(float* %arraydecay27, float %div28), !dbg !4402
  %28 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4403
  %x29 = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %28, i32 0, i32 3, !dbg !4404
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %x29, i64 0, i64 0, !dbg !4403
  %arraydecay31 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4405
  %co32 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay31, i32 0, i32 0, !dbg !4405
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !4406
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay33), !dbg !4407
  %29 = load %struct.ClothVertex*, %struct.ClothVertex** %vert, align 8, !dbg !4408
  %v34 = getelementptr inbounds %struct.ClothVertex, %struct.ClothVertex* %29, i32 0, i32 1, !dbg !4409
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %v34, i64 0, i64 0, !dbg !4408
  %arraydecay36 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !4410
  %vel37 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay36, i32 0, i32 1, !dbg !4410
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %vel37, i64 0, i64 0, !dbg !4411
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay38), !dbg !4412
  br label %return, !dbg !4413

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !4413
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_smoke(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.SmokeModifierData* %smd) #0 !dbg !4414 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %smd.addr = alloca %struct.SmokeModifierData*, align 8
  %sds = alloca %struct.SmokeDomainSettings*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !4417, metadata !DIExpression()), !dbg !4418
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4419, metadata !DIExpression()), !dbg !4420
  store %struct.SmokeModifierData* %smd, %struct.SmokeModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SmokeModifierData** %smd.addr, metadata !4421, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.declare(metadata %struct.SmokeDomainSettings** %sds, metadata !4423, metadata !DIExpression()), !dbg !4426
  %0 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd.addr, align 8, !dbg !4427
  %domain = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %0, i32 0, i32 1, !dbg !4428
  %1 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %domain, align 8, !dbg !4428
  store %struct.SmokeDomainSettings* %1, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4426
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4429
  %3 = bitcast %struct.PTCacheID* %2 to i8*, !dbg !4430
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 200, i1 false), !dbg !4430
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4431
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4432
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %5, i32 0, i32 3, !dbg !4433
  store %struct.Object* %4, %struct.Object** %ob1, align 8, !dbg !4434
  %6 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd.addr, align 8, !dbg !4435
  %7 = bitcast %struct.SmokeModifierData* %6 to i8*, !dbg !4435
  %8 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4436
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %8, i32 0, i32 4, !dbg !4437
  store i8* %7, i8** %calldata, align 8, !dbg !4438
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4439
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 5, !dbg !4440
  store i32 3, i32* %type, align 8, !dbg !4441
  %10 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4442
  %point_cache = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %10, i32 0, i32 47, !dbg !4443
  %arrayidx = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache, i64 0, i64 0, !dbg !4442
  %11 = load %struct.PointCache*, %struct.PointCache** %arrayidx, align 8, !dbg !4442
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 12, !dbg !4444
  %12 = load i32, i32* %index, align 8, !dbg !4444
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4445
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %13, i32 0, i32 6, !dbg !4446
  store i32 %12, i32* %stack_index, align 4, !dbg !4447
  %14 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4448
  %point_cache2 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %14, i32 0, i32 47, !dbg !4449
  %arrayidx3 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache2, i64 0, i64 0, !dbg !4448
  %15 = load %struct.PointCache*, %struct.PointCache** %arrayidx3, align 8, !dbg !4448
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4450
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 25, !dbg !4451
  store %struct.PointCache* %15, %struct.PointCache** %cache, align 8, !dbg !4452
  %17 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4453
  %point_cache4 = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %17, i32 0, i32 47, !dbg !4454
  %arrayidx5 = getelementptr inbounds [2 x %struct.PointCache*], [2 x %struct.PointCache*]* %point_cache4, i64 0, i64 0, !dbg !4453
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4455
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 26, !dbg !4456
  store %struct.PointCache** %arrayidx5, %struct.PointCache*** %cache_ptr, align 8, !dbg !4457
  %19 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4458
  %ptcaches = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %19, i32 0, i32 48, !dbg !4459
  %arrayidx6 = getelementptr inbounds [2 x %struct.ListBase], [2 x %struct.ListBase]* %ptcaches, i64 0, i64 0, !dbg !4458
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4460
  %ptcaches7 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 27, !dbg !4461
  store %struct.ListBase* %arrayidx6, %struct.ListBase** %ptcaches7, align 8, !dbg !4462
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4463
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 22, !dbg !4464
  store i32 (i8*, i32)* @ptcache_smoke_totpoint, i32 (i8*, i32)** %totwrite, align 8, !dbg !4465
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4466
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 20, !dbg !4467
  store i32 (i8*, i32)* @ptcache_smoke_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !4468
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4469
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 21, !dbg !4470
  store void (i8*, i8*)* @ptcache_smoke_error, void (i8*, i8*)** %error, align 8, !dbg !4471
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4472
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 12, !dbg !4473
  store i32 (i32, i8*, i8**, i32)* null, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !4474
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4475
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 13, !dbg !4476
  store void (i32, i8*, i8**, float, float*)* null, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !4477
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4478
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 14, !dbg !4479
  store void (i32, i8*, i8**, float, float, float, float*)* null, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !4480
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4481
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 16, !dbg !4482
  store i32 (%struct.PTCacheFile*, i8*)* @ptcache_smoke_read, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !4483
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4484
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 15, !dbg !4485
  store i32 (%struct.PTCacheFile*, i8*)* @ptcache_smoke_write, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !4486
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4487
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 17, !dbg !4488
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !4489
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4490
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 18, !dbg !4491
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !4492
  %31 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4493
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %31, i32 0, i32 19, !dbg !4494
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !4495
  %32 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4496
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %32, i32 0, i32 23, !dbg !4497
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !4498
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4499
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 24, !dbg !4500
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !4501
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4502
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 10, !dbg !4503
  store i32 0, i32* %data_types, align 4, !dbg !4504
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4505
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 11, !dbg !4506
  store i32 0, i32* %info_types, align 8, !dbg !4507
  %36 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4508
  %fluid = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %36, i32 0, i32 1, !dbg !4510
  %37 = load %struct.FLUID_3D*, %struct.FLUID_3D** %fluid, align 8, !dbg !4510
  %tobool = icmp ne %struct.FLUID_3D* %37, null, !dbg !4508
  br i1 %tobool, label %if.then, label %if.end, !dbg !4511

if.then:                                          ; preds = %entry
  %38 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4512
  %data_types8 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %38, i32 0, i32 10, !dbg !4513
  %39 = load i32, i32* %data_types8, align 4, !dbg !4514
  %or = or i32 %39, 2, !dbg !4514
  store i32 %or, i32* %data_types8, align 4, !dbg !4514
  br label %if.end, !dbg !4512

if.end:                                           ; preds = %if.then, %entry
  %40 = load %struct.SmokeDomainSettings*, %struct.SmokeDomainSettings** %sds, align 8, !dbg !4515
  %wt = getelementptr inbounds %struct.SmokeDomainSettings, %struct.SmokeDomainSettings* %40, i32 0, i32 6, !dbg !4517
  %41 = load %struct.WTURBULENCE*, %struct.WTURBULENCE** %wt, align 8, !dbg !4517
  %tobool9 = icmp ne %struct.WTURBULENCE* %41, null, !dbg !4515
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !4518

if.then10:                                        ; preds = %if.end
  %42 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4519
  %data_types11 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %42, i32 0, i32 10, !dbg !4520
  %43 = load i32, i32* %data_types11, align 4, !dbg !4521
  %or12 = or i32 %43, 4, !dbg !4521
  store i32 %or12, i32* %data_types11, align 4, !dbg !4521
  br label %if.end13, !dbg !4519

if.end13:                                         ; preds = %if.then10, %if.end
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4522
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 8, !dbg !4523
  store i32 1, i32* %default_step, align 4, !dbg !4524
  %45 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4525
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %45, i32 0, i32 9, !dbg !4526
  store i32 1, i32* %max_step, align 8, !dbg !4527
  ret void, !dbg !4528
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_smoke_totpoint(i8* %UNUSED_smoke_v, i32 %UNUSED_cfra) #0 !dbg !4529 {
entry:
  %UNUSED_smoke_v.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  store i8* %UNUSED_smoke_v, i8** %UNUSED_smoke_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_smoke_v.addr, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4532, metadata !DIExpression()), !dbg !4533
  ret i32 0, !dbg !4534
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_smoke_error(i8* %UNUSED_smoke_v, i8* %UNUSED_message) #0 !dbg !4535 {
entry:
  %UNUSED_smoke_v.addr = alloca i8*, align 8
  %UNUSED_message.addr = alloca i8*, align 8
  store i8* %UNUSED_smoke_v, i8** %UNUSED_smoke_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_smoke_v.addr, metadata !4536, metadata !DIExpression()), !dbg !4537
  store i8* %UNUSED_message, i8** %UNUSED_message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_message.addr, metadata !4538, metadata !DIExpression()), !dbg !4539
  ret void, !dbg !4540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_smoke_read(%struct.PTCacheFile* %UNUSED_pf, i8* %UNUSED_smoke_v) #0 !dbg !4541 {
entry:
  %UNUSED_pf.addr = alloca %struct.PTCacheFile*, align 8
  %UNUSED_smoke_v.addr = alloca i8*, align 8
  store %struct.PTCacheFile* %UNUSED_pf, %struct.PTCacheFile** %UNUSED_pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %UNUSED_pf.addr, metadata !4542, metadata !DIExpression()), !dbg !4543
  store i8* %UNUSED_smoke_v, i8** %UNUSED_smoke_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_smoke_v.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  ret i32 0, !dbg !4546
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_smoke_write(%struct.PTCacheFile* %UNUSED_pf, i8* %UNUSED_smoke_v) #0 !dbg !4547 {
entry:
  %UNUSED_pf.addr = alloca %struct.PTCacheFile*, align 8
  %UNUSED_smoke_v.addr = alloca i8*, align 8
  store %struct.PTCacheFile* %UNUSED_pf, %struct.PTCacheFile** %UNUSED_pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %UNUSED_pf.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i8* %UNUSED_smoke_v, i8** %UNUSED_smoke_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_smoke_v.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  ret i32 0, !dbg !4552
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_dynamicpaint(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.DynamicPaintSurface* %surface) #0 !dbg !4553 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !4556, metadata !DIExpression()), !dbg !4557
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4562
  %1 = bitcast %struct.PTCacheID* %0 to i8*, !dbg !4563
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 200, i1 false), !dbg !4563
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4564
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4565
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 3, !dbg !4566
  store %struct.Object* %2, %struct.Object** %ob1, align 8, !dbg !4567
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4568
  %5 = bitcast %struct.DynamicPaintSurface* %4 to i8*, !dbg !4568
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4569
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 4, !dbg !4570
  store i8* %5, i8** %calldata, align 8, !dbg !4571
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4572
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !4573
  store i32 5, i32* %type, align 8, !dbg !4574
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4575
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 6, !dbg !4576
  %9 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !4576
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4577
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !4578
  store %struct.PointCache* %9, %struct.PointCache** %cache, align 8, !dbg !4579
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4580
  %pointcache2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 6, !dbg !4581
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4582
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 26, !dbg !4583
  store %struct.PointCache** %pointcache2, %struct.PointCache*** %cache_ptr, align 8, !dbg !4584
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4585
  %ptcaches = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 7, !dbg !4586
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4587
  %ptcaches3 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 27, !dbg !4588
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches3, align 8, !dbg !4589
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4590
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 22, !dbg !4591
  store i32 (i8*, i32)* @ptcache_dynamicpaint_totpoint, i32 (i8*, i32)** %totwrite, align 8, !dbg !4592
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4593
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 20, !dbg !4594
  store i32 (i8*, i32)* @ptcache_dynamicpaint_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !4595
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4596
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 21, !dbg !4597
  store void (i8*, i8*)* @ptcache_dynamicpaint_error, void (i8*, i8*)** %error, align 8, !dbg !4598
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4599
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 12, !dbg !4600
  store i32 (i32, i8*, i8**, i32)* null, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !4601
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4602
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 13, !dbg !4603
  store void (i32, i8*, i8**, float, float*)* null, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !4604
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4605
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 14, !dbg !4606
  store void (i32, i8*, i8**, float, float, float, float*)* null, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !4607
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4608
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 15, !dbg !4609
  store i32 (%struct.PTCacheFile*, i8*)* @ptcache_dynamicpaint_write, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !4610
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4611
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 16, !dbg !4612
  store i32 (%struct.PTCacheFile*, i8*)* @ptcache_dynamicpaint_read, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !4613
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4614
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 17, !dbg !4615
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !4616
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4617
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 18, !dbg !4618
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !4619
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4620
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 19, !dbg !4621
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !4622
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4623
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 23, !dbg !4624
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !4625
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4626
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 24, !dbg !4627
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !4628
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4629
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 10, !dbg !4630
  store i32 3, i32* %data_types, align 4, !dbg !4631
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4632
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 11, !dbg !4633
  store i32 0, i32* %info_types, align 8, !dbg !4634
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4635
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 25, !dbg !4636
  %31 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !4636
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 12, !dbg !4637
  %32 = load i32, i32* %index, align 8, !dbg !4637
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4638
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 6, !dbg !4639
  store i32 %32, i32* %stack_index, align 4, !dbg !4640
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4641
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 8, !dbg !4642
  store i32 1, i32* %default_step, align 4, !dbg !4643
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4644
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 9, !dbg !4645
  store i32 1, i32* %max_step, align 8, !dbg !4646
  ret void, !dbg !4647
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_dynamicpaint_totpoint(i8* %sd, i32 %UNUSED_cfra) #0 !dbg !4648 {
entry:
  %retval = alloca i32, align 4
  %sd.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store i8* %sd, i8** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sd.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4651, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4653, metadata !DIExpression()), !dbg !4654
  %0 = load i8*, i8** %sd.addr, align 8, !dbg !4655
  %1 = bitcast i8* %0 to %struct.DynamicPaintSurface*, !dbg !4656
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4654
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4657
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 3, !dbg !4659
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !4659
  %tobool = icmp ne %struct.PaintSurfaceData* %3, null, !dbg !4657
  br i1 %tobool, label %if.else, label %if.then, !dbg !4660

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4661
  br label %return, !dbg !4661

if.else:                                          ; preds = %entry
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4662
  %data1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 3, !dbg !4663
  %5 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data1, align 8, !dbg !4663
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %5, i32 0, i32 4, !dbg !4664
  %6 = load i32, i32* %total_points, align 8, !dbg !4664
  store i32 %6, i32* %retval, align 4, !dbg !4665
  br label %return, !dbg !4665

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4666
  ret i32 %7, !dbg !4666
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_dynamicpaint_error(i8* %UNUSED_sd, i8* %UNUSED_message) #0 !dbg !4667 {
entry:
  %UNUSED_sd.addr = alloca i8*, align 8
  %UNUSED_message.addr = alloca i8*, align 8
  store i8* %UNUSED_sd, i8** %UNUSED_sd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_sd.addr, metadata !4668, metadata !DIExpression()), !dbg !4669
  store i8* %UNUSED_message, i8** %UNUSED_message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_message.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  ret void, !dbg !4672
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_dynamicpaint_write(%struct.PTCacheFile* %pf, i8* %dp_v) #0 !dbg !4673 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %dp_v.addr = alloca i8*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %cache_compress = alloca i32, align 4
  %total_points = alloca i32, align 4
  %in_len = alloca i32, align 4
  %out = alloca i8*, align 8
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  store i8* %dp_v, i8** %dp_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dp_v.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4678, metadata !DIExpression()), !dbg !4679
  %0 = load i8*, i8** %dp_v.addr, align 8, !dbg !4680
  %1 = bitcast i8* %0 to %struct.DynamicPaintSurface*, !dbg !4681
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4679
  call void @llvm.dbg.declare(metadata i32* %cache_compress, metadata !4682, metadata !DIExpression()), !dbg !4683
  store i32 1, i32* %cache_compress, align 4, !dbg !4683
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4684
  %call = call i32 @ptcache_file_write(%struct.PTCacheFile* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i32 1, i32 4), !dbg !4685
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4686
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 10, !dbg !4688
  %4 = load i16, i16* %format, align 4, !dbg !4688
  %conv = sext i16 %4 to i32, !dbg !4686
  %cmp = icmp ne i32 %conv, 2, !dbg !4689
  br i1 %cmp, label %land.lhs.true, label %if.end42, !dbg !4690

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4691
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 3, !dbg !4692
  %6 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !4692
  %tobool = icmp ne %struct.PaintSurfaceData* %6, null, !dbg !4691
  br i1 %tobool, label %if.then, label %if.end42, !dbg !4693

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %total_points, metadata !4694, metadata !DIExpression()), !dbg !4696
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4697
  %data2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 3, !dbg !4698
  %8 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data2, align 8, !dbg !4698
  %total_points3 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %8, i32 0, i32 4, !dbg !4699
  %9 = load i32, i32* %total_points3, align 8, !dbg !4699
  store i32 %9, i32* %total_points, align 4, !dbg !4696
  call void @llvm.dbg.declare(metadata i32* %in_len, metadata !4700, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.declare(metadata i8** %out, metadata !4702, metadata !DIExpression()), !dbg !4703
  %10 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4704
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4705
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 11, !dbg !4706
  %12 = bitcast i16* %type to i8*, !dbg !4707
  %call4 = call i32 @ptcache_file_write(%struct.PTCacheFile* %10, i8* %12, i32 1, i32 4), !dbg !4708
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4709
  %type5 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 11, !dbg !4711
  %14 = load i16, i16* %type5, align 2, !dbg !4711
  %conv6 = sext i16 %14 to i32, !dbg !4709
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !4712
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !4713

if.then9:                                         ; preds = %if.then
  %15 = load i32, i32* %total_points, align 4, !dbg !4714
  %conv10 = sext i32 %15 to i64, !dbg !4714
  %mul = mul i64 40, %conv10, !dbg !4716
  %conv11 = trunc i64 %mul to i32, !dbg !4717
  store i32 %conv11, i32* %in_len, align 4, !dbg !4718
  br label %if.end35, !dbg !4719

if.else:                                          ; preds = %if.then
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4720
  %type12 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 11, !dbg !4722
  %17 = load i16, i16* %type12, align 2, !dbg !4722
  %conv13 = sext i16 %17 to i32, !dbg !4720
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !4723
  br i1 %cmp14, label %if.then20, label %lor.lhs.false, !dbg !4724

lor.lhs.false:                                    ; preds = %if.else
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4725
  %type16 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 11, !dbg !4726
  %19 = load i16, i16* %type16, align 2, !dbg !4726
  %conv17 = sext i16 %19 to i32, !dbg !4725
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !4727
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !4728

if.then20:                                        ; preds = %lor.lhs.false, %if.else
  %20 = load i32, i32* %total_points, align 4, !dbg !4729
  %conv21 = sext i32 %20 to i64, !dbg !4729
  %mul22 = mul i64 4, %conv21, !dbg !4731
  %conv23 = trunc i64 %mul22 to i32, !dbg !4732
  store i32 %conv23, i32* %in_len, align 4, !dbg !4733
  br label %if.end34, !dbg !4734

if.else24:                                        ; preds = %lor.lhs.false
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4735
  %type25 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 11, !dbg !4737
  %22 = load i16, i16* %type25, align 2, !dbg !4737
  %conv26 = sext i16 %22 to i32, !dbg !4735
  %cmp27 = icmp eq i32 %conv26, 3, !dbg !4738
  br i1 %cmp27, label %if.then29, label %if.else33, !dbg !4739

if.then29:                                        ; preds = %if.else24
  %23 = load i32, i32* %total_points, align 4, !dbg !4740
  %conv30 = sext i32 %23 to i64, !dbg !4740
  %mul31 = mul i64 16, %conv30, !dbg !4742
  %conv32 = trunc i64 %mul31 to i32, !dbg !4743
  store i32 %conv32, i32* %in_len, align 4, !dbg !4744
  br label %if.end, !dbg !4745

if.else33:                                        ; preds = %if.else24
  store i32 0, i32* %retval, align 4, !dbg !4746
  br label %return, !dbg !4746

if.end:                                           ; preds = %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then20
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then9
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4748
  %25 = load i32, i32* %in_len, align 4, !dbg !4749
  %26 = load i32, i32* %in_len, align 4, !dbg !4749
  %div = udiv i32 %26, 16, !dbg !4749
  %add = add i32 %25, %div, !dbg !4749
  %add36 = add i32 %add, 64, !dbg !4749
  %add37 = add i32 %add36, 3, !dbg !4749
  %conv38 = zext i32 %add37 to i64, !dbg !4749
  %call39 = call i8* %24(i64 %conv38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0)), !dbg !4748
  store i8* %call39, i8** %out, align 8, !dbg !4750
  %27 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4751
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4752
  %data40 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %28, i32 0, i32 3, !dbg !4753
  %29 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data40, align 8, !dbg !4753
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %29, i32 0, i32 1, !dbg !4754
  %30 = load i8*, i8** %type_data, align 8, !dbg !4754
  %31 = load i32, i32* %in_len, align 4, !dbg !4755
  %32 = load i8*, i8** %out, align 8, !dbg !4756
  %33 = load i32, i32* %cache_compress, align 4, !dbg !4757
  %call41 = call i32 @ptcache_file_compressed_write(%struct.PTCacheFile* %27, i8* %30, i32 %31, i8* %32, i32 %33), !dbg !4758
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4759
  %35 = load i8*, i8** %out, align 8, !dbg !4760
  call void %34(i8* %35), !dbg !4759
  br label %if.end42, !dbg !4761

if.end42:                                         ; preds = %if.end35, %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !4762
  br label %return, !dbg !4762

return:                                           ; preds = %if.end42, %if.else33
  %36 = load i32, i32* %retval, align 4, !dbg !4763
  ret i32 %36, !dbg !4763
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_dynamicpaint_read(%struct.PTCacheFile* %pf, i8* %dp_v) #0 !dbg !4764 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %dp_v.addr = alloca i8*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %version = alloca [4 x i8], align 1
  %data_len = alloca i32, align 4
  %surface_type = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !4765, metadata !DIExpression()), !dbg !4766
  store i8* %dp_v, i8** %dp_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dp_v.addr, metadata !4767, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4769, metadata !DIExpression()), !dbg !4770
  %0 = load i8*, i8** %dp_v.addr, align 8, !dbg !4771
  %1 = bitcast i8* %0 to %struct.DynamicPaintSurface*, !dbg !4772
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4770
  call void @llvm.dbg.declare(metadata [4 x i8]* %version, metadata !4773, metadata !DIExpression()), !dbg !4775
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4776
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 0, !dbg !4777
  %call = call i32 @ptcache_file_read(%struct.PTCacheFile* %2, i8* %arraydecay, i32 1, i32 4), !dbg !4778
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 0, !dbg !4779
  %call2 = call i32 @strncmp(i8* %arraydecay1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #6, !dbg !4781
  %tobool = icmp ne i32 %call2, 0, !dbg !4781
  br i1 %tobool, label %if.then, label %if.end, !dbg !4782

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 0, !dbg !4783
  %3 = load i8, i8* %arrayidx, align 1, !dbg !4783
  %conv = zext i8 %3 to i32, !dbg !4783
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 1, !dbg !4783
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !4783
  %conv4 = zext i8 %4 to i32, !dbg !4783
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 2, !dbg !4783
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !4783
  %conv6 = zext i8 %5 to i32, !dbg !4783
  %arrayidx7 = getelementptr inbounds [4 x i8], [4 x i8]* %version, i64 0, i64 3, !dbg !4783
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !4783
  %conv8 = zext i8 %6 to i32, !dbg !4783
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28, i64 0, i64 0), i32 %conv, i32 %conv4, i32 %conv6, i32 %conv8), !dbg !4785
  store i32 0, i32* %retval, align 4, !dbg !4786
  br label %return, !dbg !4786

if.end:                                           ; preds = %entry
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4787
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 10, !dbg !4789
  %8 = load i16, i16* %format, align 4, !dbg !4789
  %conv10 = sext i16 %8 to i32, !dbg !4787
  %cmp = icmp ne i32 %conv10, 2, !dbg !4790
  br i1 %cmp, label %land.lhs.true, label %if.end47, !dbg !4791

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4792
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 3, !dbg !4793
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !4793
  %tobool12 = icmp ne %struct.PaintSurfaceData* %10, null, !dbg !4792
  br i1 %tobool12, label %if.then13, label %if.end47, !dbg !4794

if.then13:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %data_len, metadata !4795, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.declare(metadata i32* %surface_type, metadata !4798, metadata !DIExpression()), !dbg !4799
  %11 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4800
  %12 = bitcast i32* %surface_type to i8*, !dbg !4801
  %call14 = call i32 @ptcache_file_read(%struct.PTCacheFile* %11, i8* %12, i32 1, i32 4), !dbg !4802
  %13 = load i32, i32* %surface_type, align 4, !dbg !4803
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4805
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 11, !dbg !4806
  %15 = load i16, i16* %type, align 2, !dbg !4806
  %conv15 = sext i16 %15 to i32, !dbg !4805
  %cmp16 = icmp ne i32 %13, %conv15, !dbg !4807
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !4808

if.then18:                                        ; preds = %if.then13
  store i32 0, i32* %retval, align 4, !dbg !4809
  br label %return, !dbg !4809

if.end19:                                         ; preds = %if.then13
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4810
  %type20 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 11, !dbg !4812
  %17 = load i16, i16* %type20, align 2, !dbg !4812
  %conv21 = sext i16 %17 to i32, !dbg !4810
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !4813
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !4814

if.then24:                                        ; preds = %if.end19
  store i32 40, i32* %data_len, align 4, !dbg !4815
  br label %if.end43, !dbg !4817

if.else:                                          ; preds = %if.end19
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4818
  %type25 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 11, !dbg !4820
  %19 = load i16, i16* %type25, align 2, !dbg !4820
  %conv26 = sext i16 %19 to i32, !dbg !4818
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !4821
  br i1 %cmp27, label %if.then33, label %lor.lhs.false, !dbg !4822

lor.lhs.false:                                    ; preds = %if.else
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4823
  %type29 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 11, !dbg !4824
  %21 = load i16, i16* %type29, align 2, !dbg !4824
  %conv30 = sext i16 %21 to i32, !dbg !4823
  %cmp31 = icmp eq i32 %conv30, 2, !dbg !4825
  br i1 %cmp31, label %if.then33, label %if.else34, !dbg !4826

if.then33:                                        ; preds = %lor.lhs.false, %if.else
  store i32 4, i32* %data_len, align 4, !dbg !4827
  br label %if.end42, !dbg !4829

if.else34:                                        ; preds = %lor.lhs.false
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4830
  %type35 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %22, i32 0, i32 11, !dbg !4832
  %23 = load i16, i16* %type35, align 2, !dbg !4832
  %conv36 = sext i16 %23 to i32, !dbg !4830
  %cmp37 = icmp eq i32 %conv36, 3, !dbg !4833
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !4834

if.then39:                                        ; preds = %if.else34
  store i32 16, i32* %data_len, align 4, !dbg !4835
  br label %if.end41, !dbg !4837

if.else40:                                        ; preds = %if.else34
  store i32 0, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

if.end41:                                         ; preds = %if.then39
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then33
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then24
  %24 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !4840
  %25 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4841
  %data44 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %25, i32 0, i32 3, !dbg !4842
  %26 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data44, align 8, !dbg !4842
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %26, i32 0, i32 1, !dbg !4843
  %27 = load i8*, i8** %type_data, align 8, !dbg !4843
  %28 = load i32, i32* %data_len, align 4, !dbg !4844
  %29 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4845
  %data45 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %29, i32 0, i32 3, !dbg !4846
  %30 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data45, align 8, !dbg !4846
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %30, i32 0, i32 4, !dbg !4847
  %31 = load i32, i32* %total_points, align 8, !dbg !4847
  %mul = mul i32 %28, %31, !dbg !4848
  %call46 = call i32 @ptcache_file_compressed_read(%struct.PTCacheFile* %24, i8* %27, i32 %mul), !dbg !4849
  br label %if.end47, !dbg !4850

if.end47:                                         ; preds = %if.end43, %land.lhs.true, %if.end
  store i32 1, i32* %retval, align 4, !dbg !4851
  br label %return, !dbg !4851

return:                                           ; preds = %if.end47, %if.else40, %if.then18, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !4852
  ret i32 %32, !dbg !4852
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_from_rigidbody(%struct.PTCacheID* %pid, %struct.Object* %ob, %struct.RigidBodyWorld* %rbw) #0 !dbg !4853 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %rbw.addr = alloca %struct.RigidBodyWorld*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !4858, metadata !DIExpression()), !dbg !4859
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4860, metadata !DIExpression()), !dbg !4861
  store %struct.RigidBodyWorld* %rbw, %struct.RigidBodyWorld** %rbw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw.addr, metadata !4862, metadata !DIExpression()), !dbg !4863
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4864
  %1 = bitcast %struct.PTCacheID* %0 to i8*, !dbg !4865
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 200, i1 false), !dbg !4865
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4866
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4867
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 3, !dbg !4868
  store %struct.Object* %2, %struct.Object** %ob1, align 8, !dbg !4869
  %4 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !4870
  %5 = bitcast %struct.RigidBodyWorld* %4 to i8*, !dbg !4870
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4871
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 4, !dbg !4872
  store i8* %5, i8** %calldata, align 8, !dbg !4873
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4874
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !4875
  store i32 6, i32* %type, align 8, !dbg !4876
  %8 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !4877
  %pointcache = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %8, i32 0, i32 6, !dbg !4878
  %9 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !4878
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4879
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !4880
  store %struct.PointCache* %9, %struct.PointCache** %cache, align 8, !dbg !4881
  %11 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !4882
  %pointcache2 = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %11, i32 0, i32 6, !dbg !4883
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4884
  %cache_ptr = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 26, !dbg !4885
  store %struct.PointCache** %pointcache2, %struct.PointCache*** %cache_ptr, align 8, !dbg !4886
  %13 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !4887
  %ptcaches = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %13, i32 0, i32 7, !dbg !4888
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4889
  %ptcaches3 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 27, !dbg !4890
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches3, align 8, !dbg !4891
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4892
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 22, !dbg !4893
  store i32 (i8*, i32)* @ptcache_rigidbody_totpoint, i32 (i8*, i32)** %totwrite, align 8, !dbg !4894
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4895
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 20, !dbg !4896
  store i32 (i8*, i32)* @ptcache_rigidbody_totpoint, i32 (i8*, i32)** %totpoint, align 8, !dbg !4897
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4898
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 21, !dbg !4899
  store void (i8*, i8*)* @ptcache_rigidbody_error, void (i8*, i8*)** %error, align 8, !dbg !4900
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4901
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 12, !dbg !4902
  store i32 (i32, i8*, i8**, i32)* @ptcache_rigidbody_write, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !4903
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4904
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 13, !dbg !4905
  store void (i32, i8*, i8**, float, float*)* @ptcache_rigidbody_read, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !4906
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4907
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 14, !dbg !4908
  store void (i32, i8*, i8**, float, float, float, float*)* @ptcache_rigidbody_interpolate, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !4909
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4910
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 15, !dbg !4911
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !4912
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4913
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 16, !dbg !4914
  store i32 (%struct.PTCacheFile*, i8*)* null, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !4915
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4916
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 17, !dbg !4917
  store void (i8*, %struct.PTCacheMem*, i32)* null, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !4918
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4919
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 18, !dbg !4920
  store void (i8*, %struct.PTCacheMem*, float)* null, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !4921
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4922
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 19, !dbg !4923
  store void (i8*, %struct.PTCacheMem*, float, float, float)* null, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !4924
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4925
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 23, !dbg !4926
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_write, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !4927
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4928
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 24, !dbg !4929
  store i32 (%struct.PTCacheFile*)* @ptcache_basic_header_read, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !4930
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4931
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 10, !dbg !4932
  store i32 10, i32* %data_types, align 4, !dbg !4933
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4934
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 11, !dbg !4935
  store i32 0, i32* %info_types, align 8, !dbg !4936
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4937
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 25, !dbg !4938
  %31 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !4938
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 12, !dbg !4939
  %32 = load i32, i32* %index, align 8, !dbg !4939
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4940
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 6, !dbg !4941
  store i32 %32, i32* %stack_index, align 4, !dbg !4942
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4943
  %default_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 8, !dbg !4944
  store i32 1, i32* %default_step, align 4, !dbg !4945
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !4946
  %max_step = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 9, !dbg !4947
  store i32 1, i32* %max_step, align 8, !dbg !4948
  ret void, !dbg !4949
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_rigidbody_totpoint(i8* %rb_v, i32 %UNUSED_cfra) #0 !dbg !4950 {
entry:
  %rb_v.addr = alloca i8*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %rbw = alloca %struct.RigidBodyWorld*, align 8
  store i8* %rb_v, i8** %rb_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rb_v.addr, metadata !4951, metadata !DIExpression()), !dbg !4952
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw, metadata !4955, metadata !DIExpression()), !dbg !4956
  %0 = load i8*, i8** %rb_v.addr, align 8, !dbg !4957
  %1 = bitcast i8* %0 to %struct.RigidBodyWorld*, !dbg !4957
  store %struct.RigidBodyWorld* %1, %struct.RigidBodyWorld** %rbw, align 8, !dbg !4956
  %2 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !4958
  %numbodies = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %2, i32 0, i32 8, !dbg !4959
  %3 = load i32, i32* %numbodies, align 8, !dbg !4959
  ret i32 %3, !dbg !4960
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_rigidbody_error(i8* %UNUSED_rb_v, i8* %UNUSED_message) #0 !dbg !4961 {
entry:
  %UNUSED_rb_v.addr = alloca i8*, align 8
  %UNUSED_message.addr = alloca i8*, align 8
  store i8* %UNUSED_rb_v, i8** %UNUSED_rb_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_rb_v.addr, metadata !4962, metadata !DIExpression()), !dbg !4963
  store i8* %UNUSED_message, i8** %UNUSED_message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_message.addr, metadata !4964, metadata !DIExpression()), !dbg !4965
  ret void, !dbg !4966
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_rigidbody_write(i32 %index, i8* %rb_v, i8** %data, i32 %UNUSED_cfra) #0 !dbg !4967 {
entry:
  %index.addr = alloca i32, align 4
  %rb_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %rbw = alloca %struct.RigidBodyWorld*, align 8
  %ob = alloca %struct.Object*, align 8
  %rbo = alloca %struct.RigidBodyOb*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4968, metadata !DIExpression()), !dbg !4969
  store i8* %rb_v, i8** %rb_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rb_v.addr, metadata !4970, metadata !DIExpression()), !dbg !4971
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !4972, metadata !DIExpression()), !dbg !4973
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !4974, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw, metadata !4976, metadata !DIExpression()), !dbg !4977
  %0 = load i8*, i8** %rb_v.addr, align 8, !dbg !4978
  %1 = bitcast i8* %0 to %struct.RigidBodyWorld*, !dbg !4978
  store %struct.RigidBodyWorld* %1, %struct.RigidBodyWorld** %rbw, align 8, !dbg !4977
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4979, metadata !DIExpression()), !dbg !4980
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !4980
  %2 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !4981
  %objects = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %2, i32 0, i32 2, !dbg !4983
  %3 = load %struct.Object**, %struct.Object*** %objects, align 8, !dbg !4983
  %tobool = icmp ne %struct.Object** %3, null, !dbg !4981
  br i1 %tobool, label %if.then, label %if.end, !dbg !4984

if.then:                                          ; preds = %entry
  %4 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !4985
  %objects1 = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %4, i32 0, i32 2, !dbg !4986
  %5 = load %struct.Object**, %struct.Object*** %objects1, align 8, !dbg !4986
  %6 = load i32, i32* %index.addr, align 4, !dbg !4987
  %idxprom = sext i32 %6 to i64, !dbg !4985
  %arrayidx = getelementptr inbounds %struct.Object*, %struct.Object** %5, i64 %idxprom, !dbg !4985
  %7 = load %struct.Object*, %struct.Object** %arrayidx, align 8, !dbg !4985
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !4988
  br label %if.end, !dbg !4989

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4990
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !4990
  br i1 %tobool2, label %land.lhs.true, label %if.end22, !dbg !4992

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4993
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 128, !dbg !4994
  %10 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !4994
  %tobool3 = icmp ne %struct.RigidBodyOb* %10, null, !dbg !4993
  br i1 %tobool3, label %if.then4, label %if.end22, !dbg !4995

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.RigidBodyOb** %rbo, metadata !4996, metadata !DIExpression()), !dbg !5000
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5001
  %rigidbody_object5 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 128, !dbg !5002
  %12 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object5, align 8, !dbg !5002
  store %struct.RigidBodyOb* %12, %struct.RigidBodyOb** %rbo, align 8, !dbg !5000
  %13 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5003
  %type = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %13, i32 0, i32 2, !dbg !5005
  %14 = load i16, i16* %type, align 8, !dbg !5005
  %conv = sext i16 %14 to i32, !dbg !5003
  %cmp = icmp eq i32 %conv, 0, !dbg !5006
  br i1 %cmp, label %if.then7, label %if.end21, !dbg !5007

if.then7:                                         ; preds = %if.then4
  %15 = load i8**, i8*** %data.addr, align 8, !dbg !5008
  %arrayidx8 = getelementptr inbounds i8*, i8** %15, i64 1, !dbg !5008
  %16 = load i8*, i8** %arrayidx8, align 8, !dbg !5008
  %tobool9 = icmp ne i8* %16, null, !dbg !5008
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !5011

if.then10:                                        ; preds = %if.then7
  %17 = load i8**, i8*** %data.addr, align 8, !dbg !5012
  %arrayidx11 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !5012
  %18 = load i8*, i8** %arrayidx11, align 8, !dbg !5012
  %19 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5012
  %pos = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %19, i32 0, i32 17, !dbg !5012
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !5012
  %20 = bitcast float* %arraydecay to i8*, !dbg !5012
  %21 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !5012
  %conv12 = sext i32 %21 to i64, !dbg !5012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 8 %20, i64 %conv12, i1 false), !dbg !5012
  br label %if.end13, !dbg !5012

if.end13:                                         ; preds = %if.then10, %if.then7
  %22 = load i8**, i8*** %data.addr, align 8, !dbg !5014
  %arrayidx14 = getelementptr inbounds i8*, i8** %22, i64 3, !dbg !5014
  %23 = load i8*, i8** %arrayidx14, align 8, !dbg !5014
  %tobool15 = icmp ne i8* %23, null, !dbg !5014
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !5016

if.then16:                                        ; preds = %if.end13
  %24 = load i8**, i8*** %data.addr, align 8, !dbg !5017
  %arrayidx17 = getelementptr inbounds i8*, i8** %24, i64 3, !dbg !5017
  %25 = load i8*, i8** %arrayidx17, align 8, !dbg !5017
  %26 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5017
  %orn = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %26, i32 0, i32 16, !dbg !5017
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %orn, i64 0, i64 0, !dbg !5017
  %27 = bitcast float* %arraydecay18 to i8*, !dbg !5017
  %28 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 3), align 4, !dbg !5017
  %conv19 = sext i32 %28 to i64, !dbg !5017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 8 %27, i64 %conv19, i1 false), !dbg !5017
  br label %if.end20, !dbg !5017

if.end20:                                         ; preds = %if.then16, %if.end13
  br label %if.end21, !dbg !5019

if.end21:                                         ; preds = %if.end20, %if.then4
  br label %if.end22, !dbg !5020

if.end22:                                         ; preds = %if.end21, %land.lhs.true, %if.end
  ret i32 1, !dbg !5021
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_rigidbody_read(i32 %index, i8* %rb_v, i8** %data, float %UNUSED_cfra, float* %old_data) #0 !dbg !5022 {
entry:
  %index.addr = alloca i32, align 4
  %rb_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %rbw = alloca %struct.RigidBodyWorld*, align 8
  %ob = alloca %struct.Object*, align 8
  %rbo = alloca %struct.RigidBodyOb*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5023, metadata !DIExpression()), !dbg !5024
  store i8* %rb_v, i8** %rb_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rb_v.addr, metadata !5025, metadata !DIExpression()), !dbg !5026
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !5027, metadata !DIExpression()), !dbg !5028
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !5029, metadata !DIExpression()), !dbg !5030
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw, metadata !5033, metadata !DIExpression()), !dbg !5034
  %0 = load i8*, i8** %rb_v.addr, align 8, !dbg !5035
  %1 = bitcast i8* %0 to %struct.RigidBodyWorld*, !dbg !5035
  store %struct.RigidBodyWorld* %1, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5034
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5036, metadata !DIExpression()), !dbg !5037
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !5037
  %2 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5038
  %objects = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %2, i32 0, i32 2, !dbg !5040
  %3 = load %struct.Object**, %struct.Object*** %objects, align 8, !dbg !5040
  %tobool = icmp ne %struct.Object** %3, null, !dbg !5038
  br i1 %tobool, label %if.then, label %if.end, !dbg !5041

if.then:                                          ; preds = %entry
  %4 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5042
  %objects1 = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %4, i32 0, i32 2, !dbg !5043
  %5 = load %struct.Object**, %struct.Object*** %objects1, align 8, !dbg !5043
  %6 = load i32, i32* %index.addr, align 4, !dbg !5044
  %idxprom = sext i32 %6 to i64, !dbg !5042
  %arrayidx = getelementptr inbounds %struct.Object*, %struct.Object** %5, i64 %idxprom, !dbg !5042
  %7 = load %struct.Object*, %struct.Object** %arrayidx, align 8, !dbg !5042
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !5045
  br label %if.end, !dbg !5046

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5047
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !5047
  br i1 %tobool2, label %land.lhs.true, label %if.end31, !dbg !5049

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5050
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 128, !dbg !5051
  %10 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !5051
  %tobool3 = icmp ne %struct.RigidBodyOb* %10, null, !dbg !5050
  br i1 %tobool3, label %if.then4, label %if.end31, !dbg !5052

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.RigidBodyOb** %rbo, metadata !5053, metadata !DIExpression()), !dbg !5055
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5056
  %rigidbody_object5 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 128, !dbg !5057
  %12 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object5, align 8, !dbg !5057
  store %struct.RigidBodyOb* %12, %struct.RigidBodyOb** %rbo, align 8, !dbg !5055
  %13 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5058
  %type = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %13, i32 0, i32 2, !dbg !5060
  %14 = load i16, i16* %type, align 8, !dbg !5060
  %conv = sext i16 %14 to i32, !dbg !5058
  %cmp = icmp eq i32 %conv, 0, !dbg !5061
  br i1 %cmp, label %if.then7, label %if.end30, !dbg !5062

if.then7:                                         ; preds = %if.then4
  %15 = load float*, float** %old_data.addr, align 8, !dbg !5063
  %tobool8 = icmp ne float* %15, null, !dbg !5063
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !5066

if.then9:                                         ; preds = %if.then7
  %16 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5067
  %pos = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %16, i32 0, i32 17, !dbg !5069
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !5070
  %17 = bitcast float* %arraydecay to i8*, !dbg !5070
  %18 = load i8**, i8*** %data.addr, align 8, !dbg !5071
  %19 = bitcast i8** %18 to i8*, !dbg !5070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 12, i1 false), !dbg !5070
  %20 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5072
  %orn = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %20, i32 0, i32 16, !dbg !5073
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %orn, i64 0, i64 0, !dbg !5074
  %21 = bitcast float* %arraydecay10 to i8*, !dbg !5074
  %22 = load i8**, i8*** %data.addr, align 8, !dbg !5075
  %add.ptr = getelementptr inbounds i8*, i8** %22, i64 3, !dbg !5076
  %23 = bitcast i8** %add.ptr to i8*, !dbg !5074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %23, i64 16, i1 false), !dbg !5074
  br label %if.end29, !dbg !5077

if.else:                                          ; preds = %if.then7
  %24 = load i8**, i8*** %data.addr, align 8, !dbg !5078
  %arrayidx11 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !5078
  %25 = load i8*, i8** %arrayidx11, align 8, !dbg !5078
  %tobool12 = icmp ne i8* %25, null, !dbg !5078
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !5081

if.then13:                                        ; preds = %if.else
  %26 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5082
  %pos14 = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %26, i32 0, i32 17, !dbg !5082
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %pos14, i64 0, i64 0, !dbg !5082
  %27 = bitcast float* %arraydecay15 to i8*, !dbg !5082
  %28 = load i8**, i8*** %data.addr, align 8, !dbg !5082
  %arrayidx16 = getelementptr inbounds i8*, i8** %28, i64 1, !dbg !5082
  %29 = load i8*, i8** %arrayidx16, align 8, !dbg !5082
  %add.ptr17 = getelementptr inbounds i8, i8* %29, i64 0, !dbg !5082
  %30 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 1), align 4, !dbg !5082
  %conv18 = sext i32 %30 to i64, !dbg !5082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 %add.ptr17, i64 %conv18, i1 false), !dbg !5082
  br label %if.end19, !dbg !5082

if.end19:                                         ; preds = %if.then13, %if.else
  %31 = load i8**, i8*** %data.addr, align 8, !dbg !5084
  %arrayidx20 = getelementptr inbounds i8*, i8** %31, i64 3, !dbg !5084
  %32 = load i8*, i8** %arrayidx20, align 8, !dbg !5084
  %tobool21 = icmp ne i8* %32, null, !dbg !5084
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !5086

if.then22:                                        ; preds = %if.end19
  %33 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5087
  %orn23 = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %33, i32 0, i32 16, !dbg !5087
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %orn23, i64 0, i64 0, !dbg !5087
  %34 = bitcast float* %arraydecay24 to i8*, !dbg !5087
  %35 = load i8**, i8*** %data.addr, align 8, !dbg !5087
  %arrayidx25 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !5087
  %36 = load i8*, i8** %arrayidx25, align 8, !dbg !5087
  %add.ptr26 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !5087
  %37 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 3), align 4, !dbg !5087
  %conv27 = sext i32 %37 to i64, !dbg !5087
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 1 %add.ptr26, i64 %conv27, i1 false), !dbg !5087
  br label %if.end28, !dbg !5087

if.end28:                                         ; preds = %if.then22, %if.end19
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then9
  br label %if.end30, !dbg !5089

if.end30:                                         ; preds = %if.end29, %if.then4
  br label %if.end31, !dbg !5090

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %if.end
  ret void, !dbg !5091
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_rigidbody_interpolate(i32 %index, i8* %rb_v, i8** %data, float %cfra, float %cfra1, float %cfra2, float* %old_data) #0 !dbg !5092 {
entry:
  %index.addr = alloca i32, align 4
  %rb_v.addr = alloca i8*, align 8
  %data.addr = alloca i8**, align 8
  %cfra.addr = alloca float, align 4
  %cfra1.addr = alloca float, align 4
  %cfra2.addr = alloca float, align 4
  %old_data.addr = alloca float*, align 8
  %rbw = alloca %struct.RigidBodyWorld*, align 8
  %ob = alloca %struct.Object*, align 8
  %keys = alloca [4 x %struct.ParticleKey], align 16
  %dfra = alloca float, align 4
  %rbo = alloca %struct.RigidBodyOb*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5093, metadata !DIExpression()), !dbg !5094
  store i8* %rb_v, i8** %rb_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rb_v.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !5097, metadata !DIExpression()), !dbg !5098
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !5099, metadata !DIExpression()), !dbg !5100
  store float %cfra1, float* %cfra1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra1.addr, metadata !5101, metadata !DIExpression()), !dbg !5102
  store float %cfra2, float* %cfra2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra2.addr, metadata !5103, metadata !DIExpression()), !dbg !5104
  store float* %old_data, float** %old_data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_data.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw, metadata !5107, metadata !DIExpression()), !dbg !5108
  %0 = load i8*, i8** %rb_v.addr, align 8, !dbg !5109
  %1 = bitcast i8* %0 to %struct.RigidBodyWorld*, !dbg !5109
  store %struct.RigidBodyWorld* %1, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5108
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5110, metadata !DIExpression()), !dbg !5111
  store %struct.Object* null, %struct.Object** %ob, align 8, !dbg !5111
  call void @llvm.dbg.declare(metadata [4 x %struct.ParticleKey]* %keys, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata float* %dfra, metadata !5114, metadata !DIExpression()), !dbg !5115
  %2 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5116
  %objects = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %2, i32 0, i32 2, !dbg !5118
  %3 = load %struct.Object**, %struct.Object*** %objects, align 8, !dbg !5118
  %tobool = icmp ne %struct.Object** %3, null, !dbg !5116
  br i1 %tobool, label %if.then, label %if.end, !dbg !5119

if.then:                                          ; preds = %entry
  %4 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw, align 8, !dbg !5120
  %objects1 = getelementptr inbounds %struct.RigidBodyWorld, %struct.RigidBodyWorld* %4, i32 0, i32 2, !dbg !5121
  %5 = load %struct.Object**, %struct.Object*** %objects1, align 8, !dbg !5121
  %6 = load i32, i32* %index.addr, align 4, !dbg !5122
  %idxprom = sext i32 %6 to i64, !dbg !5120
  %arrayidx = getelementptr inbounds %struct.Object*, %struct.Object** %5, i64 %idxprom, !dbg !5120
  %7 = load %struct.Object*, %struct.Object** %arrayidx, align 8, !dbg !5120
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !5123
  br label %if.end, !dbg !5124

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5125
  %tobool2 = icmp ne %struct.Object* %8, null, !dbg !5125
  br i1 %tobool2, label %land.lhs.true, label %if.end49, !dbg !5127

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5128
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 128, !dbg !5129
  %10 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !5129
  %tobool3 = icmp ne %struct.RigidBodyOb* %10, null, !dbg !5128
  br i1 %tobool3, label %if.then4, label %if.end49, !dbg !5130

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.RigidBodyOb** %rbo, metadata !5131, metadata !DIExpression()), !dbg !5133
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5134
  %rigidbody_object5 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 128, !dbg !5135
  %12 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object5, align 8, !dbg !5135
  store %struct.RigidBodyOb* %12, %struct.RigidBodyOb** %rbo, align 8, !dbg !5133
  %13 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5136
  %type = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %13, i32 0, i32 2, !dbg !5138
  %14 = load i16, i16* %type, align 8, !dbg !5138
  %conv = sext i16 %14 to i32, !dbg !5136
  %cmp = icmp eq i32 %conv, 0, !dbg !5139
  br i1 %cmp, label %if.then7, label %if.end48, !dbg !5140

if.then7:                                         ; preds = %if.then4
  %arrayidx8 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !5141
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx8, i32 0, i32 0, !dbg !5143
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5141
  %15 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5144
  %pos = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %15, i32 0, i32 17, !dbg !5145
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !5144
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay9), !dbg !5146
  %arrayidx10 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !5147
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx10, i32 0, i32 2, !dbg !5148
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !5147
  %16 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5149
  %orn = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %16, i32 0, i32 16, !dbg !5150
  %arraydecay12 = getelementptr inbounds [4 x float], [4 x float]* %orn, i64 0, i64 0, !dbg !5149
  call void @copy_qt_qt(float* %arraydecay11, float* %arraydecay12), !dbg !5151
  %17 = load float*, float** %old_data.addr, align 8, !dbg !5152
  %tobool13 = icmp ne float* %17, null, !dbg !5152
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !5154

if.then14:                                        ; preds = %if.then7
  %arrayidx15 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !5155
  %co16 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx15, i32 0, i32 0, !dbg !5157
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co16, i64 0, i64 0, !dbg !5158
  %18 = bitcast float* %arraydecay17 to i8*, !dbg !5158
  %19 = load i8**, i8*** %data.addr, align 8, !dbg !5159
  %20 = bitcast i8** %19 to i8*, !dbg !5158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %18, i8* align 8 %20, i64 12, i1 false), !dbg !5158
  %arrayidx18 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !5160
  %rot19 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx18, i32 0, i32 2, !dbg !5161
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %rot19, i64 0, i64 0, !dbg !5162
  %21 = bitcast float* %arraydecay20 to i8*, !dbg !5162
  %22 = load i8**, i8*** %data.addr, align 8, !dbg !5163
  %add.ptr = getelementptr inbounds i8*, i8** %22, i64 3, !dbg !5164
  %23 = bitcast i8** %add.ptr to i8*, !dbg !5162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %23, i64 16, i1 false), !dbg !5162
  br label %if.end23, !dbg !5165

if.else:                                          ; preds = %if.then7
  %arraydecay21 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5166
  %add.ptr22 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay21, i64 2, !dbg !5168
  %24 = load i8**, i8*** %data.addr, align 8, !dbg !5169
  %25 = load float, float* %cfra2.addr, align 4, !dbg !5170
  call void @BKE_ptcache_make_particle_key(%struct.ParticleKey* %add.ptr22, i32 0, i8** %24, float %25), !dbg !5171
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then14
  %26 = load float, float* %cfra2.addr, align 4, !dbg !5172
  %27 = load float, float* %cfra1.addr, align 4, !dbg !5173
  %sub = fsub float %26, %27, !dbg !5174
  store float %sub, float* %dfra, align 4, !dbg !5175
  %arraydecay24 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5176
  %28 = load float, float* %cfra.addr, align 4, !dbg !5177
  %29 = load float, float* %cfra1.addr, align 4, !dbg !5178
  %sub25 = fsub float %28, %29, !dbg !5179
  %30 = load float, float* %dfra, align 4, !dbg !5180
  %div = fdiv float %sub25, %30, !dbg !5181
  %arraydecay26 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5182
  call void @psys_interpolate_particle(i16 signext -1, %struct.ParticleKey* %arraydecay24, float %div, %struct.ParticleKey* %arraydecay26, i32 1), !dbg !5183
  %arraydecay27 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5184
  %rot28 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay27, i32 0, i32 2, !dbg !5184
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %rot28, i64 0, i64 0, !dbg !5185
  %arrayidx30 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 1, !dbg !5186
  %rot31 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx30, i32 0, i32 2, !dbg !5187
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %rot31, i64 0, i64 0, !dbg !5186
  %arrayidx33 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 2, !dbg !5188
  %rot34 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx33, i32 0, i32 2, !dbg !5189
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %rot34, i64 0, i64 0, !dbg !5188
  %31 = load float, float* %cfra.addr, align 4, !dbg !5190
  %32 = load float, float* %cfra1.addr, align 4, !dbg !5191
  %sub36 = fsub float %31, %32, !dbg !5192
  %33 = load float, float* %dfra, align 4, !dbg !5193
  %div37 = fdiv float %sub36, %33, !dbg !5194
  call void @interp_qt_qtqt(float* %arraydecay29, float* %arraydecay32, float* %arraydecay35, float %div37), !dbg !5195
  %34 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5196
  %pos38 = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %34, i32 0, i32 17, !dbg !5197
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %pos38, i64 0, i64 0, !dbg !5196
  %arraydecay40 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5198
  %co41 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay40, i32 0, i32 0, !dbg !5198
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !5199
  call void @copy_v3_v3(float* %arraydecay39, float* %arraydecay42), !dbg !5200
  %35 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rbo, align 8, !dbg !5201
  %orn43 = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %35, i32 0, i32 16, !dbg !5202
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %orn43, i64 0, i64 0, !dbg !5201
  %arraydecay45 = getelementptr inbounds [4 x %struct.ParticleKey], [4 x %struct.ParticleKey]* %keys, i64 0, i64 0, !dbg !5203
  %rot46 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay45, i32 0, i32 2, !dbg !5203
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %rot46, i64 0, i64 0, !dbg !5204
  call void @copy_qt_qt(float* %arraydecay44, float* %arraydecay47), !dbg !5205
  br label %if.end48, !dbg !5206

if.end48:                                         ; preds = %if.end23, %if.then4
  br label %if.end49, !dbg !5207

if.end49:                                         ; preds = %if.end48, %land.lhs.true, %if.end
  ret void, !dbg !5208
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_ids_from_object(%struct.ListBase* %lb, %struct.Object* %ob, %struct.Scene* %scene, i32 %duplis) #0 !dbg !5209 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %duplis.addr = alloca i32, align 4
  %pid = alloca %struct.PTCacheID*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %smd = alloca %struct.SmokeModifierData*, align 8
  %pmd = alloca %struct.DynamicPaintModifierData*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %lb_dupli_ob = alloca %struct.ListBase*, align 8
  %dob = alloca %struct.DupliObject*, align 8
  %lb_dupli_pid = alloca %struct.ListBase, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5212, metadata !DIExpression()), !dbg !5213
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5214, metadata !DIExpression()), !dbg !5215
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i32 %duplis, i32* %duplis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duplis.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid, metadata !5220, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5222, metadata !DIExpression()), !dbg !5223
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5224, metadata !DIExpression()), !dbg !5226
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5227
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !5228
  store i8* null, i8** %last, align 8, !dbg !5229
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5230
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5231
  store i8* null, i8** %first, align 8, !dbg !5232
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5233
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 111, !dbg !5235
  %3 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5235
  %tobool = icmp ne %struct.SoftBody* %3, null, !dbg !5233
  br i1 %tobool, label %if.then, label %if.end, !dbg !5236

if.then:                                          ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5237
  %call = call i8* %4(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5237
  %5 = bitcast i8* %call to %struct.PTCacheID*, !dbg !5237
  store %struct.PTCacheID* %5, %struct.PTCacheID** %pid, align 8, !dbg !5239
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5240
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5241
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5242
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 111, !dbg !5243
  %9 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !5243
  call void @BKE_ptcache_id_from_softbody(%struct.PTCacheID* %6, %struct.Object* %7, %struct.SoftBody* %9), !dbg !5244
  %10 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5245
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5246
  %12 = bitcast %struct.PTCacheID* %11 to i8*, !dbg !5246
  call void @BLI_addtail(%struct.ListBase* %10, i8* %12), !dbg !5247
  br label %if.end, !dbg !5248

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5249
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 109, !dbg !5251
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !5252
  %14 = load i8*, i8** %first2, align 8, !dbg !5252
  %15 = bitcast i8* %14 to %struct.ParticleSystem*, !dbg !5249
  store %struct.ParticleSystem* %15, %struct.ParticleSystem** %psys, align 8, !dbg !5253
  br label %for.cond, !dbg !5254

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5255
  %tobool3 = icmp ne %struct.ParticleSystem* %16, null, !dbg !5257
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5257

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5258
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 2, !dbg !5261
  %18 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5261
  %cmp = icmp eq %struct.ParticleSettings* %18, null, !dbg !5262
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5263

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !5264

if.end5:                                          ; preds = %for.body
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5265
  %part6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 2, !dbg !5265
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part6, align 8, !dbg !5265
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 11, !dbg !5265
  %21 = load i16, i16* %phystype, align 8, !dbg !5265
  %conv = sext i16 %21 to i32, !dbg !5265
  %cmp7 = icmp eq i32 %conv, 0, !dbg !5265
  br i1 %cmp7, label %if.then14, label %lor.lhs.false, !dbg !5265

lor.lhs.false:                                    ; preds = %if.end5
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5265
  %part9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 2, !dbg !5265
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part9, align 8, !dbg !5265
  %phystype10 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 11, !dbg !5265
  %24 = load i16, i16* %phystype10, align 8, !dbg !5265
  %conv11 = sext i16 %24 to i32, !dbg !5265
  %cmp12 = icmp eq i32 %conv11, 2, !dbg !5265
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5267

if.then14:                                        ; preds = %lor.lhs.false, %if.end5
  br label %for.inc, !dbg !5268

if.end15:                                         ; preds = %lor.lhs.false
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5269
  %part16 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %25, i32 0, i32 2, !dbg !5271
  %26 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part16, align 8, !dbg !5271
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %26, i32 0, i32 7, !dbg !5272
  %27 = load i16, i16* %type, align 8, !dbg !5272
  %conv17 = sext i16 %27 to i32, !dbg !5269
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !5273
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !5274

if.then20:                                        ; preds = %if.end15
  br label %for.inc, !dbg !5275

if.end21:                                         ; preds = %if.end15
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5276
  %call22 = call i8* %28(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5276
  %29 = bitcast i8* %call22 to %struct.PTCacheID*, !dbg !5276
  store %struct.PTCacheID* %29, %struct.PTCacheID** %pid, align 8, !dbg !5277
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5278
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5279
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5280
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %30, %struct.Object* %31, %struct.ParticleSystem* %32), !dbg !5281
  %33 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5282
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5283
  %35 = bitcast %struct.PTCacheID* %34 to i8*, !dbg !5283
  call void @BLI_addtail(%struct.ListBase* %33, i8* %35), !dbg !5284
  br label %for.inc, !dbg !5285

for.inc:                                          ; preds = %if.end21, %if.then20, %if.then14, %if.then4
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5286
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 0, !dbg !5287
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !5287
  store %struct.ParticleSystem* %37, %struct.ParticleSystem** %psys, align 8, !dbg !5288
  br label %for.cond, !dbg !5289, !llvm.loop !5290

for.end:                                          ; preds = %for.cond
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5292
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 26, !dbg !5294
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !5295
  %39 = load i8*, i8** %first23, align 8, !dbg !5295
  %40 = bitcast i8* %39 to %struct.ModifierData*, !dbg !5292
  store %struct.ModifierData* %40, %struct.ModifierData** %md, align 8, !dbg !5296
  br label %for.cond24, !dbg !5297

for.cond24:                                       ; preds = %for.inc61, %for.end
  %41 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5298
  %tobool25 = icmp ne %struct.ModifierData* %41, null, !dbg !5300
  br i1 %tobool25, label %for.body26, label %for.end63, !dbg !5300

for.body26:                                       ; preds = %for.cond24
  %42 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5301
  %type27 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %42, i32 0, i32 2, !dbg !5304
  %43 = load i32, i32* %type27, align 8, !dbg !5304
  %cmp28 = icmp eq i32 %43, 22, !dbg !5305
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !5306

if.then30:                                        ; preds = %for.body26
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5307
  %call31 = call i8* %44(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5307
  %45 = bitcast i8* %call31 to %struct.PTCacheID*, !dbg !5307
  store %struct.PTCacheID* %45, %struct.PTCacheID** %pid, align 8, !dbg !5309
  %46 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5310
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5311
  %48 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5312
  %49 = bitcast %struct.ModifierData* %48 to %struct.ClothModifierData*, !dbg !5313
  call void @BKE_ptcache_id_from_cloth(%struct.PTCacheID* %46, %struct.Object* %47, %struct.ClothModifierData* %49), !dbg !5314
  %50 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5315
  %51 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5316
  %52 = bitcast %struct.PTCacheID* %51 to i8*, !dbg !5316
  call void @BLI_addtail(%struct.ListBase* %50, i8* %52), !dbg !5317
  br label %if.end60, !dbg !5318

if.else:                                          ; preds = %for.body26
  %53 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5319
  %type32 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %53, i32 0, i32 2, !dbg !5321
  %54 = load i32, i32* %type32, align 8, !dbg !5321
  %cmp33 = icmp eq i32 %54, 31, !dbg !5322
  br i1 %cmp33, label %if.then35, label %if.else41, !dbg !5323

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.SmokeModifierData** %smd, metadata !5324, metadata !DIExpression()), !dbg !5326
  %55 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5327
  %56 = bitcast %struct.ModifierData* %55 to %struct.SmokeModifierData*, !dbg !5328
  store %struct.SmokeModifierData* %56, %struct.SmokeModifierData** %smd, align 8, !dbg !5326
  %57 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !5329
  %type36 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %57, i32 0, i32 5, !dbg !5331
  %58 = load i32, i32* %type36, align 4, !dbg !5331
  %and = and i32 %58, 1, !dbg !5332
  %tobool37 = icmp ne i32 %and, 0, !dbg !5332
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !5333

if.then38:                                        ; preds = %if.then35
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5334
  %call39 = call i8* %59(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5334
  %60 = bitcast i8* %call39 to %struct.PTCacheID*, !dbg !5334
  store %struct.PTCacheID* %60, %struct.PTCacheID** %pid, align 8, !dbg !5336
  %61 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5337
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5338
  %63 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5339
  %64 = bitcast %struct.ModifierData* %63 to %struct.SmokeModifierData*, !dbg !5340
  call void @BKE_ptcache_id_from_smoke(%struct.PTCacheID* %61, %struct.Object* %62, %struct.SmokeModifierData* %64), !dbg !5341
  %65 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5342
  %66 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5343
  %67 = bitcast %struct.PTCacheID* %66 to i8*, !dbg !5343
  call void @BLI_addtail(%struct.ListBase* %65, i8* %67), !dbg !5344
  br label %if.end40, !dbg !5345

if.end40:                                         ; preds = %if.then38, %if.then35
  br label %if.end59, !dbg !5346

if.else41:                                        ; preds = %if.else
  %68 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5347
  %type42 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %68, i32 0, i32 2, !dbg !5349
  %69 = load i32, i32* %type42, align 8, !dbg !5349
  %cmp43 = icmp eq i32 %69, 40, !dbg !5350
  br i1 %cmp43, label %if.then45, label %if.end58, !dbg !5351

if.then45:                                        ; preds = %if.else41
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd, metadata !5352, metadata !DIExpression()), !dbg !5354
  %70 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5355
  %71 = bitcast %struct.ModifierData* %70 to %struct.DynamicPaintModifierData*, !dbg !5356
  store %struct.DynamicPaintModifierData* %71, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5354
  %72 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5357
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %72, i32 0, i32 1, !dbg !5359
  %73 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !5359
  %tobool46 = icmp ne %struct.DynamicPaintCanvasSettings* %73, null, !dbg !5357
  br i1 %tobool46, label %if.then47, label %if.end57, !dbg !5360

if.then47:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !5361, metadata !DIExpression()), !dbg !5363
  %74 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5364
  %canvas48 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %74, i32 0, i32 1, !dbg !5365
  %75 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas48, align 8, !dbg !5365
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %75, i32 0, i32 2, !dbg !5366
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !5367
  %76 = load i8*, i8** %first49, align 8, !dbg !5367
  %77 = bitcast i8* %76 to %struct.DynamicPaintSurface*, !dbg !5364
  store %struct.DynamicPaintSurface* %77, %struct.DynamicPaintSurface** %surface, align 8, !dbg !5363
  br label %for.cond50, !dbg !5368

for.cond50:                                       ; preds = %for.inc54, %if.then47
  %78 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !5369
  %tobool51 = icmp ne %struct.DynamicPaintSurface* %78, null, !dbg !5372
  br i1 %tobool51, label %for.body52, label %for.end56, !dbg !5372

for.body52:                                       ; preds = %for.cond50
  %79 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5373
  %call53 = call i8* %79(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5373
  %80 = bitcast i8* %call53 to %struct.PTCacheID*, !dbg !5373
  store %struct.PTCacheID* %80, %struct.PTCacheID** %pid, align 8, !dbg !5375
  %81 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5376
  %82 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5377
  %83 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !5378
  call void @BKE_ptcache_id_from_dynamicpaint(%struct.PTCacheID* %81, %struct.Object* %82, %struct.DynamicPaintSurface* %83), !dbg !5379
  %84 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5380
  %85 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5381
  %86 = bitcast %struct.PTCacheID* %85 to i8*, !dbg !5381
  call void @BLI_addtail(%struct.ListBase* %84, i8* %86), !dbg !5382
  br label %for.inc54, !dbg !5383

for.inc54:                                        ; preds = %for.body52
  %87 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !5384
  %next55 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %87, i32 0, i32 0, !dbg !5385
  %88 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next55, align 8, !dbg !5385
  store %struct.DynamicPaintSurface* %88, %struct.DynamicPaintSurface** %surface, align 8, !dbg !5386
  br label %for.cond50, !dbg !5387, !llvm.loop !5388

for.end56:                                        ; preds = %for.cond50
  br label %if.end57, !dbg !5390

if.end57:                                         ; preds = %for.end56, %if.then45
  br label %if.end58, !dbg !5391

if.end58:                                         ; preds = %if.end57, %if.else41
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then30
  br label %for.inc61, !dbg !5392

for.inc61:                                        ; preds = %if.end60
  %89 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5393
  %next62 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %89, i32 0, i32 0, !dbg !5394
  %90 = load %struct.ModifierData*, %struct.ModifierData** %next62, align 8, !dbg !5394
  store %struct.ModifierData* %90, %struct.ModifierData** %md, align 8, !dbg !5395
  br label %for.cond24, !dbg !5396, !llvm.loop !5397

for.end63:                                        ; preds = %for.cond24
  %91 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5399
  %tobool64 = icmp ne %struct.Scene* %91, null, !dbg !5399
  br i1 %tobool64, label %land.lhs.true, label %if.end71, !dbg !5401

land.lhs.true:                                    ; preds = %for.end63
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5402
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 128, !dbg !5403
  %93 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !5403
  %tobool65 = icmp ne %struct.RigidBodyOb* %93, null, !dbg !5402
  br i1 %tobool65, label %land.lhs.true66, label %if.end71, !dbg !5404

land.lhs.true66:                                  ; preds = %land.lhs.true
  %94 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5405
  %rigidbody_world = getelementptr inbounds %struct.Scene, %struct.Scene* %94, i32 0, i32 47, !dbg !5406
  %95 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world, align 8, !dbg !5406
  %tobool67 = icmp ne %struct.RigidBodyWorld* %95, null, !dbg !5405
  br i1 %tobool67, label %if.then68, label %if.end71, !dbg !5407

if.then68:                                        ; preds = %land.lhs.true66
  %96 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5408
  %call69 = call i8* %96(i64 200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !5408
  %97 = bitcast i8* %call69 to %struct.PTCacheID*, !dbg !5408
  store %struct.PTCacheID* %97, %struct.PTCacheID** %pid, align 8, !dbg !5410
  %98 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5411
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5412
  %100 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5413
  %rigidbody_world70 = getelementptr inbounds %struct.Scene, %struct.Scene* %100, i32 0, i32 47, !dbg !5414
  %101 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world70, align 8, !dbg !5414
  call void @BKE_ptcache_id_from_rigidbody(%struct.PTCacheID* %98, %struct.Object* %99, %struct.RigidBodyWorld* %101), !dbg !5415
  %102 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5416
  %103 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !5417
  %104 = bitcast %struct.PTCacheID* %103 to i8*, !dbg !5417
  call void @BLI_addtail(%struct.ListBase* %102, i8* %104), !dbg !5418
  br label %if.end71, !dbg !5419

if.end71:                                         ; preds = %if.then68, %land.lhs.true66, %land.lhs.true, %for.end63
  %105 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5420
  %tobool72 = icmp ne %struct.Scene* %105, null, !dbg !5420
  br i1 %tobool72, label %land.lhs.true73, label %if.end103, !dbg !5422

land.lhs.true73:                                  ; preds = %if.end71
  %106 = load i32, i32* %duplis.addr, align 4, !dbg !5423
  %dec = add nsw i32 %106, -1, !dbg !5423
  store i32 %dec, i32* %duplis.addr, align 4, !dbg !5423
  %cmp74 = icmp sgt i32 %106, 0, !dbg !5424
  br i1 %cmp74, label %land.lhs.true76, label %if.end103, !dbg !5425

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5426
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %107, i32 0, i32 55, !dbg !5427
  %108 = load i16, i16* %transflag, align 8, !dbg !5427
  %conv77 = sext i16 %108 to i32, !dbg !5426
  %and78 = and i32 %conv77, 2840, !dbg !5428
  %tobool79 = icmp ne i32 %and78, 0, !dbg !5428
  br i1 %tobool79, label %if.then80, label %if.end103, !dbg !5429

if.then80:                                        ; preds = %land.lhs.true76
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb_dupli_ob, metadata !5430, metadata !DIExpression()), !dbg !5432
  %109 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5433
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %109, i32 0, i32 46, !dbg !5435
  %110 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !5435
  %111 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5436
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5437
  %call81 = call %struct.ListBase* @object_duplilist_ex(%struct.EvaluationContext* %110, %struct.Scene* %111, %struct.Object* %112, i8 zeroext 0), !dbg !5438
  store %struct.ListBase* %call81, %struct.ListBase** %lb_dupli_ob, align 8, !dbg !5439
  %tobool82 = icmp ne %struct.ListBase* %call81, null, !dbg !5439
  br i1 %tobool82, label %if.then83, label %if.end102, !dbg !5440

if.then83:                                        ; preds = %if.then80
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob, metadata !5441, metadata !DIExpression()), !dbg !5459
  %113 = load %struct.ListBase*, %struct.ListBase** %lb_dupli_ob, align 8, !dbg !5460
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %113, i32 0, i32 0, !dbg !5462
  %114 = load i8*, i8** %first84, align 8, !dbg !5462
  %115 = bitcast i8* %114 to %struct.DupliObject*, !dbg !5460
  store %struct.DupliObject* %115, %struct.DupliObject** %dob, align 8, !dbg !5463
  br label %for.cond85, !dbg !5464

for.cond85:                                       ; preds = %for.inc99, %if.then83
  %116 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5465
  %tobool86 = icmp ne %struct.DupliObject* %116, null, !dbg !5467
  br i1 %tobool86, label %for.body87, label %for.end101, !dbg !5467

for.body87:                                       ; preds = %for.cond85
  %117 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5468
  %ob88 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %117, i32 0, i32 2, !dbg !5471
  %118 = load %struct.Object*, %struct.Object** %ob88, align 8, !dbg !5471
  %119 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5472
  %cmp89 = icmp ne %struct.Object* %118, %119, !dbg !5473
  br i1 %cmp89, label %if.then91, label %if.end98, !dbg !5474

if.then91:                                        ; preds = %for.body87
  call void @llvm.dbg.declare(metadata %struct.ListBase* %lb_dupli_pid, metadata !5475, metadata !DIExpression()), !dbg !5477
  %120 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5478
  %ob92 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %120, i32 0, i32 2, !dbg !5479
  %121 = load %struct.Object*, %struct.Object** %ob92, align 8, !dbg !5479
  %122 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5480
  %123 = load i32, i32* %duplis.addr, align 4, !dbg !5481
  call void @BKE_ptcache_ids_from_object(%struct.ListBase* %lb_dupli_pid, %struct.Object* %121, %struct.Scene* %122, i32 %123), !dbg !5482
  %124 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5483
  call void @BLI_movelisttolist(%struct.ListBase* %124, %struct.ListBase* %lb_dupli_pid), !dbg !5484
  %first93 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lb_dupli_pid, i32 0, i32 0, !dbg !5485
  %125 = load i8*, i8** %first93, align 8, !dbg !5485
  %tobool94 = icmp ne i8* %125, null, !dbg !5487
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !5488

if.then95:                                        ; preds = %if.then91
  %call96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)), !dbg !5489
  br label %if.end97, !dbg !5489

if.end97:                                         ; preds = %if.then95, %if.then91
  br label %if.end98, !dbg !5490

if.end98:                                         ; preds = %if.end97, %for.body87
  br label %for.inc99, !dbg !5491

for.inc99:                                        ; preds = %if.end98
  %126 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5492
  %next100 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %126, i32 0, i32 0, !dbg !5493
  %127 = load %struct.DupliObject*, %struct.DupliObject** %next100, align 8, !dbg !5493
  store %struct.DupliObject* %127, %struct.DupliObject** %dob, align 8, !dbg !5494
  br label %for.cond85, !dbg !5495, !llvm.loop !5496

for.end101:                                       ; preds = %for.cond85
  %128 = load %struct.ListBase*, %struct.ListBase** %lb_dupli_ob, align 8, !dbg !5498
  call void @free_object_duplilist(%struct.ListBase* %128), !dbg !5499
  br label %if.end102, !dbg !5500

if.end102:                                        ; preds = %for.end101, %if.then80
  br label %if.end103, !dbg !5501

if.end103:                                        ; preds = %if.end102, %land.lhs.true76, %land.lhs.true73, %if.end71
  ret void, !dbg !5502
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

declare dso_local %struct.ListBase* @object_duplilist_ex(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*, i8 zeroext) #3

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local void @free_object_duplilist(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_data_size(i32 %data_type) #0 !dbg !5503 {
entry:
  %data_type.addr = alloca i32, align 4
  store i32 %data_type, i32* %data_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_type.addr, metadata !5506, metadata !DIExpression()), !dbg !5507
  %0 = load i32, i32* %data_type.addr, align 4, !dbg !5508
  %idxprom = sext i32 %0 to i64, !dbg !5509
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom, !dbg !5509
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5509
  ret i32 %1, !dbg !5510
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_mem_index_find(%struct.PTCacheMem* %pm, i32 %index) #0 !dbg !5511 {
entry:
  %retval = alloca i32, align 4
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %index.addr = alloca i32, align 4
  %data1 = alloca i32*, align 8
  %mid = alloca i32, align 4
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5518
  %totpoint = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 3, !dbg !5520
  %1 = load i32, i32* %totpoint, align 4, !dbg !5520
  %cmp = icmp ugt i32 %1, 0, !dbg !5521
  br i1 %cmp, label %land.lhs.true, label %if.else31, !dbg !5522

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5523
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %2, i32 0, i32 6, !dbg !5524
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5523
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !5523
  %tobool = icmp ne i8* %3, null, !dbg !5523
  br i1 %tobool, label %if.then, label %if.else31, !dbg !5525

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32** %data1, metadata !5526, metadata !DIExpression()), !dbg !5528
  %4 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5529
  %data2 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %4, i32 0, i32 6, !dbg !5530
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data2, i64 0, i64 0, !dbg !5529
  %5 = load i8*, i8** %arrayidx3, align 8, !dbg !5529
  %6 = bitcast i8* %5 to i32*, !dbg !5529
  store i32* %6, i32** %data1, align 8, !dbg !5528
  call void @llvm.dbg.declare(metadata i32* %mid, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %low, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i32 0, i32* %low, align 4, !dbg !5534
  call void @llvm.dbg.declare(metadata i32* %high, metadata !5535, metadata !DIExpression()), !dbg !5536
  %7 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5537
  %totpoint4 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %7, i32 0, i32 3, !dbg !5538
  %8 = load i32, i32* %totpoint4, align 4, !dbg !5538
  %sub = sub i32 %8, 1, !dbg !5539
  store i32 %sub, i32* %high, align 4, !dbg !5536
  %9 = load i32, i32* %index.addr, align 4, !dbg !5540
  %10 = load i32*, i32** %data1, align 8, !dbg !5542
  %11 = load i32, i32* %10, align 4, !dbg !5543
  %cmp5 = icmp ult i32 %9, %11, !dbg !5544
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !5545

lor.lhs.false:                                    ; preds = %if.then
  %12 = load i32, i32* %index.addr, align 4, !dbg !5546
  %13 = load i32*, i32** %data1, align 8, !dbg !5547
  %14 = load i32, i32* %high, align 4, !dbg !5548
  %idx.ext = zext i32 %14 to i64, !dbg !5549
  %add.ptr = getelementptr inbounds i32, i32* %13, i64 %idx.ext, !dbg !5549
  %15 = load i32, i32* %add.ptr, align 4, !dbg !5550
  %cmp6 = icmp ugt i32 %12, %15, !dbg !5551
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !5552

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !5553
  br label %return, !dbg !5553

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i32, i32* %index.addr, align 4, !dbg !5554
  %17 = load i32*, i32** %data1, align 8, !dbg !5556
  %18 = load i32, i32* %17, align 4, !dbg !5557
  %sub8 = sub i32 %16, %18, !dbg !5558
  %19 = load i32, i32* %high, align 4, !dbg !5559
  %cmp9 = icmp ult i32 %sub8, %19, !dbg !5560
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !5561

land.lhs.true10:                                  ; preds = %if.end
  %20 = load i32*, i32** %data1, align 8, !dbg !5562
  %21 = load i32, i32* %index.addr, align 4, !dbg !5563
  %22 = load i32*, i32** %data1, align 8, !dbg !5564
  %23 = load i32, i32* %22, align 4, !dbg !5565
  %sub11 = sub i32 %21, %23, !dbg !5566
  %idxprom = zext i32 %sub11 to i64, !dbg !5562
  %arrayidx12 = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !5562
  %24 = load i32, i32* %arrayidx12, align 4, !dbg !5562
  %25 = load i32, i32* %index.addr, align 4, !dbg !5567
  %cmp13 = icmp eq i32 %24, %25, !dbg !5568
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !5569

if.then14:                                        ; preds = %land.lhs.true10
  %26 = load i32, i32* %index.addr, align 4, !dbg !5570
  %27 = load i32*, i32** %data1, align 8, !dbg !5571
  %28 = load i32, i32* %27, align 4, !dbg !5572
  %sub15 = sub i32 %26, %28, !dbg !5573
  store i32 %sub15, i32* %retval, align 4, !dbg !5574
  br label %return, !dbg !5574

if.end16:                                         ; preds = %land.lhs.true10, %if.end
  br label %while.cond, !dbg !5575

while.cond:                                       ; preds = %if.end30, %if.end16
  %29 = load i32, i32* %low, align 4, !dbg !5576
  %30 = load i32, i32* %high, align 4, !dbg !5577
  %cmp17 = icmp ule i32 %29, %30, !dbg !5578
  br i1 %cmp17, label %while.body, label %while.end, !dbg !5575

while.body:                                       ; preds = %while.cond
  %31 = load i32, i32* %low, align 4, !dbg !5579
  %32 = load i32, i32* %high, align 4, !dbg !5581
  %add = add i32 %31, %32, !dbg !5582
  %div = udiv i32 %add, 2, !dbg !5583
  store i32 %div, i32* %mid, align 4, !dbg !5584
  %33 = load i32*, i32** %data1, align 8, !dbg !5585
  %34 = load i32, i32* %mid, align 4, !dbg !5587
  %idxprom18 = zext i32 %34 to i64, !dbg !5585
  %arrayidx19 = getelementptr inbounds i32, i32* %33, i64 %idxprom18, !dbg !5585
  %35 = load i32, i32* %arrayidx19, align 4, !dbg !5585
  %36 = load i32, i32* %index.addr, align 4, !dbg !5588
  %cmp20 = icmp ugt i32 %35, %36, !dbg !5589
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !5590

if.then21:                                        ; preds = %while.body
  %37 = load i32, i32* %mid, align 4, !dbg !5591
  %sub22 = sub i32 %37, 1, !dbg !5592
  store i32 %sub22, i32* %high, align 4, !dbg !5593
  br label %if.end30, !dbg !5594

if.else:                                          ; preds = %while.body
  %38 = load i32*, i32** %data1, align 8, !dbg !5595
  %39 = load i32, i32* %mid, align 4, !dbg !5597
  %idxprom23 = zext i32 %39 to i64, !dbg !5595
  %arrayidx24 = getelementptr inbounds i32, i32* %38, i64 %idxprom23, !dbg !5595
  %40 = load i32, i32* %arrayidx24, align 4, !dbg !5595
  %41 = load i32, i32* %index.addr, align 4, !dbg !5598
  %cmp25 = icmp ult i32 %40, %41, !dbg !5599
  br i1 %cmp25, label %if.then26, label %if.else28, !dbg !5600

if.then26:                                        ; preds = %if.else
  %42 = load i32, i32* %mid, align 4, !dbg !5601
  %add27 = add i32 %42, 1, !dbg !5602
  store i32 %add27, i32* %low, align 4, !dbg !5603
  br label %if.end29, !dbg !5604

if.else28:                                        ; preds = %if.else
  %43 = load i32, i32* %mid, align 4, !dbg !5605
  store i32 %43, i32* %retval, align 4, !dbg !5606
  br label %return, !dbg !5606

if.end29:                                         ; preds = %if.then26
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then21
  br label %while.cond, !dbg !5575, !llvm.loop !5607

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !5609
  br label %return, !dbg !5609

if.else31:                                        ; preds = %land.lhs.true, %entry
  %44 = load i32, i32* %index.addr, align 4, !dbg !5610
  %45 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5612
  %totpoint32 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %45, i32 0, i32 3, !dbg !5613
  %46 = load i32, i32* %totpoint32, align 4, !dbg !5613
  %cmp33 = icmp ult i32 %44, %46, !dbg !5614
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !5610

cond.true:                                        ; preds = %if.else31
  %47 = load i32, i32* %index.addr, align 4, !dbg !5615
  br label %cond.end, !dbg !5610

cond.false:                                       ; preds = %if.else31
  br label %cond.end, !dbg !5610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %47, %cond.true ], [ -1, %cond.false ], !dbg !5610
  store i32 %cond, i32* %retval, align 4, !dbg !5616
  br label %return, !dbg !5616

return:                                           ; preds = %cond.end, %while.end, %if.else28, %if.then14, %if.then7
  %48 = load i32, i32* %retval, align 4, !dbg !5617
  ret i32 %48, !dbg !5617
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %pm) #0 !dbg !5618 {
entry:
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %data_types = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata i32* %data_types, metadata !5623, metadata !DIExpression()), !dbg !5624
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5625
  %data_types1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 4, !dbg !5626
  %1 = load i32, i32* %data_types1, align 8, !dbg !5626
  store i32 %1, i32* %data_types, align 4, !dbg !5624
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5627, metadata !DIExpression()), !dbg !5628
  store i32 0, i32* %i, align 4, !dbg !5629
  br label %for.cond, !dbg !5631

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5632
  %cmp = icmp slt i32 %2, 8, !dbg !5634
  br i1 %cmp, label %for.body, label %for.end, !dbg !5635

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %data_types, align 4, !dbg !5636
  %4 = load i32, i32* %i, align 4, !dbg !5637
  %shl = shl i32 1, %4, !dbg !5638
  %and = and i32 %3, %shl, !dbg !5639
  %tobool = icmp ne i32 %and, 0, !dbg !5639
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5640

cond.true:                                        ; preds = %for.body
  %5 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5641
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %5, i32 0, i32 6, !dbg !5642
  %6 = load i32, i32* %i, align 4, !dbg !5643
  %idxprom = sext i32 %6 to i64, !dbg !5641
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !5641
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !5641
  br label %cond.end, !dbg !5640

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !5640
  %8 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5644
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %8, i32 0, i32 7, !dbg !5645
  %9 = load i32, i32* %i, align 4, !dbg !5646
  %idxprom2 = sext i32 %9 to i64, !dbg !5644
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 %idxprom2, !dbg !5644
  store i8* %cond, i8** %arrayidx3, align 8, !dbg !5647
  br label %for.inc, !dbg !5644

for.inc:                                          ; preds = %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !5648
  %inc = add nsw i32 %10, 1, !dbg !5648
  store i32 %inc, i32* %i, align 4, !dbg !5648
  br label %for.cond, !dbg !5649, !llvm.loop !5650

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5652
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %pm) #0 !dbg !5653 {
entry:
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %i = alloca i32, align 4
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5656, metadata !DIExpression()), !dbg !5657
  store i32 0, i32* %i, align 4, !dbg !5658
  br label %for.cond, !dbg !5660

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5661
  %cmp = icmp slt i32 %0, 8, !dbg !5663
  br i1 %cmp, label %for.body, label %for.end, !dbg !5664

for.body:                                         ; preds = %for.cond
  %1 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5665
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %1, i32 0, i32 7, !dbg !5668
  %2 = load i32, i32* %i, align 4, !dbg !5669
  %idxprom = sext i32 %2 to i64, !dbg !5665
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 %idxprom, !dbg !5665
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !5665
  %tobool = icmp ne i8* %3, null, !dbg !5665
  br i1 %tobool, label %if.then, label %if.end, !dbg !5670

if.then:                                          ; preds = %for.body
  %4 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5671
  %cur1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %4, i32 0, i32 7, !dbg !5672
  %5 = load i32, i32* %i, align 4, !dbg !5673
  %idxprom2 = sext i32 %5 to i64, !dbg !5671
  %arrayidx3 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur1, i64 0, i64 %idxprom2, !dbg !5671
  %6 = load i8*, i8** %arrayidx3, align 8, !dbg !5671
  %7 = load i32, i32* %i, align 4, !dbg !5674
  %idxprom4 = sext i32 %7 to i64, !dbg !5675
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom4, !dbg !5675
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !5675
  %idx.ext = sext i32 %8 to i64, !dbg !5676
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !5676
  %9 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5677
  %cur6 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %9, i32 0, i32 7, !dbg !5678
  %10 = load i32, i32* %i, align 4, !dbg !5679
  %idxprom7 = sext i32 %10 to i64, !dbg !5677
  %arrayidx8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur6, i64 0, i64 %idxprom7, !dbg !5677
  store i8* %add.ptr, i8** %arrayidx8, align 8, !dbg !5680
  br label %if.end, !dbg !5677

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5681

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !5682
  %inc = add nsw i32 %11, 1, !dbg !5682
  store i32 %inc, i32* %i, align 4, !dbg !5682
  br label %for.cond, !dbg !5683, !llvm.loop !5684

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5686
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_mem_pointers_seek(i32 %point_index, %struct.PTCacheMem* %pm) #0 !dbg !5687 {
entry:
  %retval = alloca i32, align 4
  %point_index.addr = alloca i32, align 4
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %data_types = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  store i32 %point_index, i32* %point_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %point_index.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata i32* %data_types, metadata !5694, metadata !DIExpression()), !dbg !5695
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5696
  %data_types1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 4, !dbg !5697
  %1 = load i32, i32* %data_types1, align 8, !dbg !5697
  store i32 %1, i32* %data_types, align 4, !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5700, metadata !DIExpression()), !dbg !5701
  %2 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5702
  %3 = load i32, i32* %point_index.addr, align 4, !dbg !5703
  %call = call i32 @BKE_ptcache_mem_index_find(%struct.PTCacheMem* %2, i32 %3), !dbg !5704
  store i32 %call, i32* %index, align 4, !dbg !5701
  %4 = load i32, i32* %index, align 4, !dbg !5705
  %cmp = icmp slt i32 %4, 0, !dbg !5707
  br i1 %cmp, label %if.then, label %if.end, !dbg !5708

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5709
  br label %return, !dbg !5709

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5711
  br label %for.cond, !dbg !5713

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !5714
  %cmp2 = icmp slt i32 %5, 8, !dbg !5716
  br i1 %cmp2, label %for.body, label %for.end, !dbg !5717

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %data_types, align 4, !dbg !5718
  %7 = load i32, i32* %i, align 4, !dbg !5719
  %shl = shl i32 1, %7, !dbg !5720
  %and = and i32 %6, %shl, !dbg !5721
  %tobool = icmp ne i32 %and, 0, !dbg !5721
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5718

cond.true:                                        ; preds = %for.body
  %8 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5722
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %8, i32 0, i32 6, !dbg !5723
  %9 = load i32, i32* %i, align 4, !dbg !5724
  %idxprom = sext i32 %9 to i64, !dbg !5722
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !5722
  %10 = load i8*, i8** %arrayidx, align 8, !dbg !5722
  %11 = load i32, i32* %index, align 4, !dbg !5725
  %12 = load i32, i32* %i, align 4, !dbg !5726
  %idxprom3 = sext i32 %12 to i64, !dbg !5727
  %arrayidx4 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom3, !dbg !5727
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !5727
  %mul = mul nsw i32 %11, %13, !dbg !5728
  %idx.ext = sext i32 %mul to i64, !dbg !5729
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5729
  br label %cond.end, !dbg !5718

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !5718
  %14 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !5730
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %14, i32 0, i32 7, !dbg !5731
  %15 = load i32, i32* %i, align 4, !dbg !5732
  %idxprom5 = sext i32 %15 to i64, !dbg !5730
  %arrayidx6 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 %idxprom5, !dbg !5730
  store i8* %cond, i8** %arrayidx6, align 8, !dbg !5733
  br label %for.inc, !dbg !5730

for.inc:                                          ; preds = %cond.end
  %16 = load i32, i32* %i, align 4, !dbg !5734
  %inc = add nsw i32 %16, 1, !dbg !5734
  store i32 %inc, i32* %i, align 4, !dbg !5734
  br label %for.cond, !dbg !5735, !llvm.loop !5736

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !5738
  br label %return, !dbg !5738

return:                                           ; preds = %for.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5739
  ret i32 %17, !dbg !5739
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_read(%struct.PTCacheID* %pid, float %cfra) #0 !dbg !5740 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca float, align 4
  %cfrai = alloca i32, align 4
  %cfra1 = alloca i32, align 4
  %cfra2 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.declare(metadata i32* %cfrai, metadata !5747, metadata !DIExpression()), !dbg !5748
  %0 = load float, float* %cfra.addr, align 4, !dbg !5749
  %conv = fpext float %0 to double, !dbg !5749
  %1 = call double @llvm.floor.f64(double %conv), !dbg !5750
  %conv1 = fptosi double %1 to i32, !dbg !5751
  store i32 %conv1, i32* %cfrai, align 4, !dbg !5748
  call void @llvm.dbg.declare(metadata i32* %cfra1, metadata !5752, metadata !DIExpression()), !dbg !5753
  store i32 0, i32* %cfra1, align 4, !dbg !5753
  call void @llvm.dbg.declare(metadata i32* %cfra2, metadata !5754, metadata !DIExpression()), !dbg !5755
  store i32 0, i32* %cfra2, align 4, !dbg !5755
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5756, metadata !DIExpression()), !dbg !5757
  store i32 0, i32* %ret, align 4, !dbg !5757
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5758
  %totpoint = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 20, !dbg !5760
  %3 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint, align 8, !dbg !5760
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5761
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 4, !dbg !5762
  %5 = load i8*, i8** %calldata, align 8, !dbg !5762
  %6 = load i32, i32* %cfrai, align 4, !dbg !5763
  %call = call i32 %3(i8* %5, i32 %6), !dbg !5758
  %cmp = icmp eq i32 %call, 0, !dbg !5764
  br i1 %cmp, label %if.then, label %if.end, !dbg !5765

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5766
  br label %return, !dbg !5766

if.end:                                           ; preds = %entry
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5767
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 25, !dbg !5769
  %8 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5769
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 2, !dbg !5770
  %9 = load i32, i32* %flag, align 8, !dbg !5770
  %and = and i32 %9, 1024, !dbg !5771
  %tobool = icmp ne i32 %and, 0, !dbg !5771
  br i1 %tobool, label %if.then3, label %if.end8, !dbg !5772

if.then3:                                         ; preds = %if.end
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5773
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !5775
  %11 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !5775
  %flag5 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 2, !dbg !5776
  %12 = load i32, i32* %flag5, align 8, !dbg !5777
  %and6 = and i32 %12, -1025, !dbg !5777
  store i32 %and6, i32* %flag5, align 8, !dbg !5777
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5778
  %call7 = call i32 @ptcache_read(%struct.PTCacheID* %13, i32 0), !dbg !5779
  br label %if.end8, !dbg !5780

if.end8:                                          ; preds = %if.then3, %if.end
  %14 = load float, float* %cfra.addr, align 4, !dbg !5781
  %15 = load i32, i32* %cfrai, align 4, !dbg !5783
  %conv9 = sitofp i32 %15 to float, !dbg !5784
  %cmp10 = fcmp oeq float %14, %conv9, !dbg !5785
  br i1 %cmp10, label %land.lhs.true, label %if.end15, !dbg !5786

land.lhs.true:                                    ; preds = %if.end8
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5787
  %17 = load i32, i32* %cfrai, align 4, !dbg !5788
  %call12 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %16, i32 %17), !dbg !5789
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5789
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5790

if.then14:                                        ; preds = %land.lhs.true
  %18 = load i32, i32* %cfrai, align 4, !dbg !5791
  store i32 %18, i32* %cfra1, align 4, !dbg !5792
  br label %if.end15, !dbg !5793

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %if.end8
  %19 = load i32, i32* %cfra1, align 4, !dbg !5794
  %cmp16 = icmp eq i32 %19, 0, !dbg !5796
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !5797

if.then18:                                        ; preds = %if.end15
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5798
  %21 = load i32, i32* %cfrai, align 4, !dbg !5799
  call void @ptcache_find_frames_around(%struct.PTCacheID* %20, i32 %21, i32* %cfra1, i32* %cfra2), !dbg !5800
  br label %if.end19, !dbg !5800

if.end19:                                         ; preds = %if.then18, %if.end15
  %22 = load i32, i32* %cfra1, align 4, !dbg !5801
  %cmp20 = icmp eq i32 %22, 0, !dbg !5803
  br i1 %cmp20, label %land.lhs.true22, label %if.end26, !dbg !5804

land.lhs.true22:                                  ; preds = %if.end19
  %23 = load i32, i32* %cfra2, align 4, !dbg !5805
  %cmp23 = icmp eq i32 %23, 0, !dbg !5806
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !5807

if.then25:                                        ; preds = %land.lhs.true22
  store i32 0, i32* %retval, align 4, !dbg !5808
  br label %return, !dbg !5808

if.end26:                                         ; preds = %land.lhs.true22, %if.end19
  %24 = load i32, i32* %cfra1, align 4, !dbg !5809
  %cmp27 = icmp eq i32 %24, 0, !dbg !5811
  br i1 %cmp27, label %land.lhs.true29, label %if.end36, !dbg !5812

land.lhs.true29:                                  ; preds = %if.end26
  %25 = load i32, i32* %cfra2, align 4, !dbg !5813
  %tobool30 = icmp ne i32 %25, 0, !dbg !5813
  br i1 %tobool30, label %land.lhs.true31, label %if.end36, !dbg !5814

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %26 = load i32, i32* %cfra2, align 4, !dbg !5815
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5816
  %cache32 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 25, !dbg !5817
  %28 = load %struct.PointCache*, %struct.PointCache** %cache32, align 8, !dbg !5817
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %28, i32 0, i32 4, !dbg !5818
  %29 = load i32, i32* %simframe, align 8, !dbg !5818
  %cmp33 = icmp sle i32 %26, %29, !dbg !5819
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5820

if.then35:                                        ; preds = %land.lhs.true31
  store i32 0, i32* %retval, align 4, !dbg !5821
  br label %return, !dbg !5821

if.end36:                                         ; preds = %land.lhs.true31, %land.lhs.true29, %if.end26
  %30 = load i32, i32* %cfra1, align 4, !dbg !5822
  %tobool37 = icmp ne i32 %30, 0, !dbg !5822
  br i1 %tobool37, label %land.lhs.true38, label %if.end42, !dbg !5824

land.lhs.true38:                                  ; preds = %if.end36
  %31 = load i32, i32* %cfra1, align 4, !dbg !5825
  %32 = load i32, i32* %cfra2, align 4, !dbg !5826
  %cmp39 = icmp eq i32 %31, %32, !dbg !5827
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5828

if.then41:                                        ; preds = %land.lhs.true38
  store i32 0, i32* %retval, align 4, !dbg !5829
  br label %return, !dbg !5829

if.end42:                                         ; preds = %land.lhs.true38, %if.end36
  %33 = load i32, i32* %cfra1, align 4, !dbg !5830
  %tobool43 = icmp ne i32 %33, 0, !dbg !5830
  br i1 %tobool43, label %if.then44, label %if.end56, !dbg !5832

if.then44:                                        ; preds = %if.end42
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5833
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 16, !dbg !5836
  %35 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !5836
  %tobool45 = icmp ne i32 (%struct.PTCacheFile*, i8*)* %35, null, !dbg !5833
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !5837

if.then46:                                        ; preds = %if.then44
  %36 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5838
  %37 = load i32, i32* %cfra1, align 4, !dbg !5841
  %call47 = call i32 @ptcache_read_stream(%struct.PTCacheID* %36, i32 %37), !dbg !5842
  %tobool48 = icmp ne i32 %call47, 0, !dbg !5842
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !5843

if.then49:                                        ; preds = %if.then46
  store i32 0, i32* %retval, align 4, !dbg !5844
  br label %return, !dbg !5844

if.end50:                                         ; preds = %if.then46
  br label %if.end55, !dbg !5845

if.else:                                          ; preds = %if.then44
  %38 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5846
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %38, i32 0, i32 13, !dbg !5848
  %39 = load void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !5848
  %tobool51 = icmp ne void (i32, i8*, i8**, float, float*)* %39, null, !dbg !5846
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !5849

if.then52:                                        ; preds = %if.else
  %40 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5850
  %41 = load i32, i32* %cfra1, align 4, !dbg !5851
  %call53 = call i32 @ptcache_read(%struct.PTCacheID* %40, i32 %41), !dbg !5852
  br label %if.end54, !dbg !5852

if.end54:                                         ; preds = %if.then52, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end50
  br label %if.end56, !dbg !5853

if.end56:                                         ; preds = %if.end55, %if.end42
  %42 = load i32, i32* %cfra2, align 4, !dbg !5854
  %tobool57 = icmp ne i32 %42, 0, !dbg !5854
  br i1 %tobool57, label %if.then58, label %if.end82, !dbg !5856

if.then58:                                        ; preds = %if.end56
  %43 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5857
  %read_stream59 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %43, i32 0, i32 16, !dbg !5860
  %44 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %read_stream59, align 8, !dbg !5860
  %tobool60 = icmp ne i32 (%struct.PTCacheFile*, i8*)* %44, null, !dbg !5857
  br i1 %tobool60, label %if.then61, label %if.else66, !dbg !5861

if.then61:                                        ; preds = %if.then58
  %45 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5862
  %46 = load i32, i32* %cfra2, align 4, !dbg !5865
  %call62 = call i32 @ptcache_read_stream(%struct.PTCacheID* %45, i32 %46), !dbg !5866
  %tobool63 = icmp ne i32 %call62, 0, !dbg !5866
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !5867

if.then64:                                        ; preds = %if.then61
  store i32 0, i32* %retval, align 4, !dbg !5868
  br label %return, !dbg !5868

if.end65:                                         ; preds = %if.then61
  br label %if.end81, !dbg !5869

if.else66:                                        ; preds = %if.then58
  %47 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5870
  %read_point67 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %47, i32 0, i32 13, !dbg !5872
  %48 = load void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float*)** %read_point67, align 8, !dbg !5872
  %tobool68 = icmp ne void (i32, i8*, i8**, float, float*)* %48, null, !dbg !5870
  br i1 %tobool68, label %if.then69, label %if.end80, !dbg !5873

if.then69:                                        ; preds = %if.else66
  %49 = load i32, i32* %cfra1, align 4, !dbg !5874
  %tobool70 = icmp ne i32 %49, 0, !dbg !5874
  br i1 %tobool70, label %land.lhs.true71, label %if.else77, !dbg !5877

land.lhs.true71:                                  ; preds = %if.then69
  %50 = load i32, i32* %cfra2, align 4, !dbg !5878
  %tobool72 = icmp ne i32 %50, 0, !dbg !5878
  br i1 %tobool72, label %land.lhs.true73, label %if.else77, !dbg !5879

land.lhs.true73:                                  ; preds = %land.lhs.true71
  %51 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5880
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %51, i32 0, i32 14, !dbg !5881
  %52 = load void (i32, i8*, i8**, float, float, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !5881
  %tobool74 = icmp ne void (i32, i8*, i8**, float, float, float, float*)* %52, null, !dbg !5880
  br i1 %tobool74, label %if.then75, label %if.else77, !dbg !5882

if.then75:                                        ; preds = %land.lhs.true73
  %53 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5883
  %54 = load float, float* %cfra.addr, align 4, !dbg !5884
  %55 = load i32, i32* %cfra1, align 4, !dbg !5885
  %56 = load i32, i32* %cfra2, align 4, !dbg !5886
  %call76 = call i32 @ptcache_interpolate(%struct.PTCacheID* %53, float %54, i32 %55, i32 %56), !dbg !5887
  br label %if.end79, !dbg !5887

if.else77:                                        ; preds = %land.lhs.true73, %land.lhs.true71, %if.then69
  %57 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5888
  %58 = load i32, i32* %cfra2, align 4, !dbg !5889
  %call78 = call i32 @ptcache_read(%struct.PTCacheID* %57, i32 %58), !dbg !5890
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  br label %if.end80, !dbg !5891

if.end80:                                         ; preds = %if.end79, %if.else66
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end65
  br label %if.end82, !dbg !5892

if.end82:                                         ; preds = %if.end81, %if.end56
  %59 = load i32, i32* %cfra1, align 4, !dbg !5893
  %tobool83 = icmp ne i32 %59, 0, !dbg !5893
  br i1 %tobool83, label %if.then84, label %if.else86, !dbg !5895

if.then84:                                        ; preds = %if.end82
  %60 = load i32, i32* %cfra2, align 4, !dbg !5896
  %tobool85 = icmp ne i32 %60, 0, !dbg !5896
  %61 = zext i1 %tobool85 to i64, !dbg !5896
  %cond = select i1 %tobool85, i32 2, i32 1, !dbg !5896
  store i32 %cond, i32* %ret, align 4, !dbg !5897
  br label %if.end92, !dbg !5898

if.else86:                                        ; preds = %if.end82
  %62 = load i32, i32* %cfra2, align 4, !dbg !5899
  %tobool87 = icmp ne i32 %62, 0, !dbg !5899
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !5901

if.then88:                                        ; preds = %if.else86
  store i32 3, i32* %ret, align 4, !dbg !5902
  %63 = load i32, i32* %cfra2, align 4, !dbg !5904
  %64 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5905
  %cache89 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %64, i32 0, i32 25, !dbg !5906
  %65 = load %struct.PointCache*, %struct.PointCache** %cache89, align 8, !dbg !5906
  %simframe90 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %65, i32 0, i32 4, !dbg !5907
  store i32 %63, i32* %simframe90, align 8, !dbg !5908
  br label %if.end91, !dbg !5909

if.end91:                                         ; preds = %if.then88, %if.else86
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then84
  %66 = load float, float* %cfra.addr, align 4, !dbg !5910
  %conv93 = fptosi float %66 to i32, !dbg !5911
  store i32 %conv93, i32* %cfrai, align 4, !dbg !5912
  %67 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5913
  %cache94 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %67, i32 0, i32 25, !dbg !5915
  %68 = load %struct.PointCache*, %struct.PointCache** %cache94, align 8, !dbg !5915
  %flag95 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %68, i32 0, i32 2, !dbg !5916
  %69 = load i32, i32* %flag95, align 8, !dbg !5916
  %and96 = and i32 %69, 2, !dbg !5917
  %tobool97 = icmp ne i32 %and96, 0, !dbg !5917
  br i1 %tobool97, label %if.then98, label %if.else99, !dbg !5918

if.then98:                                        ; preds = %if.end92
  %70 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5919
  %71 = load i32, i32* %cfrai, align 4, !dbg !5921
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %70, i32 3, i32 %71), !dbg !5922
  br label %if.end122, !dbg !5923

if.else99:                                        ; preds = %if.end92
  %72 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5924
  %cache100 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %72, i32 0, i32 25, !dbg !5926
  %73 = load %struct.PointCache*, %struct.PointCache** %cache100, align 8, !dbg !5926
  %flag101 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %73, i32 0, i32 2, !dbg !5927
  %74 = load i32, i32* %flag101, align 8, !dbg !5927
  %and102 = and i32 %74, 256, !dbg !5928
  %tobool103 = icmp ne i32 %and102, 0, !dbg !5928
  br i1 %tobool103, label %if.then104, label %if.end121, !dbg !5929

if.then104:                                       ; preds = %if.else99
  %75 = load float, float* %cfra.addr, align 4, !dbg !5930
  %76 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5933
  %cache105 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %76, i32 0, i32 25, !dbg !5934
  %77 = load %struct.PointCache*, %struct.PointCache** %cache105, align 8, !dbg !5934
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %77, i32 0, i32 8, !dbg !5935
  %78 = load i32, i32* %last_exact, align 8, !dbg !5935
  %conv106 = sitofp i32 %78 to float, !dbg !5933
  %cmp107 = fcmp ole float %75, %conv106, !dbg !5936
  br i1 %cmp107, label %if.then109, label %if.end113, !dbg !5937

if.then109:                                       ; preds = %if.then104
  %79 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5938
  %cache110 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %79, i32 0, i32 25, !dbg !5939
  %80 = load %struct.PointCache*, %struct.PointCache** %cache110, align 8, !dbg !5939
  %flag111 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %80, i32 0, i32 2, !dbg !5940
  %81 = load i32, i32* %flag111, align 8, !dbg !5941
  %and112 = and i32 %81, -257, !dbg !5941
  store i32 %and112, i32* %flag111, align 8, !dbg !5941
  br label %if.end113, !dbg !5938

if.end113:                                        ; preds = %if.then109, %if.then104
  %82 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5942
  %83 = load i32, i32* %cfrai, align 4, !dbg !5943
  %84 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5943
  %cache114 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %84, i32 0, i32 25, !dbg !5943
  %85 = load %struct.PointCache*, %struct.PointCache** %cache114, align 8, !dbg !5943
  %last_exact115 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %85, i32 0, i32 8, !dbg !5943
  %86 = load i32, i32* %last_exact115, align 8, !dbg !5943
  %cmp116 = icmp sgt i32 %83, %86, !dbg !5943
  br i1 %cmp116, label %cond.true, label %cond.false, !dbg !5943

cond.true:                                        ; preds = %if.end113
  %87 = load i32, i32* %cfrai, align 4, !dbg !5943
  br label %cond.end, !dbg !5943

cond.false:                                       ; preds = %if.end113
  %88 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5943
  %cache118 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %88, i32 0, i32 25, !dbg !5943
  %89 = load %struct.PointCache*, %struct.PointCache** %cache118, align 8, !dbg !5943
  %last_exact119 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %89, i32 0, i32 8, !dbg !5943
  %90 = load i32, i32* %last_exact119, align 8, !dbg !5943
  br label %cond.end, !dbg !5943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond120 = phi i32 [ %87, %cond.true ], [ %90, %cond.false ], !dbg !5943
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %82, i32 3, i32 %cond120), !dbg !5944
  br label %if.end121, !dbg !5945

if.end121:                                        ; preds = %cond.end, %if.else99
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then98
  %91 = load i32, i32* %ret, align 4, !dbg !5946
  store i32 %91, i32* %retval, align 4, !dbg !5947
  br label %return, !dbg !5947

return:                                           ; preds = %if.end122, %if.then64, %if.then49, %if.then41, %if.then35, %if.then25, %if.then
  %92 = load i32, i32* %retval, align 4, !dbg !5948
  ret i32 %92, !dbg !5948
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_read(%struct.PTCacheID* %pid, i32 %cfra) #0 !dbg !5949 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  %i = alloca i32, align 4
  %index = alloca i32*, align 8
  %totpoint = alloca i32, align 4
  %pid_totpoint = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !5956, metadata !DIExpression()), !dbg !5957
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !5957
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata i32** %index, metadata !5960, metadata !DIExpression()), !dbg !5961
  store i32* %i, i32** %index, align 8, !dbg !5961
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5962
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !5964
  %1 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5964
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !5965
  %2 = load i32, i32* %flag, align 8, !dbg !5965
  %and = and i32 %2, 64, !dbg !5966
  %tobool = icmp ne i32 %and, 0, !dbg !5966
  br i1 %tobool, label %if.then, label %if.else, !dbg !5967

if.then:                                          ; preds = %entry
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5968
  %4 = load i32, i32* %cfra.addr, align 4, !dbg !5970
  %call = call %struct.PTCacheMem* @ptcache_disk_frame_to_mem(%struct.PTCacheID* %3, i32 %4), !dbg !5971
  store %struct.PTCacheMem* %call, %struct.PTCacheMem** %pm, align 8, !dbg !5972
  br label %if.end, !dbg !5973

if.else:                                          ; preds = %entry
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !5974
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %5, i32 0, i32 25, !dbg !5976
  %6 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !5976
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 20, !dbg !5977
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !5978
  %7 = load i8*, i8** %first, align 8, !dbg !5978
  %8 = bitcast i8* %7 to %struct.PTCacheMem*, !dbg !5974
  store %struct.PTCacheMem* %8, %struct.PTCacheMem** %pm, align 8, !dbg !5979
  br label %while.cond, !dbg !5980

while.cond:                                       ; preds = %while.body, %if.else
  %9 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !5981
  %tobool2 = icmp ne %struct.PTCacheMem* %9, null, !dbg !5981
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !5982

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !5983
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %10, i32 0, i32 2, !dbg !5984
  %11 = load i32, i32* %frame, align 8, !dbg !5984
  %12 = load i32, i32* %cfra.addr, align 4, !dbg !5985
  %cmp = icmp ne i32 %11, %12, !dbg !5986
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5987
  br i1 %13, label %while.body, label %while.end, !dbg !5980

while.body:                                       ; preds = %land.end
  %14 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !5988
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %14, i32 0, i32 0, !dbg !5989
  %15 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !5989
  store %struct.PTCacheMem* %15, %struct.PTCacheMem** %pm, align 8, !dbg !5990
  br label %while.cond, !dbg !5980, !llvm.loop !5991

while.end:                                        ; preds = %land.end
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %16 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !5992
  %tobool3 = icmp ne %struct.PTCacheMem* %16, null, !dbg !5992
  br i1 %tobool3, label %if.then4, label %if.end41, !dbg !5994

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !5995, metadata !DIExpression()), !dbg !5997
  %17 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !5998
  %totpoint5 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %17, i32 0, i32 3, !dbg !5999
  %18 = load i32, i32* %totpoint5, align 4, !dbg !5999
  store i32 %18, i32* %totpoint, align 4, !dbg !5997
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6000
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 10, !dbg !6002
  %20 = load i32, i32* %data_types, align 4, !dbg !6002
  %and6 = and i32 %20, 1, !dbg !6003
  %cmp7 = icmp eq i32 %and6, 0, !dbg !6004
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !6005

if.then8:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %pid_totpoint, metadata !6006, metadata !DIExpression()), !dbg !6008
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6009
  %totpoint9 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 20, !dbg !6010
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint9, align 8, !dbg !6010
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6011
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 4, !dbg !6012
  %24 = load i8*, i8** %calldata, align 8, !dbg !6012
  %25 = load i32, i32* %cfra.addr, align 4, !dbg !6013
  %call10 = call i32 %22(i8* %24, i32 %25), !dbg !6009
  store i32 %call10, i32* %pid_totpoint, align 4, !dbg !6008
  %26 = load i32, i32* %totpoint, align 4, !dbg !6014
  %27 = load i32, i32* %pid_totpoint, align 4, !dbg !6016
  %cmp11 = icmp ne i32 %26, %27, !dbg !6017
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !6018

if.then12:                                        ; preds = %if.then8
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6019
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 21, !dbg !6021
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %error, align 8, !dbg !6021
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6022
  %calldata13 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 4, !dbg !6023
  %31 = load i8*, i8** %calldata13, align 8, !dbg !6023
  call void %29(i8* %31, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i64 0, i64 0)), !dbg !6019
  %32 = load i32, i32* %totpoint, align 4, !dbg !6024
  %33 = load i32, i32* %pid_totpoint, align 4, !dbg !6024
  %cmp14 = icmp slt i32 %32, %33, !dbg !6024
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !6024

cond.true:                                        ; preds = %if.then12
  %34 = load i32, i32* %totpoint, align 4, !dbg !6024
  br label %cond.end, !dbg !6024

cond.false:                                       ; preds = %if.then12
  %35 = load i32, i32* %pid_totpoint, align 4, !dbg !6024
  br label %cond.end, !dbg !6024

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ], !dbg !6024
  store i32 %cond, i32* %totpoint, align 4, !dbg !6025
  br label %if.end15, !dbg !6026

if.end15:                                         ; preds = %cond.end, %if.then8
  br label %if.end16, !dbg !6027

if.end16:                                         ; preds = %if.end15, %if.then4
  %36 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6028
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %36), !dbg !6029
  store i32 0, i32* %i, align 4, !dbg !6030
  br label %for.cond, !dbg !6032

for.cond:                                         ; preds = %for.inc, %if.end16
  %37 = load i32, i32* %i, align 4, !dbg !6033
  %38 = load i32, i32* %totpoint, align 4, !dbg !6035
  %cmp17 = icmp slt i32 %37, %38, !dbg !6036
  br i1 %cmp17, label %for.body, label %for.end, !dbg !6037

for.body:                                         ; preds = %for.cond
  %39 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6038
  %data_types18 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %39, i32 0, i32 4, !dbg !6041
  %40 = load i32, i32* %data_types18, align 8, !dbg !6041
  %and19 = and i32 %40, 1, !dbg !6042
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6042
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6043

if.then21:                                        ; preds = %for.body
  %41 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6044
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %41, i32 0, i32 7, !dbg !6045
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !6044
  %42 = load i8*, i8** %arrayidx, align 8, !dbg !6044
  %43 = bitcast i8* %42 to i32*, !dbg !6044
  store i32* %43, i32** %index, align 8, !dbg !6046
  br label %if.end22, !dbg !6047

if.end22:                                         ; preds = %if.then21, %for.body
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6048
  %read_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 13, !dbg !6049
  %45 = load void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float*)** %read_point, align 8, !dbg !6049
  %46 = load i32*, i32** %index, align 8, !dbg !6050
  %47 = load i32, i32* %46, align 4, !dbg !6051
  %48 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6052
  %calldata23 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %48, i32 0, i32 4, !dbg !6053
  %49 = load i8*, i8** %calldata23, align 8, !dbg !6053
  %50 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6054
  %cur24 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %50, i32 0, i32 7, !dbg !6055
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur24, i64 0, i64 0, !dbg !6054
  %51 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6056
  %frame25 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %51, i32 0, i32 2, !dbg !6057
  %52 = load i32, i32* %frame25, align 8, !dbg !6057
  %conv = uitofp i32 %52 to float, !dbg !6058
  call void %45(i32 %47, i8* %49, i8** %arraydecay, float %conv, float* null), !dbg !6048
  %53 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6059
  call void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %53), !dbg !6060
  br label %for.inc, !dbg !6061

for.inc:                                          ; preds = %if.end22
  %54 = load i32, i32* %i, align 4, !dbg !6062
  %inc = add nsw i32 %54, 1, !dbg !6062
  store i32 %inc, i32* %i, align 4, !dbg !6062
  br label %for.cond, !dbg !6063, !llvm.loop !6064

for.end:                                          ; preds = %for.cond
  %55 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6066
  %read_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %55, i32 0, i32 18, !dbg !6068
  %56 = load void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data, align 8, !dbg !6068
  %tobool26 = icmp ne void (i8*, %struct.PTCacheMem*, float)* %56, null, !dbg !6066
  br i1 %tobool26, label %land.lhs.true, label %if.end34, !dbg !6069

land.lhs.true:                                    ; preds = %for.end
  %57 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6070
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %57, i32 0, i32 8, !dbg !6071
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !6072
  %58 = load i8*, i8** %first27, align 8, !dbg !6072
  %tobool28 = icmp ne i8* %58, null, !dbg !6070
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !6073

if.then29:                                        ; preds = %land.lhs.true
  %59 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6074
  %read_extra_data30 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %59, i32 0, i32 18, !dbg !6075
  %60 = load void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float)** %read_extra_data30, align 8, !dbg !6075
  %61 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6076
  %calldata31 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %61, i32 0, i32 4, !dbg !6077
  %62 = load i8*, i8** %calldata31, align 8, !dbg !6077
  %63 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6078
  %64 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6079
  %frame32 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %64, i32 0, i32 2, !dbg !6080
  %65 = load i32, i32* %frame32, align 8, !dbg !6080
  %conv33 = uitofp i32 %65 to float, !dbg !6081
  call void %60(i8* %62, %struct.PTCacheMem* %63, float %conv33), !dbg !6074
  br label %if.end34, !dbg !6074

if.end34:                                         ; preds = %if.then29, %land.lhs.true, %for.end
  %66 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6082
  %cache35 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %66, i32 0, i32 25, !dbg !6084
  %67 = load %struct.PointCache*, %struct.PointCache** %cache35, align 8, !dbg !6084
  %flag36 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %67, i32 0, i32 2, !dbg !6085
  %68 = load i32, i32* %flag36, align 8, !dbg !6085
  %and37 = and i32 %68, 64, !dbg !6086
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6086
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6087

if.then39:                                        ; preds = %if.end34
  %69 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6088
  call void @ptcache_data_free(%struct.PTCacheMem* %69), !dbg !6090
  %70 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6091
  call void @ptcache_extra_free(%struct.PTCacheMem* %70), !dbg !6092
  %71 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6093
  %72 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6094
  %73 = bitcast %struct.PTCacheMem* %72 to i8*, !dbg !6094
  call void %71(i8* %73), !dbg !6093
  br label %if.end40, !dbg !6095

if.end40:                                         ; preds = %if.then39, %if.end34
  br label %if.end41, !dbg !6096

if.end41:                                         ; preds = %if.end40, %if.end
  ret i32 1, !dbg !6097
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %pid, i32 %cfra) #0 !dbg !6098 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %filename = alloca [2048 x i8], align 16
  %pm = alloca %struct.PTCacheMem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6103
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !6105
  %1 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6105
  %tobool = icmp ne %struct.PointCache* %1, null, !dbg !6103
  br i1 %tobool, label %if.end, label %if.then, !dbg !6106

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6107
  br label %return, !dbg !6107

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %cfra.addr, align 4, !dbg !6108
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6110
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 25, !dbg !6111
  %4 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !6111
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 5, !dbg !6112
  %5 = load i32, i32* %startframe, align 4, !dbg !6112
  %cmp = icmp slt i32 %2, %5, !dbg !6113
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !6114

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %cfra.addr, align 4, !dbg !6115
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6116
  %cache2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 25, !dbg !6117
  %8 = load %struct.PointCache*, %struct.PointCache** %cache2, align 8, !dbg !6117
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 6, !dbg !6118
  %9 = load i32, i32* %endframe, align 8, !dbg !6118
  %cmp3 = icmp sgt i32 %6, %9, !dbg !6119
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6120

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6121
  br label %return, !dbg !6121

if.end5:                                          ; preds = %lor.lhs.false
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6122
  %cache6 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !6124
  %11 = load %struct.PointCache*, %struct.PointCache** %cache6, align 8, !dbg !6124
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 19, !dbg !6125
  %12 = load i8*, i8** %cached_frames, align 8, !dbg !6125
  %tobool7 = icmp ne i8* %12, null, !dbg !6122
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !6126

land.lhs.true:                                    ; preds = %if.end5
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6127
  %cache8 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %13, i32 0, i32 25, !dbg !6128
  %14 = load %struct.PointCache*, %struct.PointCache** %cache8, align 8, !dbg !6128
  %cached_frames9 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %14, i32 0, i32 19, !dbg !6129
  %15 = load i8*, i8** %cached_frames9, align 8, !dbg !6129
  %16 = load i32, i32* %cfra.addr, align 4, !dbg !6130
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6131
  %cache10 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 25, !dbg !6132
  %18 = load %struct.PointCache*, %struct.PointCache** %cache10, align 8, !dbg !6132
  %startframe11 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %18, i32 0, i32 5, !dbg !6133
  %19 = load i32, i32* %startframe11, align 4, !dbg !6133
  %sub = sub nsw i32 %16, %19, !dbg !6134
  %idxprom = sext i32 %sub to i64, !dbg !6127
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %idxprom, !dbg !6127
  %20 = load i8, i8* %arrayidx, align 1, !dbg !6127
  %conv = zext i8 %20 to i32, !dbg !6127
  %cmp12 = icmp eq i32 %conv, 0, !dbg !6135
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6136

if.then14:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !6137
  br label %return, !dbg !6137

if.end15:                                         ; preds = %land.lhs.true, %if.end5
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6138
  %cache16 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 25, !dbg !6140
  %22 = load %struct.PointCache*, %struct.PointCache** %cache16, align 8, !dbg !6140
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %22, i32 0, i32 2, !dbg !6141
  %23 = load i32, i32* %flag, align 8, !dbg !6141
  %and = and i32 %23, 64, !dbg !6142
  %tobool17 = icmp ne i32 %and, 0, !dbg !6142
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6143

if.then18:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata [2048 x i8]* %filename, metadata !6144, metadata !DIExpression()), !dbg !6149
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6150
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6151
  %25 = load i32, i32* %cfra.addr, align 4, !dbg !6152
  %call = call i32 @ptcache_filename(%struct.PTCacheID* %24, i8* %arraydecay, i32 %25, i16 signext 1, i16 signext 1), !dbg !6153
  %arraydecay19 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6154
  %call20 = call i32 @BLI_exists(i8* %arraydecay19), !dbg !6155
  store i32 %call20, i32* %retval, align 4, !dbg !6156
  br label %return, !dbg !6156

if.else:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !6157, metadata !DIExpression()), !dbg !6159
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6160
  %cache21 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 25, !dbg !6161
  %27 = load %struct.PointCache*, %struct.PointCache** %cache21, align 8, !dbg !6161
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 20, !dbg !6162
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !6163
  %28 = load i8*, i8** %first, align 8, !dbg !6163
  %29 = bitcast i8* %28 to %struct.PTCacheMem*, !dbg !6160
  store %struct.PTCacheMem* %29, %struct.PTCacheMem** %pm, align 8, !dbg !6159
  br label %for.cond, !dbg !6164

for.cond:                                         ; preds = %for.inc, %if.else
  %30 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6165
  %tobool22 = icmp ne %struct.PTCacheMem* %30, null, !dbg !6168
  br i1 %tobool22, label %for.body, label %for.end, !dbg !6168

for.body:                                         ; preds = %for.cond
  %31 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6169
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %31, i32 0, i32 2, !dbg !6172
  %32 = load i32, i32* %frame, align 8, !dbg !6172
  %33 = load i32, i32* %cfra.addr, align 4, !dbg !6173
  %cmp23 = icmp eq i32 %32, %33, !dbg !6174
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !6175

if.then25:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !6176
  br label %return, !dbg !6176

if.end26:                                         ; preds = %for.body
  br label %for.inc, !dbg !6177

for.inc:                                          ; preds = %if.end26
  %34 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6178
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %34, i32 0, i32 0, !dbg !6179
  %35 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !6179
  store %struct.PTCacheMem* %35, %struct.PTCacheMem** %pm, align 8, !dbg !6180
  br label %for.cond, !dbg !6181, !llvm.loop !6182

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6184
  br label %return, !dbg !6184

return:                                           ; preds = %for.end, %if.then25, %if.then18, %if.then14, %if.then4, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6185
  ret i32 %36, !dbg !6185
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_find_frames_around(%struct.PTCacheID* %pid, i32 %frame, i32* %fra1, i32* %fra2) #0 !dbg !6186 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %frame.addr = alloca i32, align 4
  %fra1.addr = alloca i32*, align 8
  %fra2.addr = alloca i32*, align 8
  %cfra1 = alloca i32, align 4
  %cfra2 = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  %pm2 = alloca %struct.PTCacheMem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  store i32* %fra1, i32** %fra1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fra1.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  store i32* %fra2, i32** %fra2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fra2.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6197
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !6199
  %1 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6199
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !6200
  %2 = load i32, i32* %flag, align 8, !dbg !6200
  %and = and i32 %2, 64, !dbg !6201
  %tobool = icmp ne i32 %and, 0, !dbg !6201
  br i1 %tobool, label %if.then, label %if.else26, !dbg !6202

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %cfra1, metadata !6203, metadata !DIExpression()), !dbg !6205
  %3 = load i32, i32* %frame.addr, align 4, !dbg !6206
  store i32 %3, i32* %cfra1, align 4, !dbg !6205
  call void @llvm.dbg.declare(metadata i32* %cfra2, metadata !6207, metadata !DIExpression()), !dbg !6208
  %4 = load i32, i32* %frame.addr, align 4, !dbg !6209
  %add = add i32 %4, 1, !dbg !6210
  store i32 %add, i32* %cfra2, align 4, !dbg !6208
  br label %while.cond, !dbg !6211

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i32, i32* %cfra1, align 4, !dbg !6212
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6213
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 25, !dbg !6214
  %7 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !6214
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 5, !dbg !6215
  %8 = load i32, i32* %startframe, align 4, !dbg !6215
  %cmp = icmp sge i32 %5, %8, !dbg !6216
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6217

land.rhs:                                         ; preds = %while.cond
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6218
  %10 = load i32, i32* %cfra1, align 4, !dbg !6219
  %call = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %9, i32 %10), !dbg !6220
  %tobool2 = icmp ne i32 %call, 0, !dbg !6221
  %lnot = xor i1 %tobool2, true, !dbg !6221
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !6222
  br i1 %11, label %while.body, label %while.end, !dbg !6211

while.body:                                       ; preds = %land.end
  %12 = load i32, i32* %cfra1, align 4, !dbg !6223
  %dec = add nsw i32 %12, -1, !dbg !6223
  store i32 %dec, i32* %cfra1, align 4, !dbg !6223
  br label %while.cond, !dbg !6211, !llvm.loop !6224

while.end:                                        ; preds = %land.end
  %13 = load i32, i32* %cfra1, align 4, !dbg !6225
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6227
  %cache3 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 25, !dbg !6228
  %15 = load %struct.PointCache*, %struct.PointCache** %cache3, align 8, !dbg !6228
  %startframe4 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %15, i32 0, i32 5, !dbg !6229
  %16 = load i32, i32* %startframe4, align 4, !dbg !6229
  %cmp5 = icmp slt i32 %13, %16, !dbg !6230
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6231

if.then6:                                         ; preds = %while.end
  store i32 0, i32* %cfra1, align 4, !dbg !6232
  br label %if.end, !dbg !6233

if.end:                                           ; preds = %if.then6, %while.end
  br label %while.cond7, !dbg !6234

while.cond7:                                      ; preds = %while.body15, %if.end
  %17 = load i32, i32* %cfra2, align 4, !dbg !6235
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6236
  %cache8 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 25, !dbg !6237
  %19 = load %struct.PointCache*, %struct.PointCache** %cache8, align 8, !dbg !6237
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %19, i32 0, i32 6, !dbg !6238
  %20 = load i32, i32* %endframe, align 8, !dbg !6238
  %cmp9 = icmp sle i32 %17, %20, !dbg !6239
  br i1 %cmp9, label %land.rhs10, label %land.end14, !dbg !6240

land.rhs10:                                       ; preds = %while.cond7
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6241
  %22 = load i32, i32* %cfra2, align 4, !dbg !6242
  %call11 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %21, i32 %22), !dbg !6243
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6244
  %lnot13 = xor i1 %tobool12, true, !dbg !6244
  br label %land.end14

land.end14:                                       ; preds = %land.rhs10, %while.cond7
  %23 = phi i1 [ false, %while.cond7 ], [ %lnot13, %land.rhs10 ], !dbg !6222
  br i1 %23, label %while.body15, label %while.end16, !dbg !6234

while.body15:                                     ; preds = %land.end14
  %24 = load i32, i32* %cfra2, align 4, !dbg !6245
  %inc = add nsw i32 %24, 1, !dbg !6245
  store i32 %inc, i32* %cfra2, align 4, !dbg !6245
  br label %while.cond7, !dbg !6234, !llvm.loop !6246

while.end16:                                      ; preds = %land.end14
  %25 = load i32, i32* %cfra2, align 4, !dbg !6247
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6249
  %cache17 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 25, !dbg !6250
  %27 = load %struct.PointCache*, %struct.PointCache** %cache17, align 8, !dbg !6250
  %endframe18 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 6, !dbg !6251
  %28 = load i32, i32* %endframe18, align 8, !dbg !6251
  %cmp19 = icmp sgt i32 %25, %28, !dbg !6252
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6253

if.then20:                                        ; preds = %while.end16
  store i32 0, i32* %cfra2, align 4, !dbg !6254
  br label %if.end21, !dbg !6255

if.end21:                                         ; preds = %if.then20, %while.end16
  %29 = load i32, i32* %cfra1, align 4, !dbg !6256
  %tobool22 = icmp ne i32 %29, 0, !dbg !6256
  br i1 %tobool22, label %land.lhs.true, label %if.else, !dbg !6258

land.lhs.true:                                    ; preds = %if.end21
  %30 = load i32, i32* %cfra2, align 4, !dbg !6259
  %tobool23 = icmp ne i32 %30, 0, !dbg !6259
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !6260

if.then24:                                        ; preds = %land.lhs.true
  %31 = load i32*, i32** %fra1.addr, align 8, !dbg !6261
  store i32 0, i32* %31, align 4, !dbg !6263
  %32 = load i32, i32* %cfra1, align 4, !dbg !6264
  %33 = load i32*, i32** %fra2.addr, align 8, !dbg !6265
  store i32 %32, i32* %33, align 4, !dbg !6266
  br label %if.end25, !dbg !6267

if.else:                                          ; preds = %land.lhs.true, %if.end21
  %34 = load i32, i32* %cfra1, align 4, !dbg !6268
  %35 = load i32*, i32** %fra1.addr, align 8, !dbg !6270
  store i32 %34, i32* %35, align 4, !dbg !6271
  %36 = load i32, i32* %cfra2, align 4, !dbg !6272
  %37 = load i32*, i32** %fra2.addr, align 8, !dbg !6273
  store i32 %36, i32* %37, align 4, !dbg !6274
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then24
  br label %if.end68, !dbg !6275

if.else26:                                        ; preds = %entry
  %38 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6276
  %cache27 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %38, i32 0, i32 25, !dbg !6278
  %39 = load %struct.PointCache*, %struct.PointCache** %cache27, align 8, !dbg !6278
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %39, i32 0, i32 20, !dbg !6279
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !6280
  %40 = load i8*, i8** %first, align 8, !dbg !6280
  %tobool28 = icmp ne i8* %40, null, !dbg !6276
  br i1 %tobool28, label %if.then29, label %if.end67, !dbg !6281

if.then29:                                        ; preds = %if.else26
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !6282, metadata !DIExpression()), !dbg !6284
  %41 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6285
  %cache30 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %41, i32 0, i32 25, !dbg !6286
  %42 = load %struct.PointCache*, %struct.PointCache** %cache30, align 8, !dbg !6286
  %mem_cache31 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %42, i32 0, i32 20, !dbg !6287
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache31, i32 0, i32 0, !dbg !6288
  %43 = load i8*, i8** %first32, align 8, !dbg !6288
  %44 = bitcast i8* %43 to %struct.PTCacheMem*, !dbg !6285
  store %struct.PTCacheMem* %44, %struct.PTCacheMem** %pm, align 8, !dbg !6284
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm2, metadata !6289, metadata !DIExpression()), !dbg !6290
  %45 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6291
  %cache33 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %45, i32 0, i32 25, !dbg !6292
  %46 = load %struct.PointCache*, %struct.PointCache** %cache33, align 8, !dbg !6292
  %mem_cache34 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %46, i32 0, i32 20, !dbg !6293
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache34, i32 0, i32 1, !dbg !6294
  %47 = load i8*, i8** %last, align 8, !dbg !6294
  %48 = bitcast i8* %47 to %struct.PTCacheMem*, !dbg !6291
  store %struct.PTCacheMem* %48, %struct.PTCacheMem** %pm2, align 8, !dbg !6290
  br label %while.cond35, !dbg !6295

while.cond35:                                     ; preds = %while.body42, %if.then29
  %49 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6296
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %49, i32 0, i32 0, !dbg !6297
  %50 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !6297
  %tobool36 = icmp ne %struct.PTCacheMem* %50, null, !dbg !6296
  br i1 %tobool36, label %land.rhs37, label %land.end41, !dbg !6298

land.rhs37:                                       ; preds = %while.cond35
  %51 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6299
  %next38 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %51, i32 0, i32 0, !dbg !6300
  %52 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next38, align 8, !dbg !6300
  %frame39 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %52, i32 0, i32 2, !dbg !6301
  %53 = load i32, i32* %frame39, align 8, !dbg !6301
  %54 = load i32, i32* %frame.addr, align 4, !dbg !6302
  %cmp40 = icmp ule i32 %53, %54, !dbg !6303
  br label %land.end41

land.end41:                                       ; preds = %land.rhs37, %while.cond35
  %55 = phi i1 [ false, %while.cond35 ], [ %cmp40, %land.rhs37 ], !dbg !6304
  br i1 %55, label %while.body42, label %while.end44, !dbg !6295

while.body42:                                     ; preds = %land.end41
  %56 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6305
  %next43 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %56, i32 0, i32 0, !dbg !6306
  %57 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next43, align 8, !dbg !6306
  store %struct.PTCacheMem* %57, %struct.PTCacheMem** %pm, align 8, !dbg !6307
  br label %while.cond35, !dbg !6295, !llvm.loop !6308

while.end44:                                      ; preds = %land.end41
  %58 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6309
  %frame45 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %58, i32 0, i32 2, !dbg !6311
  %59 = load i32, i32* %frame45, align 8, !dbg !6311
  %60 = load i32, i32* %frame.addr, align 4, !dbg !6312
  %cmp46 = icmp ult i32 %59, %60, !dbg !6313
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !6314

if.then47:                                        ; preds = %while.end44
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm2, align 8, !dbg !6315
  br label %if.end59, !dbg !6317

if.else48:                                        ; preds = %while.end44
  br label %while.cond49, !dbg !6318

while.cond49:                                     ; preds = %while.body56, %if.else48
  %61 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6320
  %prev = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %61, i32 0, i32 1, !dbg !6321
  %62 = load %struct.PTCacheMem*, %struct.PTCacheMem** %prev, align 8, !dbg !6321
  %tobool50 = icmp ne %struct.PTCacheMem* %62, null, !dbg !6320
  br i1 %tobool50, label %land.rhs51, label %land.end55, !dbg !6322

land.rhs51:                                       ; preds = %while.cond49
  %63 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6323
  %prev52 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %63, i32 0, i32 1, !dbg !6324
  %64 = load %struct.PTCacheMem*, %struct.PTCacheMem** %prev52, align 8, !dbg !6324
  %frame53 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %64, i32 0, i32 2, !dbg !6325
  %65 = load i32, i32* %frame53, align 8, !dbg !6325
  %66 = load i32, i32* %frame.addr, align 4, !dbg !6326
  %cmp54 = icmp ugt i32 %65, %66, !dbg !6327
  br label %land.end55

land.end55:                                       ; preds = %land.rhs51, %while.cond49
  %67 = phi i1 [ false, %while.cond49 ], [ %cmp54, %land.rhs51 ], !dbg !6328
  br i1 %67, label %while.body56, label %while.end58, !dbg !6318

while.body56:                                     ; preds = %land.end55
  %68 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6329
  %prev57 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %68, i32 0, i32 1, !dbg !6331
  %69 = load %struct.PTCacheMem*, %struct.PTCacheMem** %prev57, align 8, !dbg !6331
  store %struct.PTCacheMem* %69, %struct.PTCacheMem** %pm2, align 8, !dbg !6332
  br label %while.cond49, !dbg !6318, !llvm.loop !6333

while.end58:                                      ; preds = %land.end55
  br label %if.end59

if.end59:                                         ; preds = %while.end58, %if.then47
  %70 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6335
  %tobool60 = icmp ne %struct.PTCacheMem* %70, null, !dbg !6335
  br i1 %tobool60, label %if.else63, label %if.then61, !dbg !6337

if.then61:                                        ; preds = %if.end59
  %71 = load i32*, i32** %fra1.addr, align 8, !dbg !6338
  store i32 0, i32* %71, align 4, !dbg !6340
  %72 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6341
  %frame62 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %72, i32 0, i32 2, !dbg !6342
  %73 = load i32, i32* %frame62, align 8, !dbg !6342
  %74 = load i32*, i32** %fra2.addr, align 8, !dbg !6343
  store i32 %73, i32* %74, align 4, !dbg !6344
  br label %if.end66, !dbg !6345

if.else63:                                        ; preds = %if.end59
  %75 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6346
  %frame64 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %75, i32 0, i32 2, !dbg !6348
  %76 = load i32, i32* %frame64, align 8, !dbg !6348
  %77 = load i32*, i32** %fra1.addr, align 8, !dbg !6349
  store i32 %76, i32* %77, align 4, !dbg !6350
  %78 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !6351
  %frame65 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %78, i32 0, i32 2, !dbg !6352
  %79 = load i32, i32* %frame65, align 8, !dbg !6352
  %80 = load i32*, i32** %fra2.addr, align 8, !dbg !6353
  store i32 %79, i32* %80, align 4, !dbg !6354
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then61
  br label %if.end67, !dbg !6355

if.end67:                                         ; preds = %if.end66, %if.else26
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end25
  ret void, !dbg !6356
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_read_stream(%struct.PTCacheID* %pid, i32 %cfra) #0 !dbg !6357 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %pf = alloca %struct.PTCacheFile*, align 8
  %error = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !6362, metadata !DIExpression()), !dbg !6363
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6364
  %1 = load i32, i32* %cfra.addr, align 4, !dbg !6365
  %call = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %0, i32 0, i32 %1), !dbg !6366
  store %struct.PTCacheFile* %call, %struct.PTCacheFile** %pf, align 8, !dbg !6363
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6367, metadata !DIExpression()), !dbg !6368
  store i32 0, i32* %error, align 4, !dbg !6368
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6369
  %read_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 16, !dbg !6371
  %3 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %read_stream, align 8, !dbg !6371
  %cmp = icmp eq i32 (%struct.PTCacheFile*, i8*)* %3, null, !dbg !6372
  br i1 %cmp, label %if.then, label %if.end, !dbg !6373

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6374
  br label %return, !dbg !6374

if.end:                                           ; preds = %entry
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6375
  %cmp1 = icmp eq %struct.PTCacheFile* %4, null, !dbg !6377
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6378

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6379
  %and = and i32 %5, 1, !dbg !6382
  %tobool = icmp ne i32 %and, 0, !dbg !6382
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !6383

if.then3:                                         ; preds = %if.then2
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31, i64 0, i64 0)), !dbg !6384
  br label %if.end5, !dbg !6384

if.end5:                                          ; preds = %if.then3, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !6385
  br label %return, !dbg !6385

if.end6:                                          ; preds = %if.end
  %6 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6386
  %call7 = call i32 @ptcache_file_header_begin_read(%struct.PTCacheFile* %6), !dbg !6388
  %tobool8 = icmp ne i32 %call7, 0, !dbg !6388
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !6389

if.then9:                                         ; preds = %if.end6
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6390
  %error10 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 21, !dbg !6392
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %error10, align 8, !dbg !6392
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6393
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 4, !dbg !6394
  %10 = load i8*, i8** %calldata, align 8, !dbg !6394
  call void %8(i8* %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i64 0, i64 0)), !dbg !6390
  store i32 1, i32* %error, align 4, !dbg !6395
  br label %if.end33, !dbg !6396

if.else:                                          ; preds = %if.end6
  %11 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6397
  %type = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %11, i32 0, i32 4, !dbg !6399
  %12 = load i32, i32* %type, align 4, !dbg !6399
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6400
  %type11 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %13, i32 0, i32 5, !dbg !6401
  %14 = load i32, i32* %type11, align 8, !dbg !6401
  %cmp12 = icmp ne i32 %12, %14, !dbg !6402
  br i1 %cmp12, label %if.then13, label %if.else16, !dbg !6403

if.then13:                                        ; preds = %if.else
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6404
  %error14 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 21, !dbg !6406
  %16 = load void (i8*, i8*)*, void (i8*, i8*)** %error14, align 8, !dbg !6406
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6407
  %calldata15 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 4, !dbg !6408
  %18 = load i8*, i8** %calldata15, align 8, !dbg !6408
  call void %16(i8* %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i64 0, i64 0)), !dbg !6404
  store i32 1, i32* %error, align 4, !dbg !6409
  br label %if.end32, !dbg !6410

if.else16:                                        ; preds = %if.else
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6411
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 24, !dbg !6413
  %20 = load i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !6413
  %21 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6414
  %call17 = call i32 %20(%struct.PTCacheFile* %21), !dbg !6411
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6411
  br i1 %tobool18, label %if.else22, label %if.then19, !dbg !6415

if.then19:                                        ; preds = %if.else16
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6416
  %error20 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 21, !dbg !6418
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %error20, align 8, !dbg !6418
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6419
  %calldata21 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %24, i32 0, i32 4, !dbg !6420
  %25 = load i8*, i8** %calldata21, align 8, !dbg !6420
  call void %23(i8* %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.34, i64 0, i64 0)), !dbg !6416
  store i32 1, i32* %error, align 4, !dbg !6421
  br label %if.end31, !dbg !6422

if.else22:                                        ; preds = %if.else16
  %26 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6423
  %totpoint = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %26, i32 0, i32 3, !dbg !6425
  %27 = load i32, i32* %totpoint, align 8, !dbg !6425
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6426
  %totpoint23 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 20, !dbg !6427
  %29 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint23, align 8, !dbg !6427
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6428
  %calldata24 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 4, !dbg !6429
  %31 = load i8*, i8** %calldata24, align 8, !dbg !6429
  %32 = load i32, i32* %cfra.addr, align 4, !dbg !6430
  %call25 = call i32 %29(i8* %31, i32 %32), !dbg !6426
  %cmp26 = icmp ne i32 %27, %call25, !dbg !6431
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !6432

if.then27:                                        ; preds = %if.else22
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6433
  %error28 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 21, !dbg !6435
  %34 = load void (i8*, i8*)*, void (i8*, i8*)** %error28, align 8, !dbg !6435
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6436
  %calldata29 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 4, !dbg !6437
  %36 = load i8*, i8** %calldata29, align 8, !dbg !6437
  call void %34(i8* %36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i64 0, i64 0)), !dbg !6433
  store i32 1, i32* %error, align 4, !dbg !6438
  br label %if.end30, !dbg !6439

if.end30:                                         ; preds = %if.then27, %if.else22
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then19
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then13
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then9
  %37 = load i32, i32* %error, align 4, !dbg !6440
  %tobool34 = icmp ne i32 %37, 0, !dbg !6440
  br i1 %tobool34, label %if.end44, label %if.then35, !dbg !6442

if.then35:                                        ; preds = %if.end33
  %38 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6443
  call void @ptcache_file_pointers_init(%struct.PTCacheFile* %38), !dbg !6445
  %39 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6446
  %read_stream36 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %39, i32 0, i32 16, !dbg !6448
  %40 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %read_stream36, align 8, !dbg !6448
  %41 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6449
  %42 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6450
  %calldata37 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %42, i32 0, i32 4, !dbg !6451
  %43 = load i8*, i8** %calldata37, align 8, !dbg !6451
  %call38 = call i32 %40(%struct.PTCacheFile* %41, i8* %43), !dbg !6446
  %tobool39 = icmp ne i32 %call38, 0, !dbg !6446
  br i1 %tobool39, label %if.end43, label %if.then40, !dbg !6452

if.then40:                                        ; preds = %if.then35
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6453
  %error41 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 21, !dbg !6455
  %45 = load void (i8*, i8*)*, void (i8*, i8*)** %error41, align 8, !dbg !6455
  %46 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6456
  %calldata42 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %46, i32 0, i32 4, !dbg !6457
  %47 = load i8*, i8** %calldata42, align 8, !dbg !6457
  call void %45(i8* %47, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0)), !dbg !6453
  store i32 1, i32* %error, align 4, !dbg !6458
  br label %if.end43, !dbg !6459

if.end43:                                         ; preds = %if.then40, %if.then35
  br label %if.end44, !dbg !6460

if.end44:                                         ; preds = %if.end43, %if.end33
  %48 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !6461
  call void @ptcache_file_close(%struct.PTCacheFile* %48), !dbg !6462
  %49 = load i32, i32* %error, align 4, !dbg !6463
  %cmp45 = icmp eq i32 %49, 0, !dbg !6464
  %conv = zext i1 %cmp45 to i32, !dbg !6464
  store i32 %conv, i32* %retval, align 4, !dbg !6465
  br label %return, !dbg !6465

return:                                           ; preds = %if.end44, %if.end5, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !6466
  ret i32 %50, !dbg !6466
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_interpolate(%struct.PTCacheID* %pid, float %cfra, i32 %cfra1, i32 %cfra2) #0 !dbg !6467 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca float, align 4
  %cfra1.addr = alloca i32, align 4
  %cfra2.addr = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  %i = alloca i32, align 4
  %index = alloca i32*, align 8
  %totpoint = alloca i32, align 4
  %pid_totpoint = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  store i32 %cfra1, i32* %cfra1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra1.addr, metadata !6474, metadata !DIExpression()), !dbg !6475
  store i32 %cfra2, i32* %cfra2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra2.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !6478, metadata !DIExpression()), !dbg !6479
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32** %index, metadata !6482, metadata !DIExpression()), !dbg !6483
  store i32* %i, i32** %index, align 8, !dbg !6483
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6484
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !6486
  %1 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6486
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !6487
  %2 = load i32, i32* %flag, align 8, !dbg !6487
  %and = and i32 %2, 64, !dbg !6488
  %tobool = icmp ne i32 %and, 0, !dbg !6488
  br i1 %tobool, label %if.then, label %if.else, !dbg !6489

if.then:                                          ; preds = %entry
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6490
  %4 = load i32, i32* %cfra2.addr, align 4, !dbg !6492
  %call = call %struct.PTCacheMem* @ptcache_disk_frame_to_mem(%struct.PTCacheID* %3, i32 %4), !dbg !6493
  store %struct.PTCacheMem* %call, %struct.PTCacheMem** %pm, align 8, !dbg !6494
  br label %if.end, !dbg !6495

if.else:                                          ; preds = %entry
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6496
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %5, i32 0, i32 25, !dbg !6498
  %6 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !6498
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 20, !dbg !6499
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !6500
  %7 = load i8*, i8** %first, align 8, !dbg !6500
  %8 = bitcast i8* %7 to %struct.PTCacheMem*, !dbg !6496
  store %struct.PTCacheMem* %8, %struct.PTCacheMem** %pm, align 8, !dbg !6501
  br label %while.cond, !dbg !6502

while.cond:                                       ; preds = %while.body, %if.else
  %9 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6503
  %tobool2 = icmp ne %struct.PTCacheMem* %9, null, !dbg !6503
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !6504

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6505
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %10, i32 0, i32 2, !dbg !6506
  %11 = load i32, i32* %frame, align 8, !dbg !6506
  %12 = load i32, i32* %cfra2.addr, align 4, !dbg !6507
  %cmp = icmp ne i32 %11, %12, !dbg !6508
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !6509
  br i1 %13, label %while.body, label %while.end, !dbg !6502

while.body:                                       ; preds = %land.end
  %14 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6510
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %14, i32 0, i32 0, !dbg !6511
  %15 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !6511
  store %struct.PTCacheMem* %15, %struct.PTCacheMem** %pm, align 8, !dbg !6512
  br label %while.cond, !dbg !6502, !llvm.loop !6513

while.end:                                        ; preds = %land.end
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %16 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6514
  %tobool3 = icmp ne %struct.PTCacheMem* %16, null, !dbg !6514
  br i1 %tobool3, label %if.then4, label %if.end45, !dbg !6516

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !6517, metadata !DIExpression()), !dbg !6519
  %17 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6520
  %totpoint5 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %17, i32 0, i32 3, !dbg !6521
  %18 = load i32, i32* %totpoint5, align 4, !dbg !6521
  store i32 %18, i32* %totpoint, align 4, !dbg !6519
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6522
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %19, i32 0, i32 10, !dbg !6524
  %20 = load i32, i32* %data_types, align 4, !dbg !6524
  %and6 = and i32 %20, 1, !dbg !6525
  %cmp7 = icmp eq i32 %and6, 0, !dbg !6526
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !6527

if.then8:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %pid_totpoint, metadata !6528, metadata !DIExpression()), !dbg !6530
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6531
  %totpoint9 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 20, !dbg !6532
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint9, align 8, !dbg !6532
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6533
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 4, !dbg !6534
  %24 = load i8*, i8** %calldata, align 8, !dbg !6534
  %25 = load float, float* %cfra.addr, align 4, !dbg !6535
  %conv = fptosi float %25 to i32, !dbg !6536
  %call10 = call i32 %22(i8* %24, i32 %conv), !dbg !6531
  store i32 %call10, i32* %pid_totpoint, align 4, !dbg !6530
  %26 = load i32, i32* %totpoint, align 4, !dbg !6537
  %27 = load i32, i32* %pid_totpoint, align 4, !dbg !6539
  %cmp11 = icmp ne i32 %26, %27, !dbg !6540
  br i1 %cmp11, label %if.then13, label %if.end17, !dbg !6541

if.then13:                                        ; preds = %if.then8
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6542
  %error = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 21, !dbg !6544
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %error, align 8, !dbg !6544
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6545
  %calldata14 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 4, !dbg !6546
  %31 = load i8*, i8** %calldata14, align 8, !dbg !6546
  call void %29(i8* %31, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i64 0, i64 0)), !dbg !6542
  %32 = load i32, i32* %totpoint, align 4, !dbg !6547
  %33 = load i32, i32* %pid_totpoint, align 4, !dbg !6547
  %cmp15 = icmp slt i32 %32, %33, !dbg !6547
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !6547

cond.true:                                        ; preds = %if.then13
  %34 = load i32, i32* %totpoint, align 4, !dbg !6547
  br label %cond.end, !dbg !6547

cond.false:                                       ; preds = %if.then13
  %35 = load i32, i32* %pid_totpoint, align 4, !dbg !6547
  br label %cond.end, !dbg !6547

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ], !dbg !6547
  store i32 %cond, i32* %totpoint, align 4, !dbg !6548
  br label %if.end17, !dbg !6549

if.end17:                                         ; preds = %cond.end, %if.then8
  br label %if.end18, !dbg !6550

if.end18:                                         ; preds = %if.end17, %if.then4
  %36 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6551
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %36), !dbg !6552
  store i32 0, i32* %i, align 4, !dbg !6553
  br label %for.cond, !dbg !6555

for.cond:                                         ; preds = %for.inc, %if.end18
  %37 = load i32, i32* %i, align 4, !dbg !6556
  %38 = load i32, i32* %totpoint, align 4, !dbg !6558
  %cmp19 = icmp slt i32 %37, %38, !dbg !6559
  br i1 %cmp19, label %for.body, label %for.end, !dbg !6560

for.body:                                         ; preds = %for.cond
  %39 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6561
  %data_types21 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %39, i32 0, i32 4, !dbg !6564
  %40 = load i32, i32* %data_types21, align 8, !dbg !6564
  %and22 = and i32 %40, 1, !dbg !6565
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6565
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6566

if.then24:                                        ; preds = %for.body
  %41 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6567
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %41, i32 0, i32 7, !dbg !6568
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !6567
  %42 = load i8*, i8** %arrayidx, align 8, !dbg !6567
  %43 = bitcast i8* %42 to i32*, !dbg !6567
  store i32* %43, i32** %index, align 8, !dbg !6569
  br label %if.end25, !dbg !6570

if.end25:                                         ; preds = %if.then24, %for.body
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6571
  %interpolate_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 14, !dbg !6572
  %45 = load void (i32, i8*, i8**, float, float, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)** %interpolate_point, align 8, !dbg !6572
  %46 = load i32*, i32** %index, align 8, !dbg !6573
  %47 = load i32, i32* %46, align 4, !dbg !6574
  %48 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6575
  %calldata26 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %48, i32 0, i32 4, !dbg !6576
  %49 = load i8*, i8** %calldata26, align 8, !dbg !6576
  %50 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6577
  %cur27 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %50, i32 0, i32 7, !dbg !6578
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur27, i64 0, i64 0, !dbg !6577
  %51 = load float, float* %cfra.addr, align 4, !dbg !6579
  %52 = load i32, i32* %cfra1.addr, align 4, !dbg !6580
  %conv28 = sitofp i32 %52 to float, !dbg !6581
  %53 = load i32, i32* %cfra2.addr, align 4, !dbg !6582
  %conv29 = sitofp i32 %53 to float, !dbg !6583
  call void %45(i32 %47, i8* %49, i8** %arraydecay, float %51, float %conv28, float %conv29, float* null), !dbg !6571
  %54 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6584
  call void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %54), !dbg !6585
  br label %for.inc, !dbg !6586

for.inc:                                          ; preds = %if.end25
  %55 = load i32, i32* %i, align 4, !dbg !6587
  %inc = add nsw i32 %55, 1, !dbg !6587
  store i32 %inc, i32* %i, align 4, !dbg !6587
  br label %for.cond, !dbg !6588, !llvm.loop !6589

for.end:                                          ; preds = %for.cond
  %56 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6591
  %interpolate_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %56, i32 0, i32 19, !dbg !6593
  %57 = load void (i8*, %struct.PTCacheMem*, float, float, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data, align 8, !dbg !6593
  %tobool30 = icmp ne void (i8*, %struct.PTCacheMem*, float, float, float)* %57, null, !dbg !6591
  br i1 %tobool30, label %land.lhs.true, label %if.end38, !dbg !6594

land.lhs.true:                                    ; preds = %for.end
  %58 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6595
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %58, i32 0, i32 8, !dbg !6596
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !6597
  %59 = load i8*, i8** %first31, align 8, !dbg !6597
  %tobool32 = icmp ne i8* %59, null, !dbg !6595
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !6598

if.then33:                                        ; preds = %land.lhs.true
  %60 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6599
  %interpolate_extra_data34 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %60, i32 0, i32 19, !dbg !6600
  %61 = load void (i8*, %struct.PTCacheMem*, float, float, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)** %interpolate_extra_data34, align 8, !dbg !6600
  %62 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6601
  %calldata35 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %62, i32 0, i32 4, !dbg !6602
  %63 = load i8*, i8** %calldata35, align 8, !dbg !6602
  %64 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6603
  %65 = load float, float* %cfra.addr, align 4, !dbg !6604
  %66 = load i32, i32* %cfra1.addr, align 4, !dbg !6605
  %conv36 = sitofp i32 %66 to float, !dbg !6606
  %67 = load i32, i32* %cfra2.addr, align 4, !dbg !6607
  %conv37 = sitofp i32 %67 to float, !dbg !6608
  call void %61(i8* %63, %struct.PTCacheMem* %64, float %65, float %conv36, float %conv37), !dbg !6599
  br label %if.end38, !dbg !6599

if.end38:                                         ; preds = %if.then33, %land.lhs.true, %for.end
  %68 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6609
  %cache39 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %68, i32 0, i32 25, !dbg !6611
  %69 = load %struct.PointCache*, %struct.PointCache** %cache39, align 8, !dbg !6611
  %flag40 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %69, i32 0, i32 2, !dbg !6612
  %70 = load i32, i32* %flag40, align 8, !dbg !6612
  %and41 = and i32 %70, 64, !dbg !6613
  %tobool42 = icmp ne i32 %and41, 0, !dbg !6613
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6614

if.then43:                                        ; preds = %if.end38
  %71 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6615
  call void @ptcache_data_free(%struct.PTCacheMem* %71), !dbg !6617
  %72 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6618
  call void @ptcache_extra_free(%struct.PTCacheMem* %72), !dbg !6619
  %73 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6620
  %74 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6621
  %75 = bitcast %struct.PTCacheMem* %74 to i8*, !dbg !6621
  call void %73(i8* %75), !dbg !6620
  br label %if.end44, !dbg !6622

if.end44:                                         ; preds = %if.then43, %if.end38
  br label %if.end45, !dbg !6623

if.end45:                                         ; preds = %if.end44, %if.end
  ret i32 1, !dbg !6624
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_clear(%struct.PTCacheID* %pid, i32 %mode, i32 %cfra) #0 !dbg !6625 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %mode.addr = alloca i32, align 4
  %cfra.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %sta = alloca i32, align 4
  %end = alloca i32, align 4
  %dir = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  %path = alloca [1024 x i8], align 16
  %filename = alloca [2048 x i8], align 16
  %path_full = alloca [2048 x i8], align 16
  %ext = alloca [1024 x i8], align 16
  %frame = alloca i32, align 4
  %len2 = alloca i32, align 4
  %num = alloca [7 x i8], align 1
  %pm = alloca %struct.PTCacheMem*, align 8
  %link = alloca %struct.PTCacheMem*, align 8
  %pm212 = alloca %struct.PTCacheMem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !6628, metadata !DIExpression()), !dbg !6629
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6630, metadata !DIExpression()), !dbg !6631
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !6632, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6634, metadata !DIExpression()), !dbg !6635
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6638, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !6640, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !6646, metadata !DIExpression()), !dbg !6657
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata [2048 x i8]* %filename, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata [2048 x i8]* %path_full, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ext, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6666
  %tobool = icmp ne %struct.PTCacheID* %0, null, !dbg !6666
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6668

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6669
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %1, i32 0, i32 25, !dbg !6670
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6670
  %tobool1 = icmp ne %struct.PointCache* %2, null, !dbg !6669
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !6671

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6672
  %cache3 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 25, !dbg !6673
  %4 = load %struct.PointCache*, %struct.PointCache** %cache3, align 8, !dbg !6673
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 2, !dbg !6674
  %5 = load i32, i32* %flag, align 8, !dbg !6674
  %and = and i32 %5, 1, !dbg !6675
  %tobool4 = icmp ne i32 %and, 0, !dbg !6675
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6676

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !6677

if.end:                                           ; preds = %lor.lhs.false2
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6678
  %cache5 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 25, !dbg !6680
  %7 = load %struct.PointCache*, %struct.PointCache** %cache5, align 8, !dbg !6680
  %flag6 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !6681
  %8 = load i32, i32* %flag6, align 8, !dbg !6681
  %and7 = and i32 %8, 8192, !dbg !6682
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6682
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6683

if.then9:                                         ; preds = %if.end
  br label %return, !dbg !6684

if.end10:                                         ; preds = %if.end
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6685
  %cache11 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 25, !dbg !6686
  %10 = load %struct.PointCache*, %struct.PointCache** %cache11, align 8, !dbg !6686
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 5, !dbg !6687
  %11 = load i32, i32* %startframe, align 4, !dbg !6687
  store i32 %11, i32* %sta, align 4, !dbg !6688
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6689
  %cache12 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 25, !dbg !6690
  %13 = load %struct.PointCache*, %struct.PointCache** %cache12, align 8, !dbg !6690
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 6, !dbg !6691
  %14 = load i32, i32* %endframe, align 8, !dbg !6691
  store i32 %14, i32* %end, align 4, !dbg !6692
  %15 = load i32, i32* %mode.addr, align 4, !dbg !6693
  switch i32 %15, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb197
  ], !dbg !6694

sw.bb:                                            ; preds = %if.end10, %if.end10, %if.end10
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6695
  %cache13 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 25, !dbg !6698
  %17 = load %struct.PointCache*, %struct.PointCache** %cache13, align 8, !dbg !6698
  %flag14 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %17, i32 0, i32 2, !dbg !6699
  %18 = load i32, i32* %flag14, align 8, !dbg !6699
  %and15 = and i32 %18, 64, !dbg !6700
  %tobool16 = icmp ne i32 %and15, 0, !dbg !6700
  br i1 %tobool16, label %if.then17, label %if.else121, !dbg !6701

if.then17:                                        ; preds = %sw.bb
  %19 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6702
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !6704
  %call = call i32 @ptcache_path(%struct.PTCacheID* %19, i8* %arraydecay), !dbg !6705
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6706
  %arraydecay18 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6707
  %21 = load i32, i32* %cfra.addr, align 4, !dbg !6708
  %call19 = call i32 @ptcache_filename(%struct.PTCacheID* %20, i8* %arraydecay18, i32 %21, i16 signext 0, i16 signext 0), !dbg !6709
  store i32 %call19, i32* %len, align 4, !dbg !6710
  %arraydecay20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !6711
  %call21 = call %struct.__dirstream* @opendir(i8* %arraydecay20), !dbg !6712
  store %struct.__dirstream* %call21, %struct.__dirstream** %dir, align 8, !dbg !6713
  %22 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !6714
  %cmp = icmp eq %struct.__dirstream* %22, null, !dbg !6716
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !6717

if.then22:                                        ; preds = %if.then17
  br label %return, !dbg !6718

if.end23:                                         ; preds = %if.then17
  %arraydecay24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !6719
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6720
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 6, !dbg !6721
  %24 = load i32, i32* %stack_index, align 4, !dbg !6721
  %call25 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay24, i64 1024, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %24), !dbg !6722
  br label %while.cond, !dbg !6723

while.cond:                                       ; preds = %if.end106, %if.end23
  %25 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !6724
  %call26 = call %struct.dirent* @readdir(%struct.__dirstream* %25), !dbg !6725
  store %struct.dirent* %call26, %struct.dirent** %de, align 8, !dbg !6726
  %cmp27 = icmp ne %struct.dirent* %call26, null, !dbg !6727
  br i1 %cmp27, label %while.body, label %while.end, !dbg !6723

while.body:                                       ; preds = %while.cond
  %26 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6728
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %26, i32 0, i32 4, !dbg !6731
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !6728
  %arraydecay29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !6732
  %call30 = call i8* @strstr(i8* %arraydecay28, i8* %arraydecay29) #6, !dbg !6733
  %tobool31 = icmp ne i8* %call30, null, !dbg !6733
  br i1 %tobool31, label %if.then32, label %if.end106, !dbg !6734

if.then32:                                        ; preds = %while.body
  %arraydecay33 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6735
  %27 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6738
  %d_name34 = getelementptr inbounds %struct.dirent, %struct.dirent* %27, i32 0, i32 4, !dbg !6739
  %arraydecay35 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name34, i64 0, i64 0, !dbg !6738
  %28 = load i32, i32* %len, align 4, !dbg !6740
  %conv = zext i32 %28 to i64, !dbg !6740
  %call36 = call i32 @strncmp(i8* %arraydecay33, i8* %arraydecay35, i64 %conv) #6, !dbg !6741
  %cmp37 = icmp eq i32 %call36, 0, !dbg !6742
  br i1 %cmp37, label %if.then39, label %if.end105, !dbg !6743

if.then39:                                        ; preds = %if.then32
  %29 = load i32, i32* %mode.addr, align 4, !dbg !6744
  %cmp40 = icmp eq i32 %29, 0, !dbg !6747
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !6748

if.then42:                                        ; preds = %if.then39
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6749
  %cache43 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 25, !dbg !6749
  %31 = load %struct.PointCache*, %struct.PointCache** %cache43, align 8, !dbg !6749
  %startframe44 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 5, !dbg !6749
  %32 = load i32, i32* %startframe44, align 4, !dbg !6749
  %cmp45 = icmp slt i32 %32, 0, !dbg !6749
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !6749

cond.true:                                        ; preds = %if.then42
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6749
  %cache47 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 25, !dbg !6749
  %34 = load %struct.PointCache*, %struct.PointCache** %cache47, align 8, !dbg !6749
  %startframe48 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %34, i32 0, i32 5, !dbg !6749
  %35 = load i32, i32* %startframe48, align 4, !dbg !6749
  br label %cond.end, !dbg !6749

cond.false:                                       ; preds = %if.then42
  br label %cond.end, !dbg !6749

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %35, %cond.true ], [ 0, %cond.false ], !dbg !6749
  %36 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6751
  %cache49 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %36, i32 0, i32 25, !dbg !6752
  %37 = load %struct.PointCache*, %struct.PointCache** %cache49, align 8, !dbg !6752
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %37, i32 0, i32 8, !dbg !6753
  store i32 %cond, i32* %last_exact, align 8, !dbg !6754
  %arraydecay50 = getelementptr inbounds [2048 x i8], [2048 x i8]* %path_full, i64 0, i64 0, !dbg !6755
  %arraydecay51 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !6756
  %38 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6757
  %d_name52 = getelementptr inbounds %struct.dirent, %struct.dirent* %38, i32 0, i32 4, !dbg !6758
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name52, i64 0, i64 0, !dbg !6757
  call void @BLI_join_dirfile(i8* %arraydecay50, i64 2048, i8* %arraydecay51, i8* %arraydecay53), !dbg !6759
  %arraydecay54 = getelementptr inbounds [2048 x i8], [2048 x i8]* %path_full, i64 0, i64 0, !dbg !6760
  %call55 = call i32 @BLI_delete(i8* %arraydecay54, i8 zeroext 0, i8 zeroext 0), !dbg !6761
  br label %if.end104, !dbg !6762

if.else:                                          ; preds = %if.then39
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !6763, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !6766, metadata !DIExpression()), !dbg !6767
  %39 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6768
  %d_name56 = getelementptr inbounds %struct.dirent, %struct.dirent* %39, i32 0, i32 4, !dbg !6769
  %arraydecay57 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name56, i64 0, i64 0, !dbg !6768
  %call58 = call i64 @strlen(i8* %arraydecay57) #6, !dbg !6770
  %conv59 = trunc i64 %call58 to i32, !dbg !6771
  store i32 %conv59, i32* %len2, align 4, !dbg !6767
  call void @llvm.dbg.declare(metadata [7 x i8]* %num, metadata !6772, metadata !DIExpression()), !dbg !6773
  %40 = load i32, i32* %len2, align 4, !dbg !6774
  %cmp60 = icmp ugt i32 %40, 15, !dbg !6776
  br i1 %cmp60, label %if.then62, label %if.end103, !dbg !6777

if.then62:                                        ; preds = %if.else
  %arraydecay63 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !6778
  %41 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6780
  %d_name64 = getelementptr inbounds %struct.dirent, %struct.dirent* %41, i32 0, i32 4, !dbg !6781
  %arraydecay65 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name64, i64 0, i64 0, !dbg !6780
  %42 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6782
  %d_name66 = getelementptr inbounds %struct.dirent, %struct.dirent* %42, i32 0, i32 4, !dbg !6783
  %arraydecay67 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name66, i64 0, i64 0, !dbg !6782
  %call68 = call i64 @strlen(i8* %arraydecay67) #6, !dbg !6784
  %sub = sub i64 %call68, 15, !dbg !6785
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay65, i64 %sub, !dbg !6786
  %call69 = call i8* @BLI_strncpy(i8* %arraydecay63, i8* %add.ptr, i64 7), !dbg !6787
  %arraydecay70 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !6788
  %call71 = call i32 @atoi(i8* %arraydecay70) #6, !dbg !6789
  store i32 %call71, i32* %frame, align 4, !dbg !6790
  %43 = load i32, i32* %mode.addr, align 4, !dbg !6791
  %cmp72 = icmp eq i32 %43, 2, !dbg !6793
  br i1 %cmp72, label %land.lhs.true, label %lor.lhs.false76, !dbg !6794

land.lhs.true:                                    ; preds = %if.then62
  %44 = load i32, i32* %frame, align 4, !dbg !6795
  %45 = load i32, i32* %cfra.addr, align 4, !dbg !6796
  %cmp74 = icmp ult i32 %44, %45, !dbg !6797
  br i1 %cmp74, label %if.then82, label %lor.lhs.false76, !dbg !6798

lor.lhs.false76:                                  ; preds = %land.lhs.true, %if.then62
  %46 = load i32, i32* %mode.addr, align 4, !dbg !6799
  %cmp77 = icmp eq i32 %46, 3, !dbg !6800
  br i1 %cmp77, label %land.lhs.true79, label %if.end102, !dbg !6801

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %47 = load i32, i32* %frame, align 4, !dbg !6802
  %48 = load i32, i32* %cfra.addr, align 4, !dbg !6803
  %cmp80 = icmp ugt i32 %47, %48, !dbg !6804
  br i1 %cmp80, label %if.then82, label %if.end102, !dbg !6805

if.then82:                                        ; preds = %land.lhs.true79, %land.lhs.true
  %arraydecay83 = getelementptr inbounds [2048 x i8], [2048 x i8]* %path_full, i64 0, i64 0, !dbg !6806
  %arraydecay84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !6808
  %49 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !6809
  %d_name85 = getelementptr inbounds %struct.dirent, %struct.dirent* %49, i32 0, i32 4, !dbg !6810
  %arraydecay86 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name85, i64 0, i64 0, !dbg !6809
  call void @BLI_join_dirfile(i8* %arraydecay83, i64 2048, i8* %arraydecay84, i8* %arraydecay86), !dbg !6811
  %arraydecay87 = getelementptr inbounds [2048 x i8], [2048 x i8]* %path_full, i64 0, i64 0, !dbg !6812
  %call88 = call i32 @BLI_delete(i8* %arraydecay87, i8 zeroext 0, i8 zeroext 0), !dbg !6813
  %50 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6814
  %cache89 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %50, i32 0, i32 25, !dbg !6816
  %51 = load %struct.PointCache*, %struct.PointCache** %cache89, align 8, !dbg !6816
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %51, i32 0, i32 19, !dbg !6817
  %52 = load i8*, i8** %cached_frames, align 8, !dbg !6817
  %tobool90 = icmp ne i8* %52, null, !dbg !6814
  br i1 %tobool90, label %land.lhs.true91, label %if.end101, !dbg !6818

land.lhs.true91:                                  ; preds = %if.then82
  %53 = load i32, i32* %frame, align 4, !dbg !6819
  %54 = load i32, i32* %sta, align 4, !dbg !6820
  %cmp92 = icmp uge i32 %53, %54, !dbg !6821
  br i1 %cmp92, label %land.lhs.true94, label %if.end101, !dbg !6822

land.lhs.true94:                                  ; preds = %land.lhs.true91
  %55 = load i32, i32* %frame, align 4, !dbg !6823
  %56 = load i32, i32* %end, align 4, !dbg !6824
  %cmp95 = icmp ule i32 %55, %56, !dbg !6825
  br i1 %cmp95, label %if.then97, label %if.end101, !dbg !6826

if.then97:                                        ; preds = %land.lhs.true94
  %57 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6827
  %cache98 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %57, i32 0, i32 25, !dbg !6828
  %58 = load %struct.PointCache*, %struct.PointCache** %cache98, align 8, !dbg !6828
  %cached_frames99 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %58, i32 0, i32 19, !dbg !6829
  %59 = load i8*, i8** %cached_frames99, align 8, !dbg !6829
  %60 = load i32, i32* %frame, align 4, !dbg !6830
  %61 = load i32, i32* %sta, align 4, !dbg !6831
  %sub100 = sub i32 %60, %61, !dbg !6832
  %idxprom = zext i32 %sub100 to i64, !dbg !6827
  %arrayidx = getelementptr inbounds i8, i8* %59, i64 %idxprom, !dbg !6827
  store i8 0, i8* %arrayidx, align 1, !dbg !6833
  br label %if.end101, !dbg !6827

if.end101:                                        ; preds = %if.then97, %land.lhs.true94, %land.lhs.true91, %if.then82
  br label %if.end102, !dbg !6834

if.end102:                                        ; preds = %if.end101, %land.lhs.true79, %lor.lhs.false76
  br label %if.end103, !dbg !6835

if.end103:                                        ; preds = %if.end102, %if.else
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %cond.end
  br label %if.end105, !dbg !6836

if.end105:                                        ; preds = %if.end104, %if.then32
  br label %if.end106, !dbg !6837

if.end106:                                        ; preds = %if.end105, %while.body
  br label %while.cond, !dbg !6723, !llvm.loop !6838

while.end:                                        ; preds = %while.cond
  %62 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !6840
  %call107 = call i32 @closedir(%struct.__dirstream* %62), !dbg !6841
  %63 = load i32, i32* %mode.addr, align 4, !dbg !6842
  %cmp108 = icmp eq i32 %63, 0, !dbg !6844
  br i1 %cmp108, label %land.lhs.true110, label %if.end120, !dbg !6845

land.lhs.true110:                                 ; preds = %while.end
  %64 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6846
  %cache111 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %64, i32 0, i32 25, !dbg !6847
  %65 = load %struct.PointCache*, %struct.PointCache** %cache111, align 8, !dbg !6847
  %cached_frames112 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %65, i32 0, i32 19, !dbg !6848
  %66 = load i8*, i8** %cached_frames112, align 8, !dbg !6848
  %tobool113 = icmp ne i8* %66, null, !dbg !6846
  br i1 %tobool113, label %if.then114, label %if.end120, !dbg !6849

if.then114:                                       ; preds = %land.lhs.true110
  %67 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6850
  %cache115 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %67, i32 0, i32 25, !dbg !6851
  %68 = load %struct.PointCache*, %struct.PointCache** %cache115, align 8, !dbg !6851
  %cached_frames116 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %68, i32 0, i32 19, !dbg !6852
  %69 = load i8*, i8** %cached_frames116, align 8, !dbg !6852
  %70 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6853
  %71 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6854
  %cache117 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %71, i32 0, i32 25, !dbg !6855
  %72 = load %struct.PointCache*, %struct.PointCache** %cache117, align 8, !dbg !6855
  %cached_frames118 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %72, i32 0, i32 19, !dbg !6856
  %73 = load i8*, i8** %cached_frames118, align 8, !dbg !6856
  %call119 = call i64 %70(i8* %73), !dbg !6853
  call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 0, i64 %call119, i1 false), !dbg !6857
  br label %if.end120, !dbg !6857

if.end120:                                        ; preds = %if.then114, %land.lhs.true110, %while.end
  br label %if.end196, !dbg !6858

if.else121:                                       ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !6859, metadata !DIExpression()), !dbg !6861
  %74 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6862
  %cache122 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %74, i32 0, i32 25, !dbg !6863
  %75 = load %struct.PointCache*, %struct.PointCache** %cache122, align 8, !dbg !6863
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %75, i32 0, i32 20, !dbg !6864
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !6865
  %76 = load i8*, i8** %first, align 8, !dbg !6865
  %77 = bitcast i8* %76 to %struct.PTCacheMem*, !dbg !6862
  store %struct.PTCacheMem* %77, %struct.PTCacheMem** %pm, align 8, !dbg !6861
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %link, metadata !6866, metadata !DIExpression()), !dbg !6867
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %link, align 8, !dbg !6867
  %78 = load i32, i32* %mode.addr, align 4, !dbg !6868
  %cmp123 = icmp eq i32 %78, 0, !dbg !6870
  br i1 %cmp123, label %if.then125, label %if.else151, !dbg !6871

if.then125:                                       ; preds = %if.else121
  %79 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6872
  %cache126 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %79, i32 0, i32 25, !dbg !6872
  %80 = load %struct.PointCache*, %struct.PointCache** %cache126, align 8, !dbg !6872
  %startframe127 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %80, i32 0, i32 5, !dbg !6872
  %81 = load i32, i32* %startframe127, align 4, !dbg !6872
  %cmp128 = icmp slt i32 %81, 0, !dbg !6872
  br i1 %cmp128, label %cond.true130, label %cond.false133, !dbg !6872

cond.true130:                                     ; preds = %if.then125
  %82 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6872
  %cache131 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %82, i32 0, i32 25, !dbg !6872
  %83 = load %struct.PointCache*, %struct.PointCache** %cache131, align 8, !dbg !6872
  %startframe132 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %83, i32 0, i32 5, !dbg !6872
  %84 = load i32, i32* %startframe132, align 4, !dbg !6872
  br label %cond.end134, !dbg !6872

cond.false133:                                    ; preds = %if.then125
  br label %cond.end134, !dbg !6872

cond.end134:                                      ; preds = %cond.false133, %cond.true130
  %cond135 = phi i32 [ %84, %cond.true130 ], [ 0, %cond.false133 ], !dbg !6872
  %85 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6874
  %cache136 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %85, i32 0, i32 25, !dbg !6875
  %86 = load %struct.PointCache*, %struct.PointCache** %cache136, align 8, !dbg !6875
  %last_exact137 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %86, i32 0, i32 8, !dbg !6876
  store i32 %cond135, i32* %last_exact137, align 8, !dbg !6877
  br label %for.cond, !dbg !6878

for.cond:                                         ; preds = %for.inc, %cond.end134
  %87 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6879
  %tobool138 = icmp ne %struct.PTCacheMem* %87, null, !dbg !6882
  br i1 %tobool138, label %for.body, label %for.end, !dbg !6882

for.body:                                         ; preds = %for.cond
  %88 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6883
  call void @ptcache_data_free(%struct.PTCacheMem* %88), !dbg !6885
  %89 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6886
  call void @ptcache_extra_free(%struct.PTCacheMem* %89), !dbg !6887
  br label %for.inc, !dbg !6888

for.inc:                                          ; preds = %for.body
  %90 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6889
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %90, i32 0, i32 0, !dbg !6890
  %91 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !6890
  store %struct.PTCacheMem* %91, %struct.PTCacheMem** %pm, align 8, !dbg !6891
  br label %for.cond, !dbg !6892, !llvm.loop !6893

for.end:                                          ; preds = %for.cond
  %92 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6895
  %cache139 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %92, i32 0, i32 25, !dbg !6896
  %93 = load %struct.PointCache*, %struct.PointCache** %cache139, align 8, !dbg !6896
  %mem_cache140 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %93, i32 0, i32 20, !dbg !6897
  call void @BLI_freelistN(%struct.ListBase* %mem_cache140), !dbg !6898
  %94 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6899
  %cache141 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %94, i32 0, i32 25, !dbg !6901
  %95 = load %struct.PointCache*, %struct.PointCache** %cache141, align 8, !dbg !6901
  %cached_frames142 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %95, i32 0, i32 19, !dbg !6902
  %96 = load i8*, i8** %cached_frames142, align 8, !dbg !6902
  %tobool143 = icmp ne i8* %96, null, !dbg !6899
  br i1 %tobool143, label %if.then144, label %if.end150, !dbg !6903

if.then144:                                       ; preds = %for.end
  %97 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6904
  %cache145 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %97, i32 0, i32 25, !dbg !6905
  %98 = load %struct.PointCache*, %struct.PointCache** %cache145, align 8, !dbg !6905
  %cached_frames146 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %98, i32 0, i32 19, !dbg !6906
  %99 = load i8*, i8** %cached_frames146, align 8, !dbg !6906
  %100 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6907
  %101 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6908
  %cache147 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %101, i32 0, i32 25, !dbg !6909
  %102 = load %struct.PointCache*, %struct.PointCache** %cache147, align 8, !dbg !6909
  %cached_frames148 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %102, i32 0, i32 19, !dbg !6910
  %103 = load i8*, i8** %cached_frames148, align 8, !dbg !6910
  %call149 = call i64 %100(i8* %103), !dbg !6907
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 %call149, i1 false), !dbg !6911
  br label %if.end150, !dbg !6911

if.end150:                                        ; preds = %if.then144, %for.end
  br label %if.end195, !dbg !6912

if.else151:                                       ; preds = %if.else121
  br label %while.cond152, !dbg !6913

while.cond152:                                    ; preds = %if.end193, %if.else151
  %104 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6915
  %tobool153 = icmp ne %struct.PTCacheMem* %104, null, !dbg !6913
  br i1 %tobool153, label %while.body154, label %while.end194, !dbg !6913

while.body154:                                    ; preds = %while.cond152
  %105 = load i32, i32* %mode.addr, align 4, !dbg !6916
  %cmp155 = icmp eq i32 %105, 2, !dbg !6919
  br i1 %cmp155, label %land.lhs.true157, label %lor.lhs.false161, !dbg !6920

land.lhs.true157:                                 ; preds = %while.body154
  %106 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6921
  %frame158 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %106, i32 0, i32 2, !dbg !6922
  %107 = load i32, i32* %frame158, align 8, !dbg !6922
  %108 = load i32, i32* %cfra.addr, align 4, !dbg !6923
  %cmp159 = icmp ult i32 %107, %108, !dbg !6924
  br i1 %cmp159, label %if.then168, label %lor.lhs.false161, !dbg !6925

lor.lhs.false161:                                 ; preds = %land.lhs.true157, %while.body154
  %109 = load i32, i32* %mode.addr, align 4, !dbg !6926
  %cmp162 = icmp eq i32 %109, 3, !dbg !6927
  br i1 %cmp162, label %land.lhs.true164, label %if.else191, !dbg !6928

land.lhs.true164:                                 ; preds = %lor.lhs.false161
  %110 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6929
  %frame165 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %110, i32 0, i32 2, !dbg !6930
  %111 = load i32, i32* %frame165, align 8, !dbg !6930
  %112 = load i32, i32* %cfra.addr, align 4, !dbg !6931
  %cmp166 = icmp ugt i32 %111, %112, !dbg !6932
  br i1 %cmp166, label %if.then168, label %if.else191, !dbg !6933

if.then168:                                       ; preds = %land.lhs.true164, %land.lhs.true157
  %113 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6934
  store %struct.PTCacheMem* %113, %struct.PTCacheMem** %link, align 8, !dbg !6936
  %114 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6937
  %cache169 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %114, i32 0, i32 25, !dbg !6939
  %115 = load %struct.PointCache*, %struct.PointCache** %cache169, align 8, !dbg !6939
  %cached_frames170 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %115, i32 0, i32 19, !dbg !6940
  %116 = load i8*, i8** %cached_frames170, align 8, !dbg !6940
  %tobool171 = icmp ne i8* %116, null, !dbg !6937
  br i1 %tobool171, label %land.lhs.true172, label %if.end187, !dbg !6941

land.lhs.true172:                                 ; preds = %if.then168
  %117 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6942
  %frame173 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %117, i32 0, i32 2, !dbg !6943
  %118 = load i32, i32* %frame173, align 8, !dbg !6943
  %119 = load i32, i32* %sta, align 4, !dbg !6944
  %cmp174 = icmp uge i32 %118, %119, !dbg !6945
  br i1 %cmp174, label %land.lhs.true176, label %if.end187, !dbg !6946

land.lhs.true176:                                 ; preds = %land.lhs.true172
  %120 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6947
  %frame177 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %120, i32 0, i32 2, !dbg !6948
  %121 = load i32, i32* %frame177, align 8, !dbg !6948
  %122 = load i32, i32* %end, align 4, !dbg !6949
  %cmp178 = icmp ule i32 %121, %122, !dbg !6950
  br i1 %cmp178, label %if.then180, label %if.end187, !dbg !6951

if.then180:                                       ; preds = %land.lhs.true176
  %123 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6952
  %cache181 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %123, i32 0, i32 25, !dbg !6953
  %124 = load %struct.PointCache*, %struct.PointCache** %cache181, align 8, !dbg !6953
  %cached_frames182 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %124, i32 0, i32 19, !dbg !6954
  %125 = load i8*, i8** %cached_frames182, align 8, !dbg !6954
  %126 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6955
  %frame183 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %126, i32 0, i32 2, !dbg !6956
  %127 = load i32, i32* %frame183, align 8, !dbg !6956
  %128 = load i32, i32* %sta, align 4, !dbg !6957
  %sub184 = sub i32 %127, %128, !dbg !6958
  %idxprom185 = zext i32 %sub184 to i64, !dbg !6952
  %arrayidx186 = getelementptr inbounds i8, i8* %125, i64 %idxprom185, !dbg !6952
  store i8 0, i8* %arrayidx186, align 1, !dbg !6959
  br label %if.end187, !dbg !6952

if.end187:                                        ; preds = %if.then180, %land.lhs.true176, %land.lhs.true172, %if.then168
  %129 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6960
  call void @ptcache_data_free(%struct.PTCacheMem* %129), !dbg !6961
  %130 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6962
  call void @ptcache_extra_free(%struct.PTCacheMem* %130), !dbg !6963
  %131 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6964
  %next188 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %131, i32 0, i32 0, !dbg !6965
  %132 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next188, align 8, !dbg !6965
  store %struct.PTCacheMem* %132, %struct.PTCacheMem** %pm, align 8, !dbg !6966
  %133 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6967
  %cache189 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %133, i32 0, i32 25, !dbg !6968
  %134 = load %struct.PointCache*, %struct.PointCache** %cache189, align 8, !dbg !6968
  %mem_cache190 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %134, i32 0, i32 20, !dbg !6969
  %135 = load %struct.PTCacheMem*, %struct.PTCacheMem** %link, align 8, !dbg !6970
  %136 = bitcast %struct.PTCacheMem* %135 to i8*, !dbg !6970
  call void @BLI_freelinkN(%struct.ListBase* %mem_cache190, i8* %136), !dbg !6971
  br label %if.end193, !dbg !6972

if.else191:                                       ; preds = %land.lhs.true164, %lor.lhs.false161
  %137 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !6973
  %next192 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %137, i32 0, i32 0, !dbg !6974
  %138 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next192, align 8, !dbg !6974
  store %struct.PTCacheMem* %138, %struct.PTCacheMem** %pm, align 8, !dbg !6975
  br label %if.end193

if.end193:                                        ; preds = %if.else191, %if.end187
  br label %while.cond152, !dbg !6913, !llvm.loop !6976

while.end194:                                     ; preds = %while.cond152
  br label %if.end195

if.end195:                                        ; preds = %while.end194, %if.end150
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.end120
  br label %sw.epilog, !dbg !6978

sw.bb197:                                         ; preds = %if.end10
  %139 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6979
  %cache198 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %139, i32 0, i32 25, !dbg !6981
  %140 = load %struct.PointCache*, %struct.PointCache** %cache198, align 8, !dbg !6981
  %flag199 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %140, i32 0, i32 2, !dbg !6982
  %141 = load i32, i32* %flag199, align 8, !dbg !6982
  %and200 = and i32 %141, 64, !dbg !6983
  %tobool201 = icmp ne i32 %and200, 0, !dbg !6983
  br i1 %tobool201, label %if.then202, label %if.else211, !dbg !6984

if.then202:                                       ; preds = %sw.bb197
  %142 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6985
  %143 = load i32, i32* %cfra.addr, align 4, !dbg !6988
  %call203 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %142, i32 %143), !dbg !6989
  %tobool204 = icmp ne i32 %call203, 0, !dbg !6989
  br i1 %tobool204, label %if.then205, label %if.end210, !dbg !6990

if.then205:                                       ; preds = %if.then202
  %144 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !6991
  %arraydecay206 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6993
  %145 = load i32, i32* %cfra.addr, align 4, !dbg !6994
  %call207 = call i32 @ptcache_filename(%struct.PTCacheID* %144, i8* %arraydecay206, i32 %145, i16 signext 1, i16 signext 1), !dbg !6995
  %arraydecay208 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !6996
  %call209 = call i32 @BLI_delete(i8* %arraydecay208, i8 zeroext 0, i8 zeroext 0), !dbg !6997
  br label %if.end210, !dbg !6998

if.end210:                                        ; preds = %if.then205, %if.then202
  br label %if.end229, !dbg !6999

if.else211:                                       ; preds = %sw.bb197
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm212, metadata !7000, metadata !DIExpression()), !dbg !7002
  %146 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7003
  %cache213 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %146, i32 0, i32 25, !dbg !7004
  %147 = load %struct.PointCache*, %struct.PointCache** %cache213, align 8, !dbg !7004
  %mem_cache214 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %147, i32 0, i32 20, !dbg !7005
  %first215 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache214, i32 0, i32 0, !dbg !7006
  %148 = load i8*, i8** %first215, align 8, !dbg !7006
  %149 = bitcast i8* %148 to %struct.PTCacheMem*, !dbg !7003
  store %struct.PTCacheMem* %149, %struct.PTCacheMem** %pm212, align 8, !dbg !7002
  br label %for.cond216, !dbg !7007

for.cond216:                                      ; preds = %for.inc226, %if.else211
  %150 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7008
  %tobool217 = icmp ne %struct.PTCacheMem* %150, null, !dbg !7011
  br i1 %tobool217, label %for.body218, label %for.end228, !dbg !7011

for.body218:                                      ; preds = %for.cond216
  %151 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7012
  %frame219 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %151, i32 0, i32 2, !dbg !7015
  %152 = load i32, i32* %frame219, align 8, !dbg !7015
  %153 = load i32, i32* %cfra.addr, align 4, !dbg !7016
  %cmp220 = icmp eq i32 %152, %153, !dbg !7017
  br i1 %cmp220, label %if.then222, label %if.end225, !dbg !7018

if.then222:                                       ; preds = %for.body218
  %154 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7019
  call void @ptcache_data_free(%struct.PTCacheMem* %154), !dbg !7021
  %155 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7022
  call void @ptcache_extra_free(%struct.PTCacheMem* %155), !dbg !7023
  %156 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7024
  %cache223 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %156, i32 0, i32 25, !dbg !7025
  %157 = load %struct.PointCache*, %struct.PointCache** %cache223, align 8, !dbg !7025
  %mem_cache224 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %157, i32 0, i32 20, !dbg !7026
  %158 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7027
  %159 = bitcast %struct.PTCacheMem* %158 to i8*, !dbg !7027
  call void @BLI_freelinkN(%struct.ListBase* %mem_cache224, i8* %159), !dbg !7028
  br label %for.end228, !dbg !7029

if.end225:                                        ; preds = %for.body218
  br label %for.inc226, !dbg !7030

for.inc226:                                       ; preds = %if.end225
  %160 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm212, align 8, !dbg !7031
  %next227 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %160, i32 0, i32 0, !dbg !7032
  %161 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next227, align 8, !dbg !7032
  store %struct.PTCacheMem* %161, %struct.PTCacheMem** %pm212, align 8, !dbg !7033
  br label %for.cond216, !dbg !7034, !llvm.loop !7035

for.end228:                                       ; preds = %if.then222, %for.cond216
  br label %if.end229

if.end229:                                        ; preds = %for.end228, %if.end210
  %162 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7037
  %cache230 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %162, i32 0, i32 25, !dbg !7039
  %163 = load %struct.PointCache*, %struct.PointCache** %cache230, align 8, !dbg !7039
  %cached_frames231 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %163, i32 0, i32 19, !dbg !7040
  %164 = load i8*, i8** %cached_frames231, align 8, !dbg !7040
  %tobool232 = icmp ne i8* %164, null, !dbg !7037
  br i1 %tobool232, label %land.lhs.true233, label %if.end245, !dbg !7041

land.lhs.true233:                                 ; preds = %if.end229
  %165 = load i32, i32* %cfra.addr, align 4, !dbg !7042
  %166 = load i32, i32* %sta, align 4, !dbg !7043
  %cmp234 = icmp uge i32 %165, %166, !dbg !7044
  br i1 %cmp234, label %land.lhs.true236, label %if.end245, !dbg !7045

land.lhs.true236:                                 ; preds = %land.lhs.true233
  %167 = load i32, i32* %cfra.addr, align 4, !dbg !7046
  %168 = load i32, i32* %end, align 4, !dbg !7047
  %cmp237 = icmp ule i32 %167, %168, !dbg !7048
  br i1 %cmp237, label %if.then239, label %if.end245, !dbg !7049

if.then239:                                       ; preds = %land.lhs.true236
  %169 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7050
  %cache240 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %169, i32 0, i32 25, !dbg !7051
  %170 = load %struct.PointCache*, %struct.PointCache** %cache240, align 8, !dbg !7051
  %cached_frames241 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %170, i32 0, i32 19, !dbg !7052
  %171 = load i8*, i8** %cached_frames241, align 8, !dbg !7052
  %172 = load i32, i32* %cfra.addr, align 4, !dbg !7053
  %173 = load i32, i32* %sta, align 4, !dbg !7054
  %sub242 = sub i32 %172, %173, !dbg !7055
  %idxprom243 = zext i32 %sub242 to i64, !dbg !7050
  %arrayidx244 = getelementptr inbounds i8, i8* %171, i64 %idxprom243, !dbg !7050
  store i8 0, i8* %arrayidx244, align 1, !dbg !7056
  br label %if.end245, !dbg !7050

if.end245:                                        ; preds = %if.then239, %land.lhs.true236, %land.lhs.true233, %if.end229
  br label %sw.epilog, !dbg !7057

sw.epilog:                                        ; preds = %if.end10, %if.end245, %if.end196
  %174 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7058
  call void @BKE_ptcache_update_info(%struct.PTCacheID* %174), !dbg !7059
  br label %return, !dbg !7060

return:                                           ; preds = %sw.epilog, %if.then22, %if.then9, %if.then
  ret void, !dbg !7060
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_write(%struct.PTCacheID* %pid, i32 %cfra) #0 !dbg !7061 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %cache = alloca %struct.PointCache*, align 8
  %totpoint = alloca i32, align 4
  %overwrite = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !7068, metadata !DIExpression()), !dbg !7071
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7072
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !7073
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !7073
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !7071
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !7074, metadata !DIExpression()), !dbg !7075
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7076
  %totpoint2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 20, !dbg !7077
  %3 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint2, align 8, !dbg !7077
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7078
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 4, !dbg !7079
  %5 = load i8*, i8** %calldata, align 8, !dbg !7079
  %6 = load i32, i32* %cfra.addr, align 4, !dbg !7080
  %call = call i32 %3(i8* %5, i32 %6), !dbg !7076
  store i32 %call, i32* %totpoint, align 4, !dbg !7075
  call void @llvm.dbg.declare(metadata i32* %overwrite, metadata !7081, metadata !DIExpression()), !dbg !7082
  store i32 0, i32* %overwrite, align 4, !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7083, metadata !DIExpression()), !dbg !7084
  store i32 0, i32* %error, align 4, !dbg !7084
  %7 = load i32, i32* %totpoint, align 4, !dbg !7085
  %cmp = icmp eq i32 %7, 0, !dbg !7087
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7088

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %cfra.addr, align 4, !dbg !7089
  %tobool = icmp ne i32 %8, 0, !dbg !7089
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7090

cond.true:                                        ; preds = %lor.lhs.false
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7091
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 10, !dbg !7092
  %10 = load i32, i32* %data_types, align 4, !dbg !7092
  %cmp3 = icmp eq i32 %10, 0, !dbg !7093
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7089

cond.false:                                       ; preds = %lor.lhs.false
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7094
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 11, !dbg !7095
  %12 = load i32, i32* %info_types, align 8, !dbg !7095
  %cmp4 = icmp eq i32 %12, 0, !dbg !7096
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7090

if.then:                                          ; preds = %cond.false, %cond.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7097
  br label %return, !dbg !7097

if.end:                                           ; preds = %cond.false, %cond.true
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7098
  %14 = load i32, i32* %cfra.addr, align 4, !dbg !7100
  %call5 = call i32 @ptcache_write_needed(%struct.PTCacheID* %13, i32 %14, i32* %overwrite), !dbg !7101
  %cmp6 = icmp eq i32 %call5, 0, !dbg !7102
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7103

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7104
  br label %return, !dbg !7104

if.end8:                                          ; preds = %if.end
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7105
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 15, !dbg !7107
  %16 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !7107
  %tobool9 = icmp ne i32 (%struct.PTCacheFile*, i8*)* %16, null, !dbg !7105
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7108

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7109
  %18 = load i32, i32* %cfra.addr, align 4, !dbg !7111
  %19 = load i32, i32* %totpoint, align 4, !dbg !7112
  %call11 = call i32 @ptcache_write_stream(%struct.PTCacheID* %17, i32 %18, i32 %19), !dbg !7113
  br label %if.end16, !dbg !7114

if.else:                                          ; preds = %if.end8
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7115
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 12, !dbg !7117
  %21 = load i32 (i32, i8*, i8**, i32)*, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !7117
  %tobool12 = icmp ne i32 (i32, i8*, i8**, i32)* %21, null, !dbg !7115
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7118

if.then13:                                        ; preds = %if.else
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7119
  %23 = load i32, i32* %cfra.addr, align 4, !dbg !7121
  %24 = load i32, i32* %overwrite, align 4, !dbg !7122
  %call14 = call i32 @ptcache_write(%struct.PTCacheID* %22, i32 %23, i32 %24), !dbg !7123
  %25 = load i32, i32* %error, align 4, !dbg !7124
  %add = add nsw i32 %25, %call14, !dbg !7124
  store i32 %add, i32* %error, align 4, !dbg !7124
  br label %if.end15, !dbg !7125

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then10
  %26 = load i32, i32* %cfra.addr, align 4, !dbg !7126
  %27 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7128
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 8, !dbg !7129
  %28 = load i32, i32* %last_exact, align 8, !dbg !7129
  %sub = sub i32 %26, %28, !dbg !7130
  %cmp17 = icmp eq i32 %sub, 1, !dbg !7131
  br i1 %cmp17, label %if.then20, label %lor.lhs.false18, !dbg !7132

lor.lhs.false18:                                  ; preds = %if.end16
  %29 = load i32, i32* %cfra.addr, align 4, !dbg !7133
  %30 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7134
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %30, i32 0, i32 5, !dbg !7135
  %31 = load i32, i32* %startframe, align 4, !dbg !7135
  %cmp19 = icmp eq i32 %29, %31, !dbg !7136
  br i1 %cmp19, label %if.then20, label %if.else22, !dbg !7137

if.then20:                                        ; preds = %lor.lhs.false18, %if.end16
  %32 = load i32, i32* %cfra.addr, align 4, !dbg !7138
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7140
  %last_exact21 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 8, !dbg !7141
  store i32 %32, i32* %last_exact21, align 8, !dbg !7142
  %34 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7143
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %34, i32 0, i32 2, !dbg !7144
  %35 = load i32, i32* %flag, align 8, !dbg !7145
  %and = and i32 %35, -257, !dbg !7145
  store i32 %and, i32* %flag, align 8, !dbg !7145
  br label %if.end27, !dbg !7146

if.else22:                                        ; preds = %lor.lhs.false18
  %36 = load i32, i32* %cfra.addr, align 4, !dbg !7147
  %tobool23 = icmp ne i32 %36, 0, !dbg !7147
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !7149

if.then24:                                        ; preds = %if.else22
  %37 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7150
  %flag25 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %37, i32 0, i32 2, !dbg !7151
  %38 = load i32, i32* %flag25, align 8, !dbg !7152
  %or = or i32 %38, 256, !dbg !7152
  store i32 %or, i32* %flag25, align 8, !dbg !7152
  br label %if.end26, !dbg !7150

if.end26:                                         ; preds = %if.then24, %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then20
  %39 = load i32, i32* %cfra.addr, align 4, !dbg !7153
  %tobool28 = icmp ne i32 %39, 0, !dbg !7153
  br i1 %tobool28, label %land.lhs.true, label %if.end34, !dbg !7155

land.lhs.true:                                    ; preds = %if.end27
  %40 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7156
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %40, i32 0, i32 19, !dbg !7157
  %41 = load i8*, i8** %cached_frames, align 8, !dbg !7157
  %tobool29 = icmp ne i8* %41, null, !dbg !7156
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !7158

if.then30:                                        ; preds = %land.lhs.true
  %42 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7159
  %cached_frames31 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %42, i32 0, i32 19, !dbg !7160
  %43 = load i8*, i8** %cached_frames31, align 8, !dbg !7160
  %44 = load i32, i32* %cfra.addr, align 4, !dbg !7161
  %45 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7162
  %startframe32 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %45, i32 0, i32 5, !dbg !7163
  %46 = load i32, i32* %startframe32, align 4, !dbg !7163
  %sub33 = sub i32 %44, %46, !dbg !7164
  %idxprom = zext i32 %sub33 to i64, !dbg !7159
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %idxprom, !dbg !7159
  store i8 1, i8* %arrayidx, align 1, !dbg !7165
  br label %if.end34, !dbg !7159

if.end34:                                         ; preds = %if.then30, %land.lhs.true, %if.end27
  %47 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7166
  call void @BKE_ptcache_update_info(%struct.PTCacheID* %47), !dbg !7167
  %48 = load i32, i32* %error, align 4, !dbg !7168
  %tobool35 = icmp ne i32 %48, 0, !dbg !7169
  %lnot = xor i1 %tobool35, true, !dbg !7169
  %lnot.ext = zext i1 %lnot to i32, !dbg !7169
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7170
  br label %return, !dbg !7170

return:                                           ; preds = %if.end34, %if.then7, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !7171
  ret i32 %49, !dbg !7171
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_write_needed(%struct.PTCacheID* %pid, i32 %cfra, i32* %overwrite) #0 !dbg !7172 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %overwrite.addr = alloca i32*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %ofra = alloca i32, align 4
  %efra = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  store i32* %overwrite, i32** %overwrite.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %overwrite.addr, metadata !7179, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !7181, metadata !DIExpression()), !dbg !7182
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7183
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !7184
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !7184
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !7182
  call void @llvm.dbg.declare(metadata i32* %ofra, metadata !7185, metadata !DIExpression()), !dbg !7186
  store i32 0, i32* %ofra, align 4, !dbg !7186
  call void @llvm.dbg.declare(metadata i32* %efra, metadata !7187, metadata !DIExpression()), !dbg !7188
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7189
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 6, !dbg !7190
  %3 = load i32, i32* %endframe, align 8, !dbg !7190
  store i32 %3, i32* %efra, align 4, !dbg !7188
  %4 = load i32, i32* %cfra.addr, align 4, !dbg !7191
  %tobool = icmp ne i32 %4, 0, !dbg !7191
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7193

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %cfra.addr, align 4, !dbg !7194
  %6 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7195
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 5, !dbg !7196
  %7 = load i32, i32* %startframe, align 4, !dbg !7196
  %cmp = icmp eq i32 %5, %7, !dbg !7197
  br i1 %cmp, label %if.then, label %if.end, !dbg !7198

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7199
  %9 = load i32, i32* %cfra.addr, align 4, !dbg !7201
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %8, i32 0, i32 %9), !dbg !7202
  %10 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7203
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 2, !dbg !7204
  %11 = load i32, i32* %flag, align 8, !dbg !7205
  %and = and i32 %11, -259, !dbg !7205
  store i32 %and, i32* %flag, align 8, !dbg !7205
  store i32 1, i32* %retval, align 4, !dbg !7206
  br label %return, !dbg !7206

if.end:                                           ; preds = %land.lhs.true, %entry
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7207
  %cache2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 25, !dbg !7209
  %13 = load %struct.PointCache*, %struct.PointCache** %cache2, align 8, !dbg !7209
  %flag3 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 2, !dbg !7210
  %14 = load i32, i32* %flag3, align 8, !dbg !7210
  %and4 = and i32 %14, 64, !dbg !7211
  %tobool5 = icmp ne i32 %and4, 0, !dbg !7211
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7212

if.then6:                                         ; preds = %if.end
  %15 = load i32, i32* %cfra.addr, align 4, !dbg !7213
  %cmp7 = icmp eq i32 %15, 0, !dbg !7216
  br i1 %cmp7, label %land.lhs.true8, label %if.end12, !dbg !7217

land.lhs.true8:                                   ; preds = %if.then6
  %16 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7218
  %startframe9 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %16, i32 0, i32 5, !dbg !7219
  %17 = load i32, i32* %startframe9, align 4, !dbg !7219
  %cmp10 = icmp sgt i32 %17, 0, !dbg !7220
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7221

if.then11:                                        ; preds = %land.lhs.true8
  store i32 1, i32* %retval, align 4, !dbg !7222
  br label %return, !dbg !7222

if.end12:                                         ; preds = %land.lhs.true8, %if.then6
  br label %while.cond, !dbg !7223

while.cond:                                       ; preds = %while.body, %if.end12
  %18 = load i32, i32* %efra, align 4, !dbg !7224
  %19 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7225
  %startframe13 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %19, i32 0, i32 5, !dbg !7226
  %20 = load i32, i32* %startframe13, align 4, !dbg !7226
  %cmp14 = icmp sgt i32 %18, %20, !dbg !7227
  br i1 %cmp14, label %land.rhs, label %land.end, !dbg !7228

land.rhs:                                         ; preds = %while.cond
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7229
  %22 = load i32, i32* %efra, align 4, !dbg !7230
  %call = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %21, i32 %22), !dbg !7231
  %tobool15 = icmp ne i32 %call, 0, !dbg !7232
  %lnot = xor i1 %tobool15, true, !dbg !7232
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %23 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !7233
  br i1 %23, label %while.body, label %while.end, !dbg !7223

while.body:                                       ; preds = %land.end
  %24 = load i32, i32* %efra, align 4, !dbg !7234
  %dec = add nsw i32 %24, -1, !dbg !7234
  store i32 %dec, i32* %efra, align 4, !dbg !7234
  br label %while.cond, !dbg !7223, !llvm.loop !7235

while.end:                                        ; preds = %land.end
  %25 = load i32, i32* %efra, align 4, !dbg !7236
  %sub = sub nsw i32 %25, 1, !dbg !7237
  store i32 %sub, i32* %ofra, align 4, !dbg !7238
  br label %while.cond16, !dbg !7239

while.cond16:                                     ; preds = %while.body24, %while.end
  %26 = load i32, i32* %ofra, align 4, !dbg !7240
  %27 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7241
  %startframe17 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 5, !dbg !7242
  %28 = load i32, i32* %startframe17, align 4, !dbg !7242
  %cmp18 = icmp sgt i32 %26, %28, !dbg !7243
  br i1 %cmp18, label %land.rhs19, label %land.end23, !dbg !7244

land.rhs19:                                       ; preds = %while.cond16
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7245
  %30 = load i32, i32* %ofra, align 4, !dbg !7246
  %call20 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %29, i32 %30), !dbg !7247
  %tobool21 = icmp ne i32 %call20, 0, !dbg !7248
  %lnot22 = xor i1 %tobool21, true, !dbg !7248
  br label %land.end23

land.end23:                                       ; preds = %land.rhs19, %while.cond16
  %31 = phi i1 [ false, %while.cond16 ], [ %lnot22, %land.rhs19 ], !dbg !7233
  br i1 %31, label %while.body24, label %while.end26, !dbg !7239

while.body24:                                     ; preds = %land.end23
  %32 = load i32, i32* %ofra, align 4, !dbg !7249
  %dec25 = add nsw i32 %32, -1, !dbg !7249
  store i32 %dec25, i32* %ofra, align 4, !dbg !7249
  br label %while.cond16, !dbg !7239, !llvm.loop !7250

while.end26:                                      ; preds = %land.end23
  br label %if.end37, !dbg !7251

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !7252, metadata !DIExpression()), !dbg !7254
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7255
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 20, !dbg !7256
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 1, !dbg !7257
  %34 = load i8*, i8** %last, align 8, !dbg !7257
  %35 = bitcast i8* %34 to %struct.PTCacheMem*, !dbg !7255
  store %struct.PTCacheMem* %35, %struct.PTCacheMem** %pm, align 8, !dbg !7254
  %36 = load i32, i32* %cfra.addr, align 4, !dbg !7258
  %cmp27 = icmp eq i32 %36, 0, !dbg !7260
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !7261

if.then28:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7262
  br label %return, !dbg !7262

if.end29:                                         ; preds = %if.else
  %37 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7263
  %cmp30 = icmp eq %struct.PTCacheMem* %37, null, !dbg !7265
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !7266

if.then31:                                        ; preds = %if.end29
  store i32 1, i32* %retval, align 4, !dbg !7267
  br label %return, !dbg !7267

if.end32:                                         ; preds = %if.end29
  %38 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7268
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %38, i32 0, i32 2, !dbg !7269
  %39 = load i32, i32* %frame, align 8, !dbg !7269
  store i32 %39, i32* %efra, align 4, !dbg !7270
  %40 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7271
  %prev = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %40, i32 0, i32 1, !dbg !7272
  %41 = load %struct.PTCacheMem*, %struct.PTCacheMem** %prev, align 8, !dbg !7272
  %tobool33 = icmp ne %struct.PTCacheMem* %41, null, !dbg !7271
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !7271

cond.true:                                        ; preds = %if.end32
  %42 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7273
  %prev34 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %42, i32 0, i32 1, !dbg !7274
  %43 = load %struct.PTCacheMem*, %struct.PTCacheMem** %prev34, align 8, !dbg !7274
  %frame35 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %43, i32 0, i32 2, !dbg !7275
  %44 = load i32, i32* %frame35, align 8, !dbg !7275
  br label %cond.end, !dbg !7271

cond.false:                                       ; preds = %if.end32
  %45 = load i32, i32* %efra, align 4, !dbg !7276
  %46 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7277
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %46, i32 0, i32 3, !dbg !7278
  %47 = load i32, i32* %step, align 4, !dbg !7278
  %sub36 = sub nsw i32 %45, %47, !dbg !7279
  br label %cond.end, !dbg !7271

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ %sub36, %cond.false ], !dbg !7271
  store i32 %cond, i32* %ofra, align 4, !dbg !7280
  br label %if.end37

if.end37:                                         ; preds = %cond.end, %while.end26
  %48 = load i32, i32* %efra, align 4, !dbg !7281
  %49 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7283
  %startframe38 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %49, i32 0, i32 5, !dbg !7284
  %50 = load i32, i32* %startframe38, align 4, !dbg !7284
  %cmp39 = icmp sge i32 %48, %50, !dbg !7285
  br i1 %cmp39, label %land.lhs.true40, label %if.end51, !dbg !7286

land.lhs.true40:                                  ; preds = %if.end37
  %51 = load i32, i32* %cfra.addr, align 4, !dbg !7287
  %52 = load i32, i32* %efra, align 4, !dbg !7288
  %cmp41 = icmp sgt i32 %51, %52, !dbg !7289
  br i1 %cmp41, label %if.then42, label %if.end51, !dbg !7290

if.then42:                                        ; preds = %land.lhs.true40
  %53 = load i32, i32* %ofra, align 4, !dbg !7291
  %54 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7294
  %startframe43 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %54, i32 0, i32 5, !dbg !7295
  %55 = load i32, i32* %startframe43, align 4, !dbg !7295
  %cmp44 = icmp sge i32 %53, %55, !dbg !7296
  br i1 %cmp44, label %land.lhs.true45, label %if.end50, !dbg !7297

land.lhs.true45:                                  ; preds = %if.then42
  %56 = load i32, i32* %efra, align 4, !dbg !7298
  %57 = load i32, i32* %ofra, align 4, !dbg !7299
  %sub46 = sub nsw i32 %56, %57, !dbg !7300
  %58 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7301
  %step47 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %58, i32 0, i32 3, !dbg !7302
  %59 = load i32, i32* %step47, align 4, !dbg !7302
  %cmp48 = icmp slt i32 %sub46, %59, !dbg !7303
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !7304

if.then49:                                        ; preds = %land.lhs.true45
  %60 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7305
  %61 = load i32, i32* %efra, align 4, !dbg !7307
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %60, i32 1, i32 %61), !dbg !7308
  %62 = load i32*, i32** %overwrite.addr, align 8, !dbg !7309
  store i32 1, i32* %62, align 4, !dbg !7310
  br label %if.end50, !dbg !7311

if.end50:                                         ; preds = %if.then49, %land.lhs.true45, %if.then42
  store i32 1, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

if.end51:                                         ; preds = %land.lhs.true40, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !7313
  br label %return, !dbg !7313

return:                                           ; preds = %if.end51, %if.end50, %if.then31, %if.then28, %if.then11, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !7314
  ret i32 %63, !dbg !7314
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_write_stream(%struct.PTCacheID* %pid, i32 %cfra, i32 %totpoint) #0 !dbg !7315 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %totpoint.addr = alloca i32, align 4
  %pf = alloca %struct.PTCacheFile*, align 8
  %error = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store i32 %totpoint, i32* %totpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpoint.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !7324, metadata !DIExpression()), !dbg !7325
  store %struct.PTCacheFile* null, %struct.PTCacheFile** %pf, align 8, !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7326, metadata !DIExpression()), !dbg !7327
  store i32 0, i32* %error, align 4, !dbg !7327
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7328
  %1 = load i32, i32* %cfra.addr, align 4, !dbg !7329
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %0, i32 1, i32 %1), !dbg !7330
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7331
  %3 = load i32, i32* %cfra.addr, align 4, !dbg !7332
  %call = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %2, i32 1, i32 %3), !dbg !7333
  store %struct.PTCacheFile* %call, %struct.PTCacheFile** %pf, align 8, !dbg !7334
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7335
  %cmp = icmp eq %struct.PTCacheFile* %4, null, !dbg !7337
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7338

if.then:                                          ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7339
  %and = and i32 %5, 1, !dbg !7342
  %tobool = icmp ne i32 %and, 0, !dbg !7342
  br i1 %tobool, label %if.then1, label %if.end, !dbg !7343

if.then1:                                         ; preds = %if.then
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)), !dbg !7344
  br label %if.end, !dbg !7344

if.end:                                           ; preds = %if.then1, %if.then
  store i32 0, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

if.end3:                                          ; preds = %entry
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7346
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 10, !dbg !7347
  %7 = load i32, i32* %data_types, align 4, !dbg !7347
  %8 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7348
  %data_types4 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %8, i32 0, i32 5, !dbg !7349
  store i32 %7, i32* %data_types4, align 8, !dbg !7350
  %9 = load i32, i32* %totpoint.addr, align 4, !dbg !7351
  %10 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7352
  %totpoint5 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %10, i32 0, i32 3, !dbg !7353
  store i32 %9, i32* %totpoint5, align 8, !dbg !7354
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7355
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 5, !dbg !7356
  %12 = load i32, i32* %type, align 8, !dbg !7356
  %13 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7357
  %type6 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %13, i32 0, i32 4, !dbg !7358
  store i32 %12, i32* %type6, align 4, !dbg !7359
  %14 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7360
  %flag = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %14, i32 0, i32 6, !dbg !7361
  store i32 0, i32* %flag, align 4, !dbg !7362
  %15 = load i32, i32* %error, align 4, !dbg !7363
  %tobool7 = icmp ne i32 %15, 0, !dbg !7363
  br i1 %tobool7, label %if.end13, label %land.lhs.true, !dbg !7365

land.lhs.true:                                    ; preds = %if.end3
  %16 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7366
  %call8 = call i32 @ptcache_file_header_begin_write(%struct.PTCacheFile* %16), !dbg !7367
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7367
  br i1 %tobool9, label %lor.lhs.false, label %if.then12, !dbg !7368

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7369
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 23, !dbg !7370
  %18 = load i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !7370
  %19 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7371
  %call10 = call i32 %18(%struct.PTCacheFile* %19), !dbg !7369
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7369
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !7372

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %error, align 4, !dbg !7373
  br label %if.end13, !dbg !7374

if.end13:                                         ; preds = %if.then12, %lor.lhs.false, %if.end3
  %20 = load i32, i32* %error, align 4, !dbg !7375
  %tobool14 = icmp ne i32 %20, 0, !dbg !7375
  br i1 %tobool14, label %if.end20, label %land.lhs.true15, !dbg !7377

land.lhs.true15:                                  ; preds = %if.end13
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7378
  %write_stream = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %21, i32 0, i32 15, !dbg !7379
  %22 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %write_stream, align 8, !dbg !7379
  %tobool16 = icmp ne i32 (%struct.PTCacheFile*, i8*)* %22, null, !dbg !7378
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !7380

if.then17:                                        ; preds = %land.lhs.true15
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7381
  %write_stream18 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 15, !dbg !7382
  %24 = load i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)** %write_stream18, align 8, !dbg !7382
  %25 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7383
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7384
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 4, !dbg !7385
  %27 = load i8*, i8** %calldata, align 8, !dbg !7385
  %call19 = call i32 %24(%struct.PTCacheFile* %25, i8* %27), !dbg !7381
  br label %if.end20, !dbg !7381

if.end20:                                         ; preds = %if.then17, %land.lhs.true15, %if.end13
  %28 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !7386
  call void @ptcache_file_close(%struct.PTCacheFile* %28), !dbg !7387
  %29 = load i32, i32* %error, align 4, !dbg !7388
  %tobool21 = icmp ne i32 %29, 0, !dbg !7388
  br i1 %tobool21, label %land.lhs.true22, label %if.end27, !dbg !7390

land.lhs.true22:                                  ; preds = %if.end20
  %30 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7391
  %and23 = and i32 %30, 1, !dbg !7392
  %tobool24 = icmp ne i32 %and23, 0, !dbg !7392
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !7393

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0)), !dbg !7394
  br label %if.end27, !dbg !7394

if.end27:                                         ; preds = %if.then25, %land.lhs.true22, %if.end20
  %31 = load i32, i32* %error, align 4, !dbg !7395
  %cmp28 = icmp eq i32 %31, 0, !dbg !7396
  %conv = zext i1 %cmp28 to i32, !dbg !7396
  store i32 %conv, i32* %retval, align 4, !dbg !7397
  br label %return, !dbg !7397

return:                                           ; preds = %if.end27, %if.end
  %32 = load i32, i32* %retval, align 4, !dbg !7398
  ret i32 %32, !dbg !7398
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_write(%struct.PTCacheID* %pid, i32 %cfra, i32 %overwrite) #0 !dbg !7399 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %overwrite.addr = alloca i32, align 4
  %cache = alloca %struct.PointCache*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  %pm2 = alloca %struct.PTCacheMem*, align 8
  %totpoint = alloca i32, align 4
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %fra = alloca i32, align 4
  %write = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !7402, metadata !DIExpression()), !dbg !7403
  store i32 %overwrite, i32* %overwrite.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %overwrite.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !7406, metadata !DIExpression()), !dbg !7407
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7408
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !7409
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !7409
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !7410, metadata !DIExpression()), !dbg !7411
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm2, metadata !7412, metadata !DIExpression()), !dbg !7413
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm2, align 8, !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !7414, metadata !DIExpression()), !dbg !7415
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7416
  %totpoint2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 20, !dbg !7417
  %3 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint2, align 8, !dbg !7417
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7418
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 4, !dbg !7419
  %5 = load i8*, i8** %calldata, align 8, !dbg !7419
  %6 = load i32, i32* %cfra.addr, align 4, !dbg !7420
  %call = call i32 %3(i8* %5, i32 %6), !dbg !7416
  store i32 %call, i32* %totpoint, align 4, !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7423, metadata !DIExpression()), !dbg !7424
  store i32 0, i32* %error, align 4, !dbg !7424
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7425
  %call3 = call i8* %7(i64 176, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)), !dbg !7425
  %8 = bitcast i8* %call3 to %struct.PTCacheMem*, !dbg !7425
  store %struct.PTCacheMem* %8, %struct.PTCacheMem** %pm, align 8, !dbg !7426
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7427
  %totwrite = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 22, !dbg !7428
  %10 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totwrite, align 8, !dbg !7428
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7429
  %calldata4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 4, !dbg !7430
  %12 = load i8*, i8** %calldata4, align 8, !dbg !7430
  %13 = load i32, i32* %cfra.addr, align 4, !dbg !7431
  %call5 = call i32 %10(i8* %12, i32 %13), !dbg !7427
  %14 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7432
  %totpoint6 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %14, i32 0, i32 3, !dbg !7433
  store i32 %call5, i32* %totpoint6, align 4, !dbg !7434
  %15 = load i32, i32* %cfra.addr, align 4, !dbg !7435
  %tobool = icmp ne i32 %15, 0, !dbg !7435
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7435

cond.true:                                        ; preds = %entry
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7436
  %data_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %16, i32 0, i32 10, !dbg !7437
  %17 = load i32, i32* %data_types, align 4, !dbg !7437
  br label %cond.end, !dbg !7435

cond.false:                                       ; preds = %entry
  %18 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7438
  %info_types = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %18, i32 0, i32 11, !dbg !7439
  %19 = load i32, i32* %info_types, align 8, !dbg !7439
  br label %cond.end, !dbg !7435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %19, %cond.false ], !dbg !7435
  %20 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7440
  %data_types7 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %20, i32 0, i32 4, !dbg !7441
  store i32 %cond, i32* %data_types7, align 8, !dbg !7442
  %21 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7443
  call void @ptcache_data_alloc(%struct.PTCacheMem* %21), !dbg !7444
  %22 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7445
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %22), !dbg !7446
  %23 = load i32, i32* %overwrite.addr, align 4, !dbg !7447
  %tobool8 = icmp ne i32 %23, 0, !dbg !7447
  br i1 %tobool8, label %if.then, label %if.end14, !dbg !7449

if.then:                                          ; preds = %cond.end
  %24 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7450
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %24, i32 0, i32 2, !dbg !7453
  %25 = load i32, i32* %flag, align 8, !dbg !7453
  %and = and i32 %25, 64, !dbg !7454
  %tobool9 = icmp ne i32 %and, 0, !dbg !7454
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7455

if.then10:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %fra, metadata !7456, metadata !DIExpression()), !dbg !7458
  %26 = load i32, i32* %cfra.addr, align 4, !dbg !7459
  %sub = sub nsw i32 %26, 1, !dbg !7460
  store i32 %sub, i32* %fra, align 4, !dbg !7458
  br label %while.cond, !dbg !7461

while.cond:                                       ; preds = %while.body, %if.then10
  %27 = load i32, i32* %fra, align 4, !dbg !7462
  %28 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7463
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %28, i32 0, i32 5, !dbg !7464
  %29 = load i32, i32* %startframe, align 4, !dbg !7464
  %cmp = icmp sge i32 %27, %29, !dbg !7465
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7466

land.rhs:                                         ; preds = %while.cond
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7467
  %31 = load i32, i32* %fra, align 4, !dbg !7468
  %call11 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %30, i32 %31), !dbg !7469
  %tobool12 = icmp ne i32 %call11, 0, !dbg !7470
  %lnot = xor i1 %tobool12, true, !dbg !7470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %32 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !7471
  br i1 %32, label %while.body, label %while.end, !dbg !7461

while.body:                                       ; preds = %land.end
  %33 = load i32, i32* %fra, align 4, !dbg !7472
  %dec = add nsw i32 %33, -1, !dbg !7472
  store i32 %dec, i32* %fra, align 4, !dbg !7472
  br label %while.cond, !dbg !7461, !llvm.loop !7473

while.end:                                        ; preds = %land.end
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7474
  %35 = load i32, i32* %fra, align 4, !dbg !7475
  %call13 = call %struct.PTCacheMem* @ptcache_disk_frame_to_mem(%struct.PTCacheID* %34, i32 %35), !dbg !7476
  store %struct.PTCacheMem* %call13, %struct.PTCacheMem** %pm2, align 8, !dbg !7477
  br label %if.end, !dbg !7478

if.else:                                          ; preds = %if.then
  %36 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7479
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %36, i32 0, i32 20, !dbg !7480
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 1, !dbg !7481
  %37 = load i8*, i8** %last, align 8, !dbg !7481
  %38 = bitcast i8* %37 to %struct.PTCacheMem*, !dbg !7479
  store %struct.PTCacheMem* %38, %struct.PTCacheMem** %pm2, align 8, !dbg !7482
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  br label %if.end14, !dbg !7483

if.end14:                                         ; preds = %if.end, %cond.end
  %39 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7484
  %write_point = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %39, i32 0, i32 12, !dbg !7486
  %40 = load i32 (i32, i8*, i8**, i32)*, i32 (i32, i8*, i8**, i32)** %write_point, align 8, !dbg !7486
  %tobool15 = icmp ne i32 (i32, i8*, i8**, i32)* %40, null, !dbg !7484
  br i1 %tobool15, label %if.then16, label %if.end38, !dbg !7487

if.then16:                                        ; preds = %if.end14
  store i32 0, i32* %i, align 4, !dbg !7488
  br label %for.cond, !dbg !7491

for.cond:                                         ; preds = %for.inc, %if.then16
  %41 = load i32, i32* %i, align 4, !dbg !7492
  %42 = load i32, i32* %totpoint, align 4, !dbg !7494
  %cmp17 = icmp slt i32 %41, %42, !dbg !7495
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7496

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %write, metadata !7497, metadata !DIExpression()), !dbg !7499
  %43 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7500
  %write_point18 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %43, i32 0, i32 12, !dbg !7501
  %44 = load i32 (i32, i8*, i8**, i32)*, i32 (i32, i8*, i8**, i32)** %write_point18, align 8, !dbg !7501
  %45 = load i32, i32* %i, align 4, !dbg !7502
  %46 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7503
  %calldata19 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %46, i32 0, i32 4, !dbg !7504
  %47 = load i8*, i8** %calldata19, align 8, !dbg !7504
  %48 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7505
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %48, i32 0, i32 7, !dbg !7506
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !7505
  %49 = load i32, i32* %cfra.addr, align 4, !dbg !7507
  %call20 = call i32 %44(i32 %45, i8* %47, i8** %arraydecay, i32 %49), !dbg !7500
  store i32 %call20, i32* %write, align 4, !dbg !7499
  %50 = load i32, i32* %write, align 4, !dbg !7508
  %tobool21 = icmp ne i32 %50, 0, !dbg !7508
  br i1 %tobool21, label %if.then22, label %if.end37, !dbg !7510

if.then22:                                        ; preds = %for.body
  %51 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7511
  call void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %51), !dbg !7513
  %52 = load i32, i32* %overwrite.addr, align 4, !dbg !7514
  %tobool23 = icmp ne i32 %52, 0, !dbg !7514
  br i1 %tobool23, label %land.lhs.true, label %if.end36, !dbg !7516

land.lhs.true:                                    ; preds = %if.then22
  %53 = load i32, i32* %write, align 4, !dbg !7517
  %cmp24 = icmp eq i32 %53, 2, !dbg !7518
  br i1 %cmp24, label %land.lhs.true25, label %if.end36, !dbg !7519

land.lhs.true25:                                  ; preds = %land.lhs.true
  %54 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7520
  %tobool26 = icmp ne %struct.PTCacheMem* %54, null, !dbg !7520
  br i1 %tobool26, label %land.lhs.true27, label %if.end36, !dbg !7521

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %55 = load i32, i32* %i, align 4, !dbg !7522
  %56 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7523
  %call28 = call i32 @BKE_ptcache_mem_pointers_seek(i32 %55, %struct.PTCacheMem* %56), !dbg !7524
  %tobool29 = icmp ne i32 %call28, 0, !dbg !7524
  br i1 %tobool29, label %if.then30, label %if.end36, !dbg !7525

if.then30:                                        ; preds = %land.lhs.true27
  %57 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7526
  %write_point31 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %57, i32 0, i32 12, !dbg !7527
  %58 = load i32 (i32, i8*, i8**, i32)*, i32 (i32, i8*, i8**, i32)** %write_point31, align 8, !dbg !7527
  %59 = load i32, i32* %i, align 4, !dbg !7528
  %60 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7529
  %calldata32 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %60, i32 0, i32 4, !dbg !7530
  %61 = load i8*, i8** %calldata32, align 8, !dbg !7530
  %62 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7531
  %cur33 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %62, i32 0, i32 7, !dbg !7532
  %arraydecay34 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur33, i64 0, i64 0, !dbg !7531
  %63 = load i32, i32* %cfra.addr, align 4, !dbg !7533
  %call35 = call i32 %58(i32 %59, i8* %61, i8** %arraydecay34, i32 %63), !dbg !7526
  br label %if.end36, !dbg !7526

if.end36:                                         ; preds = %if.then30, %land.lhs.true27, %land.lhs.true25, %land.lhs.true, %if.then22
  br label %if.end37, !dbg !7534

if.end37:                                         ; preds = %if.end36, %for.body
  br label %for.inc, !dbg !7535

for.inc:                                          ; preds = %if.end37
  %64 = load i32, i32* %i, align 4, !dbg !7536
  %inc = add nsw i32 %64, 1, !dbg !7536
  store i32 %inc, i32* %i, align 4, !dbg !7536
  br label %for.cond, !dbg !7537, !llvm.loop !7538

for.end:                                          ; preds = %for.cond
  br label %if.end38, !dbg !7540

if.end38:                                         ; preds = %for.end, %if.end14
  %65 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7541
  %write_extra_data = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %65, i32 0, i32 17, !dbg !7543
  %66 = load void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data, align 8, !dbg !7543
  %tobool39 = icmp ne void (i8*, %struct.PTCacheMem*, i32)* %66, null, !dbg !7541
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !7544

if.then40:                                        ; preds = %if.end38
  %67 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7545
  %write_extra_data41 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %67, i32 0, i32 17, !dbg !7546
  %68 = load void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, i32)** %write_extra_data41, align 8, !dbg !7546
  %69 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7547
  %calldata42 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %69, i32 0, i32 4, !dbg !7548
  %70 = load i8*, i8** %calldata42, align 8, !dbg !7548
  %71 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7549
  %72 = load i32, i32* %cfra.addr, align 4, !dbg !7550
  call void %68(i8* %70, %struct.PTCacheMem* %71, i32 %72), !dbg !7545
  br label %if.end43, !dbg !7545

if.end43:                                         ; preds = %if.then40, %if.end38
  %73 = load i32, i32* %cfra.addr, align 4, !dbg !7551
  %74 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7552
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %74, i32 0, i32 2, !dbg !7553
  store i32 %73, i32* %frame, align 8, !dbg !7554
  %75 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7555
  %flag44 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %75, i32 0, i32 2, !dbg !7557
  %76 = load i32, i32* %flag44, align 8, !dbg !7557
  %and45 = and i32 %76, 64, !dbg !7558
  %tobool46 = icmp ne i32 %and45, 0, !dbg !7558
  br i1 %tobool46, label %if.then47, label %if.else59, !dbg !7559

if.then47:                                        ; preds = %if.end43
  %77 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7560
  %78 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7562
  %call48 = call i32 @ptcache_mem_frame_to_disk(%struct.PTCacheID* %77, %struct.PTCacheMem* %78), !dbg !7563
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7564
  %lnot50 = xor i1 %tobool49, true, !dbg !7564
  %lnot.ext = zext i1 %lnot50 to i32, !dbg !7564
  %79 = load i32, i32* %error, align 4, !dbg !7565
  %add = add nsw i32 %79, %lnot.ext, !dbg !7565
  store i32 %add, i32* %error, align 4, !dbg !7565
  %80 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7566
  call void @ptcache_data_free(%struct.PTCacheMem* %80), !dbg !7568
  %81 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7569
  call void @ptcache_extra_free(%struct.PTCacheMem* %81), !dbg !7570
  %82 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7571
  %83 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7572
  %84 = bitcast %struct.PTCacheMem* %83 to i8*, !dbg !7572
  call void %82(i8* %84), !dbg !7571
  %85 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7573
  %tobool51 = icmp ne %struct.PTCacheMem* %85, null, !dbg !7573
  br i1 %tobool51, label %if.then52, label %if.end58, !dbg !7575

if.then52:                                        ; preds = %if.then47
  %86 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7576
  %87 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7578
  %call53 = call i32 @ptcache_mem_frame_to_disk(%struct.PTCacheID* %86, %struct.PTCacheMem* %87), !dbg !7579
  %tobool54 = icmp ne i32 %call53, 0, !dbg !7580
  %lnot55 = xor i1 %tobool54, true, !dbg !7580
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !7580
  %88 = load i32, i32* %error, align 4, !dbg !7581
  %add57 = add nsw i32 %88, %lnot.ext56, !dbg !7581
  store i32 %add57, i32* %error, align 4, !dbg !7581
  %89 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7582
  call void @ptcache_data_free(%struct.PTCacheMem* %89), !dbg !7583
  %90 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7584
  call void @ptcache_extra_free(%struct.PTCacheMem* %90), !dbg !7585
  %91 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7586
  %92 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm2, align 8, !dbg !7587
  %93 = bitcast %struct.PTCacheMem* %92 to i8*, !dbg !7587
  call void %91(i8* %93), !dbg !7586
  br label %if.end58, !dbg !7588

if.end58:                                         ; preds = %if.then52, %if.then47
  br label %if.end61, !dbg !7589

if.else59:                                        ; preds = %if.end43
  %94 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7590
  %mem_cache60 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %94, i32 0, i32 20, !dbg !7592
  %95 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7593
  %96 = bitcast %struct.PTCacheMem* %95 to i8*, !dbg !7593
  call void @BLI_addtail(%struct.ListBase* %mem_cache60, i8* %96), !dbg !7594
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.end58
  %97 = load i32, i32* %error, align 4, !dbg !7595
  ret i32 %97, !dbg !7596
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_update_info(%struct.PTCacheID* %pid) #0 !dbg !7597 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  %totframes = alloca i32, align 4
  %mem_info = alloca [64 x i8], align 16
  %cfra = alloca i32, align 4
  %totpoint31 = alloca i32, align 4
  %cfra44 = alloca i32, align 4
  %pm = alloca %struct.PTCacheMem*, align 8
  %bytes = alloca float, align 4
  %i = alloca i32, align 4
  %mb = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !7602, metadata !DIExpression()), !dbg !7603
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7604
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !7605
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !7605
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !7603
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !7606, metadata !DIExpression()), !dbg !7607
  store %struct.PTCacheExtra* null, %struct.PTCacheExtra** %extra, align 8, !dbg !7607
  call void @llvm.dbg.declare(metadata i32* %totframes, metadata !7608, metadata !DIExpression()), !dbg !7609
  store i32 0, i32* %totframes, align 4, !dbg !7609
  call void @llvm.dbg.declare(metadata [64 x i8]* %mem_info, metadata !7610, metadata !DIExpression()), !dbg !7611
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7612
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 2, !dbg !7614
  %3 = load i32, i32* %flag, align 8, !dbg !7614
  %and = and i32 %3, 512, !dbg !7615
  %tobool = icmp ne i32 %and, 0, !dbg !7615
  br i1 %tobool, label %if.then, label %if.end23, !dbg !7616

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !7617, metadata !DIExpression()), !dbg !7619
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7620
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 5, !dbg !7621
  %5 = load i32, i32* %startframe, align 4, !dbg !7621
  store i32 %5, i32* %cfra, align 4, !dbg !7619
  br label %for.cond, !dbg !7622

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %cfra, align 4, !dbg !7623
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7626
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 6, !dbg !7627
  %8 = load i32, i32* %endframe, align 8, !dbg !7627
  %cmp = icmp sle i32 %6, %8, !dbg !7628
  br i1 %cmp, label %for.body, label %for.end, !dbg !7629

for.body:                                         ; preds = %for.cond
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7630
  %10 = load i32, i32* %cfra, align 4, !dbg !7633
  %call = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %9, i32 %10), !dbg !7634
  %tobool2 = icmp ne i32 %call, 0, !dbg !7634
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7635

if.then3:                                         ; preds = %for.body
  %11 = load i32, i32* %totframes, align 4, !dbg !7636
  %inc = add nsw i32 %11, 1, !dbg !7636
  store i32 %inc, i32* %totframes, align 4, !dbg !7636
  br label %if.end, !dbg !7637

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !7638

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %cfra, align 4, !dbg !7639
  %inc4 = add nsw i32 %12, 1, !dbg !7639
  store i32 %inc4, i32* %cfra, align 4, !dbg !7639
  br label %for.cond, !dbg !7640, !llvm.loop !7641

for.end:                                          ; preds = %for.cond
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7643
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %13, i32 0, i32 5, !dbg !7645
  %14 = load i32, i32* %type, align 8, !dbg !7645
  %cmp5 = icmp eq i32 %14, 3, !dbg !7646
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !7647

land.lhs.true:                                    ; preds = %for.end
  %15 = load i32, i32* %totframes, align 4, !dbg !7648
  %tobool6 = icmp ne i32 %15, 0, !dbg !7648
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7649

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7650
  %info = getelementptr inbounds %struct.PointCache, %struct.PointCache* %16, i32 0, i32 17, !dbg !7651
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %info, i64 0, i64 0, !dbg !7650
  %17 = load i32, i32* %totframes, align 4, !dbg !7652
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i32 %17), !dbg !7653
  br label %if.end22, !dbg !7653

if.else:                                          ; preds = %land.lhs.true, %for.end
  %18 = load i32, i32* %totframes, align 4, !dbg !7654
  %tobool9 = icmp ne i32 %18, 0, !dbg !7654
  br i1 %tobool9, label %land.lhs.true10, label %if.else17, !dbg !7656

land.lhs.true10:                                  ; preds = %if.else
  %19 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7657
  %totpoint = getelementptr inbounds %struct.PointCache, %struct.PointCache* %19, i32 0, i32 11, !dbg !7658
  %20 = load i32, i32* %totpoint, align 4, !dbg !7658
  %tobool11 = icmp ne i32 %20, 0, !dbg !7657
  br i1 %tobool11, label %if.then12, label %if.else17, !dbg !7659

if.then12:                                        ; preds = %land.lhs.true10
  %21 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7660
  %info13 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %21, i32 0, i32 17, !dbg !7661
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %info13, i64 0, i64 0, !dbg !7660
  %22 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7662
  %totpoint15 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %22, i32 0, i32 11, !dbg !7663
  %23 = load i32, i32* %totpoint15, align 4, !dbg !7663
  %call16 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay14, i64 64, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i32 %23), !dbg !7664
  br label %if.end21, !dbg !7664

if.else17:                                        ; preds = %land.lhs.true10, %if.else
  %24 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7665
  %info18 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %24, i32 0, i32 17, !dbg !7666
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %info18, i64 0, i64 0, !dbg !7665
  %call20 = call i8* @BLI_strncpy(i8* %arraydecay19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i64 64), !dbg !7667
  br label %if.end21

if.end21:                                         ; preds = %if.else17, %if.then12
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then7
  br label %if.end120, !dbg !7668

if.end23:                                         ; preds = %entry
  %25 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7669
  %flag24 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %25, i32 0, i32 2, !dbg !7671
  %26 = load i32, i32* %flag24, align 8, !dbg !7671
  %and25 = and i32 %26, 64, !dbg !7672
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7672
  br i1 %tobool26, label %if.then27, label %if.else61, !dbg !7673

if.then27:                                        ; preds = %if.end23
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7674
  %type28 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 5, !dbg !7677
  %28 = load i32, i32* %type28, align 8, !dbg !7677
  %cmp29 = icmp eq i32 %28, 3, !dbg !7678
  br i1 %cmp29, label %if.then30, label %if.else43, !dbg !7679

if.then30:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata i32* %totpoint31, metadata !7680, metadata !DIExpression()), !dbg !7682
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7683
  %totpoint32 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 20, !dbg !7684
  %30 = load i32 (i8*, i32)*, i32 (i8*, i32)** %totpoint32, align 8, !dbg !7684
  %31 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7685
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %31, i32 0, i32 4, !dbg !7686
  %32 = load i8*, i8** %calldata, align 8, !dbg !7686
  %call33 = call i32 %30(i8* %32, i32 0), !dbg !7683
  store i32 %call33, i32* %totpoint31, align 4, !dbg !7682
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7687
  %totpoint34 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 11, !dbg !7689
  %34 = load i32, i32* %totpoint34, align 4, !dbg !7689
  %35 = load i32, i32* %totpoint31, align 4, !dbg !7690
  %cmp35 = icmp sgt i32 %34, %35, !dbg !7691
  br i1 %cmp35, label %if.then36, label %if.else39, !dbg !7692

if.then36:                                        ; preds = %if.then30
  %arraydecay37 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7693
  %36 = load i32, i32* %totpoint31, align 4, !dbg !7694
  %call38 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay37, i64 64, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 %36), !dbg !7695
  br label %if.end42, !dbg !7695

if.else39:                                        ; preds = %if.then30
  %arraydecay40 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7696
  %37 = load i32, i32* %totpoint31, align 4, !dbg !7697
  %call41 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay40, i64 64, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i32 %37), !dbg !7698
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.then36
  br label %if.end60, !dbg !7699

if.else43:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata i32* %cfra44, metadata !7700, metadata !DIExpression()), !dbg !7702
  %38 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7703
  %startframe45 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %38, i32 0, i32 5, !dbg !7704
  %39 = load i32, i32* %startframe45, align 4, !dbg !7704
  store i32 %39, i32* %cfra44, align 4, !dbg !7702
  br label %for.cond46, !dbg !7705

for.cond46:                                       ; preds = %for.inc55, %if.else43
  %40 = load i32, i32* %cfra44, align 4, !dbg !7706
  %41 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7709
  %endframe47 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %41, i32 0, i32 6, !dbg !7710
  %42 = load i32, i32* %endframe47, align 8, !dbg !7710
  %cmp48 = icmp sle i32 %40, %42, !dbg !7711
  br i1 %cmp48, label %for.body49, label %for.end57, !dbg !7712

for.body49:                                       ; preds = %for.cond46
  %43 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7713
  %44 = load i32, i32* %cfra44, align 4, !dbg !7716
  %call50 = call i32 @BKE_ptcache_id_exist(%struct.PTCacheID* %43, i32 %44), !dbg !7717
  %tobool51 = icmp ne i32 %call50, 0, !dbg !7717
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !7718

if.then52:                                        ; preds = %for.body49
  %45 = load i32, i32* %totframes, align 4, !dbg !7719
  %inc53 = add nsw i32 %45, 1, !dbg !7719
  store i32 %inc53, i32* %totframes, align 4, !dbg !7719
  br label %if.end54, !dbg !7720

if.end54:                                         ; preds = %if.then52, %for.body49
  br label %for.inc55, !dbg !7721

for.inc55:                                        ; preds = %if.end54
  %46 = load i32, i32* %cfra44, align 4, !dbg !7722
  %inc56 = add nsw i32 %46, 1, !dbg !7722
  store i32 %inc56, i32* %cfra44, align 4, !dbg !7722
  br label %for.cond46, !dbg !7723, !llvm.loop !7724

for.end57:                                        ; preds = %for.cond46
  %arraydecay58 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7726
  %47 = load i32, i32* %totframes, align 4, !dbg !7727
  %call59 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay58, i64 64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i32 %47), !dbg !7728
  br label %if.end60

if.end60:                                         ; preds = %for.end57, %if.end42
  br label %if.end96, !dbg !7729

if.else61:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !7730, metadata !DIExpression()), !dbg !7732
  %48 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7733
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %48, i32 0, i32 20, !dbg !7734
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !7735
  %49 = load i8*, i8** %first, align 8, !dbg !7735
  %50 = bitcast i8* %49 to %struct.PTCacheMem*, !dbg !7733
  store %struct.PTCacheMem* %50, %struct.PTCacheMem** %pm, align 8, !dbg !7732
  call void @llvm.dbg.declare(metadata float* %bytes, metadata !7736, metadata !DIExpression()), !dbg !7737
  store float 0.000000e+00, float* %bytes, align 4, !dbg !7737
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7738, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.declare(metadata i32* %mb, metadata !7740, metadata !DIExpression()), !dbg !7741
  br label %for.cond62, !dbg !7742

for.cond62:                                       ; preds = %for.inc85, %if.else61
  %51 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7743
  %tobool63 = icmp ne %struct.PTCacheMem* %51, null, !dbg !7746
  br i1 %tobool63, label %for.body64, label %for.end87, !dbg !7746

for.body64:                                       ; preds = %for.cond62
  store i32 0, i32* %i, align 4, !dbg !7747
  br label %for.cond65, !dbg !7750

for.cond65:                                       ; preds = %for.inc69, %for.body64
  %52 = load i32, i32* %i, align 4, !dbg !7751
  %cmp66 = icmp slt i32 %52, 8, !dbg !7753
  br i1 %cmp66, label %for.body67, label %for.end71, !dbg !7754

for.body67:                                       ; preds = %for.cond65
  %53 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !7755
  %54 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7756
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %54, i32 0, i32 6, !dbg !7757
  %55 = load i32, i32* %i, align 4, !dbg !7758
  %idxprom = sext i32 %55 to i64, !dbg !7756
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !7756
  %56 = load i8*, i8** %arrayidx, align 8, !dbg !7756
  %call68 = call i64 %53(i8* %56), !dbg !7755
  %conv = uitofp i64 %call68 to float, !dbg !7755
  %57 = load float, float* %bytes, align 4, !dbg !7759
  %add = fadd float %57, %conv, !dbg !7759
  store float %add, float* %bytes, align 4, !dbg !7759
  br label %for.inc69, !dbg !7760

for.inc69:                                        ; preds = %for.body67
  %58 = load i32, i32* %i, align 4, !dbg !7761
  %inc70 = add nsw i32 %58, 1, !dbg !7761
  store i32 %inc70, i32* %i, align 4, !dbg !7761
  br label %for.cond65, !dbg !7762, !llvm.loop !7763

for.end71:                                        ; preds = %for.cond65
  %59 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7765
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %59, i32 0, i32 8, !dbg !7767
  %first72 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !7768
  %60 = load i8*, i8** %first72, align 8, !dbg !7768
  %61 = bitcast i8* %60 to %struct.PTCacheExtra*, !dbg !7765
  store %struct.PTCacheExtra* %61, %struct.PTCacheExtra** %extra, align 8, !dbg !7769
  br label %for.cond73, !dbg !7770

for.cond73:                                       ; preds = %for.inc81, %for.end71
  %62 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !7771
  %tobool74 = icmp ne %struct.PTCacheExtra* %62, null, !dbg !7773
  br i1 %tobool74, label %for.body75, label %for.end82, !dbg !7773

for.body75:                                       ; preds = %for.cond73
  %63 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !7774
  %64 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !7776
  %data76 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %64, i32 0, i32 4, !dbg !7777
  %65 = load i8*, i8** %data76, align 8, !dbg !7777
  %call77 = call i64 %63(i8* %65), !dbg !7774
  %conv78 = uitofp i64 %call77 to float, !dbg !7774
  %66 = load float, float* %bytes, align 4, !dbg !7778
  %add79 = fadd float %66, %conv78, !dbg !7778
  store float %add79, float* %bytes, align 4, !dbg !7778
  %67 = load float, float* %bytes, align 4, !dbg !7779
  %add80 = fadd float %67, 3.200000e+01, !dbg !7779
  store float %add80, float* %bytes, align 4, !dbg !7779
  br label %for.inc81, !dbg !7780

for.inc81:                                        ; preds = %for.body75
  %68 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !7781
  %next = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %68, i32 0, i32 0, !dbg !7782
  %69 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %next, align 8, !dbg !7782
  store %struct.PTCacheExtra* %69, %struct.PTCacheExtra** %extra, align 8, !dbg !7783
  br label %for.cond73, !dbg !7784, !llvm.loop !7785

for.end82:                                        ; preds = %for.cond73
  %70 = load float, float* %bytes, align 4, !dbg !7787
  %add83 = fadd float %70, 1.760000e+02, !dbg !7787
  store float %add83, float* %bytes, align 4, !dbg !7787
  %71 = load i32, i32* %totframes, align 4, !dbg !7788
  %inc84 = add nsw i32 %71, 1, !dbg !7788
  store i32 %inc84, i32* %totframes, align 4, !dbg !7788
  br label %for.inc85, !dbg !7789

for.inc85:                                        ; preds = %for.end82
  %72 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !7790
  %next86 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %72, i32 0, i32 0, !dbg !7791
  %73 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next86, align 8, !dbg !7791
  store %struct.PTCacheMem* %73, %struct.PTCacheMem** %pm, align 8, !dbg !7792
  br label %for.cond62, !dbg !7793, !llvm.loop !7794

for.end87:                                        ; preds = %for.cond62
  %74 = load float, float* %bytes, align 4, !dbg !7796
  %cmp88 = fcmp ogt float %74, 0x4130000000000000, !dbg !7797
  %conv89 = zext i1 %cmp88 to i32, !dbg !7797
  store i32 %conv89, i32* %mb, align 4, !dbg !7798
  %arraydecay90 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7799
  %75 = load i32, i32* %totframes, align 4, !dbg !7800
  %76 = load float, float* %bytes, align 4, !dbg !7801
  %77 = load i32, i32* %mb, align 4, !dbg !7802
  %tobool91 = icmp ne i32 %77, 0, !dbg !7802
  %78 = zext i1 %tobool91 to i64, !dbg !7802
  %cond = select i1 %tobool91, float 0x4130000000000000, float 1.024000e+03, !dbg !7802
  %div = fdiv float %76, %cond, !dbg !7803
  %conv92 = fpext float %div to double, !dbg !7801
  %79 = load i32, i32* %mb, align 4, !dbg !7804
  %tobool93 = icmp ne i32 %79, 0, !dbg !7804
  %80 = zext i1 %tobool93 to i64, !dbg !7804
  %cond94 = select i1 %tobool93, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), !dbg !7804
  %call95 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay90, i64 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i32 %75, double %conv92, i8* %cond94), !dbg !7805
  br label %if.end96

if.end96:                                         ; preds = %for.end87, %if.end60
  %81 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7806
  %flag97 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %81, i32 0, i32 2, !dbg !7808
  %82 = load i32, i32* %flag97, align 8, !dbg !7808
  %and98 = and i32 %82, 2, !dbg !7809
  %tobool99 = icmp ne i32 %and98, 0, !dbg !7809
  br i1 %tobool99, label %if.then100, label %if.else105, !dbg !7810

if.then100:                                       ; preds = %if.end96
  %83 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7811
  %info101 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %83, i32 0, i32 17, !dbg !7813
  %arraydecay102 = getelementptr inbounds [64 x i8], [64 x i8]* %info101, i64 0, i64 0, !dbg !7811
  %arraydecay103 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7814
  %call104 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay102, i64 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay103), !dbg !7815
  br label %if.end120, !dbg !7816

if.else105:                                       ; preds = %if.end96
  %84 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7817
  %flag106 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %84, i32 0, i32 2, !dbg !7819
  %85 = load i32, i32* %flag106, align 8, !dbg !7819
  %and107 = and i32 %85, 256, !dbg !7820
  %tobool108 = icmp ne i32 %and107, 0, !dbg !7820
  br i1 %tobool108, label %if.then109, label %if.else114, !dbg !7821

if.then109:                                       ; preds = %if.else105
  %86 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7822
  %info110 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %86, i32 0, i32 17, !dbg !7824
  %arraydecay111 = getelementptr inbounds [64 x i8], [64 x i8]* %info110, i64 0, i64 0, !dbg !7822
  %arraydecay112 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7825
  %87 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7826
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %87, i32 0, i32 8, !dbg !7827
  %88 = load i32, i32* %last_exact, align 8, !dbg !7827
  %call113 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay111, i64 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay112, i32 %88), !dbg !7828
  br label %if.end119, !dbg !7829

if.else114:                                       ; preds = %if.else105
  %89 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7830
  %info115 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %89, i32 0, i32 17, !dbg !7832
  %arraydecay116 = getelementptr inbounds [64 x i8], [64 x i8]* %info115, i64 0, i64 0, !dbg !7830
  %arraydecay117 = getelementptr inbounds [64 x i8], [64 x i8]* %mem_info, i64 0, i64 0, !dbg !7833
  %call118 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay116, i64 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay117), !dbg !7834
  br label %if.end119

if.end119:                                        ; preds = %if.else114, %if.then109
  br label %if.end120

if.end120:                                        ; preds = %if.end22, %if.end119, %if.then100
  ret void, !dbg !7835
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_path(%struct.PTCacheID* %pid, i8* %filename) #0 !dbg !7836 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %filename.addr = alloca i8*, align 8
  %lib = alloca %struct.Library*, align 8
  %blendfilename = alloca i8*, align 8
  %i = alloca i64, align 8
  %file = alloca [1024 x i8], align 16
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7839, metadata !DIExpression()), !dbg !7840
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata %struct.Library** %lib, metadata !7843, metadata !DIExpression()), !dbg !7846
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7847
  %ob = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 3, !dbg !7848
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7848
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7849
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7849

cond.true:                                        ; preds = %entry
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7850
  %ob1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 3, !dbg !7851
  %3 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !7851
  %id = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 0, !dbg !7852
  %lib2 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7853
  %4 = load %struct.Library*, %struct.Library** %lib2, align 8, !dbg !7853
  br label %cond.end, !dbg !7849

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7849

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Library* [ %4, %cond.true ], [ null, %cond.false ], !dbg !7849
  store %struct.Library* %cond, %struct.Library** %lib, align 8, !dbg !7846
  call void @llvm.dbg.declare(metadata i8** %blendfilename, metadata !7854, metadata !DIExpression()), !dbg !7855
  %5 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7856
  %tobool3 = icmp ne %struct.Library* %5, null, !dbg !7856
  br i1 %tobool3, label %land.lhs.true, label %cond.false5, !dbg !7857

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7858
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %6, i32 0, i32 25, !dbg !7859
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7859
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !7860
  %8 = load i32, i32* %flag, align 8, !dbg !7860
  %and = and i32 %8, 2048, !dbg !7861
  %cmp = icmp eq i32 %and, 0, !dbg !7862
  br i1 %cmp, label %cond.true4, label %cond.false5, !dbg !7863

cond.true4:                                       ; preds = %land.lhs.true
  %9 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7864
  %filepath = getelementptr inbounds %struct.Library, %struct.Library* %9, i32 0, i32 4, !dbg !7865
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !7864
  br label %cond.end7, !dbg !7863

cond.false5:                                      ; preds = %land.lhs.true, %cond.end
  %10 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7866
  %name = getelementptr inbounds %struct.Main, %struct.Main* %10, i32 0, i32 2, !dbg !7867
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7868
  br label %cond.end7, !dbg !7863

cond.end7:                                        ; preds = %cond.false5, %cond.true4
  %cond8 = phi i8* [ %arraydecay, %cond.true4 ], [ %arraydecay6, %cond.false5 ], !dbg !7863
  store i8* %cond8, i8** %blendfilename, align 8, !dbg !7855
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7869, metadata !DIExpression()), !dbg !7870
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7871
  %cache9 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 25, !dbg !7873
  %12 = load %struct.PointCache*, %struct.PointCache** %cache9, align 8, !dbg !7873
  %flag10 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %12, i32 0, i32 2, !dbg !7874
  %13 = load i32, i32* %flag10, align 8, !dbg !7874
  %and11 = and i32 %13, 512, !dbg !7875
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7875
  br i1 %tobool12, label %if.then, label %if.else, !dbg !7876

if.then:                                          ; preds = %cond.end7
  %14 = load i8*, i8** %filename.addr, align 8, !dbg !7877
  %15 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7879
  %cache13 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %15, i32 0, i32 25, !dbg !7880
  %16 = load %struct.PointCache*, %struct.PointCache** %cache13, align 8, !dbg !7880
  %path = getelementptr inbounds %struct.PointCache, %struct.PointCache* %16, i32 0, i32 18, !dbg !7881
  %arraydecay14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !7879
  %call = call i8* @strcpy(i8* %14, i8* %arraydecay14) #7, !dbg !7882
  %17 = load i8*, i8** %filename.addr, align 8, !dbg !7883
  %call15 = call zeroext i8 @BLI_path_is_rel(i8* %17), !dbg !7885
  %tobool16 = icmp ne i8 %call15, 0, !dbg !7885
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !7886

if.then17:                                        ; preds = %if.then
  %18 = load i8*, i8** %filename.addr, align 8, !dbg !7887
  %19 = load i8*, i8** %blendfilename, align 8, !dbg !7889
  %call18 = call zeroext i8 @BLI_path_abs(i8* %18, i8* %19), !dbg !7890
  br label %if.end, !dbg !7891

if.end:                                           ; preds = %if.then17, %if.then
  %20 = load i8*, i8** %filename.addr, align 8, !dbg !7892
  %call19 = call i32 @BLI_add_slash(i8* %20), !dbg !7893
  store i32 %call19, i32* %retval, align 4, !dbg !7894
  br label %return, !dbg !7894

if.else:                                          ; preds = %cond.end7
  %21 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !7895
  %conv = zext i8 %21 to i32, !dbg !7897
  %tobool20 = icmp ne i32 %conv, 0, !dbg !7897
  br i1 %tobool20, label %if.then22, label %lor.lhs.false, !dbg !7898

lor.lhs.false:                                    ; preds = %if.else
  %22 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7899
  %tobool21 = icmp ne %struct.Library* %22, null, !dbg !7899
  br i1 %tobool21, label %if.then22, label %if.end34, !dbg !7900

if.then22:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata [1024 x i8]* %file, metadata !7901, metadata !DIExpression()), !dbg !7903
  %23 = load i8*, i8** %blendfilename, align 8, !dbg !7904
  %arraydecay23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !7905
  call void @BLI_split_file_part(i8* %23, i8* %arraydecay23, i64 1024), !dbg !7906
  %arraydecay24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !7907
  %call25 = call i64 @strlen(i8* %arraydecay24) #6, !dbg !7908
  store i64 %call25, i64* %i, align 8, !dbg !7909
  %24 = load i64, i64* %i, align 8, !dbg !7910
  %cmp26 = icmp ugt i64 %24, 6, !dbg !7912
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7913

if.then28:                                        ; preds = %if.then22
  %25 = load i64, i64* %i, align 8, !dbg !7914
  %sub = sub i64 %25, 6, !dbg !7915
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 %sub, !dbg !7916
  store i8 0, i8* %arrayidx, align 1, !dbg !7917
  br label %if.end29, !dbg !7916

if.end29:                                         ; preds = %if.then28, %if.then22
  %26 = load i8*, i8** %filename.addr, align 8, !dbg !7918
  %arraydecay30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %file, i64 0, i64 0, !dbg !7919
  %call31 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %26, i64 1024, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay30), !dbg !7920
  %27 = load i8*, i8** %filename.addr, align 8, !dbg !7921
  %28 = load i8*, i8** %blendfilename, align 8, !dbg !7922
  %call32 = call zeroext i8 @BLI_path_abs(i8* %27, i8* %28), !dbg !7923
  %29 = load i8*, i8** %filename.addr, align 8, !dbg !7924
  %call33 = call i32 @BLI_add_slash(i8* %29), !dbg !7925
  store i32 %call33, i32* %retval, align 4, !dbg !7926
  br label %return, !dbg !7926

if.end34:                                         ; preds = %lor.lhs.false
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %30 = load i8*, i8** %filename.addr, align 8, !dbg !7927
  %call36 = call i8* @BLI_temp_dir_session(), !dbg !7928
  %call37 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %30, i64 1024, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i8* %call36), !dbg !7929
  %31 = load i8*, i8** %filename.addr, align 8, !dbg !7930
  %call38 = call i32 @BLI_add_slash(i8* %31), !dbg !7931
  store i32 %call38, i32* %retval, align 4, !dbg !7932
  br label %return, !dbg !7932

return:                                           ; preds = %if.end35, %if.end29, %if.end
  %32 = load i32, i32* %retval, align 4, !dbg !7933
  ret i32 %32, !dbg !7933
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_filename(%struct.PTCacheID* %pid, i8* %filename, i32 %cfra, i16 signext %do_path, i16 signext %do_ext) #0 !dbg !7934 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %filename.addr = alloca i8*, align 8
  %cfra.addr = alloca i32, align 4
  %do_path.addr = alloca i16, align 2
  %do_ext.addr = alloca i16, align 2
  %len = alloca i32, align 4
  %idname = alloca i8*, align 8
  %newname = alloca i8*, align 8
  %temp = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !7941, metadata !DIExpression()), !dbg !7942
  store i16 %do_path, i16* %do_path.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %do_path.addr, metadata !7943, metadata !DIExpression()), !dbg !7944
  store i16 %do_ext, i16* %do_ext.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %do_ext.addr, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7947, metadata !DIExpression()), !dbg !7948
  store i32 0, i32* %len, align 4, !dbg !7948
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !7949, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.declare(metadata i8** %newname, metadata !7951, metadata !DIExpression()), !dbg !7952
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !7953
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7953
  store i8 0, i8* %arrayidx, align 1, !dbg !7954
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !7955
  store i8* %1, i8** %newname, align 8, !dbg !7956
  %2 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !7957
  %tobool = icmp ne i8 %2, 0, !dbg !7959
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7960

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7961
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %3, i32 0, i32 25, !dbg !7962
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !7962
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 2, !dbg !7963
  %5 = load i32, i32* %flag, align 8, !dbg !7963
  %and = and i32 %5, 512, !dbg !7964
  %cmp = icmp eq i32 %and, 0, !dbg !7965
  br i1 %cmp, label %if.then, label %if.end, !dbg !7966

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i16, i16* %do_path.addr, align 2, !dbg !7968
  %tobool1 = icmp ne i16 %6, 0, !dbg !7968
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7970

if.then2:                                         ; preds = %if.end
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7971
  %8 = load i8*, i8** %filename.addr, align 8, !dbg !7973
  %call = call i32 @ptcache_path(%struct.PTCacheID* %7, i8* %8), !dbg !7974
  store i32 %call, i32* %len, align 4, !dbg !7975
  %9 = load i32, i32* %len, align 4, !dbg !7976
  %10 = load i8*, i8** %newname, align 8, !dbg !7977
  %idx.ext = sext i32 %9 to i64, !dbg !7977
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7977
  store i8* %add.ptr, i8** %newname, align 8, !dbg !7977
  br label %if.end3, !dbg !7978

if.end3:                                          ; preds = %if.then2, %if.end
  %11 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7979
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %11, i32 0, i32 25, !dbg !7981
  %12 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !7981
  %name = getelementptr inbounds %struct.PointCache, %struct.PointCache* %12, i32 0, i32 15, !dbg !7982
  %arrayidx5 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7979
  %13 = load i8, i8* %arrayidx5, align 8, !dbg !7979
  %conv = zext i8 %13 to i32, !dbg !7979
  %cmp6 = icmp eq i32 %conv, 0, !dbg !7983
  br i1 %cmp6, label %land.lhs.true8, label %if.else, !dbg !7984

land.lhs.true8:                                   ; preds = %if.end3
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7985
  %cache9 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 25, !dbg !7986
  %15 = load %struct.PointCache*, %struct.PointCache** %cache9, align 8, !dbg !7986
  %flag10 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %15, i32 0, i32 2, !dbg !7987
  %16 = load i32, i32* %flag10, align 8, !dbg !7987
  %and11 = and i32 %16, 512, !dbg !7988
  %cmp12 = icmp eq i32 %and11, 0, !dbg !7989
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !7990

if.then14:                                        ; preds = %land.lhs.true8
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !7991
  %ob = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %17, i32 0, i32 3, !dbg !7993
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7993
  %id = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 0, !dbg !7994
  %name15 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7995
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name15, i64 0, i64 0, !dbg !7991
  %add.ptr16 = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !7996
  store i8* %add.ptr16, i8** %idname, align 8, !dbg !7997
  br label %while.cond, !dbg !7998

while.cond:                                       ; preds = %while.body, %if.then14
  %19 = load i8*, i8** %idname, align 8, !dbg !7999
  %20 = load i8, i8* %19, align 1, !dbg !8000
  %conv17 = zext i8 %20 to i32, !dbg !8000
  %cmp18 = icmp ne i32 0, %conv17, !dbg !8001
  br i1 %cmp18, label %while.body, label %while.end, !dbg !7998

while.body:                                       ; preds = %while.cond
  %21 = load i8*, i8** %newname, align 8, !dbg !8002
  %22 = load i8*, i8** %idname, align 8, !dbg !8004
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !8004
  store i8* %incdec.ptr, i8** %idname, align 8, !dbg !8004
  %23 = load i8, i8* %22, align 1, !dbg !8005
  %conv20 = zext i8 %23 to i32, !dbg !8006
  %call21 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %21, i64 2048, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i32 %conv20), !dbg !8007
  %24 = load i8*, i8** %newname, align 8, !dbg !8008
  %add.ptr22 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !8008
  store i8* %add.ptr22, i8** %newname, align 8, !dbg !8008
  %25 = load i32, i32* %len, align 4, !dbg !8009
  %add = add nsw i32 %25, 2, !dbg !8009
  store i32 %add, i32* %len, align 4, !dbg !8009
  br label %while.cond, !dbg !7998, !llvm.loop !8010

while.end:                                        ; preds = %while.cond
  br label %if.end35, !dbg !8012

if.else:                                          ; preds = %land.lhs.true8, %if.end3
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8013, metadata !DIExpression()), !dbg !8015
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8016
  %cache23 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %26, i32 0, i32 25, !dbg !8017
  %27 = load %struct.PointCache*, %struct.PointCache** %cache23, align 8, !dbg !8017
  %name24 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 15, !dbg !8018
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %name24, i64 0, i64 0, !dbg !8016
  %call26 = call i64 @strlen(i8* %arraydecay25) #6, !dbg !8019
  %conv27 = trunc i64 %call26 to i32, !dbg !8020
  store i32 %conv27, i32* %temp, align 4, !dbg !8015
  %28 = load i8*, i8** %newname, align 8, !dbg !8021
  %29 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8022
  %cache28 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %29, i32 0, i32 25, !dbg !8023
  %30 = load %struct.PointCache*, %struct.PointCache** %cache28, align 8, !dbg !8023
  %name29 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %30, i32 0, i32 15, !dbg !8024
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %name29, i64 0, i64 0, !dbg !8022
  %call31 = call i8* @strcpy(i8* %28, i8* %arraydecay30) #7, !dbg !8025
  %31 = load i32, i32* %temp, align 4, !dbg !8026
  %32 = load i8*, i8** %newname, align 8, !dbg !8027
  %idx.ext32 = sext i32 %31 to i64, !dbg !8027
  %add.ptr33 = getelementptr inbounds i8, i8* %32, i64 %idx.ext32, !dbg !8027
  store i8* %add.ptr33, i8** %newname, align 8, !dbg !8027
  %33 = load i32, i32* %temp, align 4, !dbg !8028
  %34 = load i32, i32* %len, align 4, !dbg !8029
  %add34 = add nsw i32 %34, %33, !dbg !8029
  store i32 %add34, i32* %len, align 4, !dbg !8029
  br label %if.end35

if.end35:                                         ; preds = %if.else, %while.end
  %35 = load i16, i16* %do_ext.addr, align 2, !dbg !8030
  %tobool36 = icmp ne i16 %35, 0, !dbg !8030
  br i1 %tobool36, label %if.then37, label %if.end67, !dbg !8032

if.then37:                                        ; preds = %if.end35
  %36 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8033
  %cache38 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %36, i32 0, i32 25, !dbg !8036
  %37 = load %struct.PointCache*, %struct.PointCache** %cache38, align 8, !dbg !8036
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %37, i32 0, i32 12, !dbg !8037
  %38 = load i32, i32* %index, align 8, !dbg !8037
  %cmp39 = icmp slt i32 %38, 0, !dbg !8038
  br i1 %cmp39, label %if.then41, label %if.end46, !dbg !8039

if.then41:                                        ; preds = %if.then37
  %39 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8040
  %ob42 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %39, i32 0, i32 3, !dbg !8041
  %40 = load %struct.Object*, %struct.Object** %ob42, align 8, !dbg !8041
  %call43 = call i32 @BKE_object_insert_ptcache(%struct.Object* %40), !dbg !8042
  %41 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8043
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %41, i32 0, i32 6, !dbg !8044
  store i32 %call43, i32* %stack_index, align 4, !dbg !8045
  %42 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8046
  %cache44 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %42, i32 0, i32 25, !dbg !8047
  %43 = load %struct.PointCache*, %struct.PointCache** %cache44, align 8, !dbg !8047
  %index45 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %43, i32 0, i32 12, !dbg !8048
  store i32 %call43, i32* %index45, align 8, !dbg !8049
  br label %if.end46, !dbg !8046

if.end46:                                         ; preds = %if.then41, %if.then37
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8050
  %cache47 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 25, !dbg !8052
  %45 = load %struct.PointCache*, %struct.PointCache** %cache47, align 8, !dbg !8052
  %flag48 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %45, i32 0, i32 2, !dbg !8053
  %46 = load i32, i32* %flag48, align 8, !dbg !8053
  %and49 = and i32 %46, 512, !dbg !8054
  %tobool50 = icmp ne i32 %and49, 0, !dbg !8054
  br i1 %tobool50, label %if.then51, label %if.else62, !dbg !8055

if.then51:                                        ; preds = %if.end46
  %47 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8056
  %cache52 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %47, i32 0, i32 25, !dbg !8059
  %48 = load %struct.PointCache*, %struct.PointCache** %cache52, align 8, !dbg !8059
  %index53 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %48, i32 0, i32 12, !dbg !8060
  %49 = load i32, i32* %index53, align 8, !dbg !8060
  %cmp54 = icmp sge i32 %49, 0, !dbg !8061
  br i1 %cmp54, label %if.then56, label %if.else59, !dbg !8062

if.then56:                                        ; preds = %if.then51
  %50 = load i8*, i8** %newname, align 8, !dbg !8063
  %51 = load i32, i32* %cfra.addr, align 4, !dbg !8064
  %52 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8065
  %stack_index57 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %52, i32 0, i32 6, !dbg !8066
  %53 = load i32, i32* %stack_index57, align 4, !dbg !8066
  %call58 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %50, i64 2048, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i32 %51, i32 %53), !dbg !8067
  br label %if.end61, !dbg !8067

if.else59:                                        ; preds = %if.then51
  %54 = load i8*, i8** %newname, align 8, !dbg !8068
  %55 = load i32, i32* %cfra.addr, align 4, !dbg !8069
  %call60 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %54, i64 2048, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i32 %55), !dbg !8070
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.then56
  br label %if.end65, !dbg !8071

if.else62:                                        ; preds = %if.end46
  %56 = load i8*, i8** %newname, align 8, !dbg !8072
  %57 = load i32, i32* %cfra.addr, align 4, !dbg !8074
  %58 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8075
  %stack_index63 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %58, i32 0, i32 6, !dbg !8076
  %59 = load i32, i32* %stack_index63, align 4, !dbg !8076
  %call64 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %56, i64 2048, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0), i32 %57, i32 %59), !dbg !8077
  br label %if.end65

if.end65:                                         ; preds = %if.else62, %if.end61
  %60 = load i32, i32* %len, align 4, !dbg !8078
  %add66 = add nsw i32 %60, 16, !dbg !8078
  store i32 %add66, i32* %len, align 4, !dbg !8078
  br label %if.end67, !dbg !8079

if.end67:                                         ; preds = %if.end65, %if.end35
  %61 = load i32, i32* %len, align 4, !dbg !8080
  store i32 %61, i32* %retval, align 4, !dbg !8081
  br label %return, !dbg !8081

return:                                           ; preds = %if.end67, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !8082
  ret i32 %62, !dbg !8082
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #4

declare dso_local void @BLI_join_dirfile(i8*, i64, i8*, i8*) #3

declare dso_local i32 @BLI_delete(i8*, i8 zeroext, i8 zeroext) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_data_free(%struct.PTCacheMem* %pm) #0 !dbg !8083 {
entry:
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %data = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.declare(metadata i8*** %data, metadata !8086, metadata !DIExpression()), !dbg !8087
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !8088
  %data1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 6, !dbg !8089
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %data1, i64 0, i64 0, !dbg !8088
  store i8** %arraydecay, i8*** %data, align 8, !dbg !8087
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8090, metadata !DIExpression()), !dbg !8091
  store i32 0, i32* %i, align 4, !dbg !8092
  br label %for.cond, !dbg !8094

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8095
  %cmp = icmp slt i32 %1, 8, !dbg !8097
  br i1 %cmp, label %for.body, label %for.end, !dbg !8098

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %data, align 8, !dbg !8099
  %3 = load i32, i32* %i, align 4, !dbg !8102
  %idxprom = sext i32 %3 to i64, !dbg !8099
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !8099
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !8099
  %tobool = icmp ne i8* %4, null, !dbg !8099
  br i1 %tobool, label %if.then, label %if.end, !dbg !8103

if.then:                                          ; preds = %for.body
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8104
  %6 = load i8**, i8*** %data, align 8, !dbg !8105
  %7 = load i32, i32* %i, align 4, !dbg !8106
  %idxprom2 = sext i32 %7 to i64, !dbg !8105
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom2, !dbg !8105
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !8105
  call void %5(i8* %8), !dbg !8104
  br label %if.end, !dbg !8104

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8107

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !8108
  %inc = add nsw i32 %9, 1, !dbg !8108
  store i32 %inc, i32* %i, align 4, !dbg !8108
  br label %for.cond, !dbg !8109, !llvm.loop !8110

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8112
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_extra_free(%struct.PTCacheMem* %pm) #0 !dbg !8113 {
entry:
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !8114, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !8116, metadata !DIExpression()), !dbg !8117
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !8118
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 8, !dbg !8119
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !8120
  %1 = load i8*, i8** %first, align 8, !dbg !8120
  %2 = bitcast i8* %1 to %struct.PTCacheExtra*, !dbg !8118
  store %struct.PTCacheExtra* %2, %struct.PTCacheExtra** %extra, align 8, !dbg !8117
  %3 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !8121
  %tobool = icmp ne %struct.PTCacheExtra* %3, null, !dbg !8121
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8123

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !8124

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !8126
  %tobool1 = icmp ne %struct.PTCacheExtra* %4, null, !dbg !8129
  br i1 %tobool1, label %for.body, label %for.end, !dbg !8129

for.body:                                         ; preds = %for.cond
  %5 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !8130
  %data = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %5, i32 0, i32 4, !dbg !8133
  %6 = load i8*, i8** %data, align 8, !dbg !8133
  %tobool2 = icmp ne i8* %6, null, !dbg !8130
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8134

if.then3:                                         ; preds = %for.body
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8135
  %8 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !8136
  %data4 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %8, i32 0, i32 4, !dbg !8137
  %9 = load i8*, i8** %data4, align 8, !dbg !8137
  call void %7(i8* %9), !dbg !8135
  br label %if.end, !dbg !8135

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !8138

for.inc:                                          ; preds = %if.end
  %10 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !8139
  %next = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %10, i32 0, i32 0, !dbg !8140
  %11 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %next, align 8, !dbg !8140
  store %struct.PTCacheExtra* %11, %struct.PTCacheExtra** %extra, align 8, !dbg !8141
  br label %for.cond, !dbg !8142, !llvm.loop !8143

for.end:                                          ; preds = %for.cond
  %12 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !8145
  %extradata5 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %12, i32 0, i32 8, !dbg !8146
  call void @BLI_freelistN(%struct.ListBase* %extradata5), !dbg !8147
  br label %if.end6, !dbg !8148

if.end6:                                          ; preds = %for.end, %entry
  ret void, !dbg !8149
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #3

declare dso_local i32 @BLI_exists(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_id_time(%struct.PTCacheID* %pid, %struct.Scene* %scene, float %cfra, i32* %startframe, i32* %endframe, float* %timescale) #0 !dbg !8150 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %cfra.addr = alloca float, align 4
  %startframe.addr = alloca i32*, align 8
  %endframe.addr = alloca i32*, align 8
  %timescale.addr = alloca float*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %time = alloca float, align 4
  %nexttime = alloca float, align 4
  %sta = alloca i32, align 4
  %end = alloca i32, align 4
  %dir = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  %path = alloca [1024 x i8], align 16
  %filename = alloca [2048 x i8], align 16
  %ext = alloca [1024 x i8], align 16
  %len = alloca i32, align 4
  %frame = alloca i32, align 4
  %len2 = alloca i32, align 4
  %num = alloca [7 x i8], align 1
  %pm = alloca %struct.PTCacheMem*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8155, metadata !DIExpression()), !dbg !8156
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  store i32* %startframe, i32** %startframe.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %startframe.addr, metadata !8159, metadata !DIExpression()), !dbg !8160
  store i32* %endframe, i32** %endframe.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %endframe.addr, metadata !8161, metadata !DIExpression()), !dbg !8162
  store float* %timescale, float** %timescale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %timescale.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !8165, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.declare(metadata float* %time, metadata !8167, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.declare(metadata float* %nexttime, metadata !8169, metadata !DIExpression()), !dbg !8170
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8171
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !8172
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !8172
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !8173
  %2 = load float*, float** %timescale.addr, align 8, !dbg !8174
  %tobool = icmp ne float* %2, null, !dbg !8174
  br i1 %tobool, label %if.then, label %if.end, !dbg !8176

if.then:                                          ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8177
  %call = call float @BKE_scene_frame_get(%struct.Scene* %3), !dbg !8179
  store float %call, float* %time, align 4, !dbg !8180
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8181
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8182
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !8182
  %cfra2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !8182
  %6 = load i32, i32* %cfra2, align 8, !dbg !8182
  %conv = sitofp i32 %6 to float, !dbg !8182
  %add = fadd float %conv, 1.000000e+00, !dbg !8183
  %call3 = call float @BKE_scene_frame_get_from_ctime(%struct.Scene* %4, float %add), !dbg !8184
  store float %call3, float* %nexttime, align 4, !dbg !8185
  %7 = load float, float* %nexttime, align 4, !dbg !8186
  %8 = load float, float* %time, align 4, !dbg !8186
  %sub = fsub float %7, %8, !dbg !8186
  %cmp = fcmp ogt float %sub, 0.000000e+00, !dbg !8186
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8186

cond.true:                                        ; preds = %if.then
  %9 = load float, float* %nexttime, align 4, !dbg !8186
  %10 = load float, float* %time, align 4, !dbg !8186
  %sub5 = fsub float %9, %10, !dbg !8186
  br label %cond.end, !dbg !8186

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !8186

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub5, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !8186
  %11 = load float*, float** %timescale.addr, align 8, !dbg !8187
  store float %cond, float* %11, align 4, !dbg !8188
  br label %if.end, !dbg !8189

if.end:                                           ; preds = %cond.end, %entry
  %12 = load i32*, i32** %startframe.addr, align 8, !dbg !8190
  %tobool6 = icmp ne i32* %12, null, !dbg !8190
  br i1 %tobool6, label %land.lhs.true, label %if.end11, !dbg !8192

land.lhs.true:                                    ; preds = %if.end
  %13 = load i32*, i32** %endframe.addr, align 8, !dbg !8193
  %tobool7 = icmp ne i32* %13, null, !dbg !8193
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !8194

if.then8:                                         ; preds = %land.lhs.true
  %14 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8195
  %startframe9 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %14, i32 0, i32 5, !dbg !8197
  %15 = load i32, i32* %startframe9, align 4, !dbg !8197
  %16 = load i32*, i32** %startframe.addr, align 8, !dbg !8198
  store i32 %15, i32* %16, align 4, !dbg !8199
  %17 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8200
  %endframe10 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %17, i32 0, i32 6, !dbg !8201
  %18 = load i32, i32* %endframe10, align 8, !dbg !8201
  %19 = load i32*, i32** %endframe.addr, align 8, !dbg !8202
  store i32 %18, i32* %19, align 4, !dbg !8203
  br label %if.end11, !dbg !8204

if.end11:                                         ; preds = %if.then8, %land.lhs.true, %if.end
  %20 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8205
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %20, i32 0, i32 19, !dbg !8207
  %21 = load i8*, i8** %cached_frames, align 8, !dbg !8207
  %tobool12 = icmp ne i8* %21, null, !dbg !8205
  br i1 %tobool12, label %if.then13, label %if.end27, !dbg !8208

if.then13:                                        ; preds = %if.end11
  %22 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !8209
  %23 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8212
  %cached_frames14 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %23, i32 0, i32 19, !dbg !8213
  %24 = load i8*, i8** %cached_frames14, align 8, !dbg !8213
  %call15 = call i64 %22(i8* %24), !dbg !8209
  %25 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8214
  %endframe16 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %25, i32 0, i32 6, !dbg !8215
  %26 = load i32, i32* %endframe16, align 8, !dbg !8215
  %27 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8216
  %startframe17 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 5, !dbg !8217
  %28 = load i32, i32* %startframe17, align 4, !dbg !8217
  %sub18 = sub nsw i32 %26, %28, !dbg !8218
  %add19 = add nsw i32 %sub18, 1, !dbg !8219
  %conv20 = sext i32 %add19 to i64, !dbg !8220
  %mul = mul i64 1, %conv20, !dbg !8221
  %cmp21 = icmp ne i64 %call15, %mul, !dbg !8222
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !8223

if.then23:                                        ; preds = %if.then13
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8224
  %30 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8226
  %cached_frames24 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %30, i32 0, i32 19, !dbg !8227
  %31 = load i8*, i8** %cached_frames24, align 8, !dbg !8227
  call void %29(i8* %31), !dbg !8224
  %32 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8228
  %cached_frames25 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %32, i32 0, i32 19, !dbg !8229
  store i8* null, i8** %cached_frames25, align 8, !dbg !8230
  br label %if.end26, !dbg !8231

if.end26:                                         ; preds = %if.then23, %if.then13
  br label %if.end27, !dbg !8232

if.end27:                                         ; preds = %if.end26, %if.end11
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8233
  %cached_frames28 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 19, !dbg !8235
  %34 = load i8*, i8** %cached_frames28, align 8, !dbg !8235
  %cmp29 = icmp eq i8* %34, null, !dbg !8236
  br i1 %cmp29, label %land.lhs.true31, label %if.end128, !dbg !8237

land.lhs.true31:                                  ; preds = %if.end27
  %35 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8238
  %endframe32 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %35, i32 0, i32 6, !dbg !8239
  %36 = load i32, i32* %endframe32, align 8, !dbg !8239
  %37 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8240
  %startframe33 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %37, i32 0, i32 5, !dbg !8241
  %38 = load i32, i32* %startframe33, align 4, !dbg !8241
  %cmp34 = icmp sgt i32 %36, %38, !dbg !8242
  br i1 %cmp34, label %if.then36, label %if.end128, !dbg !8243

if.then36:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata i32* %sta, metadata !8244, metadata !DIExpression()), !dbg !8246
  %39 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8247
  %startframe37 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %39, i32 0, i32 5, !dbg !8248
  %40 = load i32, i32* %startframe37, align 4, !dbg !8248
  store i32 %40, i32* %sta, align 4, !dbg !8246
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8249, metadata !DIExpression()), !dbg !8250
  %41 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8251
  %endframe38 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %41, i32 0, i32 6, !dbg !8252
  %42 = load i32, i32* %endframe38, align 8, !dbg !8252
  store i32 %42, i32* %end, align 4, !dbg !8250
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8253
  %44 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8254
  %endframe39 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %44, i32 0, i32 6, !dbg !8255
  %45 = load i32, i32* %endframe39, align 8, !dbg !8255
  %46 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8256
  %startframe40 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %46, i32 0, i32 5, !dbg !8257
  %47 = load i32, i32* %startframe40, align 4, !dbg !8257
  %sub41 = sub nsw i32 %45, %47, !dbg !8258
  %add42 = add nsw i32 %sub41, 1, !dbg !8259
  %conv43 = sext i32 %add42 to i64, !dbg !8260
  %mul44 = mul i64 1, %conv43, !dbg !8261
  %call45 = call i8* %43(i64 %mul44, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)), !dbg !8253
  %48 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8262
  %cached_frames46 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %48, i32 0, i32 19, !dbg !8263
  store i8* %call45, i8** %cached_frames46, align 8, !dbg !8264
  %49 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8265
  %cache47 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %49, i32 0, i32 25, !dbg !8267
  %50 = load %struct.PointCache*, %struct.PointCache** %cache47, align 8, !dbg !8267
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %50, i32 0, i32 2, !dbg !8268
  %51 = load i32, i32* %flag, align 8, !dbg !8268
  %and = and i32 %51, 64, !dbg !8269
  %tobool48 = icmp ne i32 %and, 0, !dbg !8269
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !8270

if.then49:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !8271, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !8274, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !8276, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.declare(metadata [2048 x i8]* %filename, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ext, metadata !8280, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8282, metadata !DIExpression()), !dbg !8283
  %52 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8284
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8285
  %call50 = call i32 @ptcache_path(%struct.PTCacheID* %52, i8* %arraydecay), !dbg !8286
  %53 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8287
  %arraydecay51 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !8288
  %54 = load float, float* %cfra.addr, align 4, !dbg !8289
  %conv52 = fptosi float %54 to i32, !dbg !8290
  %call53 = call i32 @ptcache_filename(%struct.PTCacheID* %53, i8* %arraydecay51, i32 %conv52, i16 signext 0, i16 signext 0), !dbg !8291
  store i32 %call53, i32* %len, align 4, !dbg !8292
  %arraydecay54 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8293
  %call55 = call %struct.__dirstream* @opendir(i8* %arraydecay54), !dbg !8294
  store %struct.__dirstream* %call55, %struct.__dirstream** %dir, align 8, !dbg !8295
  %55 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8296
  %cmp56 = icmp eq %struct.__dirstream* %55, null, !dbg !8298
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !8299

if.then58:                                        ; preds = %if.then49
  br label %if.end128, !dbg !8300

if.end59:                                         ; preds = %if.then49
  %arraydecay60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !8301
  %56 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8302
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %56, i32 0, i32 6, !dbg !8303
  %57 = load i32, i32* %stack_index, align 4, !dbg !8303
  %call61 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay60, i64 1024, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %57), !dbg !8304
  br label %while.cond, !dbg !8305

while.cond:                                       ; preds = %if.end106, %if.end59
  %58 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8306
  %call62 = call %struct.dirent* @readdir(%struct.__dirstream* %58), !dbg !8307
  store %struct.dirent* %call62, %struct.dirent** %de, align 8, !dbg !8308
  %cmp63 = icmp ne %struct.dirent* %call62, null, !dbg !8309
  br i1 %cmp63, label %while.body, label %while.end, !dbg !8305

while.body:                                       ; preds = %while.cond
  %59 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8310
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %59, i32 0, i32 4, !dbg !8313
  %arraydecay65 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !8310
  %arraydecay66 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !8314
  %call67 = call i8* @strstr(i8* %arraydecay65, i8* %arraydecay66) #6, !dbg !8315
  %tobool68 = icmp ne i8* %call67, null, !dbg !8315
  br i1 %tobool68, label %if.then69, label %if.end106, !dbg !8316

if.then69:                                        ; preds = %while.body
  %arraydecay70 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !8317
  %60 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8320
  %d_name71 = getelementptr inbounds %struct.dirent, %struct.dirent* %60, i32 0, i32 4, !dbg !8321
  %arraydecay72 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name71, i64 0, i64 0, !dbg !8320
  %61 = load i32, i32* %len, align 4, !dbg !8322
  %conv73 = zext i32 %61 to i64, !dbg !8322
  %call74 = call i32 @strncmp(i8* %arraydecay70, i8* %arraydecay72, i64 %conv73) #6, !dbg !8323
  %cmp75 = icmp eq i32 %call74, 0, !dbg !8324
  br i1 %cmp75, label %if.then77, label %if.end105, !dbg !8325

if.then77:                                        ; preds = %if.then69
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !8326, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !8329, metadata !DIExpression()), !dbg !8330
  %62 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8331
  %d_name78 = getelementptr inbounds %struct.dirent, %struct.dirent* %62, i32 0, i32 4, !dbg !8332
  %arraydecay79 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name78, i64 0, i64 0, !dbg !8331
  %call80 = call i64 @strlen(i8* %arraydecay79) #6, !dbg !8333
  %conv81 = trunc i64 %call80 to i32, !dbg !8334
  store i32 %conv81, i32* %len2, align 4, !dbg !8330
  call void @llvm.dbg.declare(metadata [7 x i8]* %num, metadata !8335, metadata !DIExpression()), !dbg !8336
  %63 = load i32, i32* %len2, align 4, !dbg !8337
  %cmp82 = icmp ugt i32 %63, 15, !dbg !8339
  br i1 %cmp82, label %if.then84, label %if.end104, !dbg !8340

if.then84:                                        ; preds = %if.then77
  %arraydecay85 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !8341
  %64 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8343
  %d_name86 = getelementptr inbounds %struct.dirent, %struct.dirent* %64, i32 0, i32 4, !dbg !8344
  %arraydecay87 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name86, i64 0, i64 0, !dbg !8343
  %65 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8345
  %d_name88 = getelementptr inbounds %struct.dirent, %struct.dirent* %65, i32 0, i32 4, !dbg !8346
  %arraydecay89 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name88, i64 0, i64 0, !dbg !8345
  %call90 = call i64 @strlen(i8* %arraydecay89) #6, !dbg !8347
  %sub91 = sub i64 %call90, 15, !dbg !8348
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay87, i64 %sub91, !dbg !8349
  %call92 = call i8* @BLI_strncpy(i8* %arraydecay85, i8* %add.ptr, i64 7), !dbg !8350
  %arraydecay93 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !8351
  %call94 = call i32 @atoi(i8* %arraydecay93) #6, !dbg !8352
  store i32 %call94, i32* %frame, align 4, !dbg !8353
  %66 = load i32, i32* %frame, align 4, !dbg !8354
  %67 = load i32, i32* %sta, align 4, !dbg !8356
  %cmp95 = icmp uge i32 %66, %67, !dbg !8357
  br i1 %cmp95, label %land.lhs.true97, label %if.end103, !dbg !8358

land.lhs.true97:                                  ; preds = %if.then84
  %68 = load i32, i32* %frame, align 4, !dbg !8359
  %69 = load i32, i32* %end, align 4, !dbg !8360
  %cmp98 = icmp ule i32 %68, %69, !dbg !8361
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !8362

if.then100:                                       ; preds = %land.lhs.true97
  %70 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8363
  %cached_frames101 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %70, i32 0, i32 19, !dbg !8364
  %71 = load i8*, i8** %cached_frames101, align 8, !dbg !8364
  %72 = load i32, i32* %frame, align 4, !dbg !8365
  %73 = load i32, i32* %sta, align 4, !dbg !8366
  %sub102 = sub i32 %72, %73, !dbg !8367
  %idxprom = zext i32 %sub102 to i64, !dbg !8363
  %arrayidx = getelementptr inbounds i8, i8* %71, i64 %idxprom, !dbg !8363
  store i8 1, i8* %arrayidx, align 1, !dbg !8368
  br label %if.end103, !dbg !8363

if.end103:                                        ; preds = %if.then100, %land.lhs.true97, %if.then84
  br label %if.end104, !dbg !8369

if.end104:                                        ; preds = %if.end103, %if.then77
  br label %if.end105, !dbg !8370

if.end105:                                        ; preds = %if.end104, %if.then69
  br label %if.end106, !dbg !8371

if.end106:                                        ; preds = %if.end105, %while.body
  br label %while.cond, !dbg !8305, !llvm.loop !8372

while.end:                                        ; preds = %while.cond
  %74 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8374
  %call107 = call i32 @closedir(%struct.__dirstream* %74), !dbg !8375
  br label %if.end127, !dbg !8376

if.else:                                          ; preds = %if.then36
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !8377, metadata !DIExpression()), !dbg !8379
  %75 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8380
  %cache108 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %75, i32 0, i32 25, !dbg !8381
  %76 = load %struct.PointCache*, %struct.PointCache** %cache108, align 8, !dbg !8381
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %76, i32 0, i32 20, !dbg !8382
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !8383
  %77 = load i8*, i8** %first, align 8, !dbg !8383
  %78 = bitcast i8* %77 to %struct.PTCacheMem*, !dbg !8380
  store %struct.PTCacheMem* %78, %struct.PTCacheMem** %pm, align 8, !dbg !8379
  br label %while.cond109, !dbg !8384

while.cond109:                                    ; preds = %if.end125, %if.else
  %79 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8385
  %tobool110 = icmp ne %struct.PTCacheMem* %79, null, !dbg !8384
  br i1 %tobool110, label %while.body111, label %while.end126, !dbg !8384

while.body111:                                    ; preds = %while.cond109
  %80 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8386
  %frame112 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %80, i32 0, i32 2, !dbg !8389
  %81 = load i32, i32* %frame112, align 8, !dbg !8389
  %82 = load i32, i32* %sta, align 4, !dbg !8390
  %cmp113 = icmp uge i32 %81, %82, !dbg !8391
  br i1 %cmp113, label %land.lhs.true115, label %if.end125, !dbg !8392

land.lhs.true115:                                 ; preds = %while.body111
  %83 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8393
  %frame116 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %83, i32 0, i32 2, !dbg !8394
  %84 = load i32, i32* %frame116, align 8, !dbg !8394
  %85 = load i32, i32* %end, align 4, !dbg !8395
  %cmp117 = icmp ule i32 %84, %85, !dbg !8396
  br i1 %cmp117, label %if.then119, label %if.end125, !dbg !8397

if.then119:                                       ; preds = %land.lhs.true115
  %86 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8398
  %cached_frames120 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %86, i32 0, i32 19, !dbg !8399
  %87 = load i8*, i8** %cached_frames120, align 8, !dbg !8399
  %88 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8400
  %frame121 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %88, i32 0, i32 2, !dbg !8401
  %89 = load i32, i32* %frame121, align 8, !dbg !8401
  %90 = load i32, i32* %sta, align 4, !dbg !8402
  %sub122 = sub i32 %89, %90, !dbg !8403
  %idxprom123 = zext i32 %sub122 to i64, !dbg !8398
  %arrayidx124 = getelementptr inbounds i8, i8* %87, i64 %idxprom123, !dbg !8398
  store i8 1, i8* %arrayidx124, align 1, !dbg !8404
  br label %if.end125, !dbg !8398

if.end125:                                        ; preds = %if.then119, %land.lhs.true115, %while.body111
  %91 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8405
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %91, i32 0, i32 0, !dbg !8406
  %92 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !8406
  store %struct.PTCacheMem* %92, %struct.PTCacheMem** %pm, align 8, !dbg !8407
  br label %while.cond109, !dbg !8384, !llvm.loop !8408

while.end126:                                     ; preds = %while.cond109
  br label %if.end127

if.end127:                                        ; preds = %while.end126, %while.end
  br label %if.end128, !dbg !8410

if.end128:                                        ; preds = %if.then58, %if.end127, %land.lhs.true31, %if.end27
  ret void, !dbg !8411
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #3

declare dso_local float @BKE_scene_frame_get_from_ctime(%struct.Scene*, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_id_reset(%struct.Scene* %scene, %struct.PTCacheID* %pid, i32 %mode) #0 !dbg !8412 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %mode.addr = alloca i32, align 4
  %cache = alloca %struct.PointCache*, align 8
  %reset = alloca i32, align 4
  %clear = alloca i32, align 4
  %after = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !8421, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !8423, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata i32* %clear, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.declare(metadata i32* %after, metadata !8427, metadata !DIExpression()), !dbg !8428
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8429
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !8431
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !8431
  %tobool = icmp ne %struct.PointCache* %1, null, !dbg !8429
  br i1 %tobool, label %if.end, label %if.then, !dbg !8432

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8433
  br label %return, !dbg !8433

if.end:                                           ; preds = %entry
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8434
  %cache2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 25, !dbg !8435
  %3 = load %struct.PointCache*, %struct.PointCache** %cache2, align 8, !dbg !8435
  store %struct.PointCache* %3, %struct.PointCache** %cache, align 8, !dbg !8436
  store i32 0, i32* %reset, align 4, !dbg !8437
  store i32 0, i32* %clear, align 4, !dbg !8438
  store i32 0, i32* %after, align 4, !dbg !8439
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8440
  %cmp = icmp eq i32 %4, 0, !dbg !8442
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8443

if.then3:                                         ; preds = %if.end
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8444
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 2, !dbg !8447
  %6 = load i32, i32* %flag, align 8, !dbg !8447
  %and = and i32 %6, 1, !dbg !8448
  %tobool4 = icmp ne i32 %and, 0, !dbg !8448
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8449

if.then5:                                         ; preds = %if.then3
  store i32 1, i32* %after, align 4, !dbg !8450
  br label %if.end6, !dbg !8452

if.end6:                                          ; preds = %if.then5, %if.then3
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8453
  %flag7 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !8454
  %8 = load i32, i32* %flag7, align 8, !dbg !8455
  %or = or i32 %8, 2, !dbg !8455
  store i32 %or, i32* %flag7, align 8, !dbg !8455
  br label %if.end27, !dbg !8456

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %mode.addr, align 4, !dbg !8457
  %cmp8 = icmp eq i32 %9, 1, !dbg !8459
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !8460

if.then9:                                         ; preds = %if.else
  %10 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8461
  %flag10 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 2, !dbg !8463
  %11 = load i32, i32* %flag10, align 8, !dbg !8464
  %or11 = or i32 %11, 2, !dbg !8464
  store i32 %or11, i32* %flag10, align 8, !dbg !8464
  br label %if.end26, !dbg !8465

if.else12:                                        ; preds = %if.else
  %12 = load i32, i32* %mode.addr, align 4, !dbg !8466
  %cmp13 = icmp eq i32 %12, 2, !dbg !8468
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !8469

if.then14:                                        ; preds = %if.else12
  store i32 1, i32* %reset, align 4, !dbg !8470
  %13 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8472
  %flag15 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 2, !dbg !8474
  %14 = load i32, i32* %flag15, align 8, !dbg !8474
  %and16 = and i32 %14, 2, !dbg !8475
  %tobool17 = icmp ne i32 %and16, 0, !dbg !8475
  br i1 %tobool17, label %land.lhs.true, label %if.end24, !dbg !8476

land.lhs.true:                                    ; preds = %if.then14
  %15 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8477
  %flag18 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %15, i32 0, i32 2, !dbg !8478
  %16 = load i32, i32* %flag18, align 8, !dbg !8478
  %and19 = and i32 %16, 1, !dbg !8479
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8479
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !8480

if.then21:                                        ; preds = %land.lhs.true
  store i32 1, i32* %clear, align 4, !dbg !8481
  %17 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8483
  %flag22 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %17, i32 0, i32 2, !dbg !8484
  %18 = load i32, i32* %flag22, align 8, !dbg !8485
  %and23 = and i32 %18, -3, !dbg !8485
  store i32 %and23, i32* %flag22, align 8, !dbg !8485
  br label %if.end24, !dbg !8486

if.end24:                                         ; preds = %if.then21, %land.lhs.true, %if.then14
  br label %if.end25, !dbg !8487

if.end25:                                         ; preds = %if.end24, %if.else12
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then9
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end6
  %19 = load i32, i32* %reset, align 4, !dbg !8488
  %tobool28 = icmp ne i32 %19, 0, !dbg !8488
  br i1 %tobool28, label %if.then29, label %if.end53, !dbg !8490

if.then29:                                        ; preds = %if.end27
  %20 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8491
  call void @BKE_ptcache_invalidate(%struct.PointCache* %20), !dbg !8493
  %21 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8494
  %flag30 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %21, i32 0, i32 2, !dbg !8495
  %22 = load i32, i32* %flag30, align 8, !dbg !8496
  %and31 = and i32 %22, -259, !dbg !8496
  store i32 %and31, i32* %flag30, align 8, !dbg !8496
  %23 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8497
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %23, i32 0, i32 5, !dbg !8499
  %24 = load i32, i32* %type, align 8, !dbg !8499
  %cmp32 = icmp eq i32 %24, 2, !dbg !8500
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !8501

if.then33:                                        ; preds = %if.then29
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8502
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %25, i32 0, i32 4, !dbg !8503
  %26 = load i8*, i8** %calldata, align 8, !dbg !8503
  %27 = bitcast i8* %26 to %struct.ClothModifierData*, !dbg !8502
  call void @cloth_free_modifier(%struct.ClothModifierData* %27), !dbg !8504
  br label %if.end52, !dbg !8504

if.else34:                                        ; preds = %if.then29
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8505
  %type35 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 5, !dbg !8507
  %29 = load i32, i32* %type35, align 8, !dbg !8507
  %cmp36 = icmp eq i32 %29, 0, !dbg !8508
  br i1 %cmp36, label %if.then37, label %if.else39, !dbg !8509

if.then37:                                        ; preds = %if.else34
  %30 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8510
  %calldata38 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %30, i32 0, i32 4, !dbg !8511
  %31 = load i8*, i8** %calldata38, align 8, !dbg !8511
  %32 = bitcast i8* %31 to %struct.SoftBody*, !dbg !8510
  call void @sbFreeSimulation(%struct.SoftBody* %32), !dbg !8512
  br label %if.end51, !dbg !8512

if.else39:                                        ; preds = %if.else34
  %33 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8513
  %type40 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %33, i32 0, i32 5, !dbg !8515
  %34 = load i32, i32* %type40, align 8, !dbg !8515
  %cmp41 = icmp eq i32 %34, 1, !dbg !8516
  br i1 %cmp41, label %if.then42, label %if.else44, !dbg !8517

if.then42:                                        ; preds = %if.else39
  %35 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8518
  %calldata43 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %35, i32 0, i32 4, !dbg !8519
  %36 = load i8*, i8** %calldata43, align 8, !dbg !8519
  %37 = bitcast i8* %36 to %struct.ParticleSystem*, !dbg !8518
  call void @psys_reset(%struct.ParticleSystem* %37, i32 2), !dbg !8520
  br label %if.end50, !dbg !8520

if.else44:                                        ; preds = %if.else39
  %38 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8521
  %type45 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %38, i32 0, i32 5, !dbg !8523
  %39 = load i32, i32* %type45, align 8, !dbg !8523
  %cmp46 = icmp eq i32 %39, 5, !dbg !8524
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !8525

if.then47:                                        ; preds = %if.else44
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8526
  %41 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8527
  %calldata48 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %41, i32 0, i32 4, !dbg !8528
  %42 = load i8*, i8** %calldata48, align 8, !dbg !8528
  %43 = bitcast i8* %42 to %struct.DynamicPaintSurface*, !dbg !8529
  call void @dynamicPaint_clearSurface(%struct.Scene* %40, %struct.DynamicPaintSurface* %43), !dbg !8530
  br label %if.end49, !dbg !8530

if.end49:                                         ; preds = %if.then47, %if.else44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then42
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then37
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then33
  br label %if.end53, !dbg !8531

if.end53:                                         ; preds = %if.end52, %if.end27
  %44 = load i32, i32* %clear, align 4, !dbg !8532
  %tobool54 = icmp ne i32 %44, 0, !dbg !8532
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !8534

if.then55:                                        ; preds = %if.end53
  %45 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8535
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %45, i32 0, i32 0), !dbg !8536
  br label %if.end60, !dbg !8536

if.else56:                                        ; preds = %if.end53
  %46 = load i32, i32* %after, align 4, !dbg !8537
  %tobool57 = icmp ne i32 %46, 0, !dbg !8537
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !8539

if.then58:                                        ; preds = %if.else56
  %47 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !8540
  %48 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8541
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %48, i32 0, i32 22, !dbg !8541
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !8541
  %49 = load i32, i32* %cfra, align 8, !dbg !8541
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %47, i32 3, i32 %49), !dbg !8542
  br label %if.end59, !dbg !8542

if.end59:                                         ; preds = %if.then58, %if.else56
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then55
  %50 = load i32, i32* %reset, align 4, !dbg !8543
  %tobool61 = icmp ne i32 %50, 0, !dbg !8543
  br i1 %tobool61, label %lor.end, label %lor.lhs.false, !dbg !8544

lor.lhs.false:                                    ; preds = %if.end60
  %51 = load i32, i32* %clear, align 4, !dbg !8545
  %tobool62 = icmp ne i32 %51, 0, !dbg !8545
  br i1 %tobool62, label %lor.end, label %lor.rhs, !dbg !8546

lor.rhs:                                          ; preds = %lor.lhs.false
  %52 = load i32, i32* %after, align 4, !dbg !8547
  %tobool63 = icmp ne i32 %52, 0, !dbg !8546
  br label %lor.end, !dbg !8546

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end60
  %53 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end60 ], [ %tobool63, %lor.rhs ]
  %lor.ext = zext i1 %53 to i32, !dbg !8546
  store i32 %lor.ext, i32* %retval, align 4, !dbg !8548
  br label %return, !dbg !8548

return:                                           ; preds = %lor.end, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !8549
  ret i32 %54, !dbg !8549
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_invalidate(%struct.PointCache* %cache) #0 !dbg !8550 {
entry:
  %cache.addr = alloca %struct.PointCache*, align 8
  store %struct.PointCache* %cache, %struct.PointCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8555
  %tobool = icmp ne %struct.PointCache* %0, null, !dbg !8555
  br i1 %tobool, label %if.then, label %if.end, !dbg !8557

if.then:                                          ; preds = %entry
  %1 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8558
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !8560
  %2 = load i32, i32* %flag, align 8, !dbg !8561
  %and = and i32 %2, -5, !dbg !8561
  store i32 %and, i32* %flag, align 8, !dbg !8561
  %3 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8562
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %3, i32 0, i32 4, !dbg !8563
  store i32 0, i32* %simframe, align 8, !dbg !8564
  %4 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8565
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 5, !dbg !8565
  %5 = load i32, i32* %startframe, align 4, !dbg !8565
  %cmp = icmp slt i32 %5, 0, !dbg !8565
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8565

cond.true:                                        ; preds = %if.then
  %6 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8565
  %startframe1 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 5, !dbg !8565
  %7 = load i32, i32* %startframe1, align 4, !dbg !8565
  br label %cond.end, !dbg !8565

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !8565

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !8565
  %8 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8566
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 8, !dbg !8567
  store i32 %cond, i32* %last_exact, align 8, !dbg !8568
  br label %if.end, !dbg !8569

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !8570
}

declare dso_local void @cloth_free_modifier(%struct.ClothModifierData*) #3

declare dso_local void @sbFreeSimulation(%struct.SoftBody*) #3

declare dso_local void @psys_reset(%struct.ParticleSystem*, i32) #3

declare dso_local void @dynamicPaint_clearSurface(%struct.Scene*, %struct.DynamicPaintSurface*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_ptcache_object_reset(%struct.Scene* %scene, %struct.Object* %ob, i32 %mode) #0 !dbg !8571 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %mode.addr = alloca i32, align 4
  %pid = alloca %struct.PTCacheID, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %reset = alloca i32, align 4
  %skip = alloca i32, align 4
  %smd = alloca %struct.SmokeModifierData*, align 8
  %pmd = alloca %struct.DynamicPaintModifierData*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !8582, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !8584, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !8586, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !8588, metadata !DIExpression()), !dbg !8589
  store i32 0, i32* %reset, align 4, !dbg !8590
  store i32 0, i32* %skip, align 4, !dbg !8591
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8592
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !8594
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !8594
  %tobool = icmp ne %struct.SoftBody* %1, null, !dbg !8592
  br i1 %tobool, label %if.then, label %if.end, !dbg !8595

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8596
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8598
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !8599
  %4 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !8599
  call void @BKE_ptcache_id_from_softbody(%struct.PTCacheID* %pid, %struct.Object* %2, %struct.SoftBody* %4), !dbg !8600
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8601
  %6 = load i32, i32* %mode.addr, align 4, !dbg !8602
  %call = call i32 @BKE_ptcache_id_reset(%struct.Scene* %5, %struct.PTCacheID* %pid, i32 %6), !dbg !8603
  %7 = load i32, i32* %reset, align 4, !dbg !8604
  %or = or i32 %7, %call, !dbg !8604
  store i32 %or, i32* %reset, align 4, !dbg !8604
  br label %if.end, !dbg !8605

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8606
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 109, !dbg !8608
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !8609
  %9 = load i8*, i8** %first, align 8, !dbg !8609
  %10 = bitcast i8* %9 to %struct.ParticleSystem*, !dbg !8606
  store %struct.ParticleSystem* %10, %struct.ParticleSystem** %psys, align 8, !dbg !8610
  br label %for.cond, !dbg !8611

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8612
  %tobool2 = icmp ne %struct.ParticleSystem* %11, null, !dbg !8614
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8614

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8615
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 31, !dbg !8618
  %13 = load i16, i16* %recalc, align 4, !dbg !8618
  %conv = sext i16 %13 to i32, !dbg !8615
  %and = and i32 %conv, 8, !dbg !8619
  %tobool3 = icmp ne i32 %and, 0, !dbg !8619
  br i1 %tobool3, label %if.then8, label %lor.lhs.false, !dbg !8620

lor.lhs.false:                                    ; preds = %for.body
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8621
  %recalc4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 31, !dbg !8622
  %15 = load i16, i16* %recalc4, align 4, !dbg !8622
  %conv5 = sext i16 %15 to i32, !dbg !8621
  %and6 = and i32 %conv5, 64, !dbg !8623
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8623
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !8624

if.then8:                                         ; preds = %lor.lhs.false, %for.body
  store i32 1, i32* %skip, align 4, !dbg !8625
  br label %if.end25, !dbg !8626

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8627
  %clmd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 11, !dbg !8629
  %17 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !8629
  %tobool9 = icmp ne %struct.ClothModifierData* %17, null, !dbg !8627
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !8630

if.then10:                                        ; preds = %if.else
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8631
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8633
  %clmd11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 11, !dbg !8634
  %20 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd11, align 8, !dbg !8634
  call void @BKE_ptcache_id_from_cloth(%struct.PTCacheID* %pid, %struct.Object* %18, %struct.ClothModifierData* %20), !dbg !8635
  %21 = load i32, i32* %mode.addr, align 4, !dbg !8636
  %cmp = icmp eq i32 %21, 1, !dbg !8638
  br i1 %cmp, label %if.then19, label %lor.lhs.false13, !dbg !8639

lor.lhs.false13:                                  ; preds = %if.then10
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8640
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 2, !dbg !8641
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8641
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 7, !dbg !8642
  %24 = load i16, i16* %type, align 8, !dbg !8642
  %conv14 = sext i16 %24 to i32, !dbg !8640
  %cmp15 = icmp eq i32 %conv14, 2, !dbg !8643
  br i1 %cmp15, label %land.lhs.true, label %if.then19, !dbg !8644

land.lhs.true:                                    ; preds = %lor.lhs.false13
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %pid, i32 0, i32 25, !dbg !8645
  %25 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8645
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %25, i32 0, i32 2, !dbg !8646
  %26 = load i32, i32* %flag, align 8, !dbg !8646
  %and17 = and i32 %26, 1, !dbg !8647
  %tobool18 = icmp ne i32 %and17, 0, !dbg !8647
  br i1 %tobool18, label %if.else22, label %if.then19, !dbg !8648

if.then19:                                        ; preds = %land.lhs.true, %lor.lhs.false13, %if.then10
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8649
  %28 = load i32, i32* %mode.addr, align 4, !dbg !8650
  %call20 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %27, %struct.PTCacheID* %pid, i32 %28), !dbg !8651
  %29 = load i32, i32* %reset, align 4, !dbg !8652
  %or21 = or i32 %29, %call20, !dbg !8652
  store i32 %or21, i32* %reset, align 4, !dbg !8652
  br label %if.end23, !dbg !8653

if.else22:                                        ; preds = %land.lhs.true
  store i32 1, i32* %skip, align 4, !dbg !8654
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24, !dbg !8655

if.end24:                                         ; preds = %if.end23, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then8
  %30 = load i32, i32* %skip, align 4, !dbg !8656
  %cmp26 = icmp eq i32 %30, 0, !dbg !8658
  br i1 %cmp26, label %land.lhs.true28, label %if.end34, !dbg !8659

land.lhs.true28:                                  ; preds = %if.end25
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8660
  %part29 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 2, !dbg !8661
  %32 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part29, align 8, !dbg !8661
  %tobool30 = icmp ne %struct.ParticleSettings* %32, null, !dbg !8660
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !8662

if.then31:                                        ; preds = %land.lhs.true28
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8663
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8665
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %pid, %struct.Object* %33, %struct.ParticleSystem* %34), !dbg !8666
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8667
  %36 = load i32, i32* %mode.addr, align 4, !dbg !8668
  %call32 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %35, %struct.PTCacheID* %pid, i32 %36), !dbg !8669
  %37 = load i32, i32* %reset, align 4, !dbg !8670
  %or33 = or i32 %37, %call32, !dbg !8670
  store i32 %or33, i32* %reset, align 4, !dbg !8670
  br label %if.end34, !dbg !8671

if.end34:                                         ; preds = %if.then31, %land.lhs.true28, %if.end25
  br label %for.inc, !dbg !8672

for.inc:                                          ; preds = %if.end34
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8673
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 0, !dbg !8674
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !8674
  store %struct.ParticleSystem* %39, %struct.ParticleSystem** %psys, align 8, !dbg !8675
  br label %for.cond, !dbg !8676, !llvm.loop !8677

for.end:                                          ; preds = %for.cond
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8679
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 26, !dbg !8681
  %first35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !8682
  %41 = load i8*, i8** %first35, align 8, !dbg !8682
  %42 = bitcast i8* %41 to %struct.ModifierData*, !dbg !8679
  store %struct.ModifierData* %42, %struct.ModifierData** %md, align 8, !dbg !8683
  br label %for.cond36, !dbg !8684

for.cond36:                                       ; preds = %for.inc76, %for.end
  %43 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8685
  %tobool37 = icmp ne %struct.ModifierData* %43, null, !dbg !8687
  br i1 %tobool37, label %for.body38, label %for.end78, !dbg !8687

for.body38:                                       ; preds = %for.cond36
  %44 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8688
  %type39 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %44, i32 0, i32 2, !dbg !8691
  %45 = load i32, i32* %type39, align 8, !dbg !8691
  %cmp40 = icmp eq i32 %45, 22, !dbg !8692
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !8693

if.then42:                                        ; preds = %for.body38
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8694
  %47 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8696
  %48 = bitcast %struct.ModifierData* %47 to %struct.ClothModifierData*, !dbg !8697
  call void @BKE_ptcache_id_from_cloth(%struct.PTCacheID* %pid, %struct.Object* %46, %struct.ClothModifierData* %48), !dbg !8698
  %49 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8699
  %50 = load i32, i32* %mode.addr, align 4, !dbg !8700
  %call43 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %49, %struct.PTCacheID* %pid, i32 %50), !dbg !8701
  %51 = load i32, i32* %reset, align 4, !dbg !8702
  %or44 = or i32 %51, %call43, !dbg !8702
  store i32 %or44, i32* %reset, align 4, !dbg !8702
  br label %if.end45, !dbg !8703

if.end45:                                         ; preds = %if.then42, %for.body38
  %52 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8704
  %type46 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %52, i32 0, i32 2, !dbg !8706
  %53 = load i32, i32* %type46, align 8, !dbg !8706
  %cmp47 = icmp eq i32 %53, 31, !dbg !8707
  br i1 %cmp47, label %if.then49, label %if.end57, !dbg !8708

if.then49:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.SmokeModifierData** %smd, metadata !8709, metadata !DIExpression()), !dbg !8711
  %54 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8712
  %55 = bitcast %struct.ModifierData* %54 to %struct.SmokeModifierData*, !dbg !8713
  store %struct.SmokeModifierData* %55, %struct.SmokeModifierData** %smd, align 8, !dbg !8711
  %56 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !8714
  %type50 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %56, i32 0, i32 5, !dbg !8716
  %57 = load i32, i32* %type50, align 4, !dbg !8716
  %and51 = and i32 %57, 1, !dbg !8717
  %tobool52 = icmp ne i32 %and51, 0, !dbg !8717
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !8718

if.then53:                                        ; preds = %if.then49
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8719
  %59 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8721
  %60 = bitcast %struct.ModifierData* %59 to %struct.SmokeModifierData*, !dbg !8722
  call void @BKE_ptcache_id_from_smoke(%struct.PTCacheID* %pid, %struct.Object* %58, %struct.SmokeModifierData* %60), !dbg !8723
  %61 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8724
  %62 = load i32, i32* %mode.addr, align 4, !dbg !8725
  %call54 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %61, %struct.PTCacheID* %pid, i32 %62), !dbg !8726
  %63 = load i32, i32* %reset, align 4, !dbg !8727
  %or55 = or i32 %63, %call54, !dbg !8727
  store i32 %or55, i32* %reset, align 4, !dbg !8727
  br label %if.end56, !dbg !8728

if.end56:                                         ; preds = %if.then53, %if.then49
  br label %if.end57, !dbg !8729

if.end57:                                         ; preds = %if.end56, %if.end45
  %64 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8730
  %type58 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %64, i32 0, i32 2, !dbg !8732
  %65 = load i32, i32* %type58, align 8, !dbg !8732
  %cmp59 = icmp eq i32 %65, 40, !dbg !8733
  br i1 %cmp59, label %if.then61, label %if.end75, !dbg !8734

if.then61:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd, metadata !8735, metadata !DIExpression()), !dbg !8737
  %66 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8738
  %67 = bitcast %struct.ModifierData* %66 to %struct.DynamicPaintModifierData*, !dbg !8739
  store %struct.DynamicPaintModifierData* %67, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !8737
  %68 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !8740
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %68, i32 0, i32 1, !dbg !8742
  %69 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !8742
  %tobool62 = icmp ne %struct.DynamicPaintCanvasSettings* %69, null, !dbg !8740
  br i1 %tobool62, label %if.then63, label %if.end74, !dbg !8743

if.then63:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !8744, metadata !DIExpression()), !dbg !8746
  %70 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !8747
  %canvas64 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %70, i32 0, i32 1, !dbg !8748
  %71 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas64, align 8, !dbg !8748
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %71, i32 0, i32 2, !dbg !8749
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !8750
  %72 = load i8*, i8** %first65, align 8, !dbg !8750
  %73 = bitcast i8* %72 to %struct.DynamicPaintSurface*, !dbg !8747
  store %struct.DynamicPaintSurface* %73, %struct.DynamicPaintSurface** %surface, align 8, !dbg !8746
  br label %for.cond66, !dbg !8751

for.cond66:                                       ; preds = %for.inc71, %if.then63
  %74 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !8752
  %tobool67 = icmp ne %struct.DynamicPaintSurface* %74, null, !dbg !8755
  br i1 %tobool67, label %for.body68, label %for.end73, !dbg !8755

for.body68:                                       ; preds = %for.cond66
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8756
  %76 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !8758
  call void @BKE_ptcache_id_from_dynamicpaint(%struct.PTCacheID* %pid, %struct.Object* %75, %struct.DynamicPaintSurface* %76), !dbg !8759
  %77 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8760
  %78 = load i32, i32* %mode.addr, align 4, !dbg !8761
  %call69 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %77, %struct.PTCacheID* %pid, i32 %78), !dbg !8762
  %79 = load i32, i32* %reset, align 4, !dbg !8763
  %or70 = or i32 %79, %call69, !dbg !8763
  store i32 %or70, i32* %reset, align 4, !dbg !8763
  br label %for.inc71, !dbg !8764

for.inc71:                                        ; preds = %for.body68
  %80 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !8765
  %next72 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %80, i32 0, i32 0, !dbg !8766
  %81 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next72, align 8, !dbg !8766
  store %struct.DynamicPaintSurface* %81, %struct.DynamicPaintSurface** %surface, align 8, !dbg !8767
  br label %for.cond66, !dbg !8768, !llvm.loop !8769

for.end73:                                        ; preds = %for.cond66
  br label %if.end74, !dbg !8771

if.end74:                                         ; preds = %for.end73, %if.then61
  br label %if.end75, !dbg !8772

if.end75:                                         ; preds = %if.end74, %if.end57
  br label %for.inc76, !dbg !8773

for.inc76:                                        ; preds = %if.end75
  %82 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8774
  %next77 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %82, i32 0, i32 0, !dbg !8775
  %83 = load %struct.ModifierData*, %struct.ModifierData** %next77, align 8, !dbg !8775
  store %struct.ModifierData* %83, %struct.ModifierData** %md, align 8, !dbg !8776
  br label %for.cond36, !dbg !8777, !llvm.loop !8778

for.end78:                                        ; preds = %for.cond36
  %84 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8780
  %rigidbody_world = getelementptr inbounds %struct.Scene, %struct.Scene* %84, i32 0, i32 47, !dbg !8782
  %85 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world, align 8, !dbg !8782
  %tobool79 = icmp ne %struct.RigidBodyWorld* %85, null, !dbg !8780
  br i1 %tobool79, label %land.lhs.true80, label %if.end96, !dbg !8783

land.lhs.true80:                                  ; preds = %for.end78
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8784
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 128, !dbg !8785
  %87 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !8785
  %tobool81 = icmp ne %struct.RigidBodyOb* %87, null, !dbg !8784
  br i1 %tobool81, label %if.then84, label %lor.lhs.false82, !dbg !8786

lor.lhs.false82:                                  ; preds = %land.lhs.true80
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8787
  %rigidbody_constraint = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 129, !dbg !8788
  %89 = load %struct.RigidBodyCon*, %struct.RigidBodyCon** %rigidbody_constraint, align 8, !dbg !8788
  %tobool83 = icmp ne %struct.RigidBodyCon* %89, null, !dbg !8787
  br i1 %tobool83, label %if.then84, label %if.end96, !dbg !8789

if.then84:                                        ; preds = %lor.lhs.false82, %land.lhs.true80
  %90 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8790
  %rigidbody_object85 = getelementptr inbounds %struct.Object, %struct.Object* %90, i32 0, i32 128, !dbg !8793
  %91 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object85, align 8, !dbg !8793
  %tobool86 = icmp ne %struct.RigidBodyOb* %91, null, !dbg !8790
  br i1 %tobool86, label %if.then87, label %if.end91, !dbg !8794

if.then87:                                        ; preds = %if.then84
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8795
  %rigidbody_object88 = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 128, !dbg !8796
  %93 = load %struct.RigidBodyOb*, %struct.RigidBodyOb** %rigidbody_object88, align 8, !dbg !8796
  %flag89 = getelementptr inbounds %struct.RigidBodyOb, %struct.RigidBodyOb* %93, i32 0, i32 4, !dbg !8797
  %94 = load i32, i32* %flag89, align 4, !dbg !8798
  %or90 = or i32 %94, 4, !dbg !8798
  store i32 %or90, i32* %flag89, align 4, !dbg !8798
  br label %if.end91, !dbg !8795

if.end91:                                         ; preds = %if.then87, %if.then84
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8799
  %96 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8800
  %rigidbody_world92 = getelementptr inbounds %struct.Scene, %struct.Scene* %96, i32 0, i32 47, !dbg !8801
  %97 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world92, align 8, !dbg !8801
  call void @BKE_ptcache_id_from_rigidbody(%struct.PTCacheID* %pid, %struct.Object* %95, %struct.RigidBodyWorld* %97), !dbg !8802
  %cache93 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %pid, i32 0, i32 25, !dbg !8803
  %98 = load %struct.PointCache*, %struct.PointCache** %cache93, align 8, !dbg !8803
  %flag94 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %98, i32 0, i32 2, !dbg !8804
  %99 = load i32, i32* %flag94, align 8, !dbg !8805
  %or95 = or i32 %99, 2, !dbg !8805
  store i32 %or95, i32* %flag94, align 8, !dbg !8805
  br label %if.end96, !dbg !8806

if.end96:                                         ; preds = %if.end91, %lor.lhs.false82, %for.end78
  %100 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8807
  %type97 = getelementptr inbounds %struct.Object, %struct.Object* %100, i32 0, i32 3, !dbg !8809
  %101 = load i16, i16* %type97, align 8, !dbg !8809
  %conv98 = sext i16 %101 to i32, !dbg !8807
  %cmp99 = icmp eq i32 %conv98, 25, !dbg !8810
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !8811

if.then101:                                       ; preds = %if.end96
  %102 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8812
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 18, !dbg !8813
  %103 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8813
  call void @BIK_clear_cache(%struct.bPose* %103), !dbg !8814
  br label %if.end102, !dbg !8814

if.end102:                                        ; preds = %if.then101, %if.end96
  %104 = load i32, i32* %reset, align 4, !dbg !8815
  ret i32 %104, !dbg !8816
}

declare dso_local void @BIK_clear_cache(%struct.bPose*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_remove() #0 !dbg !8817 {
entry:
  %path = alloca [1024 x i8], align 16
  %path_full = alloca [1024 x i8], align 16
  %rmdir = alloca i32, align 4
  %dir = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path_full, metadata !8822, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata i32* %rmdir, metadata !8824, metadata !DIExpression()), !dbg !8825
  store i32 1, i32* %rmdir, align 4, !dbg !8825
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8826
  %call = call i32 @ptcache_path(%struct.PTCacheID* null, i8* %arraydecay), !dbg !8827
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8828
  %call2 = call i32 @BLI_exists(i8* %arraydecay1), !dbg !8830
  %tobool = icmp ne i32 %call2, 0, !dbg !8830
  br i1 %tobool, label %if.then, label %if.else31, !dbg !8831

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !8832, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !8835, metadata !DIExpression()), !dbg !8836
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8837
  %call4 = call %struct.__dirstream* @opendir(i8* %arraydecay3), !dbg !8838
  store %struct.__dirstream* %call4, %struct.__dirstream** %dir, align 8, !dbg !8839
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8840
  %cmp = icmp eq %struct.__dirstream* %0, null, !dbg !8842
  br i1 %cmp, label %if.then5, label %if.end, !dbg !8843

if.then5:                                         ; preds = %if.then
  br label %if.end37, !dbg !8844

if.end:                                           ; preds = %if.then
  br label %while.cond, !dbg !8845

while.cond:                                       ; preds = %if.end29, %if.end
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8846
  %call6 = call %struct.dirent* @readdir(%struct.__dirstream* %1), !dbg !8847
  store %struct.dirent* %call6, %struct.dirent** %de, align 8, !dbg !8848
  %cmp7 = icmp ne %struct.dirent* %call6, null, !dbg !8849
  br i1 %cmp7, label %while.body, label %while.end, !dbg !8845

while.body:                                       ; preds = %while.cond
  %2 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8850
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !8853
  %arraydecay8 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !8850
  %call9 = call i32 @strcmp(i8* %arraydecay8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !8854
  %cmp10 = icmp eq i32 %call9, 0, !dbg !8855
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !8856

lor.lhs.false:                                    ; preds = %while.body
  %3 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8857
  %d_name11 = getelementptr inbounds %struct.dirent, %struct.dirent* %3, i32 0, i32 4, !dbg !8858
  %arraydecay12 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name11, i64 0, i64 0, !dbg !8857
  %call13 = call i32 @strcmp(i8* %arraydecay12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !8859
  %cmp14 = icmp eq i32 %call13, 0, !dbg !8860
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !8861

if.then15:                                        ; preds = %lor.lhs.false, %while.body
  br label %if.end29, !dbg !8862

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8864
  %d_name16 = getelementptr inbounds %struct.dirent, %struct.dirent* %4, i32 0, i32 4, !dbg !8866
  %arraydecay17 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name16, i64 0, i64 0, !dbg !8864
  %call18 = call i8* @strstr(i8* %arraydecay17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !8867
  %tobool19 = icmp ne i8* %call18, null, !dbg !8867
  br i1 %tobool19, label %if.then20, label %if.else27, !dbg !8868

if.then20:                                        ; preds = %if.else
  %arraydecay21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path_full, i64 0, i64 0, !dbg !8869
  %arraydecay22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8871
  %5 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !8872
  %d_name23 = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !8873
  %arraydecay24 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name23, i64 0, i64 0, !dbg !8872
  call void @BLI_join_dirfile(i8* %arraydecay21, i64 1024, i8* %arraydecay22, i8* %arraydecay24), !dbg !8874
  %arraydecay25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path_full, i64 0, i64 0, !dbg !8875
  %call26 = call i32 @BLI_delete(i8* %arraydecay25, i8 zeroext 0, i8 zeroext 0), !dbg !8876
  br label %if.end28, !dbg !8877

if.else27:                                        ; preds = %if.else
  store i32 0, i32* %rmdir, align 4, !dbg !8878
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then20
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then15
  br label %while.cond, !dbg !8845, !llvm.loop !8880

while.end:                                        ; preds = %while.cond
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !8882
  %call30 = call i32 @closedir(%struct.__dirstream* %6), !dbg !8883
  br label %if.end32, !dbg !8884

if.else31:                                        ; preds = %entry
  store i32 0, i32* %rmdir, align 4, !dbg !8885
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %while.end
  %7 = load i32, i32* %rmdir, align 4, !dbg !8887
  %tobool33 = icmp ne i32 %7, 0, !dbg !8887
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !8889

if.then34:                                        ; preds = %if.end32
  %arraydecay35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !8890
  %call36 = call i32 @BLI_delete(i8* %arraydecay35, i8 zeroext 1, i8 zeroext 0), !dbg !8892
  br label %if.end37, !dbg !8893

if.end37:                                         ; preds = %if.then5, %if.then34, %if.end32
  ret void, !dbg !8894
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PointCache* @BKE_ptcache_add(%struct.ListBase* %ptcaches) #0 !dbg !8895 {
entry:
  %ptcaches.addr = alloca %struct.ListBase*, align 8
  %cache = alloca %struct.PointCache*, align 8
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ptcaches.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !8900, metadata !DIExpression()), !dbg !8901
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8902
  %call = call i8* %0(i64 1320, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)), !dbg !8902
  %1 = bitcast i8* %call to %struct.PointCache*, !dbg !8902
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !8903
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8904
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 5, !dbg !8905
  store i32 1, i32* %startframe, align 4, !dbg !8906
  %3 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8907
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %3, i32 0, i32 6, !dbg !8908
  store i32 250, i32* %endframe, align 8, !dbg !8909
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8910
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 3, !dbg !8911
  store i32 1, i32* %step, align 4, !dbg !8912
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8913
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 12, !dbg !8914
  store i32 -1, i32* %index, align 8, !dbg !8915
  %6 = load %struct.ListBase*, %struct.ListBase** %ptcaches.addr, align 8, !dbg !8916
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8917
  %8 = bitcast %struct.PointCache* %7 to i8*, !dbg !8917
  call void @BLI_addtail(%struct.ListBase* %6, i8* %8), !dbg !8918
  %9 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8919
  ret %struct.PointCache* %9, !dbg !8920
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_free_mem(%struct.ListBase* %mem_cache) #0 !dbg !8921 {
entry:
  %mem_cache.addr = alloca %struct.ListBase*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  store %struct.ListBase* %mem_cache, %struct.ListBase** %mem_cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %mem_cache.addr, metadata !8924, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !8926, metadata !DIExpression()), !dbg !8927
  %0 = load %struct.ListBase*, %struct.ListBase** %mem_cache.addr, align 8, !dbg !8928
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8929
  %1 = load i8*, i8** %first, align 8, !dbg !8929
  %2 = bitcast i8* %1 to %struct.PTCacheMem*, !dbg !8928
  store %struct.PTCacheMem* %2, %struct.PTCacheMem** %pm, align 8, !dbg !8927
  %3 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8930
  %tobool = icmp ne %struct.PTCacheMem* %3, null, !dbg !8930
  br i1 %tobool, label %if.then, label %if.end, !dbg !8932

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !8933

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8935
  %tobool1 = icmp ne %struct.PTCacheMem* %4, null, !dbg !8938
  br i1 %tobool1, label %for.body, label %for.end, !dbg !8938

for.body:                                         ; preds = %for.cond
  %5 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8939
  call void @ptcache_data_free(%struct.PTCacheMem* %5), !dbg !8941
  %6 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8942
  call void @ptcache_extra_free(%struct.PTCacheMem* %6), !dbg !8943
  br label %for.inc, !dbg !8944

for.inc:                                          ; preds = %for.body
  %7 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !8945
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %7, i32 0, i32 0, !dbg !8946
  %8 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !8946
  store %struct.PTCacheMem* %8, %struct.PTCacheMem** %pm, align 8, !dbg !8947
  br label %for.cond, !dbg !8948, !llvm.loop !8949

for.end:                                          ; preds = %for.cond
  %9 = load %struct.ListBase*, %struct.ListBase** %mem_cache.addr, align 8, !dbg !8951
  call void @BLI_freelistN(%struct.ListBase* %9), !dbg !8952
  br label %if.end, !dbg !8953

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !8954
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_free(%struct.PointCache* %cache) #0 !dbg !8955 {
entry:
  %cache.addr = alloca %struct.PointCache*, align 8
  store %struct.PointCache* %cache, %struct.PointCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache.addr, metadata !8956, metadata !DIExpression()), !dbg !8957
  %0 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8958
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %0, i32 0, i32 20, !dbg !8959
  call void @BKE_ptcache_free_mem(%struct.ListBase* %mem_cache), !dbg !8960
  %1 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8961
  %edit = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 21, !dbg !8963
  %2 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit, align 8, !dbg !8963
  %tobool = icmp ne %struct.PTCacheEdit* %2, null, !dbg !8961
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8964

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8965
  %free_edit = getelementptr inbounds %struct.PointCache, %struct.PointCache* %3, i32 0, i32 22, !dbg !8966
  %4 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit, align 8, !dbg !8966
  %tobool1 = icmp ne void (%struct.PTCacheEdit*)* %4, null, !dbg !8965
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8967

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8968
  %free_edit2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 22, !dbg !8969
  %6 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit2, align 8, !dbg !8969
  %7 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8970
  %edit3 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 21, !dbg !8971
  %8 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit3, align 8, !dbg !8971
  call void %6(%struct.PTCacheEdit* %8), !dbg !8968
  br label %if.end, !dbg !8968

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8972
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 19, !dbg !8974
  %10 = load i8*, i8** %cached_frames, align 8, !dbg !8974
  %tobool4 = icmp ne i8* %10, null, !dbg !8972
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !8975

if.then5:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8976
  %12 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8977
  %cached_frames6 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %12, i32 0, i32 19, !dbg !8978
  %13 = load i8*, i8** %cached_frames6, align 8, !dbg !8978
  call void %11(i8* %13), !dbg !8976
  br label %if.end7, !dbg !8976

if.end7:                                          ; preds = %if.then5, %if.end
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8979
  %15 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !8980
  %16 = bitcast %struct.PointCache* %15 to i8*, !dbg !8980
  call void %14(i8* %16), !dbg !8979
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_free_list(%struct.ListBase* %ptcaches) #0 !dbg !8982 {
entry:
  %ptcaches.addr = alloca %struct.ListBase*, align 8
  %cache = alloca %struct.PointCache*, align 8
  store %struct.ListBase* %ptcaches, %struct.ListBase** %ptcaches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ptcaches.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !8985, metadata !DIExpression()), !dbg !8986
  br label %while.cond, !dbg !8987

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.ListBase*, %struct.ListBase** %ptcaches.addr, align 8, !dbg !8988
  %call = call i8* @BLI_pophead(%struct.ListBase* %0), !dbg !8989
  %1 = bitcast i8* %call to %struct.PointCache*, !dbg !8989
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !8990
  %tobool = icmp ne %struct.PointCache* %1, null, !dbg !8987
  br i1 %tobool, label %while.body, label %while.end, !dbg !8987

while.body:                                       ; preds = %while.cond
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8991
  call void @BKE_ptcache_free(%struct.PointCache* %2), !dbg !8993
  br label %while.cond, !dbg !8987, !llvm.loop !8994

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8996
}

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PointCache* @BKE_ptcache_copy_list(%struct.ListBase* %ptcaches_new, %struct.ListBase* %ptcaches_old, i8 zeroext %copy_data) #0 !dbg !8997 {
entry:
  %ptcaches_new.addr = alloca %struct.ListBase*, align 8
  %ptcaches_old.addr = alloca %struct.ListBase*, align 8
  %copy_data.addr = alloca i8, align 1
  %cache = alloca %struct.PointCache*, align 8
  store %struct.ListBase* %ptcaches_new, %struct.ListBase** %ptcaches_new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ptcaches_new.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store %struct.ListBase* %ptcaches_old, %struct.ListBase** %ptcaches_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ptcaches_old.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  store i8 %copy_data, i8* %copy_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_data.addr, metadata !9004, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !9006, metadata !DIExpression()), !dbg !9007
  %0 = load %struct.ListBase*, %struct.ListBase** %ptcaches_old.addr, align 8, !dbg !9008
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9009
  %1 = load i8*, i8** %first, align 8, !dbg !9009
  %2 = bitcast i8* %1 to %struct.PointCache*, !dbg !9008
  store %struct.PointCache* %2, %struct.PointCache** %cache, align 8, !dbg !9007
  %3 = load %struct.ListBase*, %struct.ListBase** %ptcaches_new.addr, align 8, !dbg !9010
  call void @BLI_listbase_clear(%struct.ListBase* %3), !dbg !9011
  br label %for.cond, !dbg !9012

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9013
  %tobool = icmp ne %struct.PointCache* %4, null, !dbg !9016
  br i1 %tobool, label %for.body, label %for.end, !dbg !9016

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ListBase*, %struct.ListBase** %ptcaches_new.addr, align 8, !dbg !9017
  %6 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9018
  %7 = load i8, i8* %copy_data.addr, align 1, !dbg !9019
  %call = call %struct.PointCache* @ptcache_copy(%struct.PointCache* %6, i8 zeroext %7), !dbg !9020
  %8 = bitcast %struct.PointCache* %call to i8*, !dbg !9020
  call void @BLI_addtail(%struct.ListBase* %5, i8* %8), !dbg !9021
  br label %for.inc, !dbg !9021

for.inc:                                          ; preds = %for.body
  %9 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9022
  %next = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 0, !dbg !9023
  %10 = load %struct.PointCache*, %struct.PointCache** %next, align 8, !dbg !9023
  store %struct.PointCache* %10, %struct.PointCache** %cache, align 8, !dbg !9024
  br label %for.cond, !dbg !9025, !llvm.loop !9026

for.end:                                          ; preds = %for.cond
  %11 = load %struct.ListBase*, %struct.ListBase** %ptcaches_new.addr, align 8, !dbg !9028
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %11, i32 0, i32 0, !dbg !9029
  %12 = load i8*, i8** %first1, align 8, !dbg !9029
  %13 = bitcast i8* %12 to %struct.PointCache*, !dbg !9028
  ret %struct.PointCache* %13, !dbg !9030
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !9031 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !9037
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !9038
  store i8* null, i8** %last, align 8, !dbg !9039
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !9040
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !9041
  store i8* null, i8** %first, align 8, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PointCache* @ptcache_copy(%struct.PointCache* %cache, i8 zeroext %copy_data) #0 !dbg !9044 {
entry:
  %cache.addr = alloca %struct.PointCache*, align 8
  %copy_data.addr = alloca i8, align 1
  %ncache = alloca %struct.PointCache*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  %pmn = alloca %struct.PTCacheMem*, align 8
  %i = alloca i32, align 4
  store %struct.PointCache* %cache, %struct.PointCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache.addr, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i8 %copy_data, i8* %copy_data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_data.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata %struct.PointCache** %ncache, metadata !9051, metadata !DIExpression()), !dbg !9052
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9053
  %1 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !9054
  %2 = bitcast %struct.PointCache* %1 to i8*, !dbg !9054
  %call = call i8* %0(i8* %2), !dbg !9053
  %3 = bitcast i8* %call to %struct.PointCache*, !dbg !9053
  store %struct.PointCache* %3, %struct.PointCache** %ncache, align 8, !dbg !9055
  %4 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9056
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 20, !dbg !9057
  call void @BLI_listbase_clear(%struct.ListBase* %mem_cache), !dbg !9058
  %5 = load i8, i8* %copy_data.addr, align 1, !dbg !9059
  %conv = zext i8 %5 to i32, !dbg !9059
  %cmp = icmp eq i32 %conv, 0, !dbg !9061
  br i1 %cmp, label %if.then, label %if.else, !dbg !9062

if.then:                                          ; preds = %entry
  %6 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9063
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 19, !dbg !9065
  store i8* null, i8** %cached_frames, align 8, !dbg !9066
  %7 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9067
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !9068
  %8 = load i32, i32* %flag, align 8, !dbg !9068
  %and = and i32 %8, 2624, !dbg !9069
  %9 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9070
  %flag2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 2, !dbg !9071
  store i32 %and, i32* %flag2, align 8, !dbg !9072
  %10 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9073
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 4, !dbg !9074
  store i32 0, i32* %simframe, align 8, !dbg !9075
  br label %if.end28, !dbg !9076

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !9077, metadata !DIExpression()), !dbg !9079
  %11 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !9080
  %mem_cache3 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 20, !dbg !9082
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache3, i32 0, i32 0, !dbg !9083
  %12 = load i8*, i8** %first, align 8, !dbg !9083
  %13 = bitcast i8* %12 to %struct.PTCacheMem*, !dbg !9080
  store %struct.PTCacheMem* %13, %struct.PTCacheMem** %pm, align 8, !dbg !9084
  br label %for.cond, !dbg !9085

for.cond:                                         ; preds = %for.inc19, %if.else
  %14 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9086
  %tobool = icmp ne %struct.PTCacheMem* %14, null, !dbg !9088
  br i1 %tobool, label %for.body, label %for.end20, !dbg !9088

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pmn, metadata !9089, metadata !DIExpression()), !dbg !9091
  %15 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9092
  %16 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9093
  %17 = bitcast %struct.PTCacheMem* %16 to i8*, !dbg !9093
  %call4 = call i8* %15(i8* %17), !dbg !9092
  %18 = bitcast i8* %call4 to %struct.PTCacheMem*, !dbg !9092
  store %struct.PTCacheMem* %18, %struct.PTCacheMem** %pmn, align 8, !dbg !9091
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9094, metadata !DIExpression()), !dbg !9095
  store i32 0, i32* %i, align 4, !dbg !9096
  br label %for.cond5, !dbg !9098

for.cond5:                                        ; preds = %for.inc, %for.body
  %19 = load i32, i32* %i, align 4, !dbg !9099
  %cmp6 = icmp slt i32 %19, 8, !dbg !9101
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !9102

for.body8:                                        ; preds = %for.cond5
  %20 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pmn, align 8, !dbg !9103
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %20, i32 0, i32 6, !dbg !9106
  %21 = load i32, i32* %i, align 4, !dbg !9107
  %idxprom = sext i32 %21 to i64, !dbg !9103
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !9103
  %22 = load i8*, i8** %arrayidx, align 8, !dbg !9103
  %tobool9 = icmp ne i8* %22, null, !dbg !9103
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !9108

if.then10:                                        ; preds = %for.body8
  %23 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9109
  %24 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9110
  %data11 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %24, i32 0, i32 6, !dbg !9111
  %25 = load i32, i32* %i, align 4, !dbg !9112
  %idxprom12 = sext i32 %25 to i64, !dbg !9110
  %arrayidx13 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data11, i64 0, i64 %idxprom12, !dbg !9110
  %26 = load i8*, i8** %arrayidx13, align 8, !dbg !9110
  %call14 = call i8* %23(i8* %26), !dbg !9109
  %27 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pmn, align 8, !dbg !9113
  %data15 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %27, i32 0, i32 6, !dbg !9114
  %28 = load i32, i32* %i, align 4, !dbg !9115
  %idxprom16 = sext i32 %28 to i64, !dbg !9113
  %arrayidx17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data15, i64 0, i64 %idxprom16, !dbg !9113
  store i8* %call14, i8** %arrayidx17, align 8, !dbg !9116
  br label %if.end, !dbg !9113

if.end:                                           ; preds = %if.then10, %for.body8
  br label %for.inc, !dbg !9117

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %i, align 4, !dbg !9118
  %inc = add nsw i32 %29, 1, !dbg !9118
  store i32 %inc, i32* %i, align 4, !dbg !9118
  br label %for.cond5, !dbg !9119, !llvm.loop !9120

for.end:                                          ; preds = %for.cond5
  %30 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9122
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %30), !dbg !9123
  %31 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9124
  %mem_cache18 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 20, !dbg !9125
  %32 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pmn, align 8, !dbg !9126
  %33 = bitcast %struct.PTCacheMem* %32 to i8*, !dbg !9126
  call void @BLI_addtail(%struct.ListBase* %mem_cache18, i8* %33), !dbg !9127
  br label %for.inc19, !dbg !9128

for.inc19:                                        ; preds = %for.end
  %34 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9129
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %34, i32 0, i32 0, !dbg !9130
  %35 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !9130
  store %struct.PTCacheMem* %35, %struct.PTCacheMem** %pm, align 8, !dbg !9131
  br label %for.cond, !dbg !9132, !llvm.loop !9133

for.end20:                                        ; preds = %for.cond
  %36 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9135
  %cached_frames21 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %36, i32 0, i32 19, !dbg !9137
  %37 = load i8*, i8** %cached_frames21, align 8, !dbg !9137
  %tobool22 = icmp ne i8* %37, null, !dbg !9135
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !9138

if.then23:                                        ; preds = %for.end20
  %38 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9139
  %39 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !9140
  %cached_frames24 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %39, i32 0, i32 19, !dbg !9141
  %40 = load i8*, i8** %cached_frames24, align 8, !dbg !9141
  %call25 = call i8* %38(i8* %40), !dbg !9139
  %41 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9142
  %cached_frames26 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %41, i32 0, i32 19, !dbg !9143
  store i8* %call25, i8** %cached_frames26, align 8, !dbg !9144
  br label %if.end27, !dbg !9142

if.end27:                                         ; preds = %if.then23, %for.end20
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %42 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9145
  %edit = getelementptr inbounds %struct.PointCache, %struct.PointCache* %42, i32 0, i32 21, !dbg !9146
  store %struct.PTCacheEdit* null, %struct.PTCacheEdit** %edit, align 8, !dbg !9147
  %43 = load %struct.PointCache*, %struct.PointCache** %ncache, align 8, !dbg !9148
  ret %struct.PointCache* %43, !dbg !9149
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_quick_cache_all(%struct.Main* %bmain, %struct.Scene* %scene) #0 !dbg !9150 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %baker = alloca %struct.PTCacheBaker, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9153, metadata !DIExpression()), !dbg !9154
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9155, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.declare(metadata %struct.PTCacheBaker* %baker, metadata !9157, metadata !DIExpression()), !dbg !9182
  %bake = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 2, !dbg !9183
  store i32 0, i32* %bake, align 8, !dbg !9184
  %break_data = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 8, !dbg !9185
  store i8* null, i8** %break_data, align 8, !dbg !9186
  %break_test = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 7, !dbg !9187
  store i32 (i8*)* null, i32 (i8*)** %break_test, align 8, !dbg !9188
  %pid = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 6, !dbg !9189
  store %struct.PTCacheID* null, %struct.PTCacheID** %pid, align 8, !dbg !9190
  %progressbar = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 9, !dbg !9191
  store void (i8*, i32)* null, void (i8*, i32)** %progressbar, align 8, !dbg !9192
  %progressend = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 10, !dbg !9193
  store void (i8*)* null, void (i8*)** %progressend, align 8, !dbg !9194
  %progresscontext = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 11, !dbg !9195
  store i8* null, i8** %progresscontext, align 8, !dbg !9196
  %render = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 3, !dbg !9197
  store i32 0, i32* %render, align 4, !dbg !9198
  %anim_init = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 4, !dbg !9199
  store i32 0, i32* %anim_init, align 8, !dbg !9200
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9201
  %main = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 0, !dbg !9202
  store %struct.Main* %0, %struct.Main** %main, align 8, !dbg !9203
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9204
  %scene1 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 1, !dbg !9205
  store %struct.Scene* %1, %struct.Scene** %scene1, align 8, !dbg !9206
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9207
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 40, !dbg !9208
  %quick_cache_step = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 2, !dbg !9209
  %3 = load i32, i32* %quick_cache_step, align 8, !dbg !9209
  %quick_step = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %baker, i32 0, i32 5, !dbg !9210
  store i32 %3, i32* %quick_step, align 4, !dbg !9211
  call void @BKE_ptcache_bake(%struct.PTCacheBaker* %baker), !dbg !9212
  ret void, !dbg !9213
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_bake(%struct.PTCacheBaker* %baker) #0 !dbg !9214 {
entry:
  %baker.addr = alloca %struct.PTCacheBaker*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %pidlist = alloca %struct.ListBase, align 8
  %pid = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %frameleno = alloca float, align 4
  %cfrao = alloca i32, align 4
  %startframe = alloca i32, align 4
  %bake = alloca i32, align 4
  %render = alloca i32, align 4
  %threads = alloca %struct.ListBase, align 8
  %thread_data = alloca %struct.ptcache_bake_data, align 8
  %progress = alloca i32, align 4
  %old_progress = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %pidlist2 = alloca %struct.ListBase, align 8
  %pid231 = alloca %struct.PTCacheID*, align 8
  %psys119 = alloca %struct.ParticleSystem*, align 8
  store %struct.PTCacheBaker* %baker, %struct.PTCacheBaker** %baker.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheBaker** %baker.addr, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !9220, metadata !DIExpression()), !dbg !9221
  %0 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9222
  %main = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %0, i32 0, i32 0, !dbg !9223
  %1 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !9223
  store %struct.Main* %1, %struct.Main** %bmain, align 8, !dbg !9221
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9224, metadata !DIExpression()), !dbg !9225
  %2 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9226
  %scene1 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %2, i32 0, i32 1, !dbg !9227
  %3 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !9227
  store %struct.Scene* %3, %struct.Scene** %scene, align 8, !dbg !9225
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !9228, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9230, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata %struct.ListBase* %pidlist, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid, metadata !9236, metadata !DIExpression()), !dbg !9237
  %4 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9238
  %pid2 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %4, i32 0, i32 6, !dbg !9239
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid2, align 8, !dbg !9239
  store %struct.PTCacheID* %5, %struct.PTCacheID** %pid, align 8, !dbg !9237
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !9240, metadata !DIExpression()), !dbg !9241
  store %struct.PointCache* null, %struct.PointCache** %cache, align 8, !dbg !9241
  call void @llvm.dbg.declare(metadata float* %frameleno, metadata !9242, metadata !DIExpression()), !dbg !9243
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9244
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !9245
  %framelen = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 15, !dbg !9246
  %7 = load float, float* %framelen, align 4, !dbg !9246
  store float %7, float* %frameleno, align 4, !dbg !9243
  call void @llvm.dbg.declare(metadata i32* %cfrao, metadata !9247, metadata !DIExpression()), !dbg !9248
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9249
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !9249
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 5, !dbg !9249
  %9 = load i32, i32* %cfra, align 8, !dbg !9249
  store i32 %9, i32* %cfrao, align 4, !dbg !9248
  call void @llvm.dbg.declare(metadata i32* %startframe, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i32 300000, i32* %startframe, align 4, !dbg !9251
  call void @llvm.dbg.declare(metadata i32* %bake, metadata !9252, metadata !DIExpression()), !dbg !9253
  %10 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9254
  %bake4 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %10, i32 0, i32 2, !dbg !9255
  %11 = load i32, i32* %bake4, align 8, !dbg !9255
  store i32 %11, i32* %bake, align 4, !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %render, metadata !9256, metadata !DIExpression()), !dbg !9257
  %12 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9258
  %render5 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %12, i32 0, i32 3, !dbg !9259
  %13 = load i32, i32* %render5, align 4, !dbg !9259
  store i32 %13, i32* %render, align 4, !dbg !9257
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata %struct.ptcache_bake_data* %thread_data, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata i32* %progress, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i32* %old_progress, metadata !9266, metadata !DIExpression()), !dbg !9267
  %14 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9268
  %anim_init = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %14, i32 0, i32 4, !dbg !9269
  %15 = load i32, i32* %anim_init, align 8, !dbg !9269
  %tobool = icmp ne i32 %15, 0, !dbg !9268
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9268

cond.true:                                        ; preds = %entry
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9270
  %r6 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !9271
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 6, !dbg !9272
  %17 = load i32, i32* %sfra, align 4, !dbg !9272
  br label %cond.end, !dbg !9268

cond.false:                                       ; preds = %entry
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9273
  %r7 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 22, !dbg !9273
  %cfra8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 5, !dbg !9273
  %19 = load i32, i32* %cfra8, align 8, !dbg !9273
  br label %cond.end, !dbg !9268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %19, %cond.false ], !dbg !9268
  %endframe = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9274
  store i32 %cond, i32* %endframe, align 8, !dbg !9275
  %20 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9276
  %quick_step = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %20, i32 0, i32 5, !dbg !9277
  %21 = load i32, i32* %quick_step, align 4, !dbg !9277
  %step = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 3, !dbg !9278
  store i32 %21, i32* %step, align 4, !dbg !9279
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9280
  %r9 = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 22, !dbg !9280
  %cfra10 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r9, i32 0, i32 5, !dbg !9280
  %cfra_ptr = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 4, !dbg !9281
  store i32* %cfra10, i32** %cfra_ptr, align 8, !dbg !9282
  %23 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9283
  %scene11 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %23, i32 0, i32 1, !dbg !9284
  %24 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !9284
  %scene12 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 6, !dbg !9285
  store %struct.Scene* %24, %struct.Scene** %scene12, align 8, !dbg !9286
  %25 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9287
  %main13 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %25, i32 0, i32 0, !dbg !9288
  %26 = load %struct.Main*, %struct.Main** %main13, align 8, !dbg !9288
  %main14 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 5, !dbg !9289
  store %struct.Main* %26, %struct.Main** %main14, align 8, !dbg !9290
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !9291
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9292
  %tobool15 = icmp ne %struct.PTCacheID* %27, null, !dbg !9292
  br i1 %tobool15, label %if.then, label %if.else101, !dbg !9294

if.then:                                          ; preds = %cond.end
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9295
  %cache16 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 25, !dbg !9297
  %29 = load %struct.PointCache*, %struct.PointCache** %cache16, align 8, !dbg !9297
  store %struct.PointCache* %29, %struct.PointCache** %cache, align 8, !dbg !9298
  %30 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9299
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %30, i32 0, i32 2, !dbg !9301
  %31 = load i32, i32* %flag, align 8, !dbg !9301
  %and = and i32 %31, 1, !dbg !9302
  %cmp = icmp eq i32 %and, 0, !dbg !9303
  br i1 %cmp, label %if.then17, label %if.end100, !dbg !9304

if.then17:                                        ; preds = %if.then
  %32 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9305
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %32, i32 0, i32 5, !dbg !9308
  %33 = load i32, i32* %type, align 8, !dbg !9308
  %cmp18 = icmp eq i32 %33, 1, !dbg !9309
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !9310

if.then19:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9311, metadata !DIExpression()), !dbg !9313
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9314
  %calldata = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 4, !dbg !9315
  %35 = load i8*, i8** %calldata, align 8, !dbg !9315
  %36 = bitcast i8* %35 to %struct.ParticleSystem*, !dbg !9314
  store %struct.ParticleSystem* %36, %struct.ParticleSystem** %psys, align 8, !dbg !9313
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9316
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %37, i32 0, i32 2, !dbg !9318
  %38 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9318
  %type20 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %38, i32 0, i32 7, !dbg !9319
  %39 = load i16, i16* %type20, align 8, !dbg !9319
  %conv = sext i16 %39 to i32, !dbg !9316
  %cmp21 = icmp eq i32 %conv, 0, !dbg !9320
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !9321

if.then23:                                        ; preds = %if.then19
  %40 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9322
  %41 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9323
  %calldata24 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %41, i32 0, i32 4, !dbg !9324
  %42 = load i8*, i8** %calldata24, align 8, !dbg !9324
  %43 = bitcast i8* %42 to %struct.ParticleSystem*, !dbg !9323
  %44 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9325
  %startframe25 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %44, i32 0, i32 5, !dbg !9326
  %45 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9327
  %endframe26 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %45, i32 0, i32 6, !dbg !9328
  call void @psys_get_pointcache_start_end(%struct.Scene* %40, %struct.ParticleSystem* %43, i32* %startframe25, i32* %endframe26), !dbg !9329
  br label %if.end, !dbg !9329

if.end:                                           ; preds = %if.then23, %if.then19
  br label %if.end62, !dbg !9330

if.else:                                          ; preds = %if.then17
  %46 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9331
  %type27 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %46, i32 0, i32 5, !dbg !9333
  %47 = load i32, i32* %type27, align 8, !dbg !9333
  %cmp28 = icmp eq i32 %47, 4, !dbg !9334
  br i1 %cmp28, label %if.then30, label %if.end61, !dbg !9335

if.then30:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ListBase* %pidlist2, metadata !9336, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid231, metadata !9339, metadata !DIExpression()), !dbg !9340
  %48 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9341
  %ob = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %48, i32 0, i32 3, !dbg !9342
  %49 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9342
  %50 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9343
  call void @BKE_ptcache_ids_from_object(%struct.ListBase* %pidlist2, %struct.Object* %49, %struct.Scene* %50, i32 8), !dbg !9344
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pidlist2, i32 0, i32 0, !dbg !9345
  %51 = load i8*, i8** %first, align 8, !dbg !9345
  %52 = bitcast i8* %51 to %struct.PTCacheID*, !dbg !9347
  store %struct.PTCacheID* %52, %struct.PTCacheID** %pid231, align 8, !dbg !9348
  br label %for.cond, !dbg !9349

for.cond:                                         ; preds = %for.inc, %if.then30
  %53 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9350
  %tobool32 = icmp ne %struct.PTCacheID* %53, null, !dbg !9352
  br i1 %tobool32, label %for.body, label %for.end, !dbg !9352

for.body:                                         ; preds = %for.cond
  %54 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9353
  %type33 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %54, i32 0, i32 5, !dbg !9356
  %55 = load i32, i32* %type33, align 8, !dbg !9356
  %cmp34 = icmp eq i32 %55, 3, !dbg !9357
  br i1 %cmp34, label %if.then36, label %if.end60, !dbg !9358

if.then36:                                        ; preds = %for.body
  %56 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9359
  %cache37 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %56, i32 0, i32 25, !dbg !9362
  %57 = load %struct.PointCache*, %struct.PointCache** %cache37, align 8, !dbg !9362
  %tobool38 = icmp ne %struct.PointCache* %57, null, !dbg !9359
  br i1 %tobool38, label %land.lhs.true, label %if.end59, !dbg !9363

land.lhs.true:                                    ; preds = %if.then36
  %58 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9364
  %cache39 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %58, i32 0, i32 25, !dbg !9365
  %59 = load %struct.PointCache*, %struct.PointCache** %cache39, align 8, !dbg !9365
  %flag40 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %59, i32 0, i32 2, !dbg !9366
  %60 = load i32, i32* %flag40, align 8, !dbg !9366
  %and41 = and i32 %60, 1, !dbg !9367
  %tobool42 = icmp ne i32 %and41, 0, !dbg !9367
  br i1 %tobool42, label %if.end59, label %if.then43, !dbg !9368

if.then43:                                        ; preds = %land.lhs.true
  %61 = load i32, i32* %bake, align 4, !dbg !9369
  %tobool44 = icmp ne i32 %61, 0, !dbg !9369
  br i1 %tobool44, label %if.then49, label %lor.lhs.false, !dbg !9372

lor.lhs.false:                                    ; preds = %if.then43
  %62 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9373
  %cache45 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %62, i32 0, i32 25, !dbg !9374
  %63 = load %struct.PointCache*, %struct.PointCache** %cache45, align 8, !dbg !9374
  %flag46 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %63, i32 0, i32 2, !dbg !9375
  %64 = load i32, i32* %flag46, align 8, !dbg !9375
  %and47 = and i32 %64, 258, !dbg !9376
  %tobool48 = icmp ne i32 %and47, 0, !dbg !9376
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !9377

if.then49:                                        ; preds = %lor.lhs.false, %if.then43
  %65 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9378
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %65, i32 0, i32 0), !dbg !9379
  br label %if.end50, !dbg !9379

if.end50:                                         ; preds = %if.then49, %lor.lhs.false
  %66 = load i32, i32* %bake, align 4, !dbg !9380
  %tobool51 = icmp ne i32 %66, 0, !dbg !9380
  br i1 %tobool51, label %if.then52, label %if.end58, !dbg !9382

if.then52:                                        ; preds = %if.end50
  %67 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9383
  %cache53 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %67, i32 0, i32 25, !dbg !9385
  %68 = load %struct.PointCache*, %struct.PointCache** %cache53, align 8, !dbg !9385
  %flag54 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %68, i32 0, i32 2, !dbg !9386
  %69 = load i32, i32* %flag54, align 8, !dbg !9387
  %or = or i32 %69, 8, !dbg !9387
  store i32 %or, i32* %flag54, align 8, !dbg !9387
  %70 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9388
  %cache55 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %70, i32 0, i32 25, !dbg !9389
  %71 = load %struct.PointCache*, %struct.PointCache** %cache55, align 8, !dbg !9389
  %flag56 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %71, i32 0, i32 2, !dbg !9390
  %72 = load i32, i32* %flag56, align 8, !dbg !9391
  %and57 = and i32 %72, -2, !dbg !9391
  store i32 %and57, i32* %flag56, align 8, !dbg !9391
  br label %if.end58, !dbg !9392

if.end58:                                         ; preds = %if.then52, %if.end50
  br label %if.end59, !dbg !9393

if.end59:                                         ; preds = %if.end58, %land.lhs.true, %if.then36
  br label %if.end60, !dbg !9394

if.end60:                                         ; preds = %if.end59, %for.body
  br label %for.inc, !dbg !9395

for.inc:                                          ; preds = %if.end60
  %73 = load %struct.PTCacheID*, %struct.PTCacheID** %pid231, align 8, !dbg !9396
  %next = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %73, i32 0, i32 0, !dbg !9397
  %74 = load %struct.PTCacheID*, %struct.PTCacheID** %next, align 8, !dbg !9397
  store %struct.PTCacheID* %74, %struct.PTCacheID** %pid231, align 8, !dbg !9398
  br label %for.cond, !dbg !9399, !llvm.loop !9400

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %pidlist2), !dbg !9402
  br label %if.end61, !dbg !9403

if.end61:                                         ; preds = %for.end, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end
  %75 = load i32, i32* %bake, align 4, !dbg !9404
  %tobool63 = icmp ne i32 %75, 0, !dbg !9404
  br i1 %tobool63, label %if.then68, label %lor.lhs.false64, !dbg !9406

lor.lhs.false64:                                  ; preds = %if.end62
  %76 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9407
  %flag65 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %76, i32 0, i32 2, !dbg !9408
  %77 = load i32, i32* %flag65, align 8, !dbg !9408
  %and66 = and i32 %77, 258, !dbg !9409
  %tobool67 = icmp ne i32 %and66, 0, !dbg !9409
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !9410

if.then68:                                        ; preds = %lor.lhs.false64, %if.end62
  %78 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9411
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %78, i32 0, i32 0), !dbg !9412
  br label %if.end69, !dbg !9412

if.end69:                                         ; preds = %if.then68, %lor.lhs.false64
  %79 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9413
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %79, i32 0, i32 8, !dbg !9413
  %80 = load i32, i32* %last_exact, align 8, !dbg !9413
  %81 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9413
  %startframe70 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %81, i32 0, i32 5, !dbg !9413
  %82 = load i32, i32* %startframe70, align 4, !dbg !9413
  %cmp71 = icmp sgt i32 %80, %82, !dbg !9413
  br i1 %cmp71, label %cond.true73, label %cond.false75, !dbg !9413

cond.true73:                                      ; preds = %if.end69
  %83 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9413
  %last_exact74 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %83, i32 0, i32 8, !dbg !9413
  %84 = load i32, i32* %last_exact74, align 8, !dbg !9413
  br label %cond.end77, !dbg !9413

cond.false75:                                     ; preds = %if.end69
  %85 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9413
  %startframe76 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %85, i32 0, i32 5, !dbg !9413
  %86 = load i32, i32* %startframe76, align 4, !dbg !9413
  br label %cond.end77, !dbg !9413

cond.end77:                                       ; preds = %cond.false75, %cond.true73
  %cond78 = phi i32 [ %84, %cond.true73 ], [ %86, %cond.false75 ], !dbg !9413
  store i32 %cond78, i32* %startframe, align 4, !dbg !9414
  %87 = load i32, i32* %bake, align 4, !dbg !9415
  %tobool79 = icmp ne i32 %87, 0, !dbg !9415
  br i1 %tobool79, label %if.then80, label %if.else85, !dbg !9417

if.then80:                                        ; preds = %cond.end77
  %88 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9418
  %endframe81 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %88, i32 0, i32 6, !dbg !9420
  %89 = load i32, i32* %endframe81, align 8, !dbg !9420
  %endframe82 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9421
  store i32 %89, i32* %endframe82, align 8, !dbg !9422
  %90 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9423
  %flag83 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %90, i32 0, i32 2, !dbg !9424
  %91 = load i32, i32* %flag83, align 8, !dbg !9425
  %or84 = or i32 %91, 8, !dbg !9425
  store i32 %or84, i32* %flag83, align 8, !dbg !9425
  br label %if.end97, !dbg !9426

if.else85:                                        ; preds = %cond.end77
  %endframe86 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9427
  %92 = load i32, i32* %endframe86, align 8, !dbg !9427
  %93 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9427
  %endframe87 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %93, i32 0, i32 6, !dbg !9427
  %94 = load i32, i32* %endframe87, align 8, !dbg !9427
  %cmp88 = icmp slt i32 %92, %94, !dbg !9427
  br i1 %cmp88, label %cond.true90, label %cond.false92, !dbg !9427

cond.true90:                                      ; preds = %if.else85
  %endframe91 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9427
  %95 = load i32, i32* %endframe91, align 8, !dbg !9427
  br label %cond.end94, !dbg !9427

cond.false92:                                     ; preds = %if.else85
  %96 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9427
  %endframe93 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %96, i32 0, i32 6, !dbg !9427
  %97 = load i32, i32* %endframe93, align 8, !dbg !9427
  br label %cond.end94, !dbg !9427

cond.end94:                                       ; preds = %cond.false92, %cond.true90
  %cond95 = phi i32 [ %95, %cond.true90 ], [ %97, %cond.false92 ], !dbg !9427
  %endframe96 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9429
  store i32 %cond95, i32* %endframe96, align 8, !dbg !9430
  br label %if.end97

if.end97:                                         ; preds = %cond.end94, %if.then80
  %98 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9431
  %flag98 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %98, i32 0, i32 2, !dbg !9432
  %99 = load i32, i32* %flag98, align 8, !dbg !9433
  %and99 = and i32 %99, -2, !dbg !9433
  store i32 %and99, i32* %flag98, align 8, !dbg !9433
  br label %if.end100, !dbg !9434

if.end100:                                        ; preds = %if.end97, %if.then
  br label %if.end189, !dbg !9435

if.else101:                                       ; preds = %cond.end
  %100 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9436
  store %struct.Scene* %100, %struct.Scene** %sce_iter, align 8, !dbg !9436
  %call = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !9436
  store %struct.Base* %call, %struct.Base** %base, align 8, !dbg !9436
  br label %for.cond102, !dbg !9436

for.cond102:                                      ; preds = %for.inc186, %if.else101
  %101 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9439
  %tobool103 = icmp ne %struct.Base* %101, null, !dbg !9441
  br i1 %tobool103, label %for.body104, label %for.end188, !dbg !9441

for.body104:                                      ; preds = %for.cond102
  %102 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9442
  %object = getelementptr inbounds %struct.Base, %struct.Base* %102, i32 0, i32 7, !dbg !9444
  %103 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9444
  %104 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9445
  call void @BKE_ptcache_ids_from_object(%struct.ListBase* %pidlist, %struct.Object* %103, %struct.Scene* %104, i32 8), !dbg !9446
  %first105 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pidlist, i32 0, i32 0, !dbg !9447
  %105 = load i8*, i8** %first105, align 8, !dbg !9447
  %106 = bitcast i8* %105 to %struct.PTCacheID*, !dbg !9449
  store %struct.PTCacheID* %106, %struct.PTCacheID** %pid, align 8, !dbg !9450
  br label %for.cond106, !dbg !9451

for.cond106:                                      ; preds = %for.inc183, %for.body104
  %107 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9452
  %tobool107 = icmp ne %struct.PTCacheID* %107, null, !dbg !9454
  br i1 %tobool107, label %for.body108, label %for.end185, !dbg !9454

for.body108:                                      ; preds = %for.cond106
  %108 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9455
  %cache109 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %108, i32 0, i32 25, !dbg !9457
  %109 = load %struct.PointCache*, %struct.PointCache** %cache109, align 8, !dbg !9457
  store %struct.PointCache* %109, %struct.PointCache** %cache, align 8, !dbg !9458
  %110 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9459
  %flag110 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %110, i32 0, i32 2, !dbg !9461
  %111 = load i32, i32* %flag110, align 8, !dbg !9461
  %and111 = and i32 %111, 1, !dbg !9462
  %cmp112 = icmp eq i32 %and111, 0, !dbg !9463
  br i1 %cmp112, label %if.then114, label %if.end182, !dbg !9464

if.then114:                                       ; preds = %for.body108
  %112 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9465
  %type115 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %112, i32 0, i32 5, !dbg !9468
  %113 = load i32, i32* %type115, align 8, !dbg !9468
  %cmp116 = icmp eq i32 %113, 1, !dbg !9469
  br i1 %cmp116, label %if.then118, label %if.end136, !dbg !9470

if.then118:                                       ; preds = %if.then114
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys119, metadata !9471, metadata !DIExpression()), !dbg !9473
  %114 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9474
  %calldata120 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %114, i32 0, i32 4, !dbg !9475
  %115 = load i8*, i8** %calldata120, align 8, !dbg !9475
  %116 = bitcast i8* %115 to %struct.ParticleSystem*, !dbg !9476
  store %struct.ParticleSystem* %116, %struct.ParticleSystem** %psys119, align 8, !dbg !9473
  %117 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys119, align 8, !dbg !9477
  %part121 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %117, i32 0, i32 2, !dbg !9479
  %118 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part121, align 8, !dbg !9479
  %type122 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %118, i32 0, i32 7, !dbg !9480
  %119 = load i16, i16* %type122, align 8, !dbg !9480
  %conv123 = sext i16 %119 to i32, !dbg !9477
  %cmp124 = icmp eq i32 %conv123, 2, !dbg !9481
  br i1 %cmp124, label %if.then131, label %lor.lhs.false126, !dbg !9482

lor.lhs.false126:                                 ; preds = %if.then118
  %120 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys119, align 8, !dbg !9483
  %part127 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %120, i32 0, i32 2, !dbg !9484
  %121 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part127, align 8, !dbg !9484
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %121, i32 0, i32 11, !dbg !9485
  %122 = load i16, i16* %phystype, align 8, !dbg !9485
  %conv128 = sext i16 %122 to i32, !dbg !9483
  %cmp129 = icmp eq i32 %conv128, 2, !dbg !9486
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !9487

if.then131:                                       ; preds = %lor.lhs.false126, %if.then118
  br label %for.inc183, !dbg !9488

if.end132:                                        ; preds = %lor.lhs.false126
  %123 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9489
  %124 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9490
  %calldata133 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %124, i32 0, i32 4, !dbg !9491
  %125 = load i8*, i8** %calldata133, align 8, !dbg !9491
  %126 = bitcast i8* %125 to %struct.ParticleSystem*, !dbg !9490
  %127 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9492
  %startframe134 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %127, i32 0, i32 5, !dbg !9493
  %128 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9494
  %endframe135 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %128, i32 0, i32 6, !dbg !9495
  call void @psys_get_pointcache_start_end(%struct.Scene* %123, %struct.ParticleSystem* %126, i32* %startframe134, i32* %endframe135), !dbg !9496
  br label %if.end136, !dbg !9497

if.end136:                                        ; preds = %if.end132, %if.then114
  %129 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9498
  %flag137 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %129, i32 0, i32 2, !dbg !9500
  %130 = load i32, i32* %flag137, align 8, !dbg !9500
  %and138 = and i32 %130, 258, !dbg !9501
  %tobool139 = icmp ne i32 %and138, 0, !dbg !9501
  br i1 %tobool139, label %land.lhs.true145, label %lor.lhs.false140, !dbg !9502

lor.lhs.false140:                                 ; preds = %if.end136
  %131 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9503
  %flag141 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %131, i32 0, i32 2, !dbg !9504
  %132 = load i32, i32* %flag141, align 8, !dbg !9504
  %and142 = and i32 %132, 4, !dbg !9505
  %cmp143 = icmp eq i32 %and142, 0, !dbg !9506
  br i1 %cmp143, label %land.lhs.true145, label %if.end150, !dbg !9507

land.lhs.true145:                                 ; preds = %lor.lhs.false140, %if.end136
  %133 = load i32, i32* %render, align 4, !dbg !9508
  %tobool146 = icmp ne i32 %133, 0, !dbg !9508
  br i1 %tobool146, label %if.then149, label %lor.lhs.false147, !dbg !9509

lor.lhs.false147:                                 ; preds = %land.lhs.true145
  %134 = load i32, i32* %bake, align 4, !dbg !9510
  %tobool148 = icmp ne i32 %134, 0, !dbg !9510
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !9511

if.then149:                                       ; preds = %lor.lhs.false147, %land.lhs.true145
  %135 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9512
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %135, i32 0, i32 0), !dbg !9514
  br label %if.end150, !dbg !9515

if.end150:                                        ; preds = %if.then149, %lor.lhs.false147, %lor.lhs.false140
  %136 = load i32, i32* %startframe, align 4, !dbg !9516
  %137 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9516
  %startframe151 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %137, i32 0, i32 5, !dbg !9516
  %138 = load i32, i32* %startframe151, align 4, !dbg !9516
  %cmp152 = icmp slt i32 %136, %138, !dbg !9516
  br i1 %cmp152, label %cond.true154, label %cond.false155, !dbg !9516

cond.true154:                                     ; preds = %if.end150
  %139 = load i32, i32* %startframe, align 4, !dbg !9516
  br label %cond.end157, !dbg !9516

cond.false155:                                    ; preds = %if.end150
  %140 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9516
  %startframe156 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %140, i32 0, i32 5, !dbg !9516
  %141 = load i32, i32* %startframe156, align 4, !dbg !9516
  br label %cond.end157, !dbg !9516

cond.end157:                                      ; preds = %cond.false155, %cond.true154
  %cond158 = phi i32 [ %139, %cond.true154 ], [ %141, %cond.false155 ], !dbg !9516
  store i32 %cond158, i32* %startframe, align 4, !dbg !9517
  %142 = load i32, i32* %bake, align 4, !dbg !9518
  %tobool159 = icmp ne i32 %142, 0, !dbg !9518
  br i1 %tobool159, label %if.then162, label %lor.lhs.false160, !dbg !9520

lor.lhs.false160:                                 ; preds = %cond.end157
  %143 = load i32, i32* %render, align 4, !dbg !9521
  %tobool161 = icmp ne i32 %143, 0, !dbg !9521
  br i1 %tobool161, label %if.then162, label %if.end179, !dbg !9522

if.then162:                                       ; preds = %lor.lhs.false160, %cond.end157
  %144 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9523
  %flag163 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %144, i32 0, i32 2, !dbg !9525
  %145 = load i32, i32* %flag163, align 8, !dbg !9526
  %or164 = or i32 %145, 8, !dbg !9526
  store i32 %or164, i32* %flag163, align 8, !dbg !9526
  %146 = load i32, i32* %bake, align 4, !dbg !9527
  %tobool165 = icmp ne i32 %146, 0, !dbg !9527
  br i1 %tobool165, label %if.then166, label %if.end178, !dbg !9529

if.then166:                                       ; preds = %if.then162
  %endframe167 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9530
  %147 = load i32, i32* %endframe167, align 8, !dbg !9530
  %148 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9530
  %endframe168 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %148, i32 0, i32 6, !dbg !9530
  %149 = load i32, i32* %endframe168, align 8, !dbg !9530
  %cmp169 = icmp sgt i32 %147, %149, !dbg !9530
  br i1 %cmp169, label %cond.true171, label %cond.false173, !dbg !9530

cond.true171:                                     ; preds = %if.then166
  %endframe172 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9530
  %150 = load i32, i32* %endframe172, align 8, !dbg !9530
  br label %cond.end175, !dbg !9530

cond.false173:                                    ; preds = %if.then166
  %151 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9530
  %endframe174 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %151, i32 0, i32 6, !dbg !9530
  %152 = load i32, i32* %endframe174, align 8, !dbg !9530
  br label %cond.end175, !dbg !9530

cond.end175:                                      ; preds = %cond.false173, %cond.true171
  %cond176 = phi i32 [ %150, %cond.true171 ], [ %152, %cond.false173 ], !dbg !9530
  %endframe177 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9531
  store i32 %cond176, i32* %endframe177, align 8, !dbg !9532
  br label %if.end178, !dbg !9533

if.end178:                                        ; preds = %cond.end175, %if.then162
  br label %if.end179, !dbg !9534

if.end179:                                        ; preds = %if.end178, %lor.lhs.false160
  %153 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9535
  %flag180 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %153, i32 0, i32 2, !dbg !9536
  %154 = load i32, i32* %flag180, align 8, !dbg !9537
  %and181 = and i32 %154, -2, !dbg !9537
  store i32 %and181, i32* %flag180, align 8, !dbg !9537
  br label %if.end182, !dbg !9538

if.end182:                                        ; preds = %if.end179, %for.body108
  br label %for.inc183, !dbg !9539

for.inc183:                                       ; preds = %if.end182, %if.then131
  %155 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9540
  %next184 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %155, i32 0, i32 0, !dbg !9541
  %156 = load %struct.PTCacheID*, %struct.PTCacheID** %next184, align 8, !dbg !9541
  store %struct.PTCacheID* %156, %struct.PTCacheID** %pid, align 8, !dbg !9542
  br label %for.cond106, !dbg !9543, !llvm.loop !9544

for.end185:                                       ; preds = %for.cond106
  call void @BLI_freelistN(%struct.ListBase* %pidlist), !dbg !9546
  br label %for.inc186, !dbg !9547

for.inc186:                                       ; preds = %for.end185
  %157 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9439
  %call187 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %157), !dbg !9439
  store %struct.Base* %call187, %struct.Base** %base, align 8, !dbg !9439
  br label %for.cond102, !dbg !9548, !llvm.loop !9549

for.end188:                                       ; preds = %for.cond102
  br label %if.end189

if.end189:                                        ; preds = %for.end188, %if.end100
  %158 = load i32, i32* %startframe, align 4, !dbg !9551
  %159 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9552
  %r190 = getelementptr inbounds %struct.Scene, %struct.Scene* %159, i32 0, i32 22, !dbg !9552
  %cfra191 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r190, i32 0, i32 5, !dbg !9552
  store i32 %158, i32* %cfra191, align 8, !dbg !9553
  %160 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9554
  %r192 = getelementptr inbounds %struct.Scene, %struct.Scene* %160, i32 0, i32 22, !dbg !9555
  %framelen193 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r192, i32 0, i32 15, !dbg !9556
  store float 1.000000e+00, float* %framelen193, align 4, !dbg !9557
  %break_operation = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 0, !dbg !9558
  store i32 0, i32* %break_operation, align 8, !dbg !9559
  %thread_ended = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 1, !dbg !9560
  store i32 0, i32* %thread_ended, align 4, !dbg !9561
  store i32 -1, i32* %old_progress, align 4, !dbg !9562
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !9563
  %161 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !9564
  %tobool194 = icmp ne i8 %161, 0, !dbg !9566
  br i1 %tobool194, label %if.then195, label %if.else197, !dbg !9567

if.then195:                                       ; preds = %if.end189
  %162 = bitcast %struct.ptcache_bake_data* %thread_data to i8*, !dbg !9568
  %call196 = call i8* @ptcache_bake_thread(i8* %162), !dbg !9570
  br label %if.end234, !dbg !9571

if.else197:                                       ; preds = %if.end189
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @ptcache_bake_thread, i32 1), !dbg !9572
  %163 = bitcast %struct.ptcache_bake_data* %thread_data to i8*, !dbg !9574
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %163), !dbg !9575
  br label %while.cond, !dbg !9576

while.cond:                                       ; preds = %if.end233, %if.else197
  %thread_ended198 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 1, !dbg !9577
  %164 = load i32, i32* %thread_ended198, align 4, !dbg !9577
  %cmp199 = icmp eq i32 %164, 0, !dbg !9578
  br i1 %cmp199, label %while.body, label %while.end, !dbg !9576

while.body:                                       ; preds = %while.cond
  %165 = load i32, i32* %bake, align 4, !dbg !9579
  %tobool201 = icmp ne i32 %165, 0, !dbg !9579
  br i1 %tobool201, label %if.then202, label %if.else210, !dbg !9582

if.then202:                                       ; preds = %while.body
  %166 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9583
  %r203 = getelementptr inbounds %struct.Scene, %struct.Scene* %166, i32 0, i32 22, !dbg !9583
  %cfra204 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r203, i32 0, i32 5, !dbg !9583
  %167 = load i32, i32* %cfra204, align 8, !dbg !9583
  %168 = load i32, i32* %startframe, align 4, !dbg !9584
  %sub = sub nsw i32 %167, %168, !dbg !9585
  %conv205 = sitofp i32 %sub to float, !dbg !9586
  %mul = fmul float 1.000000e+02, %conv205, !dbg !9587
  %endframe206 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 2, !dbg !9588
  %169 = load i32, i32* %endframe206, align 8, !dbg !9588
  %170 = load i32, i32* %startframe, align 4, !dbg !9589
  %sub207 = sub nsw i32 %169, %170, !dbg !9590
  %conv208 = sitofp i32 %sub207 to float, !dbg !9591
  %div = fdiv float %mul, %conv208, !dbg !9592
  %conv209 = fptosi float %div to i32, !dbg !9593
  store i32 %conv209, i32* %progress, align 4, !dbg !9594
  br label %if.end213, !dbg !9595

if.else210:                                       ; preds = %while.body
  %171 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9596
  %r211 = getelementptr inbounds %struct.Scene, %struct.Scene* %171, i32 0, i32 22, !dbg !9596
  %cfra212 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r211, i32 0, i32 5, !dbg !9596
  %172 = load i32, i32* %cfra212, align 8, !dbg !9596
  store i32 %172, i32* %progress, align 4, !dbg !9597
  br label %if.end213

if.end213:                                        ; preds = %if.else210, %if.then202
  %173 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9598
  %progressbar = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %173, i32 0, i32 9, !dbg !9600
  %174 = load void (i8*, i32)*, void (i8*, i32)** %progressbar, align 8, !dbg !9600
  %tobool214 = icmp ne void (i8*, i32)* %174, null, !dbg !9601
  br i1 %tobool214, label %land.lhs.true215, label %if.end220, !dbg !9602

land.lhs.true215:                                 ; preds = %if.end213
  %175 = load i32, i32* %progress, align 4, !dbg !9603
  %176 = load i32, i32* %old_progress, align 4, !dbg !9604
  %cmp216 = icmp ne i32 %175, %176, !dbg !9605
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !9606

if.then218:                                       ; preds = %land.lhs.true215
  %177 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9607
  %progressbar219 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %177, i32 0, i32 9, !dbg !9609
  %178 = load void (i8*, i32)*, void (i8*, i32)** %progressbar219, align 8, !dbg !9609
  %179 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9610
  %progresscontext = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %179, i32 0, i32 11, !dbg !9611
  %180 = load i8*, i8** %progresscontext, align 8, !dbg !9611
  %181 = load i32, i32* %progress, align 4, !dbg !9612
  call void %178(i8* %180, i32 %181), !dbg !9607
  %182 = load i32, i32* %progress, align 4, !dbg !9613
  store i32 %182, i32* %old_progress, align 4, !dbg !9614
  br label %if.end220, !dbg !9615

if.end220:                                        ; preds = %if.then218, %land.lhs.true215, %if.end213
  call void @PIL_sleep_ms(i32 200), !dbg !9616
  %call221 = call i32 @blender_test_break(), !dbg !9617
  %tobool222 = icmp ne i32 %call221, 0, !dbg !9617
  br i1 %tobool222, label %land.lhs.true223, label %if.end233, !dbg !9619

land.lhs.true223:                                 ; preds = %if.end220
  %break_operation224 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 0, !dbg !9620
  %183 = load i32, i32* %break_operation224, align 8, !dbg !9620
  %tobool225 = icmp ne i32 %183, 0, !dbg !9621
  br i1 %tobool225, label %if.end233, label %if.then226, !dbg !9622

if.then226:                                       ; preds = %land.lhs.true223
  %break_operation227 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 0, !dbg !9623
  store i32 1, i32* %break_operation227, align 8, !dbg !9625
  %184 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9626
  %progressend = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %184, i32 0, i32 10, !dbg !9628
  %185 = load void (i8*)*, void (i8*)** %progressend, align 8, !dbg !9628
  %tobool228 = icmp ne void (i8*)* %185, null, !dbg !9626
  br i1 %tobool228, label %if.then229, label %if.end232, !dbg !9629

if.then229:                                       ; preds = %if.then226
  %186 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9630
  %progressend230 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %186, i32 0, i32 10, !dbg !9631
  %187 = load void (i8*)*, void (i8*)** %progressend230, align 8, !dbg !9631
  %188 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9632
  %progresscontext231 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %188, i32 0, i32 11, !dbg !9633
  %189 = load i8*, i8** %progresscontext231, align 8, !dbg !9633
  call void %187(i8* %189), !dbg !9630
  br label %if.end232, !dbg !9630

if.end232:                                        ; preds = %if.then229, %if.then226
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !9634
  br label %if.end233, !dbg !9635

if.end233:                                        ; preds = %if.end232, %land.lhs.true223, %if.end220
  br label %while.cond, !dbg !9576, !llvm.loop !9636

while.end:                                        ; preds = %while.cond
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !9638
  br label %if.end234

if.end234:                                        ; preds = %while.end, %if.then195
  %190 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9639
  %tobool235 = icmp ne %struct.PTCacheID* %190, null, !dbg !9639
  br i1 %tobool235, label %if.then236, label %if.else252, !dbg !9641

if.then236:                                       ; preds = %if.end234
  %191 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9642
  %flag237 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %191, i32 0, i32 2, !dbg !9644
  %192 = load i32, i32* %flag237, align 8, !dbg !9645
  %and238 = and i32 %192, -267, !dbg !9645
  store i32 %and238, i32* %flag237, align 8, !dbg !9645
  %193 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9646
  %flag239 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %193, i32 0, i32 2, !dbg !9647
  %194 = load i32, i32* %flag239, align 8, !dbg !9648
  %or240 = or i32 %194, 4, !dbg !9648
  store i32 %or240, i32* %flag239, align 8, !dbg !9648
  %195 = load i32, i32* %bake, align 4, !dbg !9649
  %tobool241 = icmp ne i32 %195, 0, !dbg !9649
  br i1 %tobool241, label %if.then242, label %if.end251, !dbg !9651

if.then242:                                       ; preds = %if.then236
  %196 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9652
  %flag243 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %196, i32 0, i32 2, !dbg !9654
  %197 = load i32, i32* %flag243, align 8, !dbg !9655
  %or244 = or i32 %197, 1, !dbg !9655
  store i32 %or244, i32* %flag243, align 8, !dbg !9655
  %198 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9656
  %flag245 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %198, i32 0, i32 2, !dbg !9658
  %199 = load i32, i32* %flag245, align 8, !dbg !9658
  %and246 = and i32 %199, 64, !dbg !9659
  %tobool247 = icmp ne i32 %and246, 0, !dbg !9659
  br i1 %tobool247, label %if.then248, label %if.end250, !dbg !9660

if.then248:                                       ; preds = %if.then242
  %200 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9661
  %call249 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %200, i32 0), !dbg !9662
  br label %if.end250, !dbg !9662

if.end250:                                        ; preds = %if.then248, %if.then242
  br label %if.end251, !dbg !9663

if.end251:                                        ; preds = %if.end250, %if.then236
  br label %if.end304, !dbg !9664

if.else252:                                       ; preds = %if.end234
  %201 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9665
  store %struct.Scene* %201, %struct.Scene** %sce_iter, align 8, !dbg !9665
  %call253 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !9665
  store %struct.Base* %call253, %struct.Base** %base, align 8, !dbg !9665
  br label %for.cond254, !dbg !9665

for.cond254:                                      ; preds = %for.inc301, %if.else252
  %202 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9668
  %tobool255 = icmp ne %struct.Base* %202, null, !dbg !9670
  br i1 %tobool255, label %for.body256, label %for.end303, !dbg !9670

for.body256:                                      ; preds = %for.cond254
  %203 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9671
  %object257 = getelementptr inbounds %struct.Base, %struct.Base* %203, i32 0, i32 7, !dbg !9673
  %204 = load %struct.Object*, %struct.Object** %object257, align 8, !dbg !9673
  %205 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9674
  call void @BKE_ptcache_ids_from_object(%struct.ListBase* %pidlist, %struct.Object* %204, %struct.Scene* %205, i32 8), !dbg !9675
  %first258 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pidlist, i32 0, i32 0, !dbg !9676
  %206 = load i8*, i8** %first258, align 8, !dbg !9676
  %207 = bitcast i8* %206 to %struct.PTCacheID*, !dbg !9678
  store %struct.PTCacheID* %207, %struct.PTCacheID** %pid, align 8, !dbg !9679
  br label %for.cond259, !dbg !9680

for.cond259:                                      ; preds = %for.inc298, %for.body256
  %208 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9681
  %tobool260 = icmp ne %struct.PTCacheID* %208, null, !dbg !9683
  br i1 %tobool260, label %for.body261, label %for.end300, !dbg !9683

for.body261:                                      ; preds = %for.cond259
  %209 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9684
  %type262 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %209, i32 0, i32 5, !dbg !9687
  %210 = load i32, i32* %type262, align 8, !dbg !9687
  %cmp263 = icmp eq i32 %210, 1, !dbg !9688
  br i1 %cmp263, label %land.lhs.true265, label %if.end273, !dbg !9689

land.lhs.true265:                                 ; preds = %for.body261
  %211 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9690
  %calldata266 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %211, i32 0, i32 4, !dbg !9691
  %212 = load i8*, i8** %calldata266, align 8, !dbg !9691
  %213 = bitcast i8* %212 to %struct.ParticleSystem*, !dbg !9692
  %part267 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %213, i32 0, i32 2, !dbg !9693
  %214 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part267, align 8, !dbg !9693
  %type268 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %214, i32 0, i32 7, !dbg !9694
  %215 = load i16, i16* %type268, align 8, !dbg !9694
  %conv269 = sext i16 %215 to i32, !dbg !9695
  %cmp270 = icmp eq i32 %conv269, 2, !dbg !9696
  br i1 %cmp270, label %if.then272, label %if.end273, !dbg !9697

if.then272:                                       ; preds = %land.lhs.true265
  br label %for.inc298, !dbg !9698

if.end273:                                        ; preds = %land.lhs.true265, %for.body261
  %216 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9699
  %cache274 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %216, i32 0, i32 25, !dbg !9700
  %217 = load %struct.PointCache*, %struct.PointCache** %cache274, align 8, !dbg !9700
  store %struct.PointCache* %217, %struct.PointCache** %cache, align 8, !dbg !9701
  %step275 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 3, !dbg !9702
  %218 = load i32, i32* %step275, align 4, !dbg !9702
  %cmp276 = icmp sgt i32 %218, 1, !dbg !9704
  br i1 %cmp276, label %if.then278, label %if.else281, !dbg !9705

if.then278:                                       ; preds = %if.end273
  %219 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9706
  %flag279 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %219, i32 0, i32 2, !dbg !9707
  %220 = load i32, i32* %flag279, align 8, !dbg !9708
  %and280 = and i32 %220, -11, !dbg !9708
  store i32 %and280, i32* %flag279, align 8, !dbg !9708
  br label %if.end284, !dbg !9706

if.else281:                                       ; preds = %if.end273
  %221 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9709
  %flag282 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %221, i32 0, i32 2, !dbg !9710
  %222 = load i32, i32* %flag282, align 8, !dbg !9711
  %and283 = and i32 %222, -267, !dbg !9711
  store i32 %and283, i32* %flag282, align 8, !dbg !9711
  br label %if.end284

if.end284:                                        ; preds = %if.else281, %if.then278
  %223 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9712
  %flag285 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %223, i32 0, i32 2, !dbg !9713
  %224 = load i32, i32* %flag285, align 8, !dbg !9714
  %or286 = or i32 %224, 4, !dbg !9714
  store i32 %or286, i32* %flag285, align 8, !dbg !9714
  %225 = load i32, i32* %bake, align 4, !dbg !9715
  %tobool287 = icmp ne i32 %225, 0, !dbg !9715
  br i1 %tobool287, label %if.then288, label %if.end297, !dbg !9717

if.then288:                                       ; preds = %if.end284
  %226 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9718
  %flag289 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %226, i32 0, i32 2, !dbg !9720
  %227 = load i32, i32* %flag289, align 8, !dbg !9721
  %or290 = or i32 %227, 1, !dbg !9721
  store i32 %or290, i32* %flag289, align 8, !dbg !9721
  %228 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9722
  %flag291 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %228, i32 0, i32 2, !dbg !9724
  %229 = load i32, i32* %flag291, align 8, !dbg !9724
  %and292 = and i32 %229, 64, !dbg !9725
  %tobool293 = icmp ne i32 %and292, 0, !dbg !9725
  br i1 %tobool293, label %if.then294, label %if.end296, !dbg !9726

if.then294:                                       ; preds = %if.then288
  %230 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9727
  %call295 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %230, i32 0), !dbg !9728
  br label %if.end296, !dbg !9728

if.end296:                                        ; preds = %if.then294, %if.then288
  br label %if.end297, !dbg !9729

if.end297:                                        ; preds = %if.end296, %if.end284
  br label %for.inc298, !dbg !9730

for.inc298:                                       ; preds = %if.end297, %if.then272
  %231 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !9731
  %next299 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %231, i32 0, i32 0, !dbg !9732
  %232 = load %struct.PTCacheID*, %struct.PTCacheID** %next299, align 8, !dbg !9732
  store %struct.PTCacheID* %232, %struct.PTCacheID** %pid, align 8, !dbg !9733
  br label %for.cond259, !dbg !9734, !llvm.loop !9735

for.end300:                                       ; preds = %for.cond259
  call void @BLI_freelistN(%struct.ListBase* %pidlist), !dbg !9737
  br label %for.inc301, !dbg !9738

for.inc301:                                       ; preds = %for.end300
  %233 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9668
  %call302 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %233), !dbg !9668
  store %struct.Base* %call302, %struct.Base** %base, align 8, !dbg !9668
  br label %for.cond254, !dbg !9739, !llvm.loop !9740

for.end303:                                       ; preds = %for.cond254
  br label %if.end304

if.end304:                                        ; preds = %for.end303, %if.end251
  %234 = load float, float* %frameleno, align 4, !dbg !9742
  %235 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9743
  %r305 = getelementptr inbounds %struct.Scene, %struct.Scene* %235, i32 0, i32 22, !dbg !9744
  %framelen306 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r305, i32 0, i32 15, !dbg !9745
  store float %234, float* %framelen306, align 4, !dbg !9746
  %236 = load i32, i32* %cfrao, align 4, !dbg !9747
  %237 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9748
  %r307 = getelementptr inbounds %struct.Scene, %struct.Scene* %237, i32 0, i32 22, !dbg !9748
  %cfra308 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r307, i32 0, i32 5, !dbg !9748
  store i32 %236, i32* %cfra308, align 8, !dbg !9749
  %238 = load i32, i32* %bake, align 4, !dbg !9750
  %tobool309 = icmp ne i32 %238, 0, !dbg !9750
  br i1 %tobool309, label %if.then310, label %if.end311, !dbg !9752

if.then310:                                       ; preds = %if.end304
  %239 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9753
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %239, i32 0, i32 46, !dbg !9755
  %240 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !9755
  %241 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9756
  %242 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9757
  %243 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9758
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %243, i32 0, i32 12, !dbg !9759
  %244 = load i32, i32* %lay, align 8, !dbg !9759
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %240, %struct.Main* %241, %struct.Scene* %242, i32 %244), !dbg !9760
  br label %if.end311, !dbg !9761

if.end311:                                        ; preds = %if.then310, %if.end304
  %break_operation312 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %thread_data, i32 0, i32 0, !dbg !9762
  %245 = load i32, i32* %break_operation312, align 8, !dbg !9762
  %tobool313 = icmp ne i32 %245, 0, !dbg !9764
  br i1 %tobool313, label %if.then314, label %if.else315, !dbg !9765

if.then314:                                       ; preds = %if.end311
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !9766
  br label %if.end322, !dbg !9766

if.else315:                                       ; preds = %if.end311
  %246 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9767
  %progressend316 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %246, i32 0, i32 10, !dbg !9769
  %247 = load void (i8*)*, void (i8*)** %progressend316, align 8, !dbg !9769
  %tobool317 = icmp ne void (i8*)* %247, null, !dbg !9767
  br i1 %tobool317, label %if.then318, label %if.end321, !dbg !9770

if.then318:                                       ; preds = %if.else315
  %248 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9771
  %progressend319 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %248, i32 0, i32 10, !dbg !9772
  %249 = load void (i8*)*, void (i8*)** %progressend319, align 8, !dbg !9772
  %250 = load %struct.PTCacheBaker*, %struct.PTCacheBaker** %baker.addr, align 8, !dbg !9773
  %progresscontext320 = getelementptr inbounds %struct.PTCacheBaker, %struct.PTCacheBaker* %250, i32 0, i32 11, !dbg !9774
  %251 = load i8*, i8** %progresscontext320, align 8, !dbg !9774
  call void %249(i8* %251), !dbg !9771
  br label %if.end321, !dbg !9771

if.end321:                                        ; preds = %if.then318, %if.else315
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.then314
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !9775
  ret void, !dbg !9776
}

declare dso_local void @psys_get_pointcache_start_end(%struct.Scene*, %struct.ParticleSystem*, i32*, i32*) #3

declare dso_local %struct.Base* @_setlooper_base_step(%struct.Scene**, %struct.Base*) #3

declare dso_local void @WM_cursor_wait(i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @ptcache_bake_thread(i8* %ptr) #0 !dbg !9777 {
entry:
  %ptr.addr = alloca i8*, align 8
  %use_timer = alloca i8, align 1
  %sfra = alloca i32, align 4
  %efra = alloca i32, align 4
  %stime = alloca double, align 8
  %ptime = alloca double, align 8
  %ctime = alloca double, align 8
  %fetd = alloca double, align 8
  %run = alloca [32 x i8], align 16
  %cur = alloca [32 x i8], align 16
  %etd = alloca [32 x i8], align 16
  %data = alloca %struct.ptcache_bake_data*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata i8* %use_timer, metadata !9782, metadata !DIExpression()), !dbg !9783
  store i8 0, i8* %use_timer, align 1, !dbg !9783
  call void @llvm.dbg.declare(metadata i32* %sfra, metadata !9784, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.declare(metadata i32* %efra, metadata !9786, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.declare(metadata double* %stime, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.declare(metadata double* %ptime, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata double* %ctime, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata double* %fetd, metadata !9795, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.declare(metadata [32 x i8]* %run, metadata !9797, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.declare(metadata [32 x i8]* %cur, metadata !9799, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.declare(metadata [32 x i8]* %etd, metadata !9801, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.declare(metadata %struct.ptcache_bake_data** %data, metadata !9803, metadata !DIExpression()), !dbg !9804
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9805
  %1 = bitcast i8* %0 to %struct.ptcache_bake_data*, !dbg !9806
  store %struct.ptcache_bake_data* %1, %struct.ptcache_bake_data** %data, align 8, !dbg !9804
  %call = call double @PIL_check_seconds_timer(), !dbg !9807
  store double %call, double* %ptime, align 8, !dbg !9808
  store double %call, double* %stime, align 8, !dbg !9809
  %2 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9810
  %cfra_ptr = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %2, i32 0, i32 4, !dbg !9811
  %3 = load i32*, i32** %cfra_ptr, align 8, !dbg !9811
  %4 = load i32, i32* %3, align 4, !dbg !9812
  store i32 %4, i32* %sfra, align 4, !dbg !9813
  %5 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9814
  %endframe = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %5, i32 0, i32 2, !dbg !9815
  %6 = load i32, i32* %endframe, align 8, !dbg !9815
  store i32 %6, i32* %efra, align 4, !dbg !9816
  br label %for.cond, !dbg !9817

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9818
  %cfra_ptr1 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %7, i32 0, i32 4, !dbg !9821
  %8 = load i32*, i32** %cfra_ptr1, align 8, !dbg !9821
  %9 = load i32, i32* %8, align 4, !dbg !9822
  %10 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9823
  %endframe2 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %10, i32 0, i32 2, !dbg !9824
  %11 = load i32, i32* %endframe2, align 8, !dbg !9824
  %cmp = icmp sle i32 %9, %11, !dbg !9825
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9826

land.rhs:                                         ; preds = %for.cond
  %12 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9827
  %break_operation = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %12, i32 0, i32 0, !dbg !9828
  %13 = load i32, i32* %break_operation, align 8, !dbg !9828
  %tobool = icmp ne i32 %13, 0, !dbg !9829
  %lnot = xor i1 %tobool, true, !dbg !9829
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !9830
  br i1 %14, label %for.body, label %for.end, !dbg !9831

for.body:                                         ; preds = %land.end
  %15 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !9832
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 46, !dbg !9834
  %16 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !9834
  %17 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9835
  %main = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %17, i32 0, i32 5, !dbg !9836
  %18 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !9836
  %19 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9837
  %scene = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %19, i32 0, i32 6, !dbg !9838
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9838
  %21 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9839
  %scene3 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %21, i32 0, i32 6, !dbg !9840
  %22 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !9840
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 12, !dbg !9841
  %23 = load i32, i32* %lay, align 8, !dbg !9841
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %16, %struct.Main* %18, %struct.Scene* %20, i32 %23), !dbg !9842
  %24 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !9843
  %tobool4 = icmp ne i8 %24, 0, !dbg !9845
  br i1 %tobool4, label %if.then, label %if.else, !dbg !9846

if.then:                                          ; preds = %for.body
  %25 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9847
  %cfra_ptr5 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %25, i32 0, i32 4, !dbg !9849
  %26 = load i32*, i32** %cfra_ptr5, align 8, !dbg !9849
  %27 = load i32, i32* %26, align 4, !dbg !9850
  %28 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9851
  %endframe6 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %28, i32 0, i32 2, !dbg !9852
  %29 = load i32, i32* %endframe6, align 8, !dbg !9852
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i64 0, i64 0), i32 %27, i32 %29), !dbg !9853
  br label %if.end29, !dbg !9854

if.else:                                          ; preds = %for.body
  %call8 = call double @PIL_check_seconds_timer(), !dbg !9855
  store double %call8, double* %ctime, align 8, !dbg !9857
  %30 = load double, double* %ctime, align 8, !dbg !9858
  %31 = load double, double* %ptime, align 8, !dbg !9859
  %sub = fsub double %30, %31, !dbg !9860
  %32 = load i32, i32* %efra, align 4, !dbg !9861
  %33 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9862
  %cfra_ptr9 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %33, i32 0, i32 4, !dbg !9863
  %34 = load i32*, i32** %cfra_ptr9, align 8, !dbg !9863
  %35 = load i32, i32* %34, align 4, !dbg !9864
  %sub10 = sub nsw i32 %32, %35, !dbg !9865
  %conv = sitofp i32 %sub10 to double, !dbg !9866
  %mul = fmul double %sub, %conv, !dbg !9867
  %36 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9868
  %step = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %36, i32 0, i32 3, !dbg !9869
  %37 = load i32, i32* %step, align 4, !dbg !9869
  %conv11 = sitofp i32 %37 to double, !dbg !9868
  %div = fdiv double %mul, %conv11, !dbg !9870
  store double %div, double* %fetd, align 8, !dbg !9871
  %38 = load i8, i8* %use_timer, align 1, !dbg !9872
  %conv12 = zext i8 %38 to i32, !dbg !9872
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !9872
  br i1 %tobool13, label %if.then16, label %lor.lhs.false, !dbg !9874

lor.lhs.false:                                    ; preds = %if.else
  %39 = load double, double* %fetd, align 8, !dbg !9875
  %cmp14 = fcmp ogt double %39, 6.000000e+01, !dbg !9876
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !9877

if.then16:                                        ; preds = %lor.lhs.false, %if.else
  store i8 1, i8* %use_timer, align 1, !dbg !9878
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %cur, i64 0, i64 0, !dbg !9880
  %40 = load double, double* %ctime, align 8, !dbg !9881
  %41 = load double, double* %ptime, align 8, !dbg !9882
  %sub17 = fsub double %40, %41, !dbg !9883
  call void @ptcache_dt_to_str(i8* %arraydecay, double %sub17), !dbg !9884
  %arraydecay18 = getelementptr inbounds [32 x i8], [32 x i8]* %run, i64 0, i64 0, !dbg !9885
  %42 = load double, double* %ctime, align 8, !dbg !9886
  %43 = load double, double* %stime, align 8, !dbg !9887
  %sub19 = fsub double %42, %43, !dbg !9888
  call void @ptcache_dt_to_str(i8* %arraydecay18, double %sub19), !dbg !9889
  %arraydecay20 = getelementptr inbounds [32 x i8], [32 x i8]* %etd, i64 0, i64 0, !dbg !9890
  %44 = load double, double* %fetd, align 8, !dbg !9891
  call void @ptcache_dt_to_str(i8* %arraydecay20, double %44), !dbg !9892
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %run, i64 0, i64 0, !dbg !9893
  %45 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9894
  %cfra_ptr22 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %45, i32 0, i32 4, !dbg !9895
  %46 = load i32*, i32** %cfra_ptr22, align 8, !dbg !9895
  %47 = load i32, i32* %46, align 4, !dbg !9896
  %48 = load i32, i32* %sfra, align 4, !dbg !9897
  %sub23 = sub nsw i32 %47, %48, !dbg !9898
  %add = add nsw i32 %sub23, 1, !dbg !9899
  %49 = load i32, i32* %efra, align 4, !dbg !9900
  %50 = load i32, i32* %sfra, align 4, !dbg !9901
  %sub24 = sub nsw i32 %49, %50, !dbg !9902
  %add25 = add nsw i32 %sub24, 1, !dbg !9903
  %51 = load double, double* %ctime, align 8, !dbg !9904
  %52 = load double, double* %ptime, align 8, !dbg !9905
  %sub26 = fsub double %51, %52, !dbg !9906
  %arraydecay27 = getelementptr inbounds [32 x i8], [32 x i8]* %etd, i64 0, i64 0, !dbg !9907
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay21, i32 %add, i32 %add25, double %sub26, i8* %arraydecay27), !dbg !9908
  br label %if.end, !dbg !9909

if.end:                                           ; preds = %if.then16, %lor.lhs.false
  %53 = load double, double* %ctime, align 8, !dbg !9910
  store double %53, double* %ptime, align 8, !dbg !9911
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !9912

for.inc:                                          ; preds = %if.end29
  %54 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9913
  %step30 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %54, i32 0, i32 3, !dbg !9914
  %55 = load i32, i32* %step30, align 4, !dbg !9914
  %56 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9915
  %cfra_ptr31 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %56, i32 0, i32 4, !dbg !9916
  %57 = load i32*, i32** %cfra_ptr31, align 8, !dbg !9916
  %58 = load i32, i32* %57, align 4, !dbg !9917
  %add32 = add nsw i32 %58, %55, !dbg !9917
  store i32 %add32, i32* %57, align 4, !dbg !9917
  br label %for.cond, !dbg !9918, !llvm.loop !9919

for.end:                                          ; preds = %land.end
  %59 = load i8, i8* %use_timer, align 1, !dbg !9921
  %tobool33 = icmp ne i8 %59, 0, !dbg !9921
  br i1 %tobool33, label %if.then34, label %if.end44, !dbg !9923

if.then34:                                        ; preds = %for.end
  %arraydecay35 = getelementptr inbounds [32 x i8], [32 x i8]* %run, i64 0, i64 0, !dbg !9924
  %call36 = call double @PIL_check_seconds_timer(), !dbg !9926
  %60 = load double, double* %stime, align 8, !dbg !9927
  %sub37 = fsub double %call36, %60, !dbg !9928
  call void @ptcache_dt_to_str(i8* %arraydecay35, double %sub37), !dbg !9929
  %61 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9930
  %break_operation38 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %61, i32 0, i32 0, !dbg !9931
  %62 = load i32, i32* %break_operation38, align 8, !dbg !9931
  %tobool39 = icmp ne i32 %62, 0, !dbg !9930
  %63 = zext i1 %tobool39 to i64, !dbg !9930
  %cond = select i1 %tobool39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0), !dbg !9930
  %arraydecay40 = getelementptr inbounds [32 x i8], [32 x i8]* %run, i64 0, i64 0, !dbg !9932
  %64 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9933
  %cfra_ptr41 = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %64, i32 0, i32 4, !dbg !9934
  %65 = load i32*, i32** %cfra_ptr41, align 8, !dbg !9934
  %66 = load i32, i32* %65, align 4, !dbg !9935
  %67 = load i32, i32* %sfra, align 4, !dbg !9936
  %sub42 = sub nsw i32 %66, %67, !dbg !9937
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.48, i64 0, i64 0), i8* %cond, i8* %arraydecay40, i32 %sub42), !dbg !9938
  br label %if.end44, !dbg !9939

if.end44:                                         ; preds = %if.then34, %for.end
  %68 = load %struct.ptcache_bake_data*, %struct.ptcache_bake_data** %data, align 8, !dbg !9940
  %thread_ended = getelementptr inbounds %struct.ptcache_bake_data, %struct.ptcache_bake_data* %68, i32 0, i32 1, !dbg !9941
  store i32 1, i32* %thread_ended, align 4, !dbg !9942
  ret i8* null, !dbg !9943
}

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #3

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #3

declare dso_local void @PIL_sleep_ms(i32) #3

declare dso_local i32 @blender_test_break() #3

declare dso_local void @BLI_end_threads(%struct.ListBase*) #3

declare dso_local void @BKE_scene_update_for_newframe(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_disk_to_mem(%struct.PTCacheID* %pid) #0 !dbg !9944 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  %baked = alloca i32, align 4
  %cfra = alloca i32, align 4
  %sfra = alloca i32, align 4
  %efra = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !9947, metadata !DIExpression()), !dbg !9948
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !9949
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !9950
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !9950
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !9948
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !9951, metadata !DIExpression()), !dbg !9952
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !9952
  call void @llvm.dbg.declare(metadata i32* %baked, metadata !9953, metadata !DIExpression()), !dbg !9954
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9955
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 2, !dbg !9956
  %3 = load i32, i32* %flag, align 8, !dbg !9956
  %and = and i32 %3, 1, !dbg !9957
  store i32 %and, i32* %baked, align 4, !dbg !9954
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !9958, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.declare(metadata i32* %sfra, metadata !9960, metadata !DIExpression()), !dbg !9961
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9962
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 5, !dbg !9963
  %5 = load i32, i32* %startframe, align 4, !dbg !9963
  store i32 %5, i32* %sfra, align 4, !dbg !9961
  call void @llvm.dbg.declare(metadata i32* %efra, metadata !9964, metadata !DIExpression()), !dbg !9965
  %6 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9966
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 6, !dbg !9967
  %7 = load i32, i32* %endframe, align 8, !dbg !9967
  store i32 %7, i32* %efra, align 4, !dbg !9965
  %8 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9968
  %flag2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 2, !dbg !9969
  %9 = load i32, i32* %flag2, align 8, !dbg !9970
  %and3 = and i32 %9, -2, !dbg !9970
  store i32 %and3, i32* %flag2, align 8, !dbg !9970
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !9971
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %10, i32 0, i32 0), !dbg !9972
  %11 = load i32, i32* %baked, align 4, !dbg !9973
  %12 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !9974
  %flag4 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %12, i32 0, i32 2, !dbg !9975
  %13 = load i32, i32* %flag4, align 8, !dbg !9976
  %or = or i32 %13, %11, !dbg !9976
  store i32 %or, i32* %flag4, align 8, !dbg !9976
  %14 = load i32, i32* %sfra, align 4, !dbg !9977
  store i32 %14, i32* %cfra, align 4, !dbg !9979
  br label %for.cond, !dbg !9980

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %cfra, align 4, !dbg !9981
  %16 = load i32, i32* %efra, align 4, !dbg !9983
  %cmp = icmp sle i32 %15, %16, !dbg !9984
  br i1 %cmp, label %for.body, label %for.end, !dbg !9985

for.body:                                         ; preds = %for.cond
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !9986
  %18 = load i32, i32* %cfra, align 4, !dbg !9988
  %call = call %struct.PTCacheMem* @ptcache_disk_frame_to_mem(%struct.PTCacheID* %17, i32 %18), !dbg !9989
  store %struct.PTCacheMem* %call, %struct.PTCacheMem** %pm, align 8, !dbg !9990
  %19 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9991
  %tobool = icmp ne %struct.PTCacheMem* %19, null, !dbg !9991
  br i1 %tobool, label %if.then, label %if.end, !dbg !9993

if.then:                                          ; preds = %for.body
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !9994
  %cache5 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %20, i32 0, i32 25, !dbg !9995
  %21 = load %struct.PointCache*, %struct.PointCache** %cache5, align 8, !dbg !9995
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %21, i32 0, i32 20, !dbg !9996
  %22 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !9997
  %23 = bitcast %struct.PTCacheMem* %22 to i8*, !dbg !9997
  call void @BLI_addtail(%struct.ListBase* %mem_cache, i8* %23), !dbg !9998
  br label %if.end, !dbg !9998

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9999

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %cfra, align 4, !dbg !10000
  %inc = add nsw i32 %24, 1, !dbg !10000
  store i32 %inc, i32* %cfra, align 4, !dbg !10000
  br label %for.cond, !dbg !10001, !llvm.loop !10002

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10004
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PTCacheMem* @ptcache_disk_frame_to_mem(%struct.PTCacheID* %pid, i32 %cfra) #0 !dbg !10005 {
entry:
  %retval = alloca %struct.PTCacheMem*, align 8
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cfra.addr = alloca i32, align 4
  %pf = alloca %struct.PTCacheFile*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %out_len = alloca i32, align 4
  %extratype = alloca i32, align 4
  %extra = alloca %struct.PTCacheExtra*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10008, metadata !DIExpression()), !dbg !10009
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !10010, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !10012, metadata !DIExpression()), !dbg !10013
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10014
  %1 = load i32, i32* %cfra.addr, align 4, !dbg !10015
  %call = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %0, i32 0, i32 %1), !dbg !10016
  store %struct.PTCacheFile* %call, %struct.PTCacheFile** %pf, align 8, !dbg !10013
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !10017, metadata !DIExpression()), !dbg !10018
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10021, metadata !DIExpression()), !dbg !10022
  store i32 0, i32* %error, align 4, !dbg !10022
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10023
  %cmp = icmp eq %struct.PTCacheFile* %2, null, !dbg !10025
  br i1 %cmp, label %if.then, label %if.end, !dbg !10026

if.then:                                          ; preds = %entry
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %retval, align 8, !dbg !10027
  br label %return, !dbg !10027

if.end:                                           ; preds = %entry
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10028
  %call1 = call i32 @ptcache_file_header_begin_read(%struct.PTCacheFile* %3), !dbg !10030
  %tobool = icmp ne i32 %call1, 0, !dbg !10030
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10031

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %error, align 4, !dbg !10032
  br label %if.end3, !dbg !10033

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i32, i32* %error, align 4, !dbg !10034
  %tobool4 = icmp ne i32 %4, 0, !dbg !10034
  br i1 %tobool4, label %if.end10, label %land.lhs.true, !dbg !10036

land.lhs.true:                                    ; preds = %if.end3
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10037
  %type = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %5, i32 0, i32 4, !dbg !10038
  %6 = load i32, i32* %type, align 4, !dbg !10038
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10039
  %type5 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 5, !dbg !10040
  %8 = load i32, i32* %type5, align 8, !dbg !10040
  %cmp6 = icmp ne i32 %6, %8, !dbg !10041
  br i1 %cmp6, label %if.then9, label %lor.lhs.false, !dbg !10042

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10043
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %9, i32 0, i32 24, !dbg !10044
  %10 = load i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !10044
  %11 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10045
  %call7 = call i32 %10(%struct.PTCacheFile* %11), !dbg !10043
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10043
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !10046

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %error, align 4, !dbg !10047
  br label %if.end10, !dbg !10048

if.end10:                                         ; preds = %if.then9, %lor.lhs.false, %if.end3
  %12 = load i32, i32* %error, align 4, !dbg !10049
  %tobool11 = icmp ne i32 %12, 0, !dbg !10049
  br i1 %tobool11, label %if.end43, label %if.then12, !dbg !10051

if.then12:                                        ; preds = %if.end10
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10052
  %call13 = call i8* %13(i64 176, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)), !dbg !10052
  %14 = bitcast i8* %call13 to %struct.PTCacheMem*, !dbg !10052
  store %struct.PTCacheMem* %14, %struct.PTCacheMem** %pm, align 8, !dbg !10054
  %15 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10055
  %totpoint = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %15, i32 0, i32 3, !dbg !10056
  %16 = load i32, i32* %totpoint, align 8, !dbg !10056
  %17 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10057
  %totpoint14 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %17, i32 0, i32 3, !dbg !10058
  store i32 %16, i32* %totpoint14, align 4, !dbg !10059
  %18 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10060
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %18, i32 0, i32 5, !dbg !10061
  %19 = load i32, i32* %data_types, align 8, !dbg !10061
  %20 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10062
  %data_types15 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %20, i32 0, i32 4, !dbg !10063
  store i32 %19, i32* %data_types15, align 8, !dbg !10064
  %21 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10065
  %frame = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %21, i32 0, i32 1, !dbg !10066
  %22 = load i32, i32* %frame, align 8, !dbg !10066
  %23 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10067
  %frame16 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %23, i32 0, i32 2, !dbg !10068
  store i32 %22, i32* %frame16, align 8, !dbg !10069
  %24 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10070
  call void @ptcache_data_alloc(%struct.PTCacheMem* %24), !dbg !10071
  %25 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10072
  %flag = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %25, i32 0, i32 6, !dbg !10074
  %26 = load i32, i32* %flag, align 4, !dbg !10074
  %and = and i32 %26, 65536, !dbg !10075
  %tobool17 = icmp ne i32 %and, 0, !dbg !10075
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !10076

if.then18:                                        ; preds = %if.then12
  store i32 0, i32* %i, align 4, !dbg !10077
  br label %for.cond, !dbg !10080

for.cond:                                         ; preds = %for.inc, %if.then18
  %27 = load i32, i32* %i, align 4, !dbg !10081
  %cmp19 = icmp ult i32 %27, 8, !dbg !10083
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10084

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %out_len, metadata !10085, metadata !DIExpression()), !dbg !10087
  %28 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10088
  %totpoint20 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %28, i32 0, i32 3, !dbg !10089
  %29 = load i32, i32* %totpoint20, align 4, !dbg !10089
  %30 = load i32, i32* %i, align 4, !dbg !10090
  %idxprom = zext i32 %30 to i64, !dbg !10091
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom, !dbg !10091
  %31 = load i32, i32* %arrayidx, align 4, !dbg !10091
  %mul = mul i32 %29, %31, !dbg !10092
  store i32 %mul, i32* %out_len, align 4, !dbg !10087
  %32 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10093
  %data_types21 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %32, i32 0, i32 5, !dbg !10095
  %33 = load i32, i32* %data_types21, align 8, !dbg !10095
  %34 = load i32, i32* %i, align 4, !dbg !10096
  %shl = shl i32 1, %34, !dbg !10097
  %and22 = and i32 %33, %shl, !dbg !10098
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10098
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !10099

if.then24:                                        ; preds = %for.body
  %35 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10100
  %36 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10101
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %36, i32 0, i32 6, !dbg !10102
  %37 = load i32, i32* %i, align 4, !dbg !10103
  %idxprom25 = zext i32 %37 to i64, !dbg !10101
  %arrayidx26 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom25, !dbg !10101
  %38 = load i8*, i8** %arrayidx26, align 8, !dbg !10101
  %39 = load i32, i32* %out_len, align 4, !dbg !10104
  %call27 = call i32 @ptcache_file_compressed_read(%struct.PTCacheFile* %35, i8* %38, i32 %39), !dbg !10105
  br label %if.end28, !dbg !10105

if.end28:                                         ; preds = %if.then24, %for.body
  br label %for.inc, !dbg !10106

for.inc:                                          ; preds = %if.end28
  %40 = load i32, i32* %i, align 4, !dbg !10107
  %inc = add i32 %40, 1, !dbg !10107
  store i32 %inc, i32* %i, align 4, !dbg !10107
  br label %for.cond, !dbg !10108, !llvm.loop !10109

for.end:                                          ; preds = %for.cond
  br label %if.end42, !dbg !10111

if.else:                                          ; preds = %if.then12
  %41 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10112
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %41), !dbg !10114
  %42 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10115
  call void @ptcache_file_pointers_init(%struct.PTCacheFile* %42), !dbg !10116
  store i32 0, i32* %i, align 4, !dbg !10117
  br label %for.cond29, !dbg !10119

for.cond29:                                       ; preds = %for.inc39, %if.else
  %43 = load i32, i32* %i, align 4, !dbg !10120
  %44 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10122
  %totpoint30 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %44, i32 0, i32 3, !dbg !10123
  %45 = load i32, i32* %totpoint30, align 4, !dbg !10123
  %cmp31 = icmp ult i32 %43, %45, !dbg !10124
  br i1 %cmp31, label %for.body32, label %for.end41, !dbg !10125

for.body32:                                       ; preds = %for.cond29
  %46 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10126
  %call33 = call i32 @ptcache_file_data_read(%struct.PTCacheFile* %46), !dbg !10129
  %tobool34 = icmp ne i32 %call33, 0, !dbg !10129
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !10130

if.then35:                                        ; preds = %for.body32
  store i32 1, i32* %error, align 4, !dbg !10131
  br label %for.end41, !dbg !10133

if.end36:                                         ; preds = %for.body32
  %47 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10134
  %cur = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %47, i32 0, i32 8, !dbg !10135
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !10134
  %48 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10136
  %cur37 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %48, i32 0, i32 7, !dbg !10137
  %arraydecay38 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur37, i64 0, i64 0, !dbg !10136
  call void @ptcache_data_copy(i8** %arraydecay, i8** %arraydecay38), !dbg !10138
  %49 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10139
  call void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %49), !dbg !10140
  br label %for.inc39, !dbg !10141

for.inc39:                                        ; preds = %if.end36
  %50 = load i32, i32* %i, align 4, !dbg !10142
  %inc40 = add i32 %50, 1, !dbg !10142
  store i32 %inc40, i32* %i, align 4, !dbg !10142
  br label %for.cond29, !dbg !10143, !llvm.loop !10144

for.end41:                                        ; preds = %if.then35, %for.cond29
  br label %if.end42

if.end42:                                         ; preds = %for.end41, %for.end
  br label %if.end43, !dbg !10146

if.end43:                                         ; preds = %if.end42, %if.end10
  %51 = load i32, i32* %error, align 4, !dbg !10147
  %tobool44 = icmp ne i32 %51, 0, !dbg !10147
  br i1 %tobool44, label %if.end81, label %land.lhs.true45, !dbg !10149

land.lhs.true45:                                  ; preds = %if.end43
  %52 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10150
  %flag46 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %52, i32 0, i32 6, !dbg !10151
  %53 = load i32, i32* %flag46, align 4, !dbg !10151
  %and47 = and i32 %53, 131072, !dbg !10152
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10152
  br i1 %tobool48, label %if.then49, label %if.end81, !dbg !10153

if.then49:                                        ; preds = %land.lhs.true45
  call void @llvm.dbg.declare(metadata i32* %extratype, metadata !10154, metadata !DIExpression()), !dbg !10156
  store i32 0, i32* %extratype, align 4, !dbg !10156
  br label %while.cond, !dbg !10157

while.cond:                                       ; preds = %if.end80, %if.then49
  %54 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10158
  %55 = bitcast i32* %extratype to i8*, !dbg !10159
  %call50 = call i32 @ptcache_file_read(%struct.PTCacheFile* %54, i8* %55, i32 1, i32 4), !dbg !10160
  %tobool51 = icmp ne i32 %call50, 0, !dbg !10157
  br i1 %tobool51, label %while.body, label %while.end, !dbg !10157

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !10161, metadata !DIExpression()), !dbg !10163
  %56 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10164
  %call52 = call i8* %56(i64 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0)), !dbg !10164
  %57 = bitcast i8* %call52 to %struct.PTCacheExtra*, !dbg !10164
  store %struct.PTCacheExtra* %57, %struct.PTCacheExtra** %extra, align 8, !dbg !10163
  %58 = load i32, i32* %extratype, align 4, !dbg !10165
  %59 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10166
  %type53 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %59, i32 0, i32 2, !dbg !10167
  store i32 %58, i32* %type53, align 8, !dbg !10168
  %60 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10169
  %61 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10170
  %totdata = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %61, i32 0, i32 3, !dbg !10171
  %62 = bitcast i32* %totdata to i8*, !dbg !10172
  %call54 = call i32 @ptcache_file_read(%struct.PTCacheFile* %60, i8* %62, i32 1, i32 4), !dbg !10173
  %63 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10174
  %64 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10175
  %totdata55 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %64, i32 0, i32 3, !dbg !10176
  %65 = load i32, i32* %totdata55, align 4, !dbg !10176
  %66 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10177
  %type56 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %66, i32 0, i32 2, !dbg !10178
  %67 = load i32, i32* %type56, align 8, !dbg !10178
  %idxprom57 = zext i32 %67 to i64, !dbg !10179
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom57, !dbg !10179
  %68 = load i32, i32* %arrayidx58, align 4, !dbg !10179
  %mul59 = mul i32 %65, %68, !dbg !10180
  %conv = zext i32 %mul59 to i64, !dbg !10175
  %call60 = call i8* %63(i64 %conv, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i64 0, i64 0)), !dbg !10174
  %69 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10181
  %data61 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %69, i32 0, i32 4, !dbg !10182
  store i8* %call60, i8** %data61, align 8, !dbg !10183
  %70 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10184
  %flag62 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %70, i32 0, i32 6, !dbg !10186
  %71 = load i32, i32* %flag62, align 4, !dbg !10186
  %and63 = and i32 %71, 65536, !dbg !10187
  %tobool64 = icmp ne i32 %and63, 0, !dbg !10187
  br i1 %tobool64, label %if.then65, label %if.else73, !dbg !10188

if.then65:                                        ; preds = %while.body
  %72 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10189
  %73 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10190
  %data66 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %73, i32 0, i32 4, !dbg !10191
  %74 = load i8*, i8** %data66, align 8, !dbg !10191
  %75 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10192
  %totdata67 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %75, i32 0, i32 3, !dbg !10193
  %76 = load i32, i32* %totdata67, align 4, !dbg !10193
  %77 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10194
  %type68 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %77, i32 0, i32 2, !dbg !10195
  %78 = load i32, i32* %type68, align 8, !dbg !10195
  %idxprom69 = zext i32 %78 to i64, !dbg !10196
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom69, !dbg !10196
  %79 = load i32, i32* %arrayidx70, align 4, !dbg !10196
  %mul71 = mul i32 %76, %79, !dbg !10197
  %call72 = call i32 @ptcache_file_compressed_read(%struct.PTCacheFile* %72, i8* %74, i32 %mul71), !dbg !10198
  br label %if.end80, !dbg !10198

if.else73:                                        ; preds = %while.body
  %80 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10199
  %81 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10200
  %data74 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %81, i32 0, i32 4, !dbg !10201
  %82 = load i8*, i8** %data74, align 8, !dbg !10201
  %83 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10202
  %totdata75 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %83, i32 0, i32 3, !dbg !10203
  %84 = load i32, i32* %totdata75, align 4, !dbg !10203
  %85 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10204
  %type76 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %85, i32 0, i32 2, !dbg !10205
  %86 = load i32, i32* %type76, align 8, !dbg !10205
  %idxprom77 = zext i32 %86 to i64, !dbg !10206
  %arrayidx78 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom77, !dbg !10206
  %87 = load i32, i32* %arrayidx78, align 4, !dbg !10206
  %call79 = call i32 @ptcache_file_read(%struct.PTCacheFile* %80, i8* %82, i32 %84, i32 %87), !dbg !10207
  br label %if.end80

if.end80:                                         ; preds = %if.else73, %if.then65
  %88 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10208
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %88, i32 0, i32 8, !dbg !10209
  %89 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10210
  %90 = bitcast %struct.PTCacheExtra* %89 to i8*, !dbg !10210
  call void @BLI_addtail(%struct.ListBase* %extradata, i8* %90), !dbg !10211
  br label %while.cond, !dbg !10157, !llvm.loop !10212

while.end:                                        ; preds = %while.cond
  br label %if.end81, !dbg !10214

if.end81:                                         ; preds = %while.end, %land.lhs.true45, %if.end43
  %91 = load i32, i32* %error, align 4, !dbg !10215
  %tobool82 = icmp ne i32 %91, 0, !dbg !10215
  br i1 %tobool82, label %land.lhs.true83, label %if.end86, !dbg !10217

land.lhs.true83:                                  ; preds = %if.end81
  %92 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10218
  %tobool84 = icmp ne %struct.PTCacheMem* %92, null, !dbg !10218
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !10219

if.then85:                                        ; preds = %land.lhs.true83
  %93 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10220
  call void @ptcache_data_free(%struct.PTCacheMem* %93), !dbg !10222
  %94 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10223
  call void @ptcache_extra_free(%struct.PTCacheMem* %94), !dbg !10224
  %95 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10225
  %96 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10226
  %97 = bitcast %struct.PTCacheMem* %96 to i8*, !dbg !10226
  call void %95(i8* %97), !dbg !10225
  store %struct.PTCacheMem* null, %struct.PTCacheMem** %pm, align 8, !dbg !10227
  br label %if.end86, !dbg !10228

if.end86:                                         ; preds = %if.then85, %land.lhs.true83, %if.end81
  %98 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10229
  call void @ptcache_file_close(%struct.PTCacheFile* %98), !dbg !10230
  %99 = load i32, i32* %error, align 4, !dbg !10231
  %tobool87 = icmp ne i32 %99, 0, !dbg !10231
  br i1 %tobool87, label %land.lhs.true88, label %if.end93, !dbg !10233

land.lhs.true88:                                  ; preds = %if.end86
  %100 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !10234
  %and89 = and i32 %100, 1, !dbg !10235
  %tobool90 = icmp ne i32 %and89, 0, !dbg !10235
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !10236

if.then91:                                        ; preds = %land.lhs.true88
  %call92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i64 0, i64 0)), !dbg !10237
  br label %if.end93, !dbg !10237

if.end93:                                         ; preds = %if.then91, %land.lhs.true88, %if.end86
  %101 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10238
  store %struct.PTCacheMem* %101, %struct.PTCacheMem** %retval, align 8, !dbg !10239
  br label %return, !dbg !10239

return:                                           ; preds = %if.end93, %if.then
  %102 = load %struct.PTCacheMem*, %struct.PTCacheMem** %retval, align 8, !dbg !10240
  ret %struct.PTCacheMem* %102, !dbg !10240
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_mem_to_disk(%struct.PTCacheID* %pid) #0 !dbg !10241 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %pm = alloca %struct.PTCacheMem*, align 8
  %baked = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !10244, metadata !DIExpression()), !dbg !10245
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10246
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !10247
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !10247
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !10245
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm, metadata !10248, metadata !DIExpression()), !dbg !10249
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10250
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 20, !dbg !10251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !10252
  %3 = load i8*, i8** %first, align 8, !dbg !10252
  %4 = bitcast i8* %3 to %struct.PTCacheMem*, !dbg !10250
  store %struct.PTCacheMem* %4, %struct.PTCacheMem** %pm, align 8, !dbg !10249
  call void @llvm.dbg.declare(metadata i32* %baked, metadata !10253, metadata !DIExpression()), !dbg !10254
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10255
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 2, !dbg !10256
  %6 = load i32, i32* %flag, align 8, !dbg !10256
  %and = and i32 %6, 1, !dbg !10257
  store i32 %and, i32* %baked, align 4, !dbg !10254
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10258
  %flag2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !10259
  %8 = load i32, i32* %flag2, align 8, !dbg !10260
  %and3 = and i32 %8, -2, !dbg !10260
  store i32 %and3, i32* %flag2, align 8, !dbg !10260
  %9 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10261
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %9, i32 0, i32 0), !dbg !10262
  %10 = load i32, i32* %baked, align 4, !dbg !10263
  %11 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10264
  %flag4 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 2, !dbg !10265
  %12 = load i32, i32* %flag4, align 8, !dbg !10266
  %or = or i32 %12, %10, !dbg !10266
  store i32 %or, i32* %flag4, align 8, !dbg !10266
  br label %for.cond, !dbg !10267

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10268
  %tobool = icmp ne %struct.PTCacheMem* %13, null, !dbg !10271
  br i1 %tobool, label %for.body, label %for.end, !dbg !10271

for.body:                                         ; preds = %for.cond
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10272
  %15 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10275
  %call = call i32 @ptcache_mem_frame_to_disk(%struct.PTCacheID* %14, %struct.PTCacheMem* %15), !dbg !10276
  %cmp = icmp eq i32 %call, 0, !dbg !10277
  br i1 %cmp, label %if.then, label %if.end, !dbg !10278

if.then:                                          ; preds = %for.body
  %16 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10279
  %flag5 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %16, i32 0, i32 2, !dbg !10281
  %17 = load i32, i32* %flag5, align 8, !dbg !10282
  %and6 = and i32 %17, -65, !dbg !10282
  store i32 %and6, i32* %flag5, align 8, !dbg !10282
  br label %for.end, !dbg !10283

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10284

for.inc:                                          ; preds = %if.end
  %18 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm, align 8, !dbg !10285
  %next = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %18, i32 0, i32 0, !dbg !10286
  %19 = load %struct.PTCacheMem*, %struct.PTCacheMem** %next, align 8, !dbg !10286
  store %struct.PTCacheMem* %19, %struct.PTCacheMem** %pm, align 8, !dbg !10287
  br label %for.cond, !dbg !10288, !llvm.loop !10289

for.end:                                          ; preds = %if.then, %for.cond
  %20 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10291
  %flag7 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %20, i32 0, i32 2, !dbg !10293
  %21 = load i32, i32* %flag7, align 8, !dbg !10293
  %and8 = and i32 %21, 1, !dbg !10294
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10294
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !10295

if.then10:                                        ; preds = %for.end
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10296
  %call11 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %22, i32 0), !dbg !10297
  br label %if.end12, !dbg !10297

if.end12:                                         ; preds = %if.then10, %for.end
  ret void, !dbg !10298
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_mem_frame_to_disk(%struct.PTCacheID* %pid, %struct.PTCacheMem* %pm) #0 !dbg !10299 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %pf = alloca %struct.PTCacheFile*, align 8
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %in_len = alloca i32, align 4
  %out = alloca i8*, align 8
  %extra = alloca %struct.PTCacheExtra*, align 8
  %in_len89 = alloca i32, align 4
  %out95 = alloca i8*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !10306, metadata !DIExpression()), !dbg !10307
  store %struct.PTCacheFile* null, %struct.PTCacheFile** %pf, align 8, !dbg !10307
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10310, metadata !DIExpression()), !dbg !10311
  store i32 0, i32* %error, align 4, !dbg !10311
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10312
  %1 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10313
  %frame = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %1, i32 0, i32 2, !dbg !10314
  %2 = load i32, i32* %frame, align 8, !dbg !10314
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %0, i32 1, i32 %2), !dbg !10315
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10316
  %4 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10317
  %frame1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %4, i32 0, i32 2, !dbg !10318
  %5 = load i32, i32* %frame1, align 8, !dbg !10318
  %call = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %3, i32 1, i32 %5), !dbg !10319
  store %struct.PTCacheFile* %call, %struct.PTCacheFile** %pf, align 8, !dbg !10320
  %6 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10321
  %cmp = icmp eq %struct.PTCacheFile* %6, null, !dbg !10323
  br i1 %cmp, label %if.then, label %if.end4, !dbg !10324

if.then:                                          ; preds = %entry
  %7 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !10325
  %and = and i32 %7, 1, !dbg !10328
  %tobool = icmp ne i32 %and, 0, !dbg !10328
  br i1 %tobool, label %if.then2, label %if.end, !dbg !10329

if.then2:                                         ; preds = %if.then
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)), !dbg !10330
  br label %if.end, !dbg !10330

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %retval, align 4, !dbg !10331
  br label %return, !dbg !10331

if.end4:                                          ; preds = %entry
  %8 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10332
  %data_types = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %8, i32 0, i32 4, !dbg !10333
  %9 = load i32, i32* %data_types, align 8, !dbg !10333
  %10 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10334
  %data_types5 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %10, i32 0, i32 5, !dbg !10335
  store i32 %9, i32* %data_types5, align 8, !dbg !10336
  %11 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10337
  %totpoint = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %11, i32 0, i32 3, !dbg !10338
  %12 = load i32, i32* %totpoint, align 4, !dbg !10338
  %13 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10339
  %totpoint6 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %13, i32 0, i32 3, !dbg !10340
  store i32 %12, i32* %totpoint6, align 8, !dbg !10341
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10342
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %14, i32 0, i32 5, !dbg !10343
  %15 = load i32, i32* %type, align 8, !dbg !10343
  %16 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10344
  %type7 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %16, i32 0, i32 4, !dbg !10345
  store i32 %15, i32* %type7, align 4, !dbg !10346
  %17 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10347
  %flag = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %17, i32 0, i32 6, !dbg !10348
  store i32 0, i32* %flag, align 4, !dbg !10349
  %18 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10350
  %extradata = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %18, i32 0, i32 8, !dbg !10352
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata, i32 0, i32 0, !dbg !10353
  %19 = load i8*, i8** %first, align 8, !dbg !10353
  %tobool8 = icmp ne i8* %19, null, !dbg !10350
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10354

if.then9:                                         ; preds = %if.end4
  %20 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10355
  %flag10 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %20, i32 0, i32 6, !dbg !10356
  %21 = load i32, i32* %flag10, align 4, !dbg !10357
  %or = or i32 %21, 131072, !dbg !10357
  store i32 %or, i32* %flag10, align 4, !dbg !10357
  br label %if.end11, !dbg !10355

if.end11:                                         ; preds = %if.then9, %if.end4
  %22 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10358
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %22, i32 0, i32 25, !dbg !10360
  %23 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10360
  %compression = getelementptr inbounds %struct.PointCache, %struct.PointCache* %23, i32 0, i32 13, !dbg !10361
  %24 = load i16, i16* %compression, align 4, !dbg !10361
  %tobool12 = icmp ne i16 %24, 0, !dbg !10358
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !10362

if.then13:                                        ; preds = %if.end11
  %25 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10363
  %flag14 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %25, i32 0, i32 6, !dbg !10364
  %26 = load i32, i32* %flag14, align 4, !dbg !10365
  %or15 = or i32 %26, 65536, !dbg !10365
  store i32 %or15, i32* %flag14, align 4, !dbg !10365
  br label %if.end16, !dbg !10363

if.end16:                                         ; preds = %if.then13, %if.end11
  %27 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10366
  %call17 = call i32 @ptcache_file_header_begin_write(%struct.PTCacheFile* %27), !dbg !10368
  %tobool18 = icmp ne i32 %call17, 0, !dbg !10368
  br i1 %tobool18, label %lor.lhs.false, label %if.then21, !dbg !10369

lor.lhs.false:                                    ; preds = %if.end16
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10370
  %write_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %28, i32 0, i32 23, !dbg !10371
  %29 = load i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)** %write_header, align 8, !dbg !10371
  %30 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10372
  %call19 = call i32 %29(%struct.PTCacheFile* %30), !dbg !10370
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10370
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !10373

if.then21:                                        ; preds = %lor.lhs.false, %if.end16
  store i32 1, i32* %error, align 4, !dbg !10374
  br label %if.end22, !dbg !10375

if.end22:                                         ; preds = %if.then21, %lor.lhs.false
  %31 = load i32, i32* %error, align 4, !dbg !10376
  %tobool23 = icmp ne i32 %31, 0, !dbg !10376
  br i1 %tobool23, label %if.end62, label %if.then24, !dbg !10378

if.then24:                                        ; preds = %if.end22
  %32 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10379
  %cache25 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %32, i32 0, i32 25, !dbg !10382
  %33 = load %struct.PointCache*, %struct.PointCache** %cache25, align 8, !dbg !10382
  %compression26 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 13, !dbg !10383
  %34 = load i16, i16* %compression26, align 4, !dbg !10383
  %tobool27 = icmp ne i16 %34, 0, !dbg !10379
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !10384

if.then28:                                        ; preds = %if.then24
  store i32 0, i32* %i, align 4, !dbg !10385
  br label %for.cond, !dbg !10388

for.cond:                                         ; preds = %for.inc, %if.then28
  %35 = load i32, i32* %i, align 4, !dbg !10389
  %cmp29 = icmp ult i32 %35, 8, !dbg !10391
  br i1 %cmp29, label %for.body, label %for.end, !dbg !10392

for.body:                                         ; preds = %for.cond
  %36 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10393
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %36, i32 0, i32 6, !dbg !10396
  %37 = load i32, i32* %i, align 4, !dbg !10397
  %idxprom = zext i32 %37 to i64, !dbg !10393
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !10393
  %38 = load i8*, i8** %arrayidx, align 8, !dbg !10393
  %tobool30 = icmp ne i8* %38, null, !dbg !10393
  br i1 %tobool30, label %if.then31, label %if.end46, !dbg !10398

if.then31:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %in_len, metadata !10399, metadata !DIExpression()), !dbg !10401
  %39 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10402
  %totpoint32 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %39, i32 0, i32 3, !dbg !10403
  %40 = load i32, i32* %totpoint32, align 4, !dbg !10403
  %41 = load i32, i32* %i, align 4, !dbg !10404
  %idxprom33 = zext i32 %41 to i64, !dbg !10405
  %arrayidx34 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom33, !dbg !10405
  %42 = load i32, i32* %arrayidx34, align 4, !dbg !10405
  %mul = mul i32 %40, %42, !dbg !10406
  store i32 %mul, i32* %in_len, align 4, !dbg !10401
  call void @llvm.dbg.declare(metadata i8** %out, metadata !10407, metadata !DIExpression()), !dbg !10408
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10409
  %44 = load i32, i32* %in_len, align 4, !dbg !10410
  %45 = load i32, i32* %in_len, align 4, !dbg !10410
  %div = udiv i32 %45, 16, !dbg !10410
  %add = add i32 %44, %div, !dbg !10410
  %add35 = add i32 %add, 64, !dbg !10410
  %add36 = add i32 %add35, 3, !dbg !10410
  %mul37 = mul i32 %add36, 4, !dbg !10411
  %conv = zext i32 %mul37 to i64, !dbg !10410
  %call38 = call i8* %43(i64 %conv, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0)), !dbg !10409
  store i8* %call38, i8** %out, align 8, !dbg !10408
  %46 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10412
  %47 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10413
  %data39 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %47, i32 0, i32 6, !dbg !10414
  %48 = load i32, i32* %i, align 4, !dbg !10415
  %idxprom40 = zext i32 %48 to i64, !dbg !10413
  %arrayidx41 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data39, i64 0, i64 %idxprom40, !dbg !10413
  %49 = load i8*, i8** %arrayidx41, align 8, !dbg !10413
  %50 = load i32, i32* %in_len, align 4, !dbg !10416
  %51 = load i8*, i8** %out, align 8, !dbg !10417
  %52 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10418
  %cache42 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %52, i32 0, i32 25, !dbg !10419
  %53 = load %struct.PointCache*, %struct.PointCache** %cache42, align 8, !dbg !10419
  %compression43 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %53, i32 0, i32 13, !dbg !10420
  %54 = load i16, i16* %compression43, align 4, !dbg !10420
  %conv44 = sext i16 %54 to i32, !dbg !10418
  %call45 = call i32 @ptcache_file_compressed_write(%struct.PTCacheFile* %46, i8* %49, i32 %50, i8* %51, i32 %conv44), !dbg !10421
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10422
  %56 = load i8*, i8** %out, align 8, !dbg !10423
  call void %55(i8* %56), !dbg !10422
  br label %if.end46, !dbg !10424

if.end46:                                         ; preds = %if.then31, %for.body
  br label %for.inc, !dbg !10425

for.inc:                                          ; preds = %if.end46
  %57 = load i32, i32* %i, align 4, !dbg !10426
  %inc = add i32 %57, 1, !dbg !10426
  store i32 %inc, i32* %i, align 4, !dbg !10426
  br label %for.cond, !dbg !10427, !llvm.loop !10428

for.end:                                          ; preds = %for.cond
  br label %if.end61, !dbg !10430

if.else:                                          ; preds = %if.then24
  %58 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10431
  call void @BKE_ptcache_mem_pointers_init(%struct.PTCacheMem* %58), !dbg !10433
  %59 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10434
  call void @ptcache_file_pointers_init(%struct.PTCacheFile* %59), !dbg !10435
  store i32 0, i32* %i, align 4, !dbg !10436
  br label %for.cond47, !dbg !10438

for.cond47:                                       ; preds = %for.inc58, %if.else
  %60 = load i32, i32* %i, align 4, !dbg !10439
  %61 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10441
  %totpoint48 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %61, i32 0, i32 3, !dbg !10442
  %62 = load i32, i32* %totpoint48, align 4, !dbg !10442
  %cmp49 = icmp ult i32 %60, %62, !dbg !10443
  br i1 %cmp49, label %for.body51, label %for.end60, !dbg !10444

for.body51:                                       ; preds = %for.cond47
  %63 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10445
  %cur = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %63, i32 0, i32 7, !dbg !10447
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !10445
  %64 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10448
  %cur52 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %64, i32 0, i32 8, !dbg !10449
  %arraydecay53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur52, i64 0, i64 0, !dbg !10448
  call void @ptcache_data_copy(i8** %arraydecay, i8** %arraydecay53), !dbg !10450
  %65 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10451
  %call54 = call i32 @ptcache_file_data_write(%struct.PTCacheFile* %65), !dbg !10453
  %tobool55 = icmp ne i32 %call54, 0, !dbg !10453
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !10454

if.then56:                                        ; preds = %for.body51
  store i32 1, i32* %error, align 4, !dbg !10455
  br label %for.end60, !dbg !10457

if.end57:                                         ; preds = %for.body51
  %66 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10458
  call void @BKE_ptcache_mem_pointers_incr(%struct.PTCacheMem* %66), !dbg !10459
  br label %for.inc58, !dbg !10460

for.inc58:                                        ; preds = %if.end57
  %67 = load i32, i32* %i, align 4, !dbg !10461
  %inc59 = add i32 %67, 1, !dbg !10461
  store i32 %inc59, i32* %i, align 4, !dbg !10461
  br label %for.cond47, !dbg !10462, !llvm.loop !10463

for.end60:                                        ; preds = %if.then56, %for.cond47
  br label %if.end61

if.end61:                                         ; preds = %for.end60, %for.end
  br label %if.end62, !dbg !10465

if.end62:                                         ; preds = %if.end61, %if.end22
  %68 = load i32, i32* %error, align 4, !dbg !10466
  %tobool63 = icmp ne i32 %68, 0, !dbg !10466
  br i1 %tobool63, label %if.end118, label %land.lhs.true, !dbg !10468

land.lhs.true:                                    ; preds = %if.end62
  %69 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10469
  %extradata64 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %69, i32 0, i32 8, !dbg !10470
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata64, i32 0, i32 0, !dbg !10471
  %70 = load i8*, i8** %first65, align 8, !dbg !10471
  %tobool66 = icmp ne i8* %70, null, !dbg !10469
  br i1 %tobool66, label %if.then67, label %if.end118, !dbg !10472

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PTCacheExtra** %extra, metadata !10473, metadata !DIExpression()), !dbg !10475
  %71 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !10476
  %extradata68 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %71, i32 0, i32 8, !dbg !10477
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %extradata68, i32 0, i32 0, !dbg !10478
  %72 = load i8*, i8** %first69, align 8, !dbg !10478
  %73 = bitcast i8* %72 to %struct.PTCacheExtra*, !dbg !10476
  store %struct.PTCacheExtra* %73, %struct.PTCacheExtra** %extra, align 8, !dbg !10475
  br label %for.cond70, !dbg !10479

for.cond70:                                       ; preds = %for.inc116, %if.then67
  %74 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10480
  %tobool71 = icmp ne %struct.PTCacheExtra* %74, null, !dbg !10483
  br i1 %tobool71, label %for.body72, label %for.end117, !dbg !10483

for.body72:                                       ; preds = %for.cond70
  %75 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10484
  %data73 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %75, i32 0, i32 4, !dbg !10487
  %76 = load i8*, i8** %data73, align 8, !dbg !10487
  %cmp74 = icmp eq i8* %76, null, !dbg !10488
  br i1 %cmp74, label %if.then79, label %lor.lhs.false76, !dbg !10489

lor.lhs.false76:                                  ; preds = %for.body72
  %77 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10490
  %totdata = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %77, i32 0, i32 3, !dbg !10491
  %78 = load i32, i32* %totdata, align 4, !dbg !10491
  %cmp77 = icmp eq i32 %78, 0, !dbg !10492
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !10493

if.then79:                                        ; preds = %lor.lhs.false76, %for.body72
  br label %for.inc116, !dbg !10494

if.end80:                                         ; preds = %lor.lhs.false76
  %79 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10495
  %80 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10496
  %type81 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %80, i32 0, i32 2, !dbg !10497
  %81 = bitcast i32* %type81 to i8*, !dbg !10498
  %call82 = call i32 @ptcache_file_write(%struct.PTCacheFile* %79, i8* %81, i32 1, i32 4), !dbg !10499
  %82 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10500
  %83 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10501
  %totdata83 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %83, i32 0, i32 3, !dbg !10502
  %84 = bitcast i32* %totdata83 to i8*, !dbg !10503
  %call84 = call i32 @ptcache_file_write(%struct.PTCacheFile* %82, i8* %84, i32 1, i32 4), !dbg !10504
  %85 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10505
  %cache85 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %85, i32 0, i32 25, !dbg !10507
  %86 = load %struct.PointCache*, %struct.PointCache** %cache85, align 8, !dbg !10507
  %compression86 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %86, i32 0, i32 13, !dbg !10508
  %87 = load i16, i16* %compression86, align 4, !dbg !10508
  %tobool87 = icmp ne i16 %87, 0, !dbg !10505
  br i1 %tobool87, label %if.then88, label %if.else108, !dbg !10509

if.then88:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %in_len89, metadata !10510, metadata !DIExpression()), !dbg !10512
  %88 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10513
  %totdata90 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %88, i32 0, i32 3, !dbg !10514
  %89 = load i32, i32* %totdata90, align 4, !dbg !10514
  %90 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10515
  %type91 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %90, i32 0, i32 2, !dbg !10516
  %91 = load i32, i32* %type91, align 8, !dbg !10516
  %idxprom92 = zext i32 %91 to i64, !dbg !10517
  %arrayidx93 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom92, !dbg !10517
  %92 = load i32, i32* %arrayidx93, align 4, !dbg !10517
  %mul94 = mul i32 %89, %92, !dbg !10518
  store i32 %mul94, i32* %in_len89, align 4, !dbg !10512
  call void @llvm.dbg.declare(metadata i8** %out95, metadata !10519, metadata !DIExpression()), !dbg !10520
  %93 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10521
  %94 = load i32, i32* %in_len89, align 4, !dbg !10522
  %95 = load i32, i32* %in_len89, align 4, !dbg !10522
  %div96 = udiv i32 %95, 16, !dbg !10522
  %add97 = add i32 %94, %div96, !dbg !10522
  %add98 = add i32 %add97, 64, !dbg !10522
  %add99 = add i32 %add98, 3, !dbg !10522
  %mul100 = mul i32 %add99, 4, !dbg !10523
  %conv101 = zext i32 %mul100 to i64, !dbg !10522
  %call102 = call i8* %93(i64 %conv101, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0)), !dbg !10521
  store i8* %call102, i8** %out95, align 8, !dbg !10520
  %96 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10524
  %97 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10525
  %data103 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %97, i32 0, i32 4, !dbg !10526
  %98 = load i8*, i8** %data103, align 8, !dbg !10526
  %99 = load i32, i32* %in_len89, align 4, !dbg !10527
  %100 = load i8*, i8** %out95, align 8, !dbg !10528
  %101 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10529
  %cache104 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %101, i32 0, i32 25, !dbg !10530
  %102 = load %struct.PointCache*, %struct.PointCache** %cache104, align 8, !dbg !10530
  %compression105 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %102, i32 0, i32 13, !dbg !10531
  %103 = load i16, i16* %compression105, align 4, !dbg !10531
  %conv106 = sext i16 %103 to i32, !dbg !10529
  %call107 = call i32 @ptcache_file_compressed_write(%struct.PTCacheFile* %96, i8* %98, i32 %99, i8* %100, i32 %conv106), !dbg !10532
  %104 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10533
  %105 = load i8*, i8** %out95, align 8, !dbg !10534
  call void %104(i8* %105), !dbg !10533
  br label %if.end115, !dbg !10535

if.else108:                                       ; preds = %if.end80
  %106 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10536
  %107 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10538
  %data109 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %107, i32 0, i32 4, !dbg !10539
  %108 = load i8*, i8** %data109, align 8, !dbg !10539
  %109 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10540
  %totdata110 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %109, i32 0, i32 3, !dbg !10541
  %110 = load i32, i32* %totdata110, align 4, !dbg !10541
  %111 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10542
  %type111 = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %111, i32 0, i32 2, !dbg !10543
  %112 = load i32, i32* %type111, align 8, !dbg !10543
  %idxprom112 = zext i32 %112 to i64, !dbg !10544
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* @ptcache_extra_datasize, i64 0, i64 %idxprom112, !dbg !10544
  %113 = load i32, i32* %arrayidx113, align 4, !dbg !10544
  %call114 = call i32 @ptcache_file_write(%struct.PTCacheFile* %106, i8* %108, i32 %110, i32 %113), !dbg !10545
  br label %if.end115

if.end115:                                        ; preds = %if.else108, %if.then88
  br label %for.inc116, !dbg !10546

for.inc116:                                       ; preds = %if.end115, %if.then79
  %114 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %extra, align 8, !dbg !10547
  %next = getelementptr inbounds %struct.PTCacheExtra, %struct.PTCacheExtra* %114, i32 0, i32 0, !dbg !10548
  %115 = load %struct.PTCacheExtra*, %struct.PTCacheExtra** %next, align 8, !dbg !10548
  store %struct.PTCacheExtra* %115, %struct.PTCacheExtra** %extra, align 8, !dbg !10549
  br label %for.cond70, !dbg !10550, !llvm.loop !10551

for.end117:                                       ; preds = %for.cond70
  br label %if.end118, !dbg !10553

if.end118:                                        ; preds = %for.end117, %land.lhs.true, %if.end62
  %116 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10554
  call void @ptcache_file_close(%struct.PTCacheFile* %116), !dbg !10555
  %117 = load i32, i32* %error, align 4, !dbg !10556
  %tobool119 = icmp ne i32 %117, 0, !dbg !10556
  br i1 %tobool119, label %land.lhs.true120, label %if.end125, !dbg !10558

land.lhs.true120:                                 ; preds = %if.end118
  %118 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !10559
  %and121 = and i32 %118, 1, !dbg !10560
  %tobool122 = icmp ne i32 %and121, 0, !dbg !10560
  br i1 %tobool122, label %if.then123, label %if.end125, !dbg !10561

if.then123:                                       ; preds = %land.lhs.true120
  %call124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0)), !dbg !10562
  br label %if.end125, !dbg !10562

if.end125:                                        ; preds = %if.then123, %land.lhs.true120, %if.end118
  %119 = load i32, i32* %error, align 4, !dbg !10563
  %cmp126 = icmp eq i32 %119, 0, !dbg !10564
  %conv127 = zext i1 %cmp126 to i32, !dbg !10564
  store i32 %conv127, i32* %retval, align 4, !dbg !10565
  br label %return, !dbg !10565

return:                                           ; preds = %if.end125, %if.end
  %120 = load i32, i32* %retval, align 4, !dbg !10566
  ret i32 %120, !dbg !10566
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_toggle_disk_cache(%struct.PTCacheID* %pid) #0 !dbg !10567 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %last_exact = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10568, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !10570, metadata !DIExpression()), !dbg !10571
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10572
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !10573
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !10573
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !10571
  call void @llvm.dbg.declare(metadata i32* %last_exact, metadata !10574, metadata !DIExpression()), !dbg !10575
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10576
  %last_exact2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 8, !dbg !10577
  %3 = load i32, i32* %last_exact2, align 8, !dbg !10577
  store i32 %3, i32* %last_exact, align 4, !dbg !10575
  %4 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !10578
  %tobool = icmp ne i8 %4, 0, !dbg !10580
  br i1 %tobool, label %if.end6, label %if.then, !dbg !10581

if.then:                                          ; preds = %entry
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10582
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 2, !dbg !10584
  %6 = load i32, i32* %flag, align 8, !dbg !10585
  %and = and i32 %6, -65, !dbg !10585
  store i32 %and, i32* %flag, align 8, !dbg !10585
  %7 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !10586
  %and3 = and i32 %7, 1, !dbg !10588
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10588
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10589

if.then5:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0)), !dbg !10590
  br label %if.end, !dbg !10590

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end29, !dbg !10591

if.end6:                                          ; preds = %entry
  %8 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10592
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 19, !dbg !10594
  %9 = load i8*, i8** %cached_frames, align 8, !dbg !10594
  %tobool7 = icmp ne i8* %9, null, !dbg !10592
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !10595

if.then8:                                         ; preds = %if.end6
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10596
  %11 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10598
  %cached_frames9 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 19, !dbg !10599
  %12 = load i8*, i8** %cached_frames9, align 8, !dbg !10599
  call void %10(i8* %12), !dbg !10596
  %13 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10600
  %cached_frames10 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 19, !dbg !10601
  store i8* null, i8** %cached_frames10, align 8, !dbg !10602
  br label %if.end11, !dbg !10603

if.end11:                                         ; preds = %if.then8, %if.end6
  %14 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10604
  %flag12 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %14, i32 0, i32 2, !dbg !10606
  %15 = load i32, i32* %flag12, align 8, !dbg !10606
  %and13 = and i32 %15, 64, !dbg !10607
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10607
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !10608

if.then15:                                        ; preds = %if.end11
  %16 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10609
  call void @BKE_ptcache_mem_to_disk(%struct.PTCacheID* %16), !dbg !10610
  br label %if.end16, !dbg !10610

if.else:                                          ; preds = %if.end11
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10611
  call void @BKE_ptcache_disk_to_mem(%struct.PTCacheID* %17), !dbg !10612
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then15
  %18 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10613
  %flag17 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %18, i32 0, i32 2, !dbg !10614
  %19 = load i32, i32* %flag17, align 8, !dbg !10615
  %xor = xor i32 %19, 64, !dbg !10615
  store i32 %xor, i32* %flag17, align 8, !dbg !10615
  %20 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10616
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %20, i32 0, i32 0), !dbg !10617
  %21 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10618
  %flag18 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %21, i32 0, i32 2, !dbg !10619
  %22 = load i32, i32* %flag18, align 8, !dbg !10620
  %xor19 = xor i32 %22, 64, !dbg !10620
  store i32 %xor19, i32* %flag18, align 8, !dbg !10620
  %23 = load i32, i32* %last_exact, align 4, !dbg !10621
  %24 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10622
  %last_exact20 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %24, i32 0, i32 8, !dbg !10623
  store i32 %23, i32* %last_exact20, align 8, !dbg !10624
  %25 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10625
  call void @BKE_ptcache_id_time(%struct.PTCacheID* %25, %struct.Scene* null, float 0.000000e+00, i32* null, i32* null, float* null), !dbg !10626
  %26 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10627
  call void @BKE_ptcache_update_info(%struct.PTCacheID* %26), !dbg !10628
  %27 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10629
  %flag21 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %27, i32 0, i32 2, !dbg !10631
  %28 = load i32, i32* %flag21, align 8, !dbg !10631
  %and22 = and i32 %28, 64, !dbg !10632
  %cmp = icmp eq i32 %and22, 0, !dbg !10633
  br i1 %cmp, label %if.then23, label %if.end29, !dbg !10634

if.then23:                                        ; preds = %if.end16
  %29 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10635
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %29, i32 0, i32 12, !dbg !10638
  %30 = load i32, i32* %index, align 8, !dbg !10638
  %tobool24 = icmp ne i32 %30, 0, !dbg !10635
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !10639

if.then25:                                        ; preds = %if.then23
  %31 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10640
  %ob = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %31, i32 0, i32 3, !dbg !10642
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10642
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10643
  %index26 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 12, !dbg !10644
  %34 = load i32, i32* %index26, align 8, !dbg !10644
  call void @BKE_object_delete_ptcache(%struct.Object* %32, i32 %34), !dbg !10645
  %35 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10646
  %index27 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %35, i32 0, i32 12, !dbg !10647
  store i32 -1, i32* %index27, align 8, !dbg !10648
  br label %if.end28, !dbg !10649

if.end28:                                         ; preds = %if.then25, %if.then23
  br label %if.end29, !dbg !10650

if.end29:                                         ; preds = %if.end, %if.end28, %if.end16
  ret void, !dbg !10651
}

declare dso_local void @BKE_object_delete_ptcache(%struct.Object*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_disk_cache_rename(%struct.PTCacheID* %pid, i8* %name_src, i8* %name_dst) #0 !dbg !10652 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %name_src.addr = alloca i8*, align 8
  %name_dst.addr = alloca i8*, align 8
  %old_name = alloca [80 x i8], align 16
  %len = alloca i32, align 4
  %dir = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  %path = alloca [1024 x i8], align 16
  %old_filename = alloca [2048 x i8], align 16
  %new_path_full = alloca [2048 x i8], align 16
  %old_path_full = alloca [2048 x i8], align 16
  %ext = alloca [1024 x i8], align 16
  %frame = alloca i32, align 4
  %len2 = alloca i32, align 4
  %num = alloca [7 x i8], align 1
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  store i8* %name_src, i8** %name_src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name_src.addr, metadata !10657, metadata !DIExpression()), !dbg !10658
  store i8* %name_dst, i8** %name_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name_dst.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata [80 x i8]* %old_name, metadata !10661, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !10670, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !10672, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata [2048 x i8]* %old_filename, metadata !10674, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata [2048 x i8]* %new_path_full, metadata !10676, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.declare(metadata [2048 x i8]* %old_path_full, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ext, metadata !10680, metadata !DIExpression()), !dbg !10681
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %old_name, i64 0, i64 0, !dbg !10682
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10683
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !10684
  %1 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10684
  %name = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 15, !dbg !10685
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10683
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay1, i64 80), !dbg !10686
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10687
  %cache2 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 25, !dbg !10688
  %3 = load %struct.PointCache*, %struct.PointCache** %cache2, align 8, !dbg !10688
  %name3 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %3, i32 0, i32 15, !dbg !10689
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i64 0, i64 0, !dbg !10687
  %4 = load i8*, i8** %name_src.addr, align 8, !dbg !10690
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay4, i8* %4, i64 64), !dbg !10691
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10692
  %arraydecay6 = getelementptr inbounds [2048 x i8], [2048 x i8]* %old_filename, i64 0, i64 0, !dbg !10693
  %call7 = call i32 @ptcache_filename(%struct.PTCacheID* %5, i8* %arraydecay6, i32 0, i16 signext 0, i16 signext 0), !dbg !10694
  store i32 %call7, i32* %len, align 4, !dbg !10695
  %6 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10696
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10697
  %call9 = call i32 @ptcache_path(%struct.PTCacheID* %6, i8* %arraydecay8), !dbg !10698
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10699
  %call11 = call %struct.__dirstream* @opendir(i8* %arraydecay10), !dbg !10700
  store %struct.__dirstream* %call11, %struct.__dirstream** %dir, align 8, !dbg !10701
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10702
  %cmp = icmp eq %struct.__dirstream* %7, null, !dbg !10704
  br i1 %cmp, label %if.then, label %if.end, !dbg !10705

if.then:                                          ; preds = %entry
  %8 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10706
  %cache12 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %8, i32 0, i32 25, !dbg !10708
  %9 = load %struct.PointCache*, %struct.PointCache** %cache12, align 8, !dbg !10708
  %name13 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 15, !dbg !10709
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %name13, i64 0, i64 0, !dbg !10706
  %arraydecay15 = getelementptr inbounds [80 x i8], [80 x i8]* %old_name, i64 0, i64 0, !dbg !10710
  %call16 = call i8* @BLI_strncpy(i8* %arraydecay14, i8* %arraydecay15, i64 64), !dbg !10711
  br label %return, !dbg !10712

if.end:                                           ; preds = %entry
  %arraydecay17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !10713
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10714
  %stack_index = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 6, !dbg !10715
  %11 = load i32, i32* %stack_index, align 4, !dbg !10715
  %call18 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay17, i64 1024, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %11), !dbg !10716
  %12 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10717
  %cache19 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %12, i32 0, i32 25, !dbg !10718
  %13 = load %struct.PointCache*, %struct.PointCache** %cache19, align 8, !dbg !10718
  %name20 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 15, !dbg !10719
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %name20, i64 0, i64 0, !dbg !10717
  %14 = load i8*, i8** %name_dst.addr, align 8, !dbg !10720
  %call22 = call i8* @BLI_strncpy(i8* %arraydecay21, i8* %14, i64 64), !dbg !10721
  br label %while.cond, !dbg !10722

while.cond:                                       ; preds = %if.end63, %if.end
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10723
  %call23 = call %struct.dirent* @readdir(%struct.__dirstream* %15), !dbg !10724
  store %struct.dirent* %call23, %struct.dirent** %de, align 8, !dbg !10725
  %cmp24 = icmp ne %struct.dirent* %call23, null, !dbg !10726
  br i1 %cmp24, label %while.body, label %while.end, !dbg !10722

while.body:                                       ; preds = %while.cond
  %16 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10727
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %16, i32 0, i32 4, !dbg !10730
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10727
  %arraydecay26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !10731
  %call27 = call i8* @strstr(i8* %arraydecay25, i8* %arraydecay26) #6, !dbg !10732
  %tobool = icmp ne i8* %call27, null, !dbg !10732
  br i1 %tobool, label %if.then28, label %if.end63, !dbg !10733

if.then28:                                        ; preds = %while.body
  %arraydecay29 = getelementptr inbounds [2048 x i8], [2048 x i8]* %old_filename, i64 0, i64 0, !dbg !10734
  %17 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10737
  %d_name30 = getelementptr inbounds %struct.dirent, %struct.dirent* %17, i32 0, i32 4, !dbg !10738
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name30, i64 0, i64 0, !dbg !10737
  %18 = load i32, i32* %len, align 4, !dbg !10739
  %conv = sext i32 %18 to i64, !dbg !10739
  %call32 = call i32 @strncmp(i8* %arraydecay29, i8* %arraydecay31, i64 %conv) #6, !dbg !10740
  %cmp33 = icmp eq i32 %call32, 0, !dbg !10741
  br i1 %cmp33, label %if.then35, label %if.end62, !dbg !10742

if.then35:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !10743, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !10746, metadata !DIExpression()), !dbg !10747
  %19 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10748
  %d_name36 = getelementptr inbounds %struct.dirent, %struct.dirent* %19, i32 0, i32 4, !dbg !10749
  %arraydecay37 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name36, i64 0, i64 0, !dbg !10748
  %call38 = call i64 @strlen(i8* %arraydecay37) #6, !dbg !10750
  %conv39 = trunc i64 %call38 to i32, !dbg !10751
  store i32 %conv39, i32* %len2, align 4, !dbg !10747
  call void @llvm.dbg.declare(metadata [7 x i8]* %num, metadata !10752, metadata !DIExpression()), !dbg !10753
  %20 = load i32, i32* %len2, align 4, !dbg !10754
  %cmp40 = icmp sgt i32 %20, 15, !dbg !10756
  br i1 %cmp40, label %if.then42, label %if.end61, !dbg !10757

if.then42:                                        ; preds = %if.then35
  %arraydecay43 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !10758
  %21 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10760
  %d_name44 = getelementptr inbounds %struct.dirent, %struct.dirent* %21, i32 0, i32 4, !dbg !10761
  %arraydecay45 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name44, i64 0, i64 0, !dbg !10760
  %22 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10762
  %d_name46 = getelementptr inbounds %struct.dirent, %struct.dirent* %22, i32 0, i32 4, !dbg !10763
  %arraydecay47 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name46, i64 0, i64 0, !dbg !10762
  %call48 = call i64 @strlen(i8* %arraydecay47) #6, !dbg !10764
  %sub = sub i64 %call48, 15, !dbg !10765
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay45, i64 %sub, !dbg !10766
  %call49 = call i8* @BLI_strncpy(i8* %arraydecay43, i8* %add.ptr, i64 7), !dbg !10767
  %arraydecay50 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !10768
  %call51 = call i32 @atoi(i8* %arraydecay50) #6, !dbg !10769
  store i32 %call51, i32* %frame, align 4, !dbg !10770
  %arraydecay52 = getelementptr inbounds [2048 x i8], [2048 x i8]* %old_path_full, i64 0, i64 0, !dbg !10771
  %arraydecay53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10772
  %23 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10773
  %d_name54 = getelementptr inbounds %struct.dirent, %struct.dirent* %23, i32 0, i32 4, !dbg !10774
  %arraydecay55 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name54, i64 0, i64 0, !dbg !10773
  call void @BLI_join_dirfile(i8* %arraydecay52, i64 2048, i8* %arraydecay53, i8* %arraydecay55), !dbg !10775
  %24 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10776
  %arraydecay56 = getelementptr inbounds [2048 x i8], [2048 x i8]* %new_path_full, i64 0, i64 0, !dbg !10777
  %25 = load i32, i32* %frame, align 4, !dbg !10778
  %call57 = call i32 @ptcache_filename(%struct.PTCacheID* %24, i8* %arraydecay56, i32 %25, i16 signext 1, i16 signext 1), !dbg !10779
  %arraydecay58 = getelementptr inbounds [2048 x i8], [2048 x i8]* %old_path_full, i64 0, i64 0, !dbg !10780
  %arraydecay59 = getelementptr inbounds [2048 x i8], [2048 x i8]* %new_path_full, i64 0, i64 0, !dbg !10781
  %call60 = call i32 @BLI_rename(i8* %arraydecay58, i8* %arraydecay59), !dbg !10782
  br label %if.end61, !dbg !10783

if.end61:                                         ; preds = %if.then42, %if.then35
  br label %if.end62, !dbg !10784

if.end62:                                         ; preds = %if.end61, %if.then28
  br label %if.end63, !dbg !10785

if.end63:                                         ; preds = %if.end62, %while.body
  br label %while.cond, !dbg !10722, !llvm.loop !10786

while.end:                                        ; preds = %while.cond
  %26 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10788
  %call64 = call i32 @closedir(%struct.__dirstream* %26), !dbg !10789
  %27 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10790
  %cache65 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %27, i32 0, i32 25, !dbg !10791
  %28 = load %struct.PointCache*, %struct.PointCache** %cache65, align 8, !dbg !10791
  %name66 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %28, i32 0, i32 15, !dbg !10792
  %arraydecay67 = getelementptr inbounds [64 x i8], [64 x i8]* %name66, i64 0, i64 0, !dbg !10790
  %arraydecay68 = getelementptr inbounds [80 x i8], [80 x i8]* %old_name, i64 0, i64 0, !dbg !10793
  %call69 = call i8* @BLI_strncpy(i8* %arraydecay67, i8* %arraydecay68, i64 64), !dbg !10794
  br label %return, !dbg !10795

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !10795
}

declare dso_local i32 @BLI_rename(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_load_external(%struct.PTCacheID* %pid) #0 !dbg !10796 {
entry:
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %len = alloca i32, align 4
  %info = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %dir = alloca %struct.__dirstream*, align 8
  %de = alloca %struct.dirent*, align 8
  %path = alloca [1024 x i8], align 16
  %filename = alloca [2048 x i8], align 16
  %ext = alloca [1024 x i8], align 16
  %frame = alloca i32, align 4
  %len2 = alloca i32, align 4
  %num = alloca [7 x i8], align 1
  %pf = alloca %struct.PTCacheFile*, align 8
  %old_data = alloca [14 x float], align 16
  %elemsize = alloca i32, align 4
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !10799, metadata !DIExpression()), !dbg !10800
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10801
  %cache1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 25, !dbg !10802
  %1 = load %struct.PointCache*, %struct.PointCache** %cache1, align 8, !dbg !10802
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !10800
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i32* %info, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i32 0, i32* %info, align 4, !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %start, metadata !10807, metadata !DIExpression()), !dbg !10808
  store i32 300000, i32* %start, align 4, !dbg !10808
  call void @llvm.dbg.declare(metadata i32* %end, metadata !10809, metadata !DIExpression()), !dbg !10810
  store i32 -1, i32* %end, align 4, !dbg !10810
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dir, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata [2048 x i8]* %filename, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata [1024 x i8]* %ext, metadata !10819, metadata !DIExpression()), !dbg !10820
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10821
  %tobool = icmp ne %struct.PointCache* %2, null, !dbg !10821
  br i1 %tobool, label %if.end, label %if.then, !dbg !10823

if.then:                                          ; preds = %entry
  br label %return, !dbg !10824

if.end:                                           ; preds = %entry
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10825
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10826
  %call = call i32 @ptcache_path(%struct.PTCacheID* %3, i8* %arraydecay), !dbg !10827
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10828
  %arraydecay2 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !10829
  %call3 = call i32 @ptcache_filename(%struct.PTCacheID* %4, i8* %arraydecay2, i32 1, i16 signext 0, i16 signext 0), !dbg !10830
  store i32 %call3, i32* %len, align 4, !dbg !10831
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10832
  %call5 = call %struct.__dirstream* @opendir(i8* %arraydecay4), !dbg !10833
  store %struct.__dirstream* %call5, %struct.__dirstream** %dir, align 8, !dbg !10834
  %5 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10835
  %cmp = icmp eq %struct.__dirstream* %5, null, !dbg !10837
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !10838

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !10839

if.end7:                                          ; preds = %if.end
  %6 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10840
  %index = getelementptr inbounds %struct.PointCache, %struct.PointCache* %6, i32 0, i32 12, !dbg !10842
  %7 = load i32, i32* %index, align 8, !dbg !10842
  %cmp8 = icmp sge i32 %7, 0, !dbg !10843
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !10844

if.then9:                                         ; preds = %if.end7
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !10845
  %8 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10846
  %index11 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 12, !dbg !10847
  %9 = load i32, i32* %index11, align 8, !dbg !10847
  %call12 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay10, i64 1024, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %9), !dbg !10848
  br label %if.end15, !dbg !10848

if.else:                                          ; preds = %if.end7
  %arraydecay13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !10849
  %call14 = call i8* @BLI_strncpy(i8* %arraydecay13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 1024), !dbg !10850
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then9
  br label %while.cond, !dbg !10851

while.cond:                                       ; preds = %if.end60, %if.end15
  %10 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10852
  %call16 = call %struct.dirent* @readdir(%struct.__dirstream* %10), !dbg !10853
  store %struct.dirent* %call16, %struct.dirent** %de, align 8, !dbg !10854
  %cmp17 = icmp ne %struct.dirent* %call16, null, !dbg !10855
  br i1 %cmp17, label %while.body, label %while.end, !dbg !10851

while.body:                                       ; preds = %while.cond
  %11 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10856
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %11, i32 0, i32 4, !dbg !10859
  %arraydecay18 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10856
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %ext, i64 0, i64 0, !dbg !10860
  %call20 = call i8* @strstr(i8* %arraydecay18, i8* %arraydecay19) #6, !dbg !10861
  %tobool21 = icmp ne i8* %call20, null, !dbg !10861
  br i1 %tobool21, label %if.then22, label %if.end60, !dbg !10862

if.then22:                                        ; preds = %while.body
  %arraydecay23 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !10863
  %12 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10866
  %d_name24 = getelementptr inbounds %struct.dirent, %struct.dirent* %12, i32 0, i32 4, !dbg !10867
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name24, i64 0, i64 0, !dbg !10866
  %13 = load i32, i32* %len, align 4, !dbg !10868
  %conv = sext i32 %13 to i64, !dbg !10868
  %call26 = call i32 @strncmp(i8* %arraydecay23, i8* %arraydecay25, i64 %conv) #6, !dbg !10869
  %cmp27 = icmp eq i32 %call26, 0, !dbg !10870
  br i1 %cmp27, label %if.then29, label %if.end59, !dbg !10871

if.then29:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !10872, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !10875, metadata !DIExpression()), !dbg !10876
  %14 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10877
  %d_name30 = getelementptr inbounds %struct.dirent, %struct.dirent* %14, i32 0, i32 4, !dbg !10878
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name30, i64 0, i64 0, !dbg !10877
  %call32 = call i64 @strlen(i8* %arraydecay31) #6, !dbg !10879
  %conv33 = trunc i64 %call32 to i32, !dbg !10880
  store i32 %conv33, i32* %len2, align 4, !dbg !10876
  call void @llvm.dbg.declare(metadata [7 x i8]* %num, metadata !10881, metadata !DIExpression()), !dbg !10882
  %15 = load i32, i32* %len2, align 4, !dbg !10883
  %cmp34 = icmp sgt i32 %15, 15, !dbg !10885
  br i1 %cmp34, label %if.then36, label %if.end58, !dbg !10886

if.then36:                                        ; preds = %if.then29
  %arraydecay37 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !10887
  %16 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10889
  %d_name38 = getelementptr inbounds %struct.dirent, %struct.dirent* %16, i32 0, i32 4, !dbg !10890
  %arraydecay39 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name38, i64 0, i64 0, !dbg !10889
  %17 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !10891
  %d_name40 = getelementptr inbounds %struct.dirent, %struct.dirent* %17, i32 0, i32 4, !dbg !10892
  %arraydecay41 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name40, i64 0, i64 0, !dbg !10891
  %call42 = call i64 @strlen(i8* %arraydecay41) #6, !dbg !10893
  %sub = sub i64 %call42, 15, !dbg !10894
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay39, i64 %sub, !dbg !10895
  %call43 = call i8* @BLI_strncpy(i8* %arraydecay37, i8* %add.ptr, i64 7), !dbg !10896
  %arraydecay44 = getelementptr inbounds [7 x i8], [7 x i8]* %num, i64 0, i64 0, !dbg !10897
  %call45 = call i32 @atoi(i8* %arraydecay44) #6, !dbg !10898
  store i32 %call45, i32* %frame, align 4, !dbg !10899
  %18 = load i32, i32* %frame, align 4, !dbg !10900
  %tobool46 = icmp ne i32 %18, 0, !dbg !10900
  br i1 %tobool46, label %if.then47, label %if.else56, !dbg !10902

if.then47:                                        ; preds = %if.then36
  %19 = load i32, i32* %start, align 4, !dbg !10903
  %20 = load i32, i32* %frame, align 4, !dbg !10903
  %cmp48 = icmp slt i32 %19, %20, !dbg !10903
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !10903

cond.true:                                        ; preds = %if.then47
  %21 = load i32, i32* %start, align 4, !dbg !10903
  br label %cond.end, !dbg !10903

cond.false:                                       ; preds = %if.then47
  %22 = load i32, i32* %frame, align 4, !dbg !10903
  br label %cond.end, !dbg !10903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %22, %cond.false ], !dbg !10903
  store i32 %cond, i32* %start, align 4, !dbg !10905
  %23 = load i32, i32* %end, align 4, !dbg !10906
  %24 = load i32, i32* %frame, align 4, !dbg !10906
  %cmp50 = icmp sgt i32 %23, %24, !dbg !10906
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !10906

cond.true52:                                      ; preds = %cond.end
  %25 = load i32, i32* %end, align 4, !dbg !10906
  br label %cond.end54, !dbg !10906

cond.false53:                                     ; preds = %cond.end
  %26 = load i32, i32* %frame, align 4, !dbg !10906
  br label %cond.end54, !dbg !10906

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %25, %cond.true52 ], [ %26, %cond.false53 ], !dbg !10906
  store i32 %cond55, i32* %end, align 4, !dbg !10907
  br label %if.end57, !dbg !10908

if.else56:                                        ; preds = %if.then36
  store i32 1, i32* %info, align 4, !dbg !10909
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %cond.end54
  br label %if.end58, !dbg !10910

if.end58:                                         ; preds = %if.end57, %if.then29
  br label %if.end59, !dbg !10911

if.end59:                                         ; preds = %if.end58, %if.then22
  br label %if.end60, !dbg !10912

if.end60:                                         ; preds = %if.end59, %while.body
  br label %while.cond, !dbg !10851, !llvm.loop !10913

while.end:                                        ; preds = %while.cond
  %27 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !dbg !10915
  %call61 = call i32 @closedir(%struct.__dirstream* %27), !dbg !10916
  %28 = load i32, i32* %start, align 4, !dbg !10917
  %cmp62 = icmp ne i32 %28, 300000, !dbg !10919
  br i1 %cmp62, label %if.then64, label %if.end110, !dbg !10920

if.then64:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !10921, metadata !DIExpression()), !dbg !10923
  %29 = load i32, i32* %start, align 4, !dbg !10924
  %30 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10925
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %30, i32 0, i32 5, !dbg !10926
  store i32 %29, i32* %startframe, align 4, !dbg !10927
  %31 = load i32, i32* %end, align 4, !dbg !10928
  %32 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10929
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %32, i32 0, i32 6, !dbg !10930
  store i32 %31, i32* %endframe, align 8, !dbg !10931
  %33 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10932
  %totpoint = getelementptr inbounds %struct.PointCache, %struct.PointCache* %33, i32 0, i32 11, !dbg !10933
  store i32 0, i32* %totpoint, align 4, !dbg !10934
  %34 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10935
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %34, i32 0, i32 5, !dbg !10937
  %35 = load i32, i32* %type, align 8, !dbg !10937
  %cmp65 = icmp eq i32 %35, 3, !dbg !10938
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !10939

if.then67:                                        ; preds = %if.then64
  br label %if.end106, !dbg !10940

if.else68:                                        ; preds = %if.then64
  %36 = load i32, i32* %info, align 4, !dbg !10942
  %tobool69 = icmp ne i32 %36, 0, !dbg !10942
  br i1 %tobool69, label %if.then70, label %if.else91, !dbg !10944

if.then70:                                        ; preds = %if.else68
  %37 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10945
  %call71 = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %37, i32 0, i32 0), !dbg !10947
  store %struct.PTCacheFile* %call71, %struct.PTCacheFile** %pf, align 8, !dbg !10948
  %38 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10949
  %tobool72 = icmp ne %struct.PTCacheFile* %38, null, !dbg !10949
  br i1 %tobool72, label %if.then73, label %if.end90, !dbg !10951

if.then73:                                        ; preds = %if.then70
  %39 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10952
  %call74 = call i32 @ptcache_file_header_begin_read(%struct.PTCacheFile* %39), !dbg !10955
  %tobool75 = icmp ne i32 %call74, 0, !dbg !10955
  br i1 %tobool75, label %if.then76, label %if.end89, !dbg !10956

if.then76:                                        ; preds = %if.then73
  %40 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10957
  %type77 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %40, i32 0, i32 4, !dbg !10960
  %41 = load i32, i32* %type77, align 4, !dbg !10960
  %42 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10961
  %type78 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %42, i32 0, i32 5, !dbg !10962
  %43 = load i32, i32* %type78, align 8, !dbg !10962
  %cmp79 = icmp eq i32 %41, %43, !dbg !10963
  br i1 %cmp79, label %land.lhs.true, label %if.else86, !dbg !10964

land.lhs.true:                                    ; preds = %if.then76
  %44 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10965
  %read_header = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %44, i32 0, i32 24, !dbg !10966
  %45 = load i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)** %read_header, align 8, !dbg !10966
  %46 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10967
  %call81 = call i32 %45(%struct.PTCacheFile* %46), !dbg !10965
  %tobool82 = icmp ne i32 %call81, 0, !dbg !10965
  br i1 %tobool82, label %if.then83, label %if.else86, !dbg !10968

if.then83:                                        ; preds = %land.lhs.true
  %47 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10969
  %totpoint84 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %47, i32 0, i32 3, !dbg !10971
  %48 = load i32, i32* %totpoint84, align 8, !dbg !10971
  %49 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10972
  %totpoint85 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %49, i32 0, i32 11, !dbg !10973
  store i32 %48, i32* %totpoint85, align 4, !dbg !10974
  %50 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10975
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %50, i32 0, i32 2, !dbg !10976
  %51 = load i32, i32* %flag, align 8, !dbg !10977
  %or = or i32 %51, 1024, !dbg !10977
  store i32 %or, i32* %flag, align 8, !dbg !10977
  br label %if.end88, !dbg !10978

if.else86:                                        ; preds = %land.lhs.true, %if.then76
  %52 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10979
  %totpoint87 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %52, i32 0, i32 11, !dbg !10981
  store i32 0, i32* %totpoint87, align 4, !dbg !10982
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then83
  br label %if.end89, !dbg !10983

if.end89:                                         ; preds = %if.end88, %if.then73
  %53 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !10984
  call void @ptcache_file_close(%struct.PTCacheFile* %53), !dbg !10985
  br label %if.end90, !dbg !10986

if.end90:                                         ; preds = %if.end89, %if.then70
  br label %if.end105, !dbg !10987

if.else91:                                        ; preds = %if.else68
  call void @llvm.dbg.declare(metadata [14 x float]* %old_data, metadata !10988, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.declare(metadata i32* %elemsize, metadata !10991, metadata !DIExpression()), !dbg !10992
  %54 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10993
  %call92 = call i32 @ptcache_old_elemsize(%struct.PTCacheID* %54), !dbg !10994
  store i32 %call92, i32* %elemsize, align 4, !dbg !10992
  %55 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !10995
  %56 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !10996
  %startframe93 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %56, i32 0, i32 5, !dbg !10997
  %57 = load i32, i32* %startframe93, align 4, !dbg !10997
  %call94 = call %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %55, i32 0, i32 %57), !dbg !10998
  store %struct.PTCacheFile* %call94, %struct.PTCacheFile** %pf, align 8, !dbg !10999
  %58 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11000
  %tobool95 = icmp ne %struct.PTCacheFile* %58, null, !dbg !11000
  br i1 %tobool95, label %if.then96, label %if.end104, !dbg !11002

if.then96:                                        ; preds = %if.else91
  br label %while.cond97, !dbg !11003

while.cond97:                                     ; preds = %while.body101, %if.then96
  %59 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11005
  %arraydecay98 = getelementptr inbounds [14 x float], [14 x float]* %old_data, i64 0, i64 0, !dbg !11006
  %60 = bitcast float* %arraydecay98 to i8*, !dbg !11006
  %61 = load i32, i32* %elemsize, align 4, !dbg !11007
  %call99 = call i32 @ptcache_file_read(%struct.PTCacheFile* %59, i8* %60, i32 1, i32 %61), !dbg !11008
  %tobool100 = icmp ne i32 %call99, 0, !dbg !11003
  br i1 %tobool100, label %while.body101, label %while.end103, !dbg !11003

while.body101:                                    ; preds = %while.cond97
  %62 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11009
  %totpoint102 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %62, i32 0, i32 11, !dbg !11010
  %63 = load i32, i32* %totpoint102, align 4, !dbg !11011
  %inc = add nsw i32 %63, 1, !dbg !11011
  store i32 %inc, i32* %totpoint102, align 4, !dbg !11011
  br label %while.cond97, !dbg !11003, !llvm.loop !11012

while.end103:                                     ; preds = %while.cond97
  %64 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11013
  call void @ptcache_file_close(%struct.PTCacheFile* %64), !dbg !11014
  br label %if.end104, !dbg !11015

if.end104:                                        ; preds = %while.end103, %if.else91
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end90
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then67
  %65 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11016
  %flag107 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %65, i32 0, i32 2, !dbg !11017
  %66 = load i32, i32* %flag107, align 8, !dbg !11018
  %or108 = or i32 %66, 69, !dbg !11018
  store i32 %or108, i32* %flag107, align 8, !dbg !11018
  %67 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11019
  %flag109 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %67, i32 0, i32 2, !dbg !11020
  %68 = load i32, i32* %flag109, align 8, !dbg !11021
  %and = and i32 %68, -259, !dbg !11021
  store i32 %and, i32* %flag109, align 8, !dbg !11021
  br label %if.end110, !dbg !11022

if.end110:                                        ; preds = %if.end106, %while.end
  %69 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11023
  %cached_frames = getelementptr inbounds %struct.PointCache, %struct.PointCache* %69, i32 0, i32 19, !dbg !11025
  %70 = load i8*, i8** %cached_frames, align 8, !dbg !11025
  %tobool111 = icmp ne i8* %70, null, !dbg !11023
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !11026

if.then112:                                       ; preds = %if.end110
  %71 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11027
  %72 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11029
  %cached_frames113 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %72, i32 0, i32 19, !dbg !11030
  %73 = load i8*, i8** %cached_frames113, align 8, !dbg !11030
  call void %71(i8* %73), !dbg !11027
  %74 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11031
  %cached_frames114 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %74, i32 0, i32 19, !dbg !11032
  store i8* null, i8** %cached_frames114, align 8, !dbg !11033
  br label %if.end115, !dbg !11034

if.end115:                                        ; preds = %if.then112, %if.end110
  %75 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11035
  call void @BKE_ptcache_update_info(%struct.PTCacheID* %75), !dbg !11036
  br label %return, !dbg !11037

return:                                           ; preds = %if.end115, %if.then6, %if.then
  ret void, !dbg !11037
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PTCacheFile* @ptcache_file_open(%struct.PTCacheID* %pid, i32 %mode, i32 %cfra) #0 !dbg !11038 {
entry:
  %retval = alloca %struct.PTCacheFile*, align 8
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %mode.addr = alloca i32, align 4
  %cfra.addr = alloca i32, align 4
  %pf = alloca %struct.PTCacheFile*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %filename = alloca [2048 x i8], align 16
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf, metadata !11047, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !11049, metadata !DIExpression()), !dbg !11050
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !dbg !11050
  call void @llvm.dbg.declare(metadata [2048 x i8]* %filename, metadata !11051, metadata !DIExpression()), !dbg !11052
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !11053
  %tobool = icmp ne i8 %0, 0, !dbg !11055
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !11056

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11057
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %1, i32 0, i32 25, !dbg !11058
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !11058
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 2, !dbg !11059
  %3 = load i32, i32* %flag, align 8, !dbg !11059
  %and = and i32 %3, 512, !dbg !11060
  %cmp = icmp eq i32 %and, 0, !dbg !11061
  br i1 %cmp, label %if.then, label %if.end, !dbg !11062

if.then:                                          ; preds = %land.lhs.true
  store %struct.PTCacheFile* null, %struct.PTCacheFile** %retval, align 8, !dbg !11063
  br label %return, !dbg !11063

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11064
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11065
  %5 = load i32, i32* %cfra.addr, align 4, !dbg !11066
  %call = call i32 @ptcache_filename(%struct.PTCacheID* %4, i8* %arraydecay, i32 %5, i16 signext 1, i16 signext 1), !dbg !11067
  %6 = load i32, i32* %mode.addr, align 4, !dbg !11068
  %cmp1 = icmp eq i32 %6, 0, !dbg !11070
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !11071

if.then2:                                         ; preds = %if.end
  %arraydecay3 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11072
  %call4 = call i32 @BLI_exists(i8* %arraydecay3), !dbg !11075
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11075
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !11076

if.then6:                                         ; preds = %if.then2
  store %struct.PTCacheFile* null, %struct.PTCacheFile** %retval, align 8, !dbg !11077
  br label %return, !dbg !11077

if.end7:                                          ; preds = %if.then2
  %arraydecay8 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11079
  %call9 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0)), !dbg !11080
  store %struct._IO_FILE* %call9, %struct._IO_FILE** %fp, align 8, !dbg !11081
  br label %if.end23, !dbg !11082

if.else:                                          ; preds = %if.end
  %7 = load i32, i32* %mode.addr, align 4, !dbg !11083
  %cmp10 = icmp eq i32 %7, 1, !dbg !11085
  br i1 %cmp10, label %if.then11, label %if.else15, !dbg !11086

if.then11:                                        ; preds = %if.else
  %arraydecay12 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11087
  call void @BLI_make_existing_file(i8* %arraydecay12), !dbg !11089
  %arraydecay13 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11090
  %call14 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i64 0, i64 0)), !dbg !11091
  store %struct._IO_FILE* %call14, %struct._IO_FILE** %fp, align 8, !dbg !11092
  br label %if.end22, !dbg !11093

if.else15:                                        ; preds = %if.else
  %8 = load i32, i32* %mode.addr, align 4, !dbg !11094
  %cmp16 = icmp eq i32 %8, 2, !dbg !11096
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !11097

if.then17:                                        ; preds = %if.else15
  %arraydecay18 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11098
  call void @BLI_make_existing_file(i8* %arraydecay18), !dbg !11100
  %arraydecay19 = getelementptr inbounds [2048 x i8], [2048 x i8]* %filename, i64 0, i64 0, !dbg !11101
  %call20 = call %struct._IO_FILE* @BLI_fopen(i8* %arraydecay19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0)), !dbg !11102
  store %struct._IO_FILE* %call20, %struct._IO_FILE** %fp, align 8, !dbg !11103
  br label %if.end21, !dbg !11104

if.end21:                                         ; preds = %if.then17, %if.else15
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then11
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end7
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11105
  %tobool24 = icmp ne %struct._IO_FILE* %9, null, !dbg !11105
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !11107

if.then25:                                        ; preds = %if.end23
  store %struct.PTCacheFile* null, %struct.PTCacheFile** %retval, align 8, !dbg !11108
  br label %return, !dbg !11108

if.end26:                                         ; preds = %if.end23
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11109
  %call27 = call i8* %10(i64 192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)), !dbg !11109
  %11 = bitcast i8* %call27 to %struct.PTCacheFile*, !dbg !11109
  store %struct.PTCacheFile* %11, %struct.PTCacheFile** %pf, align 8, !dbg !11110
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11111
  %13 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11112
  %fp28 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %13, i32 0, i32 0, !dbg !11113
  store %struct._IO_FILE* %12, %struct._IO_FILE** %fp28, align 8, !dbg !11114
  %14 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11115
  %old_format = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %14, i32 0, i32 2, !dbg !11116
  store i32 0, i32* %old_format, align 4, !dbg !11117
  %15 = load i32, i32* %cfra.addr, align 4, !dbg !11118
  %16 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11119
  %frame = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %16, i32 0, i32 1, !dbg !11120
  store i32 %15, i32* %frame, align 8, !dbg !11121
  %17 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf, align 8, !dbg !11122
  store %struct.PTCacheFile* %17, %struct.PTCacheFile** %retval, align 8, !dbg !11123
  br label %return, !dbg !11123

return:                                           ; preds = %if.end26, %if.then25, %if.then6, %if.then
  %18 = load %struct.PTCacheFile*, %struct.PTCacheFile** %retval, align 8, !dbg !11124
  ret %struct.PTCacheFile* %18, !dbg !11124
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_header_begin_read(%struct.PTCacheFile* %pf) #0 !dbg !11125 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %typeflag = alloca i32, align 4
  %error = alloca i32, align 4
  %bphysics = alloca [8 x i8], align 1
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.declare(metadata i32* %typeflag, metadata !11128, metadata !DIExpression()), !dbg !11129
  store i32 0, i32* %typeflag, align 4, !dbg !11129
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11130, metadata !DIExpression()), !dbg !11131
  store i32 0, i32* %error, align 4, !dbg !11131
  call void @llvm.dbg.declare(metadata [8 x i8]* %bphysics, metadata !11132, metadata !DIExpression()), !dbg !11133
  %0 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11134
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %0, i32 0, i32 5, !dbg !11135
  store i32 0, i32* %data_types, align 8, !dbg !11136
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %bphysics, i64 0, i64 0, !dbg !11137
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11139
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %1, i32 0, i32 0, !dbg !11140
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11140
  %call = call i64 @fread(i8* %arraydecay, i64 1, i64 8, %struct._IO_FILE* %2), !dbg !11141
  %cmp = icmp ne i64 %call, 8, !dbg !11142
  br i1 %cmp, label %if.then, label %if.end, !dbg !11143

if.then:                                          ; preds = %entry
  store i32 1, i32* %error, align 4, !dbg !11144
  br label %if.end, !dbg !11145

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %error, align 4, !dbg !11146
  %tobool = icmp ne i32 %3, 0, !dbg !11146
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !11148

land.lhs.true:                                    ; preds = %if.end
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %bphysics, i64 0, i64 0, !dbg !11149
  %call2 = call i32 @strncmp(i8* %arraydecay1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i64 8) #6, !dbg !11150
  %tobool3 = icmp ne i32 %call2, 0, !dbg !11150
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11151

if.then4:                                         ; preds = %land.lhs.true
  store i32 1, i32* %error, align 4, !dbg !11152
  br label %if.end5, !dbg !11153

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %4 = load i32, i32* %error, align 4, !dbg !11154
  %tobool6 = icmp ne i32 %4, 0, !dbg !11154
  br i1 %tobool6, label %if.end12, label %land.lhs.true7, !dbg !11156

land.lhs.true7:                                   ; preds = %if.end5
  %5 = bitcast i32* %typeflag to i8*, !dbg !11157
  %6 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11158
  %fp8 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %6, i32 0, i32 0, !dbg !11159
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp8, align 8, !dbg !11159
  %call9 = call i64 @fread(i8* %5, i64 4, i64 1, %struct._IO_FILE* %7), !dbg !11160
  %tobool10 = icmp ne i64 %call9, 0, !dbg !11160
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !11161

if.then11:                                        ; preds = %land.lhs.true7
  store i32 1, i32* %error, align 4, !dbg !11162
  br label %if.end12, !dbg !11163

if.end12:                                         ; preds = %if.then11, %land.lhs.true7, %if.end5
  %8 = load i32, i32* %typeflag, align 4, !dbg !11164
  %and = and i32 %8, 65535, !dbg !11165
  %9 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11166
  %type = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %9, i32 0, i32 4, !dbg !11167
  store i32 %and, i32* %type, align 4, !dbg !11168
  %10 = load i32, i32* %typeflag, align 4, !dbg !11169
  %and13 = and i32 %10, -65536, !dbg !11170
  %11 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11171
  %flag = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %11, i32 0, i32 6, !dbg !11172
  store i32 %and13, i32* %flag, align 4, !dbg !11173
  %12 = load i32, i32* %error, align 4, !dbg !11174
  %tobool14 = icmp ne i32 %12, 0, !dbg !11174
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !11176

if.then15:                                        ; preds = %if.end12
  %13 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11177
  %fp16 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %13, i32 0, i32 0, !dbg !11178
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp16, align 8, !dbg !11178
  %call17 = call i32 @fseek(%struct._IO_FILE* %14, i64 0, i32 0), !dbg !11179
  br label %if.end18, !dbg !11179

if.end18:                                         ; preds = %if.then15, %if.end12
  %15 = load i32, i32* %error, align 4, !dbg !11180
  %tobool19 = icmp ne i32 %15, 0, !dbg !11181
  %lnot = xor i1 %tobool19, true, !dbg !11181
  %lnot.ext = zext i1 %lnot to i32, !dbg !11181
  ret i32 %lnot.ext, !dbg !11182
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_file_close(%struct.PTCacheFile* %pf) #0 !dbg !11183 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11186, metadata !DIExpression()), !dbg !11187
  %0 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11188
  %tobool = icmp ne %struct.PTCacheFile* %0, null, !dbg !11188
  br i1 %tobool, label %if.then, label %if.end, !dbg !11190

if.then:                                          ; preds = %entry
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11191
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %1, i32 0, i32 0, !dbg !11193
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11193
  %call = call i32 @fclose(%struct._IO_FILE* %2), !dbg !11194
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11195
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11196
  %5 = bitcast %struct.PTCacheFile* %4 to i8*, !dbg !11196
  call void %3(i8* %5), !dbg !11195
  br label %if.end, !dbg !11197

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11198
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_old_elemsize(%struct.PTCacheID* %pid) #0 !dbg !11199 {
entry:
  %retval = alloca i32, align 4
  %pid.addr = alloca %struct.PTCacheID*, align 8
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !11202, metadata !DIExpression()), !dbg !11203
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11204
  %type = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %0, i32 0, i32 5, !dbg !11206
  %1 = load i32, i32* %type, align 8, !dbg !11206
  %cmp = icmp eq i32 %1, 0, !dbg !11207
  br i1 %cmp, label %if.then, label %if.else, !dbg !11208

if.then:                                          ; preds = %entry
  store i32 24, i32* %retval, align 4, !dbg !11209
  br label %return, !dbg !11209

if.else:                                          ; preds = %entry
  %2 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11210
  %type1 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %2, i32 0, i32 5, !dbg !11212
  %3 = load i32, i32* %type1, align 8, !dbg !11212
  %cmp2 = icmp eq i32 %3, 1, !dbg !11213
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !11214

if.then3:                                         ; preds = %if.else
  store i32 56, i32* %retval, align 4, !dbg !11215
  br label %return, !dbg !11215

if.else4:                                         ; preds = %if.else
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !11216
  %type5 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 5, !dbg !11218
  %5 = load i32, i32* %type5, align 8, !dbg !11218
  %cmp6 = icmp eq i32 %5, 2, !dbg !11219
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !11220

if.then7:                                         ; preds = %if.else4
  store i32 36, i32* %retval, align 4, !dbg !11221
  br label %return, !dbg !11221

if.end:                                           ; preds = %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !11222
  br label %return, !dbg !11222

return:                                           ; preds = %if.end9, %if.then7, %if.then3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11223
  ret i32 %6, !dbg !11223
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_read(%struct.PTCacheFile* %pf, i8* %f, i32 %tot, i32 %size) #0 !dbg !11224 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %f.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  store i8* %f, i8** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %f.addr, metadata !11229, metadata !DIExpression()), !dbg !11230
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !11231, metadata !DIExpression()), !dbg !11232
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  %0 = load i8*, i8** %f.addr, align 8, !dbg !11235
  %1 = load i32, i32* %size.addr, align 4, !dbg !11236
  %conv = zext i32 %1 to i64, !dbg !11236
  %2 = load i32, i32* %tot.addr, align 4, !dbg !11237
  %conv1 = zext i32 %2 to i64, !dbg !11237
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11238
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %3, i32 0, i32 0, !dbg !11239
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11239
  %call = call i64 @fread(i8* %0, i64 %conv, i64 %conv1, %struct._IO_FILE* %4), !dbg !11240
  %5 = load i32, i32* %tot.addr, align 4, !dbg !11241
  %conv2 = zext i32 %5 to i64, !dbg !11241
  %cmp = icmp eq i64 %call, %conv2, !dbg !11242
  %conv3 = zext i1 %cmp to i32, !dbg !11242
  ret i32 %conv3, !dbg !11243
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_ptcache_validate(%struct.PointCache* %cache, i32 %framenr) #0 !dbg !11244 {
entry:
  %cache.addr = alloca %struct.PointCache*, align 8
  %framenr.addr = alloca i32, align 4
  store %struct.PointCache* %cache, %struct.PointCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store i32 %framenr, i32* %framenr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %framenr.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  %0 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !11251
  %tobool = icmp ne %struct.PointCache* %0, null, !dbg !11251
  br i1 %tobool, label %if.then, label %if.end, !dbg !11253

if.then:                                          ; preds = %entry
  %1 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !11254
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !11256
  %2 = load i32, i32* %flag, align 8, !dbg !11257
  %or = or i32 %2, 4, !dbg !11257
  store i32 %or, i32* %flag, align 8, !dbg !11257
  %3 = load i32, i32* %framenr.addr, align 4, !dbg !11258
  %4 = load %struct.PointCache*, %struct.PointCache** %cache.addr, align 8, !dbg !11259
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 4, !dbg !11260
  store i32 %3, i32* %simframe, align 8, !dbg !11261
  br label %if.end, !dbg !11262

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11263
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !11264 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load float*, float** %a.addr, align 8, !dbg !11274
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11274
  %1 = load float, float* %arrayidx, align 4, !dbg !11274
  %2 = load float*, float** %r.addr, align 8, !dbg !11275
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11275
  store float %1, float* %arrayidx1, align 4, !dbg !11276
  %3 = load float*, float** %a.addr, align 8, !dbg !11277
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11277
  %4 = load float, float* %arrayidx2, align 4, !dbg !11277
  %5 = load float*, float** %r.addr, align 8, !dbg !11278
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11278
  store float %4, float* %arrayidx3, align 4, !dbg !11279
  %6 = load float*, float** %a.addr, align 8, !dbg !11280
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !11280
  %7 = load float, float* %arrayidx4, align 4, !dbg !11280
  %8 = load float*, float** %r.addr, align 8, !dbg !11281
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11281
  store float %7, float* %arrayidx5, align 4, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !11284 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11287, metadata !DIExpression()), !dbg !11288
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11289, metadata !DIExpression()), !dbg !11290
  %0 = load float, float* %f.addr, align 4, !dbg !11291
  %1 = load float*, float** %r.addr, align 8, !dbg !11292
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !11292
  %2 = load float, float* %arrayidx, align 4, !dbg !11293
  %mul = fmul float %2, %0, !dbg !11293
  store float %mul, float* %arrayidx, align 4, !dbg !11293
  %3 = load float, float* %f.addr, align 4, !dbg !11294
  %4 = load float*, float** %r.addr, align 8, !dbg !11295
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !11295
  %5 = load float, float* %arrayidx1, align 4, !dbg !11296
  %mul2 = fmul float %5, %3, !dbg !11296
  store float %mul2, float* %arrayidx1, align 4, !dbg !11296
  %6 = load float, float* %f.addr, align 4, !dbg !11297
  %7 = load float*, float** %r.addr, align 8, !dbg !11298
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !11298
  %8 = load float, float* %arrayidx3, align 4, !dbg !11299
  %mul4 = fmul float %8, %6, !dbg !11299
  store float %mul4, float* %arrayidx3, align 4, !dbg !11299
  ret void, !dbg !11300
}

declare dso_local void @psys_interpolate_particle(i16 signext, %struct.ParticleKey*, float, %struct.ParticleKey*, i32) #3

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !11301 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11304, metadata !DIExpression()), !dbg !11305
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  %0 = load float*, float** %a.addr, align 8, !dbg !11310
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11310
  %1 = load float, float* %arrayidx, align 4, !dbg !11310
  %2 = load float*, float** %b.addr, align 8, !dbg !11311
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11311
  %3 = load float, float* %arrayidx1, align 4, !dbg !11311
  %sub = fsub float %1, %3, !dbg !11312
  %4 = load float*, float** %r.addr, align 8, !dbg !11313
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !11313
  store float %sub, float* %arrayidx2, align 4, !dbg !11314
  %5 = load float*, float** %a.addr, align 8, !dbg !11315
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11315
  %6 = load float, float* %arrayidx3, align 4, !dbg !11315
  %7 = load float*, float** %b.addr, align 8, !dbg !11316
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11316
  %8 = load float, float* %arrayidx4, align 4, !dbg !11316
  %sub5 = fsub float %6, %8, !dbg !11317
  %9 = load float*, float** %r.addr, align 8, !dbg !11318
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !11318
  store float %sub5, float* %arrayidx6, align 4, !dbg !11319
  %10 = load float*, float** %a.addr, align 8, !dbg !11320
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !11320
  %11 = load float, float* %arrayidx7, align 4, !dbg !11320
  %12 = load float*, float** %b.addr, align 8, !dbg !11321
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !11321
  %13 = load float, float* %arrayidx8, align 4, !dbg !11321
  %sub9 = fsub float %11, %13, !dbg !11322
  %14 = load float*, float** %r.addr, align 8, !dbg !11323
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !11323
  store float %sub9, float* %arrayidx10, align 4, !dbg !11324
  ret void, !dbg !11325
}

declare dso_local void @unit_qt(float*) #3

declare dso_local void @interp_qt_qtqt(float*, float*, float*, float) #3

declare dso_local void @modifier_setError(%struct.ModifierData*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_write(%struct.PTCacheFile* %pf, i8* %f, i32 %tot, i32 %size) #0 !dbg !11326 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %f.addr = alloca i8*, align 8
  %tot.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  store i8* %f, i8** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %f.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  %0 = load i8*, i8** %f.addr, align 8, !dbg !11339
  %1 = load i32, i32* %size.addr, align 4, !dbg !11340
  %conv = zext i32 %1 to i64, !dbg !11340
  %2 = load i32, i32* %tot.addr, align 4, !dbg !11341
  %conv1 = zext i32 %2 to i64, !dbg !11341
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11342
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %3, i32 0, i32 0, !dbg !11343
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11343
  %call = call i64 @fwrite(i8* %0, i64 %conv, i64 %conv1, %struct._IO_FILE* %4), !dbg !11344
  %5 = load i32, i32* %tot.addr, align 4, !dbg !11345
  %conv2 = zext i32 %5 to i64, !dbg !11345
  %cmp = icmp eq i64 %call, %conv2, !dbg !11346
  %conv3 = zext i1 %cmp to i32, !dbg !11346
  ret i32 %conv3, !dbg !11347
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_compressed_write(%struct.PTCacheFile* %pf, i8* %in, i32 %in_len, i8* %out, i32 %mode) #0 !dbg !11348 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %in.addr = alloca i8*, align 8
  %in_len.addr = alloca i32, align 4
  %out.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %compressed = alloca i8, align 1
  %out_len = alloca i64, align 8
  %props = alloca i8*, align 8
  %sizeOfIt = alloca i64, align 8
  %size = alloca i32, align 4
  %size9 = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11351, metadata !DIExpression()), !dbg !11352
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !11353, metadata !DIExpression()), !dbg !11354
  store i32 %in_len, i32* %in_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_len.addr, metadata !11355, metadata !DIExpression()), !dbg !11356
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !11357, metadata !DIExpression()), !dbg !11358
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11359, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11361, metadata !DIExpression()), !dbg !11362
  store i32 0, i32* %r, align 4, !dbg !11362
  call void @llvm.dbg.declare(metadata i8* %compressed, metadata !11363, metadata !DIExpression()), !dbg !11364
  store i8 0, i8* %compressed, align 1, !dbg !11364
  call void @llvm.dbg.declare(metadata i64* %out_len, metadata !11365, metadata !DIExpression()), !dbg !11366
  store i64 0, i64* %out_len, align 8, !dbg !11366
  call void @llvm.dbg.declare(metadata i8** %props, metadata !11367, metadata !DIExpression()), !dbg !11368
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11369
  %call = call i8* %0(i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)), !dbg !11369
  store i8* %call, i8** %props, align 8, !dbg !11368
  call void @llvm.dbg.declare(metadata i64* %sizeOfIt, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i64 5, i64* %sizeOfIt, align 8, !dbg !11371
  %1 = load i32, i32* %mode.addr, align 4, !dbg !11372
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11373
  %call1 = call i32 @ptcache_file_write(%struct.PTCacheFile* %2, i8* %compressed, i32 1, i32 1), !dbg !11374
  %3 = load i8, i8* %compressed, align 1, !dbg !11375
  %tobool = icmp ne i8 %3, 0, !dbg !11375
  br i1 %tobool, label %if.then, label %if.else, !dbg !11377

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11378, metadata !DIExpression()), !dbg !11380
  %4 = load i64, i64* %out_len, align 8, !dbg !11381
  %conv = trunc i64 %4 to i32, !dbg !11381
  store i32 %conv, i32* %size, align 4, !dbg !11380
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11382
  %6 = bitcast i32* %size to i8*, !dbg !11383
  %call2 = call i32 @ptcache_file_write(%struct.PTCacheFile* %5, i8* %6, i32 1, i32 4), !dbg !11384
  %7 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11385
  %8 = load i8*, i8** %out.addr, align 8, !dbg !11386
  %9 = load i64, i64* %out_len, align 8, !dbg !11387
  %conv3 = trunc i64 %9 to i32, !dbg !11387
  %call4 = call i32 @ptcache_file_write(%struct.PTCacheFile* %7, i8* %8, i32 %conv3, i32 1), !dbg !11388
  br label %if.end, !dbg !11389

if.else:                                          ; preds = %entry
  %10 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11390
  %11 = load i8*, i8** %in.addr, align 8, !dbg !11391
  %12 = load i32, i32* %in_len.addr, align 4, !dbg !11392
  %call5 = call i32 @ptcache_file_write(%struct.PTCacheFile* %10, i8* %11, i32 %12, i32 1), !dbg !11393
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8, i8* %compressed, align 1, !dbg !11394
  %conv6 = zext i8 %13 to i32, !dbg !11394
  %cmp = icmp eq i32 %conv6, 2, !dbg !11396
  br i1 %cmp, label %if.then8, label %if.end13, !dbg !11397

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %size9, metadata !11398, metadata !DIExpression()), !dbg !11400
  %14 = load i64, i64* %sizeOfIt, align 8, !dbg !11401
  %conv10 = trunc i64 %14 to i32, !dbg !11401
  store i32 %conv10, i32* %size9, align 4, !dbg !11400
  %15 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11402
  %16 = bitcast i64* %sizeOfIt to i8*, !dbg !11403
  %call11 = call i32 @ptcache_file_write(%struct.PTCacheFile* %15, i8* %16, i32 1, i32 4), !dbg !11404
  %17 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11405
  %18 = load i8*, i8** %props, align 8, !dbg !11406
  %19 = load i32, i32* %size9, align 4, !dbg !11407
  %call12 = call i32 @ptcache_file_write(%struct.PTCacheFile* %17, i8* %18, i32 %19, i32 1), !dbg !11408
  br label %if.end13, !dbg !11409

if.end13:                                         ; preds = %if.then8, %if.end
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11410
  %21 = load i8*, i8** %props, align 8, !dbg !11411
  call void %20(i8* %21), !dbg !11410
  %22 = load i32, i32* %r, align 4, !dbg !11412
  ret i32 %22, !dbg !11413
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_compressed_read(%struct.PTCacheFile* %pf, i8* %result, i32 %len) #0 !dbg !11414 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %result.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %compressed = alloca i8, align 1
  %in_len = alloca i64, align 8
  %in = alloca i8*, align 8
  %props = alloca i8*, align 8
  %size = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11417, metadata !DIExpression()), !dbg !11418
  store i8* %result, i8** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11421, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11423, metadata !DIExpression()), !dbg !11424
  store i32 0, i32* %r, align 4, !dbg !11424
  call void @llvm.dbg.declare(metadata i8* %compressed, metadata !11425, metadata !DIExpression()), !dbg !11426
  store i8 0, i8* %compressed, align 1, !dbg !11426
  call void @llvm.dbg.declare(metadata i64* %in_len, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata i8** %in, metadata !11429, metadata !DIExpression()), !dbg !11430
  call void @llvm.dbg.declare(metadata i8** %props, metadata !11431, metadata !DIExpression()), !dbg !11432
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11433
  %call = call i8* %0(i64 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)), !dbg !11433
  store i8* %call, i8** %props, align 8, !dbg !11432
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11434
  %call1 = call i32 @ptcache_file_read(%struct.PTCacheFile* %1, i8* %compressed, i32 1, i32 1), !dbg !11435
  %2 = load i8, i8* %compressed, align 1, !dbg !11436
  %tobool = icmp ne i8 %2, 0, !dbg !11436
  br i1 %tobool, label %if.then, label %if.else8, !dbg !11438

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11439, metadata !DIExpression()), !dbg !11441
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11442
  %4 = bitcast i32* %size to i8*, !dbg !11443
  %call2 = call i32 @ptcache_file_read(%struct.PTCacheFile* %3, i8* %4, i32 1, i32 4), !dbg !11444
  %5 = load i32, i32* %size, align 4, !dbg !11445
  %conv = zext i32 %5 to i64, !dbg !11446
  store i64 %conv, i64* %in_len, align 8, !dbg !11447
  %6 = load i64, i64* %in_len, align 8, !dbg !11448
  %cmp = icmp eq i64 %6, 0, !dbg !11450
  br i1 %cmp, label %if.then4, label %if.else, !dbg !11451

if.then4:                                         ; preds = %if.then
  br label %if.end, !dbg !11452

if.else:                                          ; preds = %if.then
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11454
  %8 = load i64, i64* %in_len, align 8, !dbg !11456
  %mul = mul i64 1, %8, !dbg !11457
  %call5 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0)), !dbg !11454
  store i8* %call5, i8** %in, align 8, !dbg !11458
  %9 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11459
  %10 = load i8*, i8** %in, align 8, !dbg !11460
  %11 = load i64, i64* %in_len, align 8, !dbg !11461
  %conv6 = trunc i64 %11 to i32, !dbg !11461
  %call7 = call i32 @ptcache_file_read(%struct.PTCacheFile* %9, i8* %10, i32 %conv6, i32 1), !dbg !11462
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11463
  %13 = load i8*, i8** %in, align 8, !dbg !11464
  call void %12(i8* %13), !dbg !11463
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end10, !dbg !11465

if.else8:                                         ; preds = %entry
  %14 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11466
  %15 = load i8*, i8** %result.addr, align 8, !dbg !11468
  %16 = load i32, i32* %len.addr, align 4, !dbg !11469
  %call9 = call i32 @ptcache_file_read(%struct.PTCacheFile* %14, i8* %15, i32 %16, i32 1), !dbg !11470
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11471
  %18 = load i8*, i8** %props, align 8, !dbg !11472
  call void %17(i8* %18), !dbg !11471
  %19 = load i32, i32* %r, align 4, !dbg !11473
  ret i32 %19, !dbg !11474
}

declare dso_local void @copy_qt_qt(float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_file_pointers_init(%struct.PTCacheFile* %pf) #0 !dbg !11475 {
entry:
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %data_types = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11476, metadata !DIExpression()), !dbg !11477
  call void @llvm.dbg.declare(metadata i32* %data_types, metadata !11478, metadata !DIExpression()), !dbg !11479
  %0 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11480
  %data_types1 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %0, i32 0, i32 5, !dbg !11481
  %1 = load i32, i32* %data_types1, align 8, !dbg !11481
  store i32 %1, i32* %data_types, align 4, !dbg !11479
  %2 = load i32, i32* %data_types, align 4, !dbg !11482
  %and = and i32 %2, 1, !dbg !11483
  %tobool = icmp ne i32 %and, 0, !dbg !11483
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11484

cond.true:                                        ; preds = %entry
  %3 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11485
  %data = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %3, i32 0, i32 7, !dbg !11486
  %index = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data, i32 0, i32 0, !dbg !11487
  br label %cond.end, !dbg !11484

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %index, %cond.true ], [ null, %cond.false ], !dbg !11484
  %4 = bitcast i32* %cond to i8*, !dbg !11484
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11488
  %cur = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %5, i32 0, i32 8, !dbg !11489
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 0, !dbg !11488
  store i8* %4, i8** %arrayidx, align 8, !dbg !11490
  %6 = load i32, i32* %data_types, align 4, !dbg !11491
  %and2 = and i32 %6, 2, !dbg !11492
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11492
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !11493

cond.true4:                                       ; preds = %cond.end
  %7 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11494
  %data5 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %7, i32 0, i32 7, !dbg !11495
  %loc = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data5, i32 0, i32 1, !dbg !11496
  br label %cond.end7, !dbg !11493

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !11493

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi [3 x float]* [ %loc, %cond.true4 ], [ null, %cond.false6 ], !dbg !11493
  %8 = bitcast [3 x float]* %cond8 to i8*, !dbg !11493
  %9 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11497
  %cur9 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %9, i32 0, i32 8, !dbg !11498
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur9, i64 0, i64 1, !dbg !11497
  store i8* %8, i8** %arrayidx10, align 8, !dbg !11499
  %10 = load i32, i32* %data_types, align 4, !dbg !11500
  %and11 = and i32 %10, 4, !dbg !11501
  %tobool12 = icmp ne i32 %and11, 0, !dbg !11501
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !11502

cond.true13:                                      ; preds = %cond.end7
  %11 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11503
  %data14 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %11, i32 0, i32 7, !dbg !11504
  %vel = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data14, i32 0, i32 2, !dbg !11505
  br label %cond.end16, !dbg !11502

cond.false15:                                     ; preds = %cond.end7
  br label %cond.end16, !dbg !11502

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi [3 x float]* [ %vel, %cond.true13 ], [ null, %cond.false15 ], !dbg !11502
  %12 = bitcast [3 x float]* %cond17 to i8*, !dbg !11502
  %13 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11506
  %cur18 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %13, i32 0, i32 8, !dbg !11507
  %arrayidx19 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur18, i64 0, i64 2, !dbg !11506
  store i8* %12, i8** %arrayidx19, align 8, !dbg !11508
  %14 = load i32, i32* %data_types, align 4, !dbg !11509
  %and20 = and i32 %14, 8, !dbg !11510
  %tobool21 = icmp ne i32 %and20, 0, !dbg !11510
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !11511

cond.true22:                                      ; preds = %cond.end16
  %15 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11512
  %data23 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %15, i32 0, i32 7, !dbg !11513
  %rot = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data23, i32 0, i32 3, !dbg !11514
  br label %cond.end25, !dbg !11511

cond.false24:                                     ; preds = %cond.end16
  br label %cond.end25, !dbg !11511

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi [4 x float]* [ %rot, %cond.true22 ], [ null, %cond.false24 ], !dbg !11511
  %16 = bitcast [4 x float]* %cond26 to i8*, !dbg !11511
  %17 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11515
  %cur27 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %17, i32 0, i32 8, !dbg !11516
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur27, i64 0, i64 3, !dbg !11515
  store i8* %16, i8** %arrayidx28, align 8, !dbg !11517
  %18 = load i32, i32* %data_types, align 4, !dbg !11518
  %and29 = and i32 %18, 16, !dbg !11519
  %tobool30 = icmp ne i32 %and29, 0, !dbg !11519
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !11520

cond.true31:                                      ; preds = %cond.end25
  %19 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11521
  %data32 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %19, i32 0, i32 7, !dbg !11522
  %ave = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data32, i32 0, i32 4, !dbg !11523
  br label %cond.end34, !dbg !11520

cond.false33:                                     ; preds = %cond.end25
  br label %cond.end34, !dbg !11520

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi [3 x float]* [ %ave, %cond.true31 ], [ null, %cond.false33 ], !dbg !11520
  %20 = bitcast [3 x float]* %cond35 to i8*, !dbg !11520
  %21 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11524
  %cur36 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %21, i32 0, i32 8, !dbg !11525
  %arrayidx37 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur36, i64 0, i64 4, !dbg !11524
  store i8* %20, i8** %arrayidx37, align 8, !dbg !11526
  %22 = load i32, i32* %data_types, align 4, !dbg !11527
  %and38 = and i32 %22, 32, !dbg !11528
  %tobool39 = icmp ne i32 %and38, 0, !dbg !11528
  br i1 %tobool39, label %cond.true40, label %cond.false42, !dbg !11529

cond.true40:                                      ; preds = %cond.end34
  %23 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11530
  %data41 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %23, i32 0, i32 7, !dbg !11531
  %size = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data41, i32 0, i32 5, !dbg !11532
  br label %cond.end43, !dbg !11529

cond.false42:                                     ; preds = %cond.end34
  br label %cond.end43, !dbg !11529

cond.end43:                                       ; preds = %cond.false42, %cond.true40
  %cond44 = phi float* [ %size, %cond.true40 ], [ null, %cond.false42 ], !dbg !11529
  %24 = bitcast float* %cond44 to i8*, !dbg !11529
  %25 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11533
  %cur45 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %25, i32 0, i32 8, !dbg !11534
  %arrayidx46 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur45, i64 0, i64 5, !dbg !11533
  store i8* %24, i8** %arrayidx46, align 8, !dbg !11535
  %26 = load i32, i32* %data_types, align 4, !dbg !11536
  %and47 = and i32 %26, 64, !dbg !11537
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11537
  br i1 %tobool48, label %cond.true49, label %cond.false51, !dbg !11538

cond.true49:                                      ; preds = %cond.end43
  %27 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11539
  %data50 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %27, i32 0, i32 7, !dbg !11540
  %times = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data50, i32 0, i32 6, !dbg !11541
  br label %cond.end52, !dbg !11538

cond.false51:                                     ; preds = %cond.end43
  br label %cond.end52, !dbg !11538

cond.end52:                                       ; preds = %cond.false51, %cond.true49
  %cond53 = phi [3 x float]* [ %times, %cond.true49 ], [ null, %cond.false51 ], !dbg !11538
  %28 = bitcast [3 x float]* %cond53 to i8*, !dbg !11538
  %29 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11542
  %cur54 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %29, i32 0, i32 8, !dbg !11543
  %arrayidx55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur54, i64 0, i64 6, !dbg !11542
  store i8* %28, i8** %arrayidx55, align 8, !dbg !11544
  %30 = load i32, i32* %data_types, align 4, !dbg !11545
  %and56 = and i32 %30, 128, !dbg !11546
  %tobool57 = icmp ne i32 %and56, 0, !dbg !11546
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !11547

cond.true58:                                      ; preds = %cond.end52
  %31 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11548
  %data59 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %31, i32 0, i32 7, !dbg !11549
  %boids = getelementptr inbounds %struct.PTCacheData, %struct.PTCacheData* %data59, i32 0, i32 7, !dbg !11550
  br label %cond.end61, !dbg !11547

cond.false60:                                     ; preds = %cond.end52
  br label %cond.end61, !dbg !11547

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.BoidData* [ %boids, %cond.true58 ], [ null, %cond.false60 ], !dbg !11547
  %32 = bitcast %struct.BoidData* %cond62 to i8*, !dbg !11547
  %33 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11551
  %cur63 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %33, i32 0, i32 8, !dbg !11552
  %arrayidx64 = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur63, i64 0, i64 7, !dbg !11551
  store i8* %32, i8** %arrayidx64, align 8, !dbg !11553
  ret void, !dbg !11554
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_header_begin_write(%struct.PTCacheFile* %pf) #0 !dbg !11555 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %bphysics = alloca i8*, align 8
  %typeflag = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.declare(metadata i8** %bphysics, metadata !11558, metadata !DIExpression()), !dbg !11559
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i8** %bphysics, align 8, !dbg !11559
  call void @llvm.dbg.declare(metadata i32* %typeflag, metadata !11560, metadata !DIExpression()), !dbg !11561
  %0 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11562
  %type = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %0, i32 0, i32 4, !dbg !11563
  %1 = load i32, i32* %type, align 4, !dbg !11563
  %2 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11564
  %flag = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %2, i32 0, i32 6, !dbg !11565
  %3 = load i32, i32* %flag, align 4, !dbg !11565
  %add = add i32 %1, %3, !dbg !11566
  store i32 %add, i32* %typeflag, align 4, !dbg !11561
  %4 = load i8*, i8** %bphysics, align 8, !dbg !11567
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11569
  %fp = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %5, i32 0, i32 0, !dbg !11570
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !11570
  %call = call i64 @fwrite(i8* %4, i64 1, i64 8, %struct._IO_FILE* %6), !dbg !11571
  %cmp = icmp ne i64 %call, 8, !dbg !11572
  br i1 %cmp, label %if.then, label %if.end, !dbg !11573

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11574
  br label %return, !dbg !11574

if.end:                                           ; preds = %entry
  %7 = bitcast i32* %typeflag to i8*, !dbg !11575
  %8 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11577
  %fp1 = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %8, i32 0, i32 0, !dbg !11578
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !dbg !11578
  %call2 = call i64 @fwrite(i8* %7, i64 4, i64 1, %struct._IO_FILE* %9), !dbg !11579
  %tobool = icmp ne i64 %call2, 0, !dbg !11579
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !11580

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11581
  br label %return, !dbg !11581

if.end4:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11582
  br label %return, !dbg !11582

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !11583
  ret i32 %10, !dbg !11583
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_data_alloc(%struct.PTCacheMem* %pm) #0 !dbg !11584 {
entry:
  %pm.addr = alloca %struct.PTCacheMem*, align 8
  %data_types = alloca i32, align 4
  %totpoint = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.PTCacheMem* %pm, %struct.PTCacheMem** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheMem** %pm.addr, metadata !11585, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.declare(metadata i32* %data_types, metadata !11587, metadata !DIExpression()), !dbg !11588
  %0 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !11589
  %data_types1 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %0, i32 0, i32 4, !dbg !11590
  %1 = load i32, i32* %data_types1, align 8, !dbg !11590
  store i32 %1, i32* %data_types, align 4, !dbg !11588
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !11591, metadata !DIExpression()), !dbg !11592
  %2 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !11593
  %totpoint2 = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %2, i32 0, i32 3, !dbg !11594
  %3 = load i32, i32* %totpoint2, align 4, !dbg !11594
  store i32 %3, i32* %totpoint, align 4, !dbg !11592
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11595, metadata !DIExpression()), !dbg !11596
  store i32 0, i32* %i, align 4, !dbg !11597
  br label %for.cond, !dbg !11599

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !11600
  %cmp = icmp slt i32 %4, 8, !dbg !11602
  br i1 %cmp, label %for.body, label %for.end, !dbg !11603

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %data_types, align 4, !dbg !11604
  %6 = load i32, i32* %i, align 4, !dbg !11607
  %shl = shl i32 1, %6, !dbg !11608
  %and = and i32 %5, %shl, !dbg !11609
  %tobool = icmp ne i32 %and, 0, !dbg !11609
  br i1 %tobool, label %if.then, label %if.end, !dbg !11610

if.then:                                          ; preds = %for.body
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11611
  %8 = load i32, i32* %totpoint, align 4, !dbg !11612
  %9 = load i32, i32* %i, align 4, !dbg !11613
  %idxprom = sext i32 %9 to i64, !dbg !11614
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom, !dbg !11614
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11614
  %mul = mul nsw i32 %8, %10, !dbg !11615
  %conv = sext i32 %mul to i64, !dbg !11612
  %call = call i8* %7(i64 %conv, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0)), !dbg !11611
  %11 = load %struct.PTCacheMem*, %struct.PTCacheMem** %pm.addr, align 8, !dbg !11616
  %data = getelementptr inbounds %struct.PTCacheMem, %struct.PTCacheMem* %11, i32 0, i32 6, !dbg !11617
  %12 = load i32, i32* %i, align 4, !dbg !11618
  %idxprom3 = sext i32 %12 to i64, !dbg !11616
  %arrayidx4 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom3, !dbg !11616
  store i8* %call, i8** %arrayidx4, align 8, !dbg !11619
  br label %if.end, !dbg !11616

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11620

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !11621
  %inc = add nsw i32 %13, 1, !dbg !11621
  store i32 %inc, i32* %i, align 4, !dbg !11621
  br label %for.cond, !dbg !11622, !llvm.loop !11623

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11625
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

declare dso_local zeroext i8 @BLI_path_is_rel(i8*) #3

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #3

declare dso_local i32 @BLI_add_slash(i8*) #3

declare dso_local void @BLI_split_file_part(i8*, i8*, i64) #3

declare dso_local i8* @BLI_temp_dir_session() #3

declare dso_local i32 @BKE_object_insert_ptcache(%struct.Object*) #3

declare dso_local double @PIL_check_seconds_timer() #3

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_dt_to_str(i8* %str, double %dtime) #0 !dbg !11626 {
entry:
  %str.addr = alloca i8*, align 8
  %dtime.addr = alloca double, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  store double %dtime, double* %dtime.addr, align 8
  call void @llvm.dbg.declare(metadata double* %dtime.addr, metadata !11631, metadata !DIExpression()), !dbg !11632
  %0 = load double, double* %dtime.addr, align 8, !dbg !11633
  %cmp = fcmp ogt double %0, 6.000000e+01, !dbg !11635
  br i1 %cmp, label %if.then, label %if.else13, !dbg !11636

if.then:                                          ; preds = %entry
  %1 = load double, double* %dtime.addr, align 8, !dbg !11637
  %cmp1 = fcmp ogt double %1, 3.600000e+03, !dbg !11640
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !11641

if.then2:                                         ; preds = %if.then
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11642
  %3 = load double, double* %dtime.addr, align 8, !dbg !11643
  %div = fdiv double %3, 3.600000e+03, !dbg !11644
  %conv = fptosi double %div to i32, !dbg !11645
  %4 = load double, double* %dtime.addr, align 8, !dbg !11646
  %div3 = fdiv double %4, 6.000000e+01, !dbg !11647
  %conv4 = fptosi double %div3 to i32, !dbg !11648
  %rem = srem i32 %conv4, 60, !dbg !11649
  %5 = load double, double* %dtime.addr, align 8, !dbg !11650
  %conv5 = fptosi double %5 to i32, !dbg !11651
  %rem6 = srem i32 %conv5, 60, !dbg !11652
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i32 %conv, i32 %rem, i32 %rem6) #7, !dbg !11653
  br label %if.end, !dbg !11653

if.else:                                          ; preds = %if.then
  %6 = load i8*, i8** %str.addr, align 8, !dbg !11654
  %7 = load double, double* %dtime.addr, align 8, !dbg !11655
  %div7 = fdiv double %7, 6.000000e+01, !dbg !11656
  %conv8 = fptosi double %div7 to i32, !dbg !11657
  %rem9 = srem i32 %conv8, 60, !dbg !11658
  %8 = load double, double* %dtime.addr, align 8, !dbg !11659
  %conv10 = fptosi double %8 to i32, !dbg !11660
  %rem11 = srem i32 %conv10, 60, !dbg !11661
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0), i32 %rem9, i32 %rem11) #7, !dbg !11662
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end17, !dbg !11663

if.else13:                                        ; preds = %entry
  %9 = load i8*, i8** %str.addr, align 8, !dbg !11664
  %10 = load double, double* %dtime.addr, align 8, !dbg !11665
  %conv14 = fptosi double %10 to i32, !dbg !11666
  %rem15 = srem i32 %conv14, 60, !dbg !11667
  %call16 = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i32 %rem15) #7, !dbg !11668
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.end
  ret void, !dbg !11669
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_data_read(%struct.PTCacheFile* %pf) #0 !dbg !11670 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %i = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11671, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11673, metadata !DIExpression()), !dbg !11674
  store i32 0, i32* %i, align 4, !dbg !11675
  br label %for.cond, !dbg !11677

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11678
  %cmp = icmp slt i32 %0, 8, !dbg !11680
  br i1 %cmp, label %for.body, label %for.end, !dbg !11681

for.body:                                         ; preds = %for.cond
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11682
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %1, i32 0, i32 5, !dbg !11685
  %2 = load i32, i32* %data_types, align 8, !dbg !11685
  %3 = load i32, i32* %i, align 4, !dbg !11686
  %shl = shl i32 1, %3, !dbg !11687
  %and = and i32 %2, %shl, !dbg !11688
  %tobool = icmp ne i32 %and, 0, !dbg !11688
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11689

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11690
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11691
  %cur = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %5, i32 0, i32 8, !dbg !11692
  %6 = load i32, i32* %i, align 4, !dbg !11693
  %idxprom = sext i32 %6 to i64, !dbg !11691
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 %idxprom, !dbg !11691
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !11691
  %8 = load i32, i32* %i, align 4, !dbg !11694
  %idxprom1 = sext i32 %8 to i64, !dbg !11695
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom1, !dbg !11695
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !11695
  %call = call i32 @ptcache_file_read(%struct.PTCacheFile* %4, i8* %7, i32 1, i32 %9), !dbg !11696
  %tobool3 = icmp ne i32 %call, 0, !dbg !11696
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11697

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11698
  br label %return, !dbg !11698

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !11699

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !11700
  %inc = add nsw i32 %10, 1, !dbg !11700
  store i32 %inc, i32* %i, align 4, !dbg !11700
  br label %for.cond, !dbg !11701, !llvm.loop !11702

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !11704
  br label %return, !dbg !11704

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11705
  ret i32 %11, !dbg !11705
}

; Function Attrs: noinline nounwind uwtable
define internal void @ptcache_data_copy(i8** %from, i8** %to) #0 !dbg !11706 {
entry:
  %from.addr = alloca i8**, align 8
  %to.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i8** %from, i8*** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %from.addr, metadata !11709, metadata !DIExpression()), !dbg !11710
  store i8** %to, i8*** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %to.addr, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i32 0, i32* %i, align 4, !dbg !11715
  br label %for.cond, !dbg !11717

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11718
  %cmp = icmp slt i32 %0, 8, !dbg !11720
  br i1 %cmp, label %for.body, label %for.end, !dbg !11721

for.body:                                         ; preds = %for.cond
  %1 = load i8**, i8*** %from.addr, align 8, !dbg !11722
  %2 = load i32, i32* %i, align 4, !dbg !11725
  %idxprom = sext i32 %2 to i64, !dbg !11722
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %idxprom, !dbg !11722
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !11722
  %tobool = icmp ne i8* %3, null, !dbg !11722
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11726

land.lhs.true:                                    ; preds = %for.body
  %4 = load i8**, i8*** %to.addr, align 8, !dbg !11727
  %5 = load i32, i32* %i, align 4, !dbg !11728
  %idxprom1 = sext i32 %5 to i64, !dbg !11727
  %arrayidx2 = getelementptr inbounds i8*, i8** %4, i64 %idxprom1, !dbg !11727
  %6 = load i8*, i8** %arrayidx2, align 8, !dbg !11727
  %tobool3 = icmp ne i8* %6, null, !dbg !11727
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11729

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8**, i8*** %to.addr, align 8, !dbg !11730
  %8 = load i32, i32* %i, align 4, !dbg !11731
  %idxprom4 = sext i32 %8 to i64, !dbg !11730
  %arrayidx5 = getelementptr inbounds i8*, i8** %7, i64 %idxprom4, !dbg !11730
  %9 = load i8*, i8** %arrayidx5, align 8, !dbg !11730
  %10 = load i8**, i8*** %from.addr, align 8, !dbg !11732
  %11 = load i32, i32* %i, align 4, !dbg !11733
  %idxprom6 = sext i32 %11 to i64, !dbg !11732
  %arrayidx7 = getelementptr inbounds i8*, i8** %10, i64 %idxprom6, !dbg !11732
  %12 = load i8*, i8** %arrayidx7, align 8, !dbg !11732
  %13 = load i32, i32* %i, align 4, !dbg !11734
  %idxprom8 = sext i32 %13 to i64, !dbg !11735
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom8, !dbg !11735
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !11735
  %conv = sext i32 %14 to i64, !dbg !11735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %12, i64 %conv, i1 false), !dbg !11736
  br label %if.end, !dbg !11736

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !11737

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !11738
  %inc = add nsw i32 %15, 1, !dbg !11738
  store i32 %inc, i32* %i, align 4, !dbg !11738
  br label %for.cond, !dbg !11739, !llvm.loop !11740

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11742
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptcache_file_data_write(%struct.PTCacheFile* %pf) #0 !dbg !11743 {
entry:
  %retval = alloca i32, align 4
  %pf.addr = alloca %struct.PTCacheFile*, align 8
  %i = alloca i32, align 4
  store %struct.PTCacheFile* %pf, %struct.PTCacheFile** %pf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheFile** %pf.addr, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11746, metadata !DIExpression()), !dbg !11747
  store i32 0, i32* %i, align 4, !dbg !11748
  br label %for.cond, !dbg !11750

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11751
  %cmp = icmp slt i32 %0, 8, !dbg !11753
  br i1 %cmp, label %for.body, label %for.end, !dbg !11754

for.body:                                         ; preds = %for.cond
  %1 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11755
  %data_types = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %1, i32 0, i32 5, !dbg !11758
  %2 = load i32, i32* %data_types, align 8, !dbg !11758
  %3 = load i32, i32* %i, align 4, !dbg !11759
  %shl = shl i32 1, %3, !dbg !11760
  %and = and i32 %2, %shl, !dbg !11761
  %tobool = icmp ne i32 %and, 0, !dbg !11761
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11762

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11763
  %5 = load %struct.PTCacheFile*, %struct.PTCacheFile** %pf.addr, align 8, !dbg !11764
  %cur = getelementptr inbounds %struct.PTCacheFile, %struct.PTCacheFile* %5, i32 0, i32 8, !dbg !11765
  %6 = load i32, i32* %i, align 4, !dbg !11766
  %idxprom = sext i32 %6 to i64, !dbg !11764
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %cur, i64 0, i64 %idxprom, !dbg !11764
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !11764
  %8 = load i32, i32* %i, align 4, !dbg !11767
  %idxprom1 = sext i32 %8 to i64, !dbg !11768
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* @ptcache_data_size, i64 0, i64 %idxprom1, !dbg !11768
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !11768
  %call = call i32 @ptcache_file_write(%struct.PTCacheFile* %4, i8* %7, i32 1, i32 %9), !dbg !11769
  %tobool3 = icmp ne i32 %call, 0, !dbg !11769
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11770

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11771
  br label %return, !dbg !11771

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !11772

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !11773
  %inc = add nsw i32 %10, 1, !dbg !11773
  store i32 %inc, i32* %i, align 4, !dbg !11773
  br label %for.cond, !dbg !11774, !llvm.loop !11775

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !11777
  br label %return, !dbg !11777

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11778
  ret i32 %11, !dbg !11778
}

declare dso_local %struct._IO_FILE* @BLI_fopen(i8*, i8*) #3

declare dso_local void @BLI_make_existing_file(i8*) #3

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2741, !2742, !2743}
!llvm.ident = !{!2744}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ptcache_data_size", scope: !2, file: !3, line: 118, type: !2740, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !128, globals: !2736, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/pointcache.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !15, !68, !73, !88, !99, !112, !124}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 420, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "OB_POSX", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_POSY", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_POSZ", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_NEGX", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_NEGY", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_NEGZ", value: 5, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !16, line: 35, baseType: !7, size: 32, elements: !17)
!16 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67}
!18 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!19 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!22 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!23 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!24 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!25 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!26 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!27 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!28 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!29 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!30 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!31 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!32 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!33 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!34 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!35 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!36 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!37 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!38 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!39 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!40 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!41 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!42 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!43 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!44 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!45 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!46 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!47 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!48 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!49 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!50 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!51 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!52 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!53 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!54 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!55 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!56 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!57 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!58 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!59 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!60 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!61 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!62 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!63 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!64 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!65 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!66 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!67 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 359, baseType: !7, size: 32, elements: !69)
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "MOD_SMOKE_TYPE_DOMAIN", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "MOD_SMOKE_TYPE_FLOW", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "MOD_SMOKE_TYPE_COLL", value: 4, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 394, baseType: !7, size: 32, elements: !74)
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87}
!75 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!76 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!77 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!78 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!79 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!80 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!81 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!82 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!83 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!84 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!85 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!86 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!87 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRigidBodyOb_Flag", file: !89, line: 138, baseType: !7, size: 32, elements: !90)
!89 = !DIFile(filename: "blender/source/blender/makesdna/DNA_rigidbody_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95, !96, !97, !98}
!91 = !DIEnumerator(name: "RBO_FLAG_KINEMATIC", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "RBO_FLAG_NEEDS_VALIDATE", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "RBO_FLAG_NEEDS_RESHAPE", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "RBO_FLAG_USE_DEACTIVATION", value: 8, isUnsigned: true)
!95 = !DIEnumerator(name: "RBO_FLAG_START_DEACTIVATED", value: 16, isUnsigned: true)
!96 = !DIEnumerator(name: "RBO_FLAG_DISABLED", value: 32, isUnsigned: true)
!97 = !DIEnumerator(name: "RBO_FLAG_USE_MARGIN", value: 64, isUnsigned: true)
!98 = !DIEnumerator(name: "RBO_FLAG_USE_DEFORM", value: 128, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111}
!101 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!111 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !113, line: 123, baseType: !7, size: 32, elements: !114)
!113 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123}
!115 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!117 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!119 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!120 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!121 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!122 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!123 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRigidBodyOb_Type", file: !89, line: 130, baseType: !7, size: 32, elements: !125)
!125 = !{!126, !127}
!126 = !DIEnumerator(name: "RBO_TYPE_ACTIVE", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "RBO_TYPE_PASSIVE", value: 1, isUnsigned: true)
!128 = !{!129, !131, !132, !2419, !2540, !144, !256, !2587, !2655, !2657, !1139, !7, !2658}
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !16, line: 566, baseType: !134)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !16, line: 557, size: 1344, elements: !135)
!135 = !{!136, !2358, !2359, !2411, !2414, !2417, !2418}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !134, file: !16, line: 558, baseType: !137, size: 896)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !16, line: 110, baseType: !138)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !16, line: 99, size: 896, elements: !139)
!139 = !{!140, !142, !143, !145, !146, !147, !148, !152, !2357}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !138, file: !16, line: 100, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !16, line: 100, baseType: !141, size: 64, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !138, file: !16, line: 102, baseType: !144, size: 32, offset: 128)
!144 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !138, file: !16, line: 102, baseType: !144, size: 32, offset: 160)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !138, file: !16, line: 103, baseType: !144, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !138, file: !16, line: 103, baseType: !144, size: 32, offset: 224)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !138, file: !16, line: 104, baseType: !149, size: 512, offset: 256)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 512, elements: !150)
!150 = !{!151}
!151 = !DISubrange(count: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !138, file: !16, line: 107, baseType: !153, size: 64, offset: 768)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !155, line: 1216, size: 39680, elements: !156)
!155 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!156 = !{!157, !223, !227, !1716, !1719, !1720, !1721, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1748, !1962, !1965, !2215, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2237, !2238, !2239, !2240, !2241, !2249, !2315, !2322, !2323, !2330, !2333, !2334, !2335, !2336, !2337, !2338}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !155, line: 1217, baseType: !158, size: 960)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !159, line: 130, baseType: !160)
!159 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !159, line: 117, size: 960, elements: !161)
!161 = !{!162, !163, !164, !166, !185, !189, !191, !192, !193, !194}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !160, file: !159, line: 118, baseType: !131, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !160, file: !159, line: 118, baseType: !131, size: 64, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !160, file: !159, line: 119, baseType: !165, size: 64, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !160, file: !159, line: 120, baseType: !167, size: 64, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !159, line: 136, size: 17600, elements: !169)
!169 = !{!170, !171, !173, !176, !180, !181, !182}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !168, file: !159, line: 137, baseType: !158, size: 960)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !168, file: !159, line: 138, baseType: !172, size: 64, offset: 960)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !168, file: !159, line: 139, baseType: !174, size: 64, offset: 1024)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !159, line: 43, flags: DIFlagFwdDecl)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !168, file: !159, line: 140, baseType: !177, size: 8192, offset: 1088)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 8192, elements: !178)
!178 = !{!179}
!179 = !DISubrange(count: 1024)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !168, file: !159, line: 141, baseType: !177, size: 8192, offset: 9280)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !168, file: !159, line: 148, baseType: !167, size: 64, offset: 17472)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !168, file: !159, line: 150, baseType: !183, size: 64, offset: 17536)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !159, line: 45, flags: DIFlagFwdDecl)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !160, file: !159, line: 121, baseType: !186, size: 528, offset: 256)
!186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 528, elements: !187)
!187 = !{!188}
!188 = !DISubrange(count: 66)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !160, file: !159, line: 126, baseType: !190, size: 16, offset: 784)
!190 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !160, file: !159, line: 127, baseType: !144, size: 32, offset: 800)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !160, file: !159, line: 128, baseType: !144, size: 32, offset: 832)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !160, file: !159, line: 128, baseType: !144, size: 32, offset: 864)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !160, file: !159, line: 129, baseType: !195, size: 64, offset: 896)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !159, line: 75, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !159, line: 62, size: 1024, elements: !198)
!198 = !{!199, !201, !202, !203, !204, !205, !206, !207, !221, !222}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !197, file: !159, line: 63, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !197, file: !159, line: 63, baseType: !200, size: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !197, file: !159, line: 64, baseType: !130, size: 8, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !197, file: !159, line: 64, baseType: !130, size: 8, offset: 136)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !197, file: !159, line: 65, baseType: !190, size: 16, offset: 144)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !197, file: !159, line: 66, baseType: !149, size: 512, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !197, file: !159, line: 67, baseType: !144, size: 32, offset: 672)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !197, file: !159, line: 69, baseType: !208, size: 256, offset: 704)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !159, line: 60, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !159, line: 48, size: 256, elements: !210)
!210 = !{!211, !212, !219, !220}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !209, file: !159, line: 49, baseType: !131, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !209, file: !159, line: 58, baseType: !213, size: 128, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !214, line: 71, baseType: !215)
!214 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !214, line: 69, size: 128, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !215, file: !214, line: 70, baseType: !131, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !215, file: !214, line: 70, baseType: !131, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !209, file: !159, line: 59, baseType: !144, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !209, file: !159, line: 59, baseType: !144, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !197, file: !159, line: 70, baseType: !144, size: 32, offset: 960)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !197, file: !159, line: 74, baseType: !144, size: 32, offset: 992)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !154, file: !155, line: 1218, baseType: !224, size: 64, offset: 960)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !226, line: 45, flags: DIFlagFwdDecl)
!226 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!227 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !154, file: !155, line: 1220, baseType: !228, size: 64, offset: 1024)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 115, size: 11392, elements: !230)
!230 = !{!231, !232, !233, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !250, !262, !276, !277, !320, !321, !324, !325, !341, !342, !343, !344, !345, !346, !347, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !367, !368, !369, !370, !371, !372, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !464, !465, !466, !467, !468, !469, !470, !471, !472, !842, !1619, !1620, !1621, !1622, !1623, !1624, !1627, !1630, !1631, !1632, !1636, !1637, !1638, !1639, !1640, !1641, !1643, !1666, !1700, !1701, !1704, !1705}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !229, file: !6, line: 116, baseType: !158, size: 960)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !229, file: !6, line: 117, baseType: !224, size: 64, offset: 960)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !229, file: !6, line: 119, baseType: !234, size: 64, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !6, line: 57, flags: DIFlagFwdDecl)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !229, file: !6, line: 121, baseType: !190, size: 16, offset: 1088)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !229, file: !6, line: 121, baseType: !190, size: 16, offset: 1104)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !229, file: !6, line: 122, baseType: !144, size: 32, offset: 1120)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !229, file: !6, line: 122, baseType: !144, size: 32, offset: 1152)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !229, file: !6, line: 122, baseType: !144, size: 32, offset: 1184)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !229, file: !6, line: 123, baseType: !149, size: 512, offset: 1216)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !229, file: !6, line: 124, baseType: !228, size: 64, offset: 1728)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !229, file: !6, line: 124, baseType: !228, size: 64, offset: 1792)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !229, file: !6, line: 127, baseType: !228, size: 64, offset: 1856)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !229, file: !6, line: 127, baseType: !228, size: 64, offset: 1920)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !229, file: !6, line: 127, baseType: !228, size: 64, offset: 1984)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !229, file: !6, line: 128, baseType: !248, size: 64, offset: 2048)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !226, line: 46, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !229, file: !6, line: 130, baseType: !251, size: 64, offset: 2112)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !6, line: 97, size: 832, elements: !253)
!253 = !{!254, !260, !261}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !252, file: !6, line: 98, baseType: !255, size: 768)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 768, elements: !257)
!256 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!257 = !{!258, !259}
!258 = !DISubrange(count: 8)
!259 = !DISubrange(count: 3)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !252, file: !6, line: 99, baseType: !144, size: 32, offset: 768)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !252, file: !6, line: 99, baseType: !144, size: 32, offset: 800)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !229, file: !6, line: 131, baseType: !263, size: 64, offset: 2176)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !265, line: 486, size: 1600, elements: !266)
!265 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!266 = !{!267, !268, !269, !270, !271, !272, !273, !274, !275}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !264, file: !265, line: 487, baseType: !158, size: 960)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !264, file: !265, line: 489, baseType: !213, size: 128, offset: 960)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !264, file: !265, line: 490, baseType: !213, size: 128, offset: 1088)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !264, file: !265, line: 491, baseType: !213, size: 128, offset: 1216)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !264, file: !265, line: 492, baseType: !213, size: 128, offset: 1344)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !264, file: !265, line: 494, baseType: !144, size: 32, offset: 1472)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !264, file: !265, line: 495, baseType: !144, size: 32, offset: 1504)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !264, file: !265, line: 497, baseType: !144, size: 32, offset: 1536)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !264, file: !265, line: 498, baseType: !144, size: 32, offset: 1568)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !229, file: !6, line: 132, baseType: !263, size: 64, offset: 2240)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !229, file: !6, line: 133, baseType: !278, size: 64, offset: 2304)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !265, line: 334, size: 1728, elements: !280)
!280 = !{!281, !282, !285, !286, !287, !288, !289, !290, !293, !294, !295, !296, !297, !298, !299, !319}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !279, file: !265, line: 335, baseType: !213, size: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !279, file: !265, line: 336, baseType: !283, size: 64, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !265, line: 47, flags: DIFlagFwdDecl)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !279, file: !265, line: 338, baseType: !190, size: 16, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !279, file: !265, line: 338, baseType: !190, size: 16, offset: 208)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !279, file: !265, line: 339, baseType: !7, size: 32, offset: 224)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !279, file: !265, line: 340, baseType: !144, size: 32, offset: 256)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !279, file: !265, line: 342, baseType: !256, size: 32, offset: 288)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !279, file: !265, line: 343, baseType: !291, size: 96, offset: 320)
!291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 96, elements: !292)
!292 = !{!259}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !279, file: !265, line: 344, baseType: !291, size: 96, offset: 416)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !279, file: !265, line: 347, baseType: !213, size: 128, offset: 512)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !279, file: !265, line: 349, baseType: !144, size: 32, offset: 640)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !279, file: !265, line: 350, baseType: !144, size: 32, offset: 672)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !279, file: !265, line: 351, baseType: !131, size: 64, offset: 704)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !279, file: !265, line: 352, baseType: !131, size: 64, offset: 768)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !279, file: !265, line: 354, baseType: !300, size: 384, offset: 832)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !265, line: 116, baseType: !301)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !265, line: 94, size: 384, elements: !302)
!302 = !{!303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !301, file: !265, line: 96, baseType: !144, size: 32)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !301, file: !265, line: 96, baseType: !144, size: 32, offset: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !301, file: !265, line: 97, baseType: !144, size: 32, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !301, file: !265, line: 97, baseType: !144, size: 32, offset: 96)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !301, file: !265, line: 99, baseType: !190, size: 16, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !301, file: !265, line: 100, baseType: !190, size: 16, offset: 144)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !301, file: !265, line: 102, baseType: !190, size: 16, offset: 160)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !301, file: !265, line: 105, baseType: !190, size: 16, offset: 176)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !301, file: !265, line: 108, baseType: !190, size: 16, offset: 192)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !301, file: !265, line: 109, baseType: !190, size: 16, offset: 208)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !301, file: !265, line: 111, baseType: !190, size: 16, offset: 224)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !301, file: !265, line: 112, baseType: !190, size: 16, offset: 240)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !301, file: !265, line: 114, baseType: !144, size: 32, offset: 256)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !301, file: !265, line: 114, baseType: !144, size: 32, offset: 288)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !301, file: !265, line: 115, baseType: !144, size: 32, offset: 320)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !301, file: !265, line: 115, baseType: !144, size: 32, offset: 352)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !279, file: !265, line: 355, baseType: !149, size: 512, offset: 1216)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !229, file: !6, line: 134, baseType: !131, size: 64, offset: 2368)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !229, file: !6, line: 136, baseType: !322, size: 64, offset: 2432)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !6, line: 58, flags: DIFlagFwdDecl)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !229, file: !6, line: 138, baseType: !300, size: 384, offset: 2496)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !229, file: !6, line: 139, baseType: !326, size: 64, offset: 2880)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !265, line: 80, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !265, line: 72, size: 192, elements: !329)
!329 = !{!330, !337, !338, !339, !340}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !328, file: !265, line: 73, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !265, line: 59, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !265, line: 56, size: 128, elements: !334)
!334 = !{!335, !336}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !333, file: !265, line: 57, baseType: !291, size: 96)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !333, file: !265, line: 58, baseType: !144, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !328, file: !265, line: 74, baseType: !144, size: 32, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !328, file: !265, line: 76, baseType: !144, size: 32, offset: 96)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !328, file: !265, line: 77, baseType: !144, size: 32, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !328, file: !265, line: 79, baseType: !144, size: 32, offset: 160)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !229, file: !6, line: 141, baseType: !213, size: 128, offset: 2944)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !229, file: !6, line: 142, baseType: !213, size: 128, offset: 3072)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !229, file: !6, line: 143, baseType: !213, size: 128, offset: 3200)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !229, file: !6, line: 144, baseType: !213, size: 128, offset: 3328)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !229, file: !6, line: 146, baseType: !144, size: 32, offset: 3456)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !229, file: !6, line: 147, baseType: !144, size: 32, offset: 3488)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !229, file: !6, line: 150, baseType: !348, size: 64, offset: 3520)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !351, line: 207, flags: DIFlagFwdDecl)
!351 = !DIFile(filename: "blender/source/blender/makesdna/DNA_dynamicpaint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!352 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !229, file: !6, line: 151, baseType: !129, size: 64, offset: 3584)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !229, file: !6, line: 152, baseType: !144, size: 32, offset: 3648)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !229, file: !6, line: 153, baseType: !144, size: 32, offset: 3680)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !229, file: !6, line: 156, baseType: !291, size: 96, offset: 3712)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !229, file: !6, line: 156, baseType: !291, size: 96, offset: 3808)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !229, file: !6, line: 156, baseType: !291, size: 96, offset: 3904)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !6, line: 157, baseType: !291, size: 96, offset: 4000)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !229, file: !6, line: 158, baseType: !291, size: 96, offset: 4096)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !229, file: !6, line: 159, baseType: !291, size: 96, offset: 4192)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !229, file: !6, line: 160, baseType: !291, size: 96, offset: 4288)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !229, file: !6, line: 160, baseType: !291, size: 96, offset: 4384)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !229, file: !6, line: 161, baseType: !364, size: 128, offset: 4480)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !365)
!365 = !{!366}
!366 = !DISubrange(count: 4)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !229, file: !6, line: 161, baseType: !364, size: 128, offset: 4608)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !229, file: !6, line: 162, baseType: !291, size: 96, offset: 4736)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !229, file: !6, line: 162, baseType: !291, size: 96, offset: 4832)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !229, file: !6, line: 163, baseType: !256, size: 32, offset: 4928)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !229, file: !6, line: 163, baseType: !256, size: 32, offset: 4960)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !229, file: !6, line: 164, baseType: !373, size: 512, offset: 4992)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 512, elements: !374)
!374 = !{!366, !366}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !229, file: !6, line: 165, baseType: !373, size: 512, offset: 5504)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !229, file: !6, line: 166, baseType: !373, size: 512, offset: 6016)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !229, file: !6, line: 167, baseType: !373, size: 512, offset: 6528)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !229, file: !6, line: 176, baseType: !373, size: 512, offset: 7040)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !229, file: !6, line: 178, baseType: !7, size: 32, offset: 7552)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !229, file: !6, line: 180, baseType: !190, size: 16, offset: 7584)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !229, file: !6, line: 181, baseType: !190, size: 16, offset: 7600)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !229, file: !6, line: 183, baseType: !190, size: 16, offset: 7616)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !229, file: !6, line: 183, baseType: !190, size: 16, offset: 7632)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !229, file: !6, line: 184, baseType: !190, size: 16, offset: 7648)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !229, file: !6, line: 184, baseType: !190, size: 16, offset: 7664)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !229, file: !6, line: 185, baseType: !190, size: 16, offset: 7680)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !229, file: !6, line: 186, baseType: !190, size: 16, offset: 7696)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !229, file: !6, line: 187, baseType: !190, size: 16, offset: 7712)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !229, file: !6, line: 188, baseType: !130, size: 8, offset: 7728)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !229, file: !6, line: 189, baseType: !130, size: 8, offset: 7736)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !229, file: !6, line: 192, baseType: !144, size: 32, offset: 7744)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !229, file: !6, line: 192, baseType: !144, size: 32, offset: 7776)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !229, file: !6, line: 192, baseType: !144, size: 32, offset: 7808)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !229, file: !6, line: 192, baseType: !144, size: 32, offset: 7840)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !229, file: !6, line: 194, baseType: !144, size: 32, offset: 7872)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !229, file: !6, line: 202, baseType: !256, size: 32, offset: 7904)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !229, file: !6, line: 202, baseType: !256, size: 32, offset: 7936)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !229, file: !6, line: 202, baseType: !256, size: 32, offset: 7968)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !229, file: !6, line: 211, baseType: !256, size: 32, offset: 8000)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !229, file: !6, line: 212, baseType: !256, size: 32, offset: 8032)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !229, file: !6, line: 213, baseType: !256, size: 32, offset: 8064)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !229, file: !6, line: 214, baseType: !256, size: 32, offset: 8096)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !229, file: !6, line: 215, baseType: !256, size: 32, offset: 8128)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !229, file: !6, line: 216, baseType: !256, size: 32, offset: 8160)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !229, file: !6, line: 219, baseType: !256, size: 32, offset: 8192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !229, file: !6, line: 220, baseType: !256, size: 32, offset: 8224)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !229, file: !6, line: 221, baseType: !256, size: 32, offset: 8256)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !229, file: !6, line: 224, baseType: !409, size: 16, offset: 8288)
!409 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !229, file: !6, line: 224, baseType: !409, size: 16, offset: 8304)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !229, file: !6, line: 226, baseType: !190, size: 16, offset: 8320)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !229, file: !6, line: 228, baseType: !130, size: 8, offset: 8336)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !229, file: !6, line: 229, baseType: !130, size: 8, offset: 8344)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !229, file: !6, line: 231, baseType: !190, size: 16, offset: 8352)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !229, file: !6, line: 232, baseType: !130, size: 8, offset: 8368)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !229, file: !6, line: 233, baseType: !130, size: 8, offset: 8376)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !229, file: !6, line: 234, baseType: !256, size: 32, offset: 8384)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !229, file: !6, line: 235, baseType: !256, size: 32, offset: 8416)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !229, file: !6, line: 237, baseType: !213, size: 128, offset: 8448)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !229, file: !6, line: 238, baseType: !213, size: 128, offset: 8576)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !229, file: !6, line: 239, baseType: !213, size: 128, offset: 8704)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !229, file: !6, line: 240, baseType: !213, size: 128, offset: 8832)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !229, file: !6, line: 242, baseType: !256, size: 32, offset: 8960)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !229, file: !6, line: 244, baseType: !190, size: 16, offset: 8992)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !229, file: !6, line: 245, baseType: !409, size: 16, offset: 9008)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !229, file: !6, line: 246, baseType: !364, size: 128, offset: 9024)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !229, file: !6, line: 248, baseType: !144, size: 32, offset: 9152)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !229, file: !6, line: 249, baseType: !144, size: 32, offset: 9184)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !229, file: !6, line: 251, baseType: !430, size: 64, offset: 9216)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !432, line: 215, size: 960, elements: !433)
!432 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !431, file: !432, line: 216, baseType: !144, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !431, file: !432, line: 217, baseType: !256, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !431, file: !432, line: 218, baseType: !256, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !431, file: !432, line: 219, baseType: !256, size: 32, offset: 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !431, file: !432, line: 221, baseType: !144, size: 32, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !431, file: !432, line: 222, baseType: !144, size: 32, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !431, file: !432, line: 223, baseType: !144, size: 32, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !431, file: !432, line: 224, baseType: !144, size: 32, offset: 224)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !431, file: !432, line: 226, baseType: !256, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !431, file: !432, line: 227, baseType: !256, size: 32, offset: 288)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !431, file: !432, line: 228, baseType: !256, size: 32, offset: 320)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !431, file: !432, line: 229, baseType: !256, size: 32, offset: 352)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !431, file: !432, line: 231, baseType: !256, size: 32, offset: 384)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !431, file: !432, line: 232, baseType: !256, size: 32, offset: 416)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !431, file: !432, line: 233, baseType: !256, size: 32, offset: 448)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !431, file: !432, line: 234, baseType: !256, size: 32, offset: 480)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !431, file: !432, line: 236, baseType: !256, size: 32, offset: 512)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !431, file: !432, line: 237, baseType: !256, size: 32, offset: 544)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !431, file: !432, line: 238, baseType: !256, size: 32, offset: 576)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !431, file: !432, line: 239, baseType: !256, size: 32, offset: 608)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !431, file: !432, line: 241, baseType: !256, size: 32, offset: 640)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !431, file: !432, line: 242, baseType: !256, size: 32, offset: 672)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !431, file: !432, line: 243, baseType: !256, size: 32, offset: 704)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !431, file: !432, line: 244, baseType: !256, size: 32, offset: 736)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !431, file: !432, line: 246, baseType: !256, size: 32, offset: 768)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !431, file: !432, line: 247, baseType: !256, size: 32, offset: 800)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !431, file: !432, line: 248, baseType: !144, size: 32, offset: 832)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !431, file: !432, line: 249, baseType: !144, size: 32, offset: 864)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !431, file: !432, line: 250, baseType: !256, size: 32, offset: 896)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !431, file: !432, line: 251, baseType: !256, size: 32, offset: 928)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !229, file: !6, line: 253, baseType: !130, size: 8, offset: 9280)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !229, file: !6, line: 254, baseType: !130, size: 8, offset: 9288)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !229, file: !6, line: 255, baseType: !190, size: 16, offset: 9296)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !229, file: !6, line: 256, baseType: !291, size: 96, offset: 9312)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !229, file: !6, line: 258, baseType: !213, size: 128, offset: 9408)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !229, file: !6, line: 259, baseType: !213, size: 128, offset: 9536)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !229, file: !6, line: 260, baseType: !213, size: 128, offset: 9664)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !229, file: !6, line: 261, baseType: !213, size: 128, offset: 9792)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !229, file: !6, line: 263, baseType: !473, size: 64, offset: 9920)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !432, line: 61, size: 1280, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !836, !839, !840, !841}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !474, file: !432, line: 62, baseType: !144, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !474, file: !432, line: 63, baseType: !190, size: 16, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !474, file: !432, line: 64, baseType: !190, size: 16, offset: 48)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !474, file: !432, line: 65, baseType: !190, size: 16, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !474, file: !432, line: 66, baseType: !190, size: 16, offset: 80)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !474, file: !432, line: 67, baseType: !190, size: 16, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !474, file: !432, line: 68, baseType: !190, size: 16, offset: 112)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !474, file: !432, line: 68, baseType: !190, size: 16, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !474, file: !432, line: 69, baseType: !190, size: 16, offset: 144)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !474, file: !432, line: 72, baseType: !256, size: 32, offset: 160)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !474, file: !432, line: 73, baseType: !256, size: 32, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !474, file: !432, line: 74, baseType: !256, size: 32, offset: 224)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !474, file: !432, line: 77, baseType: !256, size: 32, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !474, file: !432, line: 80, baseType: !256, size: 32, offset: 288)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !474, file: !432, line: 81, baseType: !256, size: 32, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !474, file: !432, line: 82, baseType: !256, size: 32, offset: 352)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !474, file: !432, line: 83, baseType: !256, size: 32, offset: 384)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !474, file: !432, line: 84, baseType: !256, size: 32, offset: 416)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !474, file: !432, line: 85, baseType: !256, size: 32, offset: 448)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !474, file: !432, line: 88, baseType: !256, size: 32, offset: 480)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !474, file: !432, line: 89, baseType: !256, size: 32, offset: 512)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !474, file: !432, line: 90, baseType: !256, size: 32, offset: 544)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !474, file: !432, line: 91, baseType: !256, size: 32, offset: 576)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !474, file: !432, line: 92, baseType: !256, size: 32, offset: 608)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !474, file: !432, line: 93, baseType: !256, size: 32, offset: 640)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !474, file: !432, line: 95, baseType: !256, size: 32, offset: 672)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !474, file: !432, line: 98, baseType: !256, size: 32, offset: 704)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !474, file: !432, line: 99, baseType: !256, size: 32, offset: 736)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !474, file: !432, line: 100, baseType: !256, size: 32, offset: 768)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !474, file: !432, line: 103, baseType: !256, size: 32, offset: 800)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !474, file: !432, line: 103, baseType: !256, size: 32, offset: 832)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !474, file: !432, line: 104, baseType: !256, size: 32, offset: 864)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !474, file: !432, line: 104, baseType: !256, size: 32, offset: 896)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !474, file: !432, line: 104, baseType: !256, size: 32, offset: 928)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !474, file: !432, line: 104, baseType: !256, size: 32, offset: 960)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !474, file: !432, line: 107, baseType: !256, size: 32, offset: 992)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !474, file: !432, line: 108, baseType: !513, size: 64, offset: 1024)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !226, line: 202, size: 3328, elements: !515)
!515 = !{!516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !585, !588, !589, !672, !698, !726, !727, !805, !826, !834, !835}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !514, file: !226, line: 203, baseType: !158, size: 960)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !514, file: !226, line: 204, baseType: !224, size: 64, offset: 960)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !514, file: !226, line: 206, baseType: !256, size: 32, offset: 1024)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !514, file: !226, line: 206, baseType: !256, size: 32, offset: 1056)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1088)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1120)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1152)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1184)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1216)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !514, file: !226, line: 207, baseType: !256, size: 32, offset: 1248)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !514, file: !226, line: 208, baseType: !256, size: 32, offset: 1280)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !514, file: !226, line: 208, baseType: !256, size: 32, offset: 1312)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !514, file: !226, line: 211, baseType: !256, size: 32, offset: 1344)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !514, file: !226, line: 211, baseType: !256, size: 32, offset: 1376)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !514, file: !226, line: 211, baseType: !256, size: 32, offset: 1408)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !514, file: !226, line: 211, baseType: !256, size: 32, offset: 1440)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !514, file: !226, line: 211, baseType: !256, size: 32, offset: 1472)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !514, file: !226, line: 214, baseType: !256, size: 32, offset: 1504)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !514, file: !226, line: 214, baseType: !256, size: 32, offset: 1536)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !514, file: !226, line: 217, baseType: !256, size: 32, offset: 1568)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !514, file: !226, line: 218, baseType: !256, size: 32, offset: 1600)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !514, file: !226, line: 219, baseType: !256, size: 32, offset: 1632)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !514, file: !226, line: 220, baseType: !256, size: 32, offset: 1664)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !514, file: !226, line: 221, baseType: !256, size: 32, offset: 1696)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !514, file: !226, line: 222, baseType: !190, size: 16, offset: 1728)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !514, file: !226, line: 222, baseType: !190, size: 16, offset: 1744)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !514, file: !226, line: 224, baseType: !190, size: 16, offset: 1760)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !514, file: !226, line: 224, baseType: !190, size: 16, offset: 1776)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !514, file: !226, line: 227, baseType: !190, size: 16, offset: 1792)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !514, file: !226, line: 227, baseType: !190, size: 16, offset: 1808)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !514, file: !226, line: 229, baseType: !190, size: 16, offset: 1824)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !514, file: !226, line: 229, baseType: !190, size: 16, offset: 1840)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !514, file: !226, line: 230, baseType: !190, size: 16, offset: 1856)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !514, file: !226, line: 230, baseType: !190, size: 16, offset: 1872)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !514, file: !226, line: 232, baseType: !256, size: 32, offset: 1888)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !514, file: !226, line: 232, baseType: !256, size: 32, offset: 1920)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !514, file: !226, line: 232, baseType: !256, size: 32, offset: 1952)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !514, file: !226, line: 232, baseType: !256, size: 32, offset: 1984)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !514, file: !226, line: 233, baseType: !144, size: 32, offset: 2016)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !514, file: !226, line: 234, baseType: !144, size: 32, offset: 2048)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !514, file: !226, line: 235, baseType: !190, size: 16, offset: 2080)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !514, file: !226, line: 235, baseType: !190, size: 16, offset: 2096)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !514, file: !226, line: 236, baseType: !190, size: 16, offset: 2112)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !514, file: !226, line: 239, baseType: !190, size: 16, offset: 2128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !514, file: !226, line: 240, baseType: !144, size: 32, offset: 2144)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !514, file: !226, line: 241, baseType: !144, size: 32, offset: 2176)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !514, file: !226, line: 241, baseType: !144, size: 32, offset: 2208)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !514, file: !226, line: 241, baseType: !144, size: 32, offset: 2240)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !514, file: !226, line: 243, baseType: !256, size: 32, offset: 2272)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !514, file: !226, line: 243, baseType: !256, size: 32, offset: 2304)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !514, file: !226, line: 244, baseType: !256, size: 32, offset: 2336)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !514, file: !226, line: 246, baseType: !568, size: 320, offset: 2368)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !569, line: 50, size: 320, elements: !570)
!569 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!570 = !{!571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !568, file: !569, line: 51, baseType: !153, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !568, file: !569, line: 53, baseType: !144, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !568, file: !569, line: 54, baseType: !144, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !568, file: !569, line: 55, baseType: !144, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !568, file: !569, line: 55, baseType: !144, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !568, file: !569, line: 56, baseType: !130, size: 8, offset: 192)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !568, file: !569, line: 56, baseType: !130, size: 8, offset: 200)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !568, file: !569, line: 57, baseType: !130, size: 8, offset: 208)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !568, file: !569, line: 57, baseType: !130, size: 8, offset: 216)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !568, file: !569, line: 59, baseType: !190, size: 16, offset: 224)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !568, file: !569, line: 59, baseType: !190, size: 16, offset: 240)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !568, file: !569, line: 59, baseType: !190, size: 16, offset: 256)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !568, file: !569, line: 61, baseType: !190, size: 16, offset: 272)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !568, file: !569, line: 63, baseType: !144, size: 32, offset: 288)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !514, file: !226, line: 248, baseType: !586, size: 64, offset: 2688)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !226, line: 248, flags: DIFlagFwdDecl)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !514, file: !226, line: 249, baseType: !248, size: 64, offset: 2752)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !514, file: !226, line: 250, baseType: !590, size: 64, offset: 2816)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !569, line: 77, size: 15424, elements: !592)
!592 = !{!593, !594, !595, !598, !601, !604, !607, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !626, !627, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !661, !662, !666}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !591, file: !569, line: 78, baseType: !158, size: 960)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !591, file: !569, line: 80, baseType: !177, size: 8192, offset: 960)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !591, file: !569, line: 82, baseType: !596, size: 64, offset: 9152)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !569, line: 43, flags: DIFlagFwdDecl)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !591, file: !569, line: 83, baseType: !599, size: 64, offset: 9216)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !159, line: 46, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !591, file: !569, line: 86, baseType: !602, size: 64, offset: 9280)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !569, line: 41, flags: DIFlagFwdDecl)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !591, file: !569, line: 87, baseType: !605, size: 64, offset: 9344)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !569, line: 44, flags: DIFlagFwdDecl)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !591, file: !569, line: 89, baseType: !608, size: 512, offset: 9408)
!608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 512, elements: !609)
!609 = !{!258}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !591, file: !569, line: 90, baseType: !190, size: 16, offset: 9920)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !591, file: !569, line: 90, baseType: !190, size: 16, offset: 9936)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !591, file: !569, line: 92, baseType: !190, size: 16, offset: 9952)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !591, file: !569, line: 92, baseType: !190, size: 16, offset: 9968)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !591, file: !569, line: 93, baseType: !190, size: 16, offset: 9984)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !591, file: !569, line: 93, baseType: !190, size: 16, offset: 10000)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !591, file: !569, line: 94, baseType: !144, size: 32, offset: 10016)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !591, file: !569, line: 97, baseType: !190, size: 16, offset: 10048)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !591, file: !569, line: 97, baseType: !190, size: 16, offset: 10064)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !591, file: !569, line: 98, baseType: !190, size: 16, offset: 10080)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !591, file: !569, line: 98, baseType: !190, size: 16, offset: 10096)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !591, file: !569, line: 99, baseType: !190, size: 16, offset: 10112)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !591, file: !569, line: 99, baseType: !190, size: 16, offset: 10128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !591, file: !569, line: 100, baseType: !7, size: 32, offset: 10144)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !591, file: !569, line: 101, baseType: !625, size: 64, offset: 10176)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !591, file: !569, line: 103, baseType: !183, size: 64, offset: 10240)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !591, file: !569, line: 104, baseType: !628, size: 64, offset: 10304)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !159, line: 159, size: 448, elements: !630)
!630 = !{!631, !635, !636, !638, !639, !641}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !629, file: !159, line: 161, baseType: !632, size: 64)
!632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !633)
!633 = !{!634}
!634 = !DISubrange(count: 2)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !629, file: !159, line: 162, baseType: !632, size: 64, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !629, file: !159, line: 163, baseType: !637, size: 32, offset: 128)
!637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 32, elements: !633)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !629, file: !159, line: 164, baseType: !637, size: 32, offset: 160)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !629, file: !159, line: 165, baseType: !640, size: 128, offset: 192)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 128, elements: !633)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !629, file: !159, line: 166, baseType: !642, size: 128, offset: 320)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !599, size: 128, elements: !633)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !591, file: !569, line: 107, baseType: !256, size: 32, offset: 10368)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !591, file: !569, line: 108, baseType: !144, size: 32, offset: 10400)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !591, file: !569, line: 109, baseType: !190, size: 16, offset: 10432)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !591, file: !569, line: 110, baseType: !190, size: 16, offset: 10448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !591, file: !569, line: 113, baseType: !144, size: 32, offset: 10464)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !591, file: !569, line: 113, baseType: !144, size: 32, offset: 10496)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !591, file: !569, line: 114, baseType: !130, size: 8, offset: 10528)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !591, file: !569, line: 114, baseType: !130, size: 8, offset: 10536)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !591, file: !569, line: 115, baseType: !190, size: 16, offset: 10544)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !591, file: !569, line: 116, baseType: !364, size: 128, offset: 10560)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !591, file: !569, line: 119, baseType: !256, size: 32, offset: 10688)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !591, file: !569, line: 119, baseType: !256, size: 32, offset: 10720)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !591, file: !569, line: 122, baseType: !656, size: 512, offset: 10752)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !657, line: 182, baseType: !658)
!657 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !657, line: 180, size: 512, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !658, file: !657, line: 181, baseType: !149, size: 512)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !591, file: !569, line: 123, baseType: !130, size: 8, offset: 11264)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !591, file: !569, line: 125, baseType: !663, size: 56, offset: 11272)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 56, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 7)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !591, file: !569, line: 126, baseType: !667, size: 4096, offset: 11328)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 4096, elements: !609)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !569, line: 69, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !569, line: 67, size: 512, elements: !670)
!670 = !{!671}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !569, line: 68, baseType: !149, size: 512)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !514, file: !226, line: 251, baseType: !673, size: 64, offset: 2880)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !226, line: 113, size: 6208, elements: !675)
!675 = !{!676, !677, !678, !679, !680, !681, !685}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !674, file: !226, line: 114, baseType: !190, size: 16)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !674, file: !226, line: 114, baseType: !190, size: 16, offset: 16)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !674, file: !226, line: 115, baseType: !130, size: 8, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !674, file: !226, line: 115, baseType: !130, size: 8, offset: 40)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !674, file: !226, line: 116, baseType: !130, size: 8, offset: 48)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !674, file: !226, line: 117, baseType: !682, size: 8, offset: 56)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 8, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 1)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !674, file: !226, line: 119, baseType: !686, size: 6144, offset: 64)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !687, size: 6144, elements: !696)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !226, line: 109, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !226, line: 106, size: 192, elements: !689)
!689 = !{!690, !691, !692, !693, !694, !695}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !688, file: !226, line: 107, baseType: !256, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !688, file: !226, line: 107, baseType: !256, size: 32, offset: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !688, file: !226, line: 107, baseType: !256, size: 32, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !688, file: !226, line: 107, baseType: !256, size: 32, offset: 96)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !688, file: !226, line: 107, baseType: !256, size: 32, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !688, file: !226, line: 108, baseType: !144, size: 32, offset: 160)
!696 = !{!697}
!697 = !DISubrange(count: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !514, file: !226, line: 252, baseType: !699, size: 64, offset: 2944)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !226, line: 122, size: 1600, elements: !701)
!701 = !{!702, !703, !704, !710, !711, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !700, file: !226, line: 123, baseType: !228, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !700, file: !226, line: 124, baseType: !590, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !700, file: !226, line: 125, baseType: !705, size: 384, offset: 128)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 384, elements: !708)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !657, line: 136, flags: DIFlagFwdDecl)
!708 = !{!709}
!709 = !DISubrange(count: 6)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !700, file: !226, line: 126, baseType: !373, size: 512, offset: 512)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !700, file: !226, line: 127, baseType: !712, size: 288, offset: 1024)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 288, elements: !713)
!713 = !{!259, !259}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !700, file: !226, line: 128, baseType: !190, size: 16, offset: 1312)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !700, file: !226, line: 128, baseType: !190, size: 16, offset: 1328)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !700, file: !226, line: 129, baseType: !256, size: 32, offset: 1344)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !700, file: !226, line: 129, baseType: !256, size: 32, offset: 1376)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !700, file: !226, line: 130, baseType: !256, size: 32, offset: 1408)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !700, file: !226, line: 131, baseType: !7, size: 32, offset: 1440)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !700, file: !226, line: 132, baseType: !190, size: 16, offset: 1472)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !700, file: !226, line: 132, baseType: !190, size: 16, offset: 1488)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !700, file: !226, line: 133, baseType: !144, size: 32, offset: 1504)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !700, file: !226, line: 133, baseType: !144, size: 32, offset: 1536)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !700, file: !226, line: 134, baseType: !190, size: 16, offset: 1568)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !700, file: !226, line: 134, baseType: !190, size: 16, offset: 1584)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !514, file: !226, line: 253, baseType: !628, size: 64, offset: 3008)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !514, file: !226, line: 254, baseType: !728, size: 64, offset: 3072)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !226, line: 137, size: 832, elements: !730)
!730 = !{!731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !746, !747, !748, !749, !750, !752, !753, !754, !755, !756, !757}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !729, file: !226, line: 138, baseType: !190, size: 16)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !729, file: !226, line: 140, baseType: !190, size: 16, offset: 16)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !729, file: !226, line: 141, baseType: !256, size: 32, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !729, file: !226, line: 142, baseType: !256, size: 32, offset: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !729, file: !226, line: 143, baseType: !190, size: 16, offset: 96)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !729, file: !226, line: 144, baseType: !190, size: 16, offset: 112)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !729, file: !226, line: 145, baseType: !144, size: 32, offset: 128)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !729, file: !226, line: 147, baseType: !144, size: 32, offset: 160)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !729, file: !226, line: 149, baseType: !228, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !729, file: !226, line: 150, baseType: !144, size: 32, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !729, file: !226, line: 151, baseType: !190, size: 16, offset: 288)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !729, file: !226, line: 152, baseType: !190, size: 16, offset: 304)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !729, file: !226, line: 154, baseType: !131, size: 64, offset: 320)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !729, file: !226, line: 155, baseType: !745, size: 64, offset: 384)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !729, file: !226, line: 157, baseType: !256, size: 32, offset: 448)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !729, file: !226, line: 158, baseType: !190, size: 16, offset: 480)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !729, file: !226, line: 159, baseType: !190, size: 16, offset: 496)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !729, file: !226, line: 160, baseType: !190, size: 16, offset: 512)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !729, file: !226, line: 161, baseType: !751, size: 48, offset: 528)
!751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 48, elements: !292)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !729, file: !226, line: 162, baseType: !256, size: 32, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !729, file: !226, line: 164, baseType: !256, size: 32, offset: 608)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !729, file: !226, line: 164, baseType: !256, size: 32, offset: 640)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !729, file: !226, line: 164, baseType: !256, size: 32, offset: 672)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !729, file: !226, line: 165, baseType: !673, size: 64, offset: 704)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !729, file: !226, line: 167, baseType: !758, size: 64, offset: 768)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !657, line: 72, size: 3072, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !774, !775, !801, !802, !803, !804}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !759, file: !657, line: 73, baseType: !144, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !759, file: !657, line: 73, baseType: !144, size: 32, offset: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !759, file: !657, line: 74, baseType: !144, size: 32, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !759, file: !657, line: 75, baseType: !144, size: 32, offset: 96)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !759, file: !657, line: 77, baseType: !766, size: 128, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !767, line: 95, baseType: !768)
!767 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !767, line: 92, size: 128, elements: !769)
!769 = !{!770, !771, !772, !773}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !768, file: !767, line: 93, baseType: !256, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !768, file: !767, line: 93, baseType: !256, size: 32, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !768, file: !767, line: 94, baseType: !256, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !768, file: !767, line: 94, baseType: !256, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !759, file: !657, line: 77, baseType: !766, size: 128, offset: 256)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !759, file: !657, line: 79, baseType: !776, size: 2304, offset: 384)
!776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 2304, elements: !365)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !657, line: 67, baseType: !778)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !657, line: 55, size: 576, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !787, !788, !797, !798, !799, !800}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !778, file: !657, line: 56, baseType: !190, size: 16)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !778, file: !657, line: 56, baseType: !190, size: 16, offset: 16)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !778, file: !657, line: 58, baseType: !256, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !778, file: !657, line: 59, baseType: !256, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !778, file: !657, line: 59, baseType: !256, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !778, file: !657, line: 60, baseType: !786, size: 64, offset: 128)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 64, elements: !633)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !778, file: !657, line: 60, baseType: !786, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !778, file: !657, line: 61, baseType: !789, size: 64, offset: 256)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !657, line: 47, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !657, line: 44, size: 96, elements: !792)
!792 = !{!793, !794, !795, !796}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !791, file: !657, line: 45, baseType: !256, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !791, file: !657, line: 45, baseType: !256, size: 32, offset: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !791, file: !657, line: 46, baseType: !190, size: 16, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !791, file: !657, line: 46, baseType: !190, size: 16, offset: 80)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !778, file: !657, line: 62, baseType: !789, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !778, file: !657, line: 64, baseType: !789, size: 64, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !778, file: !657, line: 65, baseType: !786, size: 64, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !778, file: !657, line: 66, baseType: !786, size: 64, offset: 512)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !759, file: !657, line: 80, baseType: !291, size: 96, offset: 2688)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !759, file: !657, line: 80, baseType: !291, size: 96, offset: 2784)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !759, file: !657, line: 81, baseType: !291, size: 96, offset: 2880)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !759, file: !657, line: 83, baseType: !291, size: 96, offset: 2976)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !514, file: !226, line: 255, baseType: !806, size: 64, offset: 3136)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !226, line: 170, size: 8704, elements: !808)
!808 = !{!809, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !807, file: !226, line: 171, baseType: !810, size: 96)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 96, elements: !292)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !807, file: !226, line: 172, baseType: !144, size: 32, offset: 96)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !807, file: !226, line: 173, baseType: !190, size: 16, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !807, file: !226, line: 174, baseType: !190, size: 16, offset: 144)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !807, file: !226, line: 175, baseType: !190, size: 16, offset: 160)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !807, file: !226, line: 176, baseType: !190, size: 16, offset: 176)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !807, file: !226, line: 177, baseType: !190, size: 16, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !807, file: !226, line: 178, baseType: !190, size: 16, offset: 208)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !807, file: !226, line: 179, baseType: !144, size: 32, offset: 224)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !807, file: !226, line: 181, baseType: !228, size: 64, offset: 256)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !807, file: !226, line: 182, baseType: !256, size: 32, offset: 320)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !807, file: !226, line: 183, baseType: !144, size: 32, offset: 352)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !807, file: !226, line: 184, baseType: !177, size: 8192, offset: 384)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !807, file: !226, line: 187, baseType: !745, size: 64, offset: 8576)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !807, file: !226, line: 188, baseType: !144, size: 32, offset: 8640)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !807, file: !226, line: 189, baseType: !144, size: 32, offset: 8672)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !514, file: !226, line: 256, baseType: !827, size: 64, offset: 3200)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !226, line: 193, size: 640, elements: !829)
!829 = !{!830, !831, !832, !833}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !828, file: !226, line: 194, baseType: !228, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !828, file: !226, line: 195, baseType: !149, size: 512, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !828, file: !226, line: 197, baseType: !144, size: 32, offset: 576)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !828, file: !226, line: 198, baseType: !144, size: 32, offset: 608)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !514, file: !226, line: 258, baseType: !130, size: 8, offset: 3264)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !514, file: !226, line: 259, baseType: !663, size: 56, offset: 3272)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !474, file: !432, line: 111, baseType: !837, size: 64, offset: 1088)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !432, line: 111, flags: DIFlagFwdDecl)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !474, file: !432, line: 112, baseType: !256, size: 32, offset: 1152)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !474, file: !432, line: 113, baseType: !144, size: 32, offset: 1184)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !474, file: !432, line: 115, baseType: !228, size: 64, offset: 1216)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !229, file: !6, line: 264, baseType: !843, size: 64, offset: 9984)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !432, line: 268, size: 3776, elements: !845)
!845 = !{!846, !847, !848, !876, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !928, !929, !930, !1613, !1614, !1615, !1616, !1617, !1618}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !844, file: !432, line: 270, baseType: !144, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !844, file: !432, line: 270, baseType: !144, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !844, file: !432, line: 271, baseType: !849, size: 64, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !851, line: 38, size: 1536, elements: !852)
!851 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_softbody.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !869, !870, !871, !872, !873, !874, !875}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "origS", scope: !850, file: !851, line: 39, baseType: !291, size: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "origE", scope: !850, file: !851, line: 39, baseType: !291, size: 96, offset: 96)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "origT", scope: !850, file: !851, line: 39, baseType: !291, size: 96, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !850, file: !851, line: 39, baseType: !291, size: 96, offset: 288)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !850, file: !851, line: 39, baseType: !291, size: 96, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !850, file: !851, line: 39, baseType: !291, size: 96, offset: 480)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "goal", scope: !850, file: !851, line: 40, baseType: !256, size: 32, offset: 576)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "prevpos", scope: !850, file: !851, line: 41, baseType: !291, size: 96, offset: 608)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "prevvec", scope: !850, file: !851, line: 41, baseType: !291, size: 96, offset: 704)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "prevdx", scope: !850, file: !851, line: 41, baseType: !291, size: 96, offset: 800)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "prevdv", scope: !850, file: !851, line: 41, baseType: !291, size: 96, offset: 896)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "impdv", scope: !850, file: !851, line: 42, baseType: !291, size: 96, offset: 992)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "impdx", scope: !850, file: !851, line: 42, baseType: !291, size: 96, offset: 1088)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "nofsprings", scope: !850, file: !851, line: 43, baseType: !144, size: 32, offset: 1184)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "springs", scope: !850, file: !851, line: 43, baseType: !868, size: 64, offset: 1216)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !850, file: !851, line: 44, baseType: !256, size: 32, offset: 1280)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "choke2", scope: !850, file: !851, line: 44, baseType: !256, size: 32, offset: 1312)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !850, file: !851, line: 44, baseType: !256, size: 32, offset: 1344)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !850, file: !851, line: 45, baseType: !256, size: 32, offset: 1376)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "loc_flag", scope: !850, file: !851, line: 46, baseType: !190, size: 16, offset: 1408)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !850, file: !851, line: 48, baseType: !256, size: 32, offset: 1440)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "springweight", scope: !850, file: !851, line: 49, baseType: !256, size: 32, offset: 1472)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !844, file: !432, line: 272, baseType: !877, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !432, line: 272, flags: DIFlagFwdDecl)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !844, file: !432, line: 273, baseType: !130, size: 8, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !844, file: !432, line: 274, baseType: !130, size: 8, offset: 200)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !844, file: !432, line: 275, baseType: !190, size: 16, offset: 208)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !844, file: !432, line: 280, baseType: !256, size: 32, offset: 224)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !844, file: !432, line: 281, baseType: !149, size: 512, offset: 256)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !844, file: !432, line: 285, baseType: !256, size: 32, offset: 768)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !844, file: !432, line: 286, baseType: !256, size: 32, offset: 800)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !844, file: !432, line: 287, baseType: !256, size: 32, offset: 832)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !844, file: !432, line: 288, baseType: !256, size: 32, offset: 864)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !844, file: !432, line: 291, baseType: !256, size: 32, offset: 896)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !844, file: !432, line: 292, baseType: !256, size: 32, offset: 928)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !844, file: !432, line: 293, baseType: !256, size: 32, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !844, file: !432, line: 294, baseType: !256, size: 32, offset: 992)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !844, file: !432, line: 295, baseType: !256, size: 32, offset: 1024)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !844, file: !432, line: 296, baseType: !190, size: 16, offset: 1056)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !844, file: !432, line: 297, baseType: !149, size: 512, offset: 1072)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !844, file: !432, line: 301, baseType: !190, size: 16, offset: 1584)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !844, file: !432, line: 304, baseType: !256, size: 32, offset: 1600)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !844, file: !432, line: 305, baseType: !256, size: 32, offset: 1632)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !844, file: !432, line: 306, baseType: !149, size: 512, offset: 1664)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !844, file: !432, line: 312, baseType: !144, size: 32, offset: 2176)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !844, file: !432, line: 312, baseType: !144, size: 32, offset: 2208)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !844, file: !432, line: 313, baseType: !144, size: 32, offset: 2240)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !844, file: !432, line: 314, baseType: !190, size: 16, offset: 2272)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !844, file: !432, line: 314, baseType: !190, size: 16, offset: 2288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !844, file: !432, line: 317, baseType: !905, size: 64, offset: 2304)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !432, line: 213, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !432, line: 211, size: 128, elements: !909)
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !908, file: !432, line: 212, baseType: !364, size: 128)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !844, file: !432, line: 318, baseType: !144, size: 32, offset: 2368)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !844, file: !432, line: 318, baseType: !144, size: 32, offset: 2400)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !844, file: !432, line: 320, baseType: !256, size: 32, offset: 2432)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !844, file: !432, line: 323, baseType: !256, size: 32, offset: 2464)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !844, file: !432, line: 324, baseType: !256, size: 32, offset: 2496)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !844, file: !432, line: 325, baseType: !256, size: 32, offset: 2528)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !844, file: !432, line: 326, baseType: !190, size: 16, offset: 2560)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !844, file: !432, line: 327, baseType: !190, size: 16, offset: 2576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !844, file: !432, line: 328, baseType: !190, size: 16, offset: 2592)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !844, file: !432, line: 329, baseType: !190, size: 16, offset: 2608)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !844, file: !432, line: 330, baseType: !190, size: 16, offset: 2624)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !844, file: !432, line: 331, baseType: !190, size: 16, offset: 2640)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !844, file: !432, line: 332, baseType: !190, size: 16, offset: 2656)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !844, file: !432, line: 332, baseType: !190, size: 16, offset: 2672)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !844, file: !432, line: 335, baseType: !926, size: 64, offset: 2688)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !432, line: 335, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !844, file: !432, line: 336, baseType: !256, size: 32, offset: 2752)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !844, file: !432, line: 337, baseType: !256, size: 32, offset: 2784)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !844, file: !432, line: 339, baseType: !931, size: 64, offset: 2816)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !432, line: 170, size: 10560, elements: !933)
!933 = !{!934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !1612}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !932, file: !432, line: 171, baseType: !931, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !932, file: !432, line: 171, baseType: !931, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !932, file: !432, line: 172, baseType: !144, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !932, file: !432, line: 174, baseType: !144, size: 32, offset: 160)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !932, file: !432, line: 186, baseType: !144, size: 32, offset: 192)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !932, file: !432, line: 187, baseType: !144, size: 32, offset: 224)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !932, file: !432, line: 188, baseType: !144, size: 32, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !932, file: !432, line: 189, baseType: !144, size: 32, offset: 288)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !932, file: !432, line: 190, baseType: !144, size: 32, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !932, file: !432, line: 191, baseType: !144, size: 32, offset: 352)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !932, file: !432, line: 192, baseType: !144, size: 32, offset: 384)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !932, file: !432, line: 195, baseType: !144, size: 32, offset: 416)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !932, file: !432, line: 196, baseType: !144, size: 32, offset: 448)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !932, file: !432, line: 197, baseType: !190, size: 16, offset: 480)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !932, file: !432, line: 197, baseType: !190, size: 16, offset: 496)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !932, file: !432, line: 199, baseType: !149, size: 512, offset: 512)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !932, file: !432, line: 200, baseType: !149, size: 512, offset: 1024)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !932, file: !432, line: 201, baseType: !149, size: 512, offset: 1536)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !932, file: !432, line: 202, baseType: !177, size: 8192, offset: 2048)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !932, file: !432, line: 203, baseType: !129, size: 64, offset: 10240)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !932, file: !432, line: 205, baseType: !215, size: 128, offset: 10304)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !932, file: !432, line: 207, baseType: !956, size: 64, offset: 10432)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !958, line: 235, size: 2560, elements: !959)
!958 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!959 = !{!960, !961, !1051, !1054, !1212, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1611}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !957, file: !958, line: 236, baseType: !213, size: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !957, file: !958, line: 237, baseType: !962, size: 64, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !958, line: 218, size: 1152, elements: !964)
!964 = !{!965, !966, !967, !985, !1043, !1046, !1047, !1048, !1049, !1050}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !963, file: !958, line: 219, baseType: !962, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !963, file: !958, line: 219, baseType: !962, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !963, file: !958, line: 220, baseType: !968, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !958, line: 212, size: 128, elements: !970)
!970 = !{!971, !983, !984}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !969, file: !958, line: 213, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !958, line: 194, size: 448, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !973, file: !958, line: 195, baseType: !745, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !973, file: !958, line: 196, baseType: !745, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !973, file: !958, line: 197, baseType: !745, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !973, file: !958, line: 198, baseType: !745, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !973, file: !958, line: 200, baseType: !291, size: 96, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !973, file: !958, line: 201, baseType: !256, size: 32, offset: 352)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !973, file: !958, line: 202, baseType: !256, size: 32, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !973, file: !958, line: 203, baseType: !190, size: 16, offset: 416)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !969, file: !958, line: 214, baseType: !144, size: 32, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !969, file: !958, line: 215, baseType: !190, size: 16, offset: 96)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !963, file: !958, line: 223, baseType: !986, size: 64, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !988, line: 95, size: 1600, elements: !989)
!988 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!989 = !{!990, !999, !1000, !1010, !1012, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !987, file: !988, line: 96, baseType: !991, size: 448)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !988, line: 55, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !988, line: 49, size: 448, elements: !993)
!993 = !{!994, !995, !996, !997, !998}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !992, file: !988, line: 50, baseType: !291, size: 96)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !992, file: !988, line: 51, baseType: !291, size: 96, offset: 96)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !992, file: !988, line: 52, baseType: !364, size: 128, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !992, file: !988, line: 53, baseType: !291, size: 96, offset: 320)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !992, file: !988, line: 54, baseType: !256, size: 32, offset: 416)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !987, file: !988, line: 98, baseType: !991, size: 448, offset: 448)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !987, file: !988, line: 100, baseType: !1001, size: 64, offset: 896)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !988, line: 47, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !988, line: 41, size: 192, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1003, file: !988, line: 42, baseType: !291, size: 96)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1003, file: !988, line: 43, baseType: !256, size: 32, offset: 96)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1003, file: !988, line: 44, baseType: !256, size: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1003, file: !988, line: 45, baseType: !190, size: 16, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1003, file: !988, line: 46, baseType: !190, size: 16, offset: 176)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !987, file: !988, line: 102, baseType: !1011, size: 64, offset: 960)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !987, file: !988, line: 104, baseType: !1013, size: 64, offset: 1024)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !988, line: 63, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !988, line: 57, size: 448, elements: !1016)
!1016 = !{!1017, !1018, !1026, !1027, !1028}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !1015, file: !988, line: 58, baseType: !228, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1015, file: !988, line: 59, baseType: !1019, size: 160, offset: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !1020, line: 109, size: 160, elements: !1021)
!1020 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1021 = !{!1022, !1023, !1024, !1025}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1019, file: !1020, line: 110, baseType: !256, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1019, file: !1020, line: 110, baseType: !291, size: 96, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !1019, file: !1020, line: 111, baseType: !190, size: 16, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1019, file: !1020, line: 111, baseType: !190, size: 16, offset: 144)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1015, file: !988, line: 60, baseType: !291, size: 96, offset: 224)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !1015, file: !988, line: 61, baseType: !291, size: 96, offset: 320)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1015, file: !988, line: 62, baseType: !256, size: 32, offset: 416)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !987, file: !988, line: 106, baseType: !144, size: 32, offset: 1088)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !987, file: !988, line: 108, baseType: !256, size: 32, offset: 1120)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !987, file: !988, line: 108, baseType: !256, size: 32, offset: 1152)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !987, file: !988, line: 109, baseType: !256, size: 32, offset: 1184)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !987, file: !988, line: 111, baseType: !144, size: 32, offset: 1216)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !987, file: !988, line: 112, baseType: !144, size: 32, offset: 1248)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !987, file: !988, line: 114, baseType: !364, size: 128, offset: 1280)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !987, file: !988, line: 114, baseType: !256, size: 32, offset: 1408)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !987, file: !988, line: 117, baseType: !256, size: 32, offset: 1440)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !987, file: !988, line: 119, baseType: !256, size: 32, offset: 1472)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !987, file: !988, line: 120, baseType: !144, size: 32, offset: 1504)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !987, file: !988, line: 122, baseType: !144, size: 32, offset: 1536)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !987, file: !988, line: 123, baseType: !190, size: 16, offset: 1568)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !987, file: !988, line: 124, baseType: !190, size: 16, offset: 1584)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !963, file: !958, line: 224, baseType: !1044, size: 64, offset: 256)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !988, line: 307, flags: DIFlagFwdDecl)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !963, file: !958, line: 225, baseType: !745, size: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !963, file: !958, line: 226, baseType: !144, size: 32, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !963, file: !958, line: 229, baseType: !215, size: 128, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !963, file: !958, line: 231, baseType: !144, size: 32, offset: 576)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !963, file: !958, line: 232, baseType: !149, size: 512, offset: 608)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !957, file: !958, line: 238, baseType: !1052, size: 64, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !958, line: 216, baseType: !969)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !957, file: !958, line: 240, baseType: !1055, size: 1600, offset: 256)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !958, line: 122, size: 1600, elements: !1056)
!1056 = !{!1057, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1075, !1079, !1083, !1166, !1167, !1183, !1187, !1191, !1195, !1201, !1202, !1206, !1207, !1208, !1210}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1055, file: !958, line: 123, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1055, file: !958, line: 123, baseType: !1058, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1055, file: !958, line: 125, baseType: !153, size: 64, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1055, file: !958, line: 126, baseType: !228, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !1055, file: !958, line: 127, baseType: !131, size: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1055, file: !958, line: 128, baseType: !7, size: 32, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1055, file: !958, line: 129, baseType: !7, size: 32, offset: 352)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1055, file: !958, line: 130, baseType: !7, size: 32, offset: 384)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !1055, file: !958, line: 132, baseType: !7, size: 32, offset: 416)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !1055, file: !958, line: 133, baseType: !7, size: 32, offset: 448)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1055, file: !958, line: 136, baseType: !7, size: 32, offset: 480)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !1055, file: !958, line: 136, baseType: !7, size: 32, offset: 512)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !1055, file: !958, line: 139, baseType: !1071, size: 64, offset: 576)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!144, !144, !131, !1074, !144}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !1055, file: !958, line: 141, baseType: !1076, size: 64, offset: 640)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{null, !144, !131, !1074, !256, !745}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !1055, file: !958, line: 143, baseType: !1080, size: 64, offset: 704)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !144, !131, !1074, !256, !256, !256, !745}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !1055, file: !958, line: 146, baseType: !1084, size: 64, offset: 768)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!144, !1087, !131}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !958, line: 118, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !958, line: 109, size: 1536, elements: !1090)
!1090 = !{!1091, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1164}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !1089, file: !958, line: 110, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1094, line: 7, baseType: !1095)
!1094 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1096, line: 49, size: 1728, elements: !1097)
!1096 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1097 = !{!1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1113, !1115, !1116, !1117, !1121, !1122, !1124, !1125, !1128, !1130, !1133, !1136, !1137, !1138, !1142, !1143}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1095, file: !1096, line: 51, baseType: !144, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1095, file: !1096, line: 54, baseType: !129, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1095, file: !1096, line: 55, baseType: !129, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1095, file: !1096, line: 56, baseType: !129, size: 64, offset: 192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1095, file: !1096, line: 57, baseType: !129, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1095, file: !1096, line: 58, baseType: !129, size: 64, offset: 320)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1095, file: !1096, line: 59, baseType: !129, size: 64, offset: 384)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1095, file: !1096, line: 60, baseType: !129, size: 64, offset: 448)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1095, file: !1096, line: 61, baseType: !129, size: 64, offset: 512)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1095, file: !1096, line: 64, baseType: !129, size: 64, offset: 576)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1095, file: !1096, line: 65, baseType: !129, size: 64, offset: 640)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1095, file: !1096, line: 66, baseType: !129, size: 64, offset: 704)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1095, file: !1096, line: 68, baseType: !1111, size: 64, offset: 768)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1096, line: 36, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1095, file: !1096, line: 70, baseType: !1114, size: 64, offset: 832)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1095, file: !1096, line: 72, baseType: !144, size: 32, offset: 896)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1095, file: !1096, line: 73, baseType: !144, size: 32, offset: 928)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1095, file: !1096, line: 74, baseType: !1118, size: 64, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1119, line: 152, baseType: !1120)
!1119 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1120 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1095, file: !1096, line: 77, baseType: !409, size: 16, offset: 1024)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1095, file: !1096, line: 78, baseType: !1123, size: 8, offset: 1040)
!1123 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1095, file: !1096, line: 79, baseType: !682, size: 8, offset: 1048)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1095, file: !1096, line: 81, baseType: !1126, size: 64, offset: 1088)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1096, line: 43, baseType: null)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1095, file: !1096, line: 89, baseType: !1129, size: 64, offset: 1152)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1119, line: 153, baseType: !1120)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1095, file: !1096, line: 91, baseType: !1131, size: 64, offset: 1216)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1096, line: 37, flags: DIFlagFwdDecl)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1095, file: !1096, line: 92, baseType: !1134, size: 64, offset: 1280)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1096, line: 38, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1095, file: !1096, line: 93, baseType: !1114, size: 64, offset: 1344)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1095, file: !1096, line: 94, baseType: !131, size: 64, offset: 1408)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1095, file: !1096, line: 95, baseType: !1139, size: 64, offset: 1472)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1140, line: 46, baseType: !1141)
!1140 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1141 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1095, file: !1096, line: 96, baseType: !144, size: 32, offset: 1536)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1095, file: !1096, line: 98, baseType: !1144, size: 160, offset: 1568)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 160, elements: !1145)
!1145 = !{!1146}
!1146 = !DISubrange(count: 20)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1089, file: !958, line: 112, baseType: !144, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !1089, file: !958, line: 112, baseType: !144, size: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1089, file: !958, line: 113, baseType: !7, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1089, file: !958, line: 113, baseType: !7, size: 32, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1089, file: !958, line: 114, baseType: !7, size: 32, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1089, file: !958, line: 114, baseType: !7, size: 32, offset: 224)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1089, file: !958, line: 116, baseType: !1154, size: 736, offset: 256)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !958, line: 98, size: 736, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1154, file: !958, line: 99, baseType: !7, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1154, file: !958, line: 100, baseType: !291, size: 96, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1154, file: !958, line: 101, baseType: !291, size: 96, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1154, file: !958, line: 102, baseType: !364, size: 128, offset: 224)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1154, file: !958, line: 103, baseType: !291, size: 96, offset: 352)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1154, file: !958, line: 104, baseType: !256, size: 32, offset: 448)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1154, file: !958, line: 105, baseType: !291, size: 96, offset: 480)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1154, file: !958, line: 106, baseType: !1019, size: 160, offset: 576)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1089, file: !958, line: 117, baseType: !1165, size: 512, offset: 1024)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 512, elements: !609)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !1055, file: !958, line: 148, baseType: !1084, size: 64, offset: 832)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !1055, file: !958, line: 151, baseType: !1168, size: 64, offset: 896)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{null, !131, !1171, !144}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !432, line: 159, size: 1408, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1172, file: !432, line: 160, baseType: !1171, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1172, file: !432, line: 160, baseType: !1171, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1172, file: !432, line: 161, baseType: !7, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1172, file: !432, line: 161, baseType: !7, size: 32, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1172, file: !432, line: 162, baseType: !7, size: 32, offset: 192)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1172, file: !432, line: 162, baseType: !7, size: 32, offset: 224)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1172, file: !432, line: 164, baseType: !1165, size: 512, offset: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1172, file: !432, line: 165, baseType: !1165, size: 512, offset: 768)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1172, file: !432, line: 167, baseType: !215, size: 128, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !1055, file: !958, line: 153, baseType: !1184, size: 64, offset: 960)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{null, !131, !1171, !256}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !1055, file: !958, line: 155, baseType: !1188, size: 64, offset: 1024)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{null, !131, !1171, !256, !256, !256}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1055, file: !958, line: 158, baseType: !1192, size: 64, offset: 1088)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!144, !131, !144}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1055, file: !958, line: 160, baseType: !1196, size: 64, offset: 1152)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !131, !1199}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !1055, file: !958, line: 162, baseType: !1192, size: 64, offset: 1216)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1055, file: !958, line: 164, baseType: !1203, size: 64, offset: 1280)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!144, !1087}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1055, file: !958, line: 165, baseType: !1203, size: 64, offset: 1344)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1055, file: !958, line: 167, baseType: !931, size: 64, offset: 1408)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !1055, file: !958, line: 169, baseType: !1209, size: 64, offset: 1472)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1055, file: !958, line: 170, baseType: !1211, size: 64, offset: 1536)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !957, file: !958, line: 243, baseType: !1213, size: 64, offset: 1856)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !988, line: 253, size: 5248, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1487, !1490, !1503, !1504, !1508, !1520, !1521, !1522, !1523, !1525, !1528, !1529, !1530, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1555, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1573, !1574, !1575, !1576, !1579, !1596, !1597}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1214, file: !988, line: 257, baseType: !1213, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1214, file: !988, line: 257, baseType: !1213, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1214, file: !988, line: 259, baseType: !1219, size: 64, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !988, line: 251, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !988, line: 153, size: 6400, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1252, !1273, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1221, file: !988, line: 154, baseType: !158, size: 960)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1221, file: !988, line: 155, baseType: !224, size: 64, offset: 960)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1221, file: !988, line: 157, baseType: !1226, size: 64, offset: 1024)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !1020, line: 189, size: 832, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1227, file: !1020, line: 190, baseType: !144, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !1227, file: !1020, line: 190, baseType: !144, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !1227, file: !1020, line: 192, baseType: !256, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1227, file: !1020, line: 192, baseType: !256, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !1227, file: !1020, line: 193, baseType: !256, size: 32, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1227, file: !1020, line: 193, baseType: !256, size: 32, offset: 160)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1227, file: !1020, line: 195, baseType: !256, size: 32, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !1227, file: !1020, line: 195, baseType: !256, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1227, file: !1020, line: 196, baseType: !256, size: 32, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !1227, file: !1020, line: 196, baseType: !256, size: 32, offset: 288)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1227, file: !1020, line: 196, baseType: !256, size: 32, offset: 320)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !1227, file: !1020, line: 199, baseType: !256, size: 32, offset: 352)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !1227, file: !1020, line: 199, baseType: !256, size: 32, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !1227, file: !1020, line: 200, baseType: !256, size: 32, offset: 416)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !1227, file: !1020, line: 200, baseType: !256, size: 32, offset: 448)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !1227, file: !1020, line: 201, baseType: !256, size: 32, offset: 480)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !1227, file: !1020, line: 204, baseType: !256, size: 32, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !1227, file: !1020, line: 204, baseType: !256, size: 32, offset: 544)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !1227, file: !1020, line: 205, baseType: !256, size: 32, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !1227, file: !1020, line: 205, baseType: !256, size: 32, offset: 608)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !1227, file: !1020, line: 206, baseType: !256, size: 32, offset: 640)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !1227, file: !1020, line: 207, baseType: !256, size: 32, offset: 672)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1227, file: !1020, line: 209, baseType: !215, size: 128, offset: 704)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !1221, file: !988, line: 158, baseType: !1253, size: 64, offset: 1088)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !988, line: 127, size: 544, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1254, file: !988, line: 129, baseType: !256, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !1254, file: !988, line: 129, baseType: !256, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !1254, file: !988, line: 129, baseType: !256, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !1254, file: !988, line: 130, baseType: !256, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !1254, file: !988, line: 130, baseType: !256, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !1254, file: !988, line: 131, baseType: !256, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !1254, file: !988, line: 131, baseType: !256, size: 32, offset: 192)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !1254, file: !988, line: 132, baseType: !256, size: 32, offset: 224)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !1254, file: !988, line: 132, baseType: !256, size: 32, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !1254, file: !988, line: 133, baseType: !256, size: 32, offset: 288)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !1254, file: !988, line: 133, baseType: !256, size: 32, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !1254, file: !988, line: 133, baseType: !256, size: 32, offset: 352)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !1254, file: !988, line: 134, baseType: !256, size: 32, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1254, file: !988, line: 135, baseType: !144, size: 32, offset: 416)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !1254, file: !988, line: 135, baseType: !144, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !1254, file: !988, line: 136, baseType: !190, size: 16, offset: 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1254, file: !988, line: 137, baseType: !751, size: 48, offset: 496)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1221, file: !988, line: 160, baseType: !1274, size: 64, offset: 1152)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !432, line: 118, size: 640, elements: !1276)
!1276 = !{!1277, !1280, !1284, !1285, !1286, !1287}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1275, file: !432, line: 119, baseType: !1278, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !351, line: 92, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1275, file: !432, line: 121, baseType: !1281, size: 448, offset: 64)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 448, elements: !1282)
!1282 = !{!1283}
!1283 = !DISubrange(count: 14)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !1275, file: !432, line: 122, baseType: !256, size: 32, offset: 512)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1275, file: !432, line: 123, baseType: !190, size: 16, offset: 544)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1275, file: !432, line: 123, baseType: !751, size: 48, offset: 560)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1275, file: !432, line: 124, baseType: !144, size: 32, offset: 608)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1221, file: !988, line: 162, baseType: !144, size: 32, offset: 1216)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1221, file: !988, line: 162, baseType: !144, size: 32, offset: 1248)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1221, file: !988, line: 163, baseType: !190, size: 16, offset: 1280)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1221, file: !988, line: 163, baseType: !190, size: 16, offset: 1296)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !1221, file: !988, line: 163, baseType: !190, size: 16, offset: 1312)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1221, file: !988, line: 163, baseType: !190, size: 16, offset: 1328)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !1221, file: !988, line: 165, baseType: !190, size: 16, offset: 1344)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1221, file: !988, line: 165, baseType: !190, size: 16, offset: 1360)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !1221, file: !988, line: 165, baseType: !190, size: 16, offset: 1376)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !1221, file: !988, line: 165, baseType: !190, size: 16, offset: 1392)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1221, file: !988, line: 166, baseType: !144, size: 32, offset: 1408)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1221, file: !988, line: 166, baseType: !144, size: 32, offset: 1440)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !1221, file: !988, line: 167, baseType: !190, size: 16, offset: 1472)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !1221, file: !988, line: 167, baseType: !190, size: 16, offset: 1488)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !1221, file: !988, line: 167, baseType: !190, size: 16, offset: 1504)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1221, file: !988, line: 167, baseType: !190, size: 16, offset: 1520)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !1221, file: !988, line: 168, baseType: !190, size: 16, offset: 1536)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !1221, file: !988, line: 168, baseType: !190, size: 16, offset: 1552)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !1221, file: !988, line: 168, baseType: !190, size: 16, offset: 1568)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1221, file: !988, line: 170, baseType: !190, size: 16, offset: 1584)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !1221, file: !988, line: 170, baseType: !190, size: 16, offset: 1600)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !1221, file: !988, line: 171, baseType: !190, size: 16, offset: 1616)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !1221, file: !988, line: 171, baseType: !190, size: 16, offset: 1632)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !1221, file: !988, line: 174, baseType: !190, size: 16, offset: 1648)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !1221, file: !988, line: 174, baseType: !190, size: 16, offset: 1664)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1221, file: !988, line: 176, baseType: !190, size: 16, offset: 1680)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !1221, file: !988, line: 176, baseType: !190, size: 16, offset: 1696)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !1221, file: !988, line: 176, baseType: !190, size: 16, offset: 1712)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !1221, file: !988, line: 176, baseType: !190, size: 16, offset: 1728)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !1221, file: !988, line: 177, baseType: !190, size: 16, offset: 1744)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !1221, file: !988, line: 178, baseType: !190, size: 16, offset: 1760)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !1221, file: !988, line: 178, baseType: !190, size: 16, offset: 1776)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !1221, file: !988, line: 181, baseType: !190, size: 16, offset: 1792)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !1221, file: !988, line: 181, baseType: !190, size: 16, offset: 1808)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !1221, file: !988, line: 181, baseType: !190, size: 16, offset: 1824)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !1221, file: !988, line: 181, baseType: !190, size: 16, offset: 1840)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !1221, file: !988, line: 182, baseType: !256, size: 32, offset: 1856)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !1221, file: !988, line: 182, baseType: !256, size: 32, offset: 1888)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !1221, file: !988, line: 182, baseType: !786, size: 64, offset: 1920)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !1221, file: !988, line: 182, baseType: !786, size: 64, offset: 1984)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !1221, file: !988, line: 182, baseType: !256, size: 32, offset: 2048)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !1221, file: !988, line: 182, baseType: !256, size: 32, offset: 2080)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !1221, file: !988, line: 185, baseType: !256, size: 32, offset: 2112)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1221, file: !988, line: 188, baseType: !190, size: 16, offset: 2144)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !1221, file: !988, line: 188, baseType: !190, size: 16, offset: 2160)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !1221, file: !988, line: 189, baseType: !256, size: 32, offset: 2176)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !1221, file: !988, line: 189, baseType: !256, size: 32, offset: 2208)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !1221, file: !988, line: 190, baseType: !256, size: 32, offset: 2240)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !1221, file: !988, line: 193, baseType: !256, size: 32, offset: 2272)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1221, file: !988, line: 193, baseType: !256, size: 32, offset: 2304)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !1221, file: !988, line: 193, baseType: !256, size: 32, offset: 2336)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !1221, file: !988, line: 193, baseType: !256, size: 32, offset: 2368)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !1221, file: !988, line: 194, baseType: !256, size: 32, offset: 2400)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !1221, file: !988, line: 194, baseType: !256, size: 32, offset: 2432)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !1221, file: !988, line: 195, baseType: !256, size: 32, offset: 2464)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !1221, file: !988, line: 195, baseType: !256, size: 32, offset: 2496)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !1221, file: !988, line: 195, baseType: !256, size: 32, offset: 2528)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !1221, file: !988, line: 195, baseType: !1346, size: 32, offset: 2560)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 32, elements: !683)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !1221, file: !988, line: 196, baseType: !144, size: 32, offset: 2592)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !1221, file: !988, line: 196, baseType: !144, size: 32, offset: 2624)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !1221, file: !988, line: 196, baseType: !144, size: 32, offset: 2656)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !1221, file: !988, line: 196, baseType: !144, size: 32, offset: 2688)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !1221, file: !988, line: 197, baseType: !190, size: 16, offset: 2720)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !1221, file: !988, line: 197, baseType: !751, size: 48, offset: 2736)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2784)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2816)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2848)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2880)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2912)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2944)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !1221, file: !988, line: 200, baseType: !256, size: 32, offset: 2976)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !1221, file: !988, line: 201, baseType: !291, size: 96, offset: 3008)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !1221, file: !988, line: 202, baseType: !256, size: 32, offset: 3104)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !1221, file: !988, line: 202, baseType: !256, size: 32, offset: 3136)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !1221, file: !988, line: 202, baseType: !256, size: 32, offset: 3168)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !1221, file: !988, line: 202, baseType: !256, size: 32, offset: 3200)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1221, file: !988, line: 204, baseType: !256, size: 32, offset: 3232)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1221, file: !988, line: 204, baseType: !256, size: 32, offset: 3264)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !1221, file: !988, line: 204, baseType: !256, size: 32, offset: 3296)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1221, file: !988, line: 206, baseType: !291, size: 96, offset: 3328)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !1221, file: !988, line: 206, baseType: !256, size: 32, offset: 3424)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !1221, file: !988, line: 206, baseType: !256, size: 32, offset: 3456)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1221, file: !988, line: 206, baseType: !256, size: 32, offset: 3488)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !1221, file: !988, line: 208, baseType: !256, size: 32, offset: 3520)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !1221, file: !988, line: 210, baseType: !144, size: 32, offset: 3552)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !1221, file: !988, line: 210, baseType: !144, size: 32, offset: 3584)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !1221, file: !988, line: 211, baseType: !256, size: 32, offset: 3616)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !1221, file: !988, line: 211, baseType: !256, size: 32, offset: 3648)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !1221, file: !988, line: 211, baseType: !256, size: 32, offset: 3680)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !1221, file: !988, line: 212, baseType: !256, size: 32, offset: 3712)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !1221, file: !988, line: 212, baseType: !256, size: 32, offset: 3744)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1221, file: !988, line: 214, baseType: !256, size: 32, offset: 3776)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !1221, file: !988, line: 214, baseType: !256, size: 32, offset: 3808)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !1221, file: !988, line: 216, baseType: !256, size: 32, offset: 3840)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !1221, file: !988, line: 216, baseType: !256, size: 32, offset: 3872)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !1221, file: !988, line: 216, baseType: !256, size: 32, offset: 3904)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !1221, file: !988, line: 216, baseType: !256, size: 32, offset: 3936)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !1221, file: !988, line: 217, baseType: !256, size: 32, offset: 3968)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !1221, file: !988, line: 219, baseType: !256, size: 32, offset: 4000)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !1221, file: !988, line: 219, baseType: !256, size: 32, offset: 4032)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !1221, file: !988, line: 220, baseType: !256, size: 32, offset: 4064)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !1221, file: !988, line: 220, baseType: !256, size: 32, offset: 4096)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !1221, file: !988, line: 220, baseType: !256, size: 32, offset: 4128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !1221, file: !988, line: 221, baseType: !256, size: 32, offset: 4160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !1221, file: !988, line: 221, baseType: !256, size: 32, offset: 4192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !1221, file: !988, line: 223, baseType: !256, size: 32, offset: 4224)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !1221, file: !988, line: 223, baseType: !256, size: 32, offset: 4256)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !1221, file: !988, line: 225, baseType: !256, size: 32, offset: 4288)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !1221, file: !988, line: 226, baseType: !256, size: 32, offset: 4320)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !1221, file: !988, line: 226, baseType: !256, size: 32, offset: 4352)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !1221, file: !988, line: 228, baseType: !256, size: 32, offset: 4384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !1221, file: !988, line: 230, baseType: !786, size: 64, offset: 4416)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !1221, file: !988, line: 231, baseType: !256, size: 32, offset: 4480)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !1221, file: !988, line: 231, baseType: !256, size: 32, offset: 4512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !1221, file: !988, line: 232, baseType: !144, size: 32, offset: 4544)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !1221, file: !988, line: 234, baseType: !144, size: 32, offset: 4576)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1221, file: !988, line: 236, baseType: !1406, size: 1152, offset: 4608)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 1152, elements: !1475)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !226, line: 57, size: 2496, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1408, file: !226, line: 59, baseType: !190, size: 16)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1408, file: !226, line: 59, baseType: !190, size: 16, offset: 16)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1408, file: !226, line: 59, baseType: !190, size: 16, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1408, file: !226, line: 59, baseType: !190, size: 16, offset: 48)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1408, file: !226, line: 60, baseType: !228, size: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1408, file: !226, line: 61, baseType: !513, size: 64, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1408, file: !226, line: 62, baseType: !149, size: 512, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1408, file: !226, line: 64, baseType: !130, size: 8, offset: 704)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1408, file: !226, line: 64, baseType: !130, size: 8, offset: 712)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1408, file: !226, line: 64, baseType: !130, size: 8, offset: 720)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1408, file: !226, line: 64, baseType: !130, size: 8, offset: 728)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1408, file: !226, line: 65, baseType: !291, size: 96, offset: 736)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1408, file: !226, line: 65, baseType: !291, size: 96, offset: 832)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1408, file: !226, line: 65, baseType: !256, size: 32, offset: 928)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1408, file: !226, line: 67, baseType: !190, size: 16, offset: 960)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1408, file: !226, line: 67, baseType: !190, size: 16, offset: 976)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1408, file: !226, line: 67, baseType: !190, size: 16, offset: 992)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1408, file: !226, line: 67, baseType: !190, size: 16, offset: 1008)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1408, file: !226, line: 68, baseType: !190, size: 16, offset: 1024)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1408, file: !226, line: 68, baseType: !190, size: 16, offset: 1040)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1408, file: !226, line: 69, baseType: !130, size: 8, offset: 1056)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1408, file: !226, line: 69, baseType: !663, size: 56, offset: 1064)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1408, file: !226, line: 70, baseType: !256, size: 32, offset: 1120)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1408, file: !226, line: 70, baseType: !256, size: 32, offset: 1152)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1408, file: !226, line: 70, baseType: !256, size: 32, offset: 1184)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1408, file: !226, line: 70, baseType: !256, size: 32, offset: 1216)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1408, file: !226, line: 71, baseType: !256, size: 32, offset: 1248)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1408, file: !226, line: 71, baseType: !256, size: 32, offset: 1280)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1408, file: !226, line: 74, baseType: !256, size: 32, offset: 1312)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1408, file: !226, line: 74, baseType: !256, size: 32, offset: 1344)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1408, file: !226, line: 77, baseType: !256, size: 32, offset: 1376)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1408, file: !226, line: 77, baseType: !256, size: 32, offset: 1408)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1408, file: !226, line: 77, baseType: !256, size: 32, offset: 1440)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1408, file: !226, line: 78, baseType: !256, size: 32, offset: 1472)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1408, file: !226, line: 78, baseType: !256, size: 32, offset: 1504)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1408, file: !226, line: 78, baseType: !256, size: 32, offset: 1536)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1408, file: !226, line: 79, baseType: !256, size: 32, offset: 1568)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1408, file: !226, line: 79, baseType: !256, size: 32, offset: 1600)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1408, file: !226, line: 79, baseType: !256, size: 32, offset: 1632)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1408, file: !226, line: 79, baseType: !256, size: 32, offset: 1664)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1408, file: !226, line: 80, baseType: !256, size: 32, offset: 1696)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1408, file: !226, line: 80, baseType: !256, size: 32, offset: 1728)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1408, file: !226, line: 80, baseType: !256, size: 32, offset: 1760)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1408, file: !226, line: 81, baseType: !256, size: 32, offset: 1792)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1408, file: !226, line: 81, baseType: !256, size: 32, offset: 1824)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1408, file: !226, line: 81, baseType: !256, size: 32, offset: 1856)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1408, file: !226, line: 82, baseType: !256, size: 32, offset: 1888)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1408, file: !226, line: 82, baseType: !256, size: 32, offset: 1920)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1408, file: !226, line: 82, baseType: !256, size: 32, offset: 1952)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1408, file: !226, line: 85, baseType: !256, size: 32, offset: 1984)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1408, file: !226, line: 85, baseType: !256, size: 32, offset: 2016)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1408, file: !226, line: 85, baseType: !256, size: 32, offset: 2048)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1408, file: !226, line: 85, baseType: !256, size: 32, offset: 2080)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1408, file: !226, line: 86, baseType: !256, size: 32, offset: 2112)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1408, file: !226, line: 86, baseType: !256, size: 32, offset: 2144)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1408, file: !226, line: 86, baseType: !256, size: 32, offset: 2176)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1408, file: !226, line: 86, baseType: !256, size: 32, offset: 2208)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1408, file: !226, line: 87, baseType: !256, size: 32, offset: 2240)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1408, file: !226, line: 87, baseType: !256, size: 32, offset: 2272)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1408, file: !226, line: 87, baseType: !256, size: 32, offset: 2304)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1408, file: !226, line: 87, baseType: !256, size: 32, offset: 2336)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1408, file: !226, line: 90, baseType: !256, size: 32, offset: 2368)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1408, file: !226, line: 93, baseType: !256, size: 32, offset: 2400)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1408, file: !226, line: 93, baseType: !256, size: 32, offset: 2432)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1408, file: !226, line: 93, baseType: !256, size: 32, offset: 2464)
!1475 = !{!1476}
!1476 = !DISubrange(count: 18)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1221, file: !988, line: 238, baseType: !1278, size: 64, offset: 5760)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !1221, file: !988, line: 239, baseType: !215, size: 128, offset: 5824)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !1221, file: !988, line: 240, baseType: !1278, size: 64, offset: 5952)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !1221, file: !988, line: 241, baseType: !228, size: 64, offset: 6016)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !1221, file: !988, line: 242, baseType: !228, size: 64, offset: 6080)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1221, file: !988, line: 243, baseType: !248, size: 64, offset: 6144)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1221, file: !988, line: 244, baseType: !473, size: 64, offset: 6208)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !1221, file: !988, line: 245, baseType: !473, size: 64, offset: 6272)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !1221, file: !988, line: 248, baseType: !190, size: 16, offset: 6336)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1221, file: !988, line: 249, baseType: !751, size: 48, offset: 6352)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1214, file: !988, line: 261, baseType: !1488, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !988, line: 125, baseType: !987)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1214, file: !988, line: 262, baseType: !1491, size: 64, offset: 256)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !988, line: 77, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !988, line: 71, size: 512, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1499, !1500, !1501, !1502}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1493, file: !988, line: 72, baseType: !144, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1493, file: !988, line: 72, baseType: !144, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !1493, file: !988, line: 73, baseType: !1498, size: 128, offset: 64)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 128, elements: !365)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1493, file: !988, line: 74, baseType: !364, size: 128, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !1493, file: !988, line: 75, baseType: !364, size: 128, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !1493, file: !988, line: 75, baseType: !256, size: 32, offset: 448)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1493, file: !988, line: 76, baseType: !256, size: 32, offset: 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1214, file: !988, line: 264, baseType: !956, size: 64, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1214, file: !988, line: 265, baseType: !1505, size: 64, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !956}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1214, file: !988, line: 267, baseType: !1509, size: 64, offset: 448)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !1512, line: 123, size: 480, elements: !1513)
!1512 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1511, file: !1512, line: 124, baseType: !291, size: 96)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1511, file: !1512, line: 125, baseType: !291, size: 96, offset: 96)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1511, file: !1512, line: 126, baseType: !364, size: 128, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1511, file: !1512, line: 127, baseType: !291, size: 96, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1511, file: !1512, line: 128, baseType: !256, size: 32, offset: 416)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !1511, file: !1512, line: 129, baseType: !144, size: 32, offset: 448)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !1214, file: !988, line: 268, baseType: !1509, size: 64, offset: 512)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1214, file: !988, line: 269, baseType: !213, size: 128, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !1214, file: !988, line: 269, baseType: !213, size: 128, offset: 704)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !1214, file: !988, line: 271, baseType: !1524, size: 64, offset: 832)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !1214, file: !988, line: 272, baseType: !1526, size: 64, offset: 896)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !351, line: 148, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !1214, file: !988, line: 272, baseType: !1526, size: 64, offset: 960)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !1214, file: !988, line: 274, baseType: !228, size: 64, offset: 1024)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !1214, file: !988, line: 276, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !988, line: 276, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1214, file: !988, line: 278, baseType: !228, size: 64, offset: 1152)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !1214, file: !988, line: 280, baseType: !215, size: 128, offset: 1216)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1214, file: !988, line: 282, baseType: !149, size: 512, offset: 1344)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1214, file: !988, line: 284, baseType: !373, size: 512, offset: 1856)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1214, file: !988, line: 285, baseType: !256, size: 32, offset: 2368)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !1214, file: !988, line: 285, baseType: !256, size: 32, offset: 2400)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !1214, file: !988, line: 285, baseType: !256, size: 32, offset: 2432)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1214, file: !988, line: 286, baseType: !144, size: 32, offset: 2464)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !1214, file: !988, line: 286, baseType: !144, size: 32, offset: 2496)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2528)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2560)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2592)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2624)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2656)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !1214, file: !988, line: 287, baseType: !144, size: 32, offset: 2688)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1214, file: !988, line: 288, baseType: !190, size: 16, offset: 2720)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !1214, file: !988, line: 288, baseType: !190, size: 16, offset: 2736)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !1214, file: !988, line: 288, baseType: !190, size: 16, offset: 2752)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !1214, file: !988, line: 288, baseType: !190, size: 16, offset: 2768)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !1214, file: !988, line: 290, baseType: !1553, size: 1536, offset: 2784)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 1536, elements: !1554)
!1554 = !{!259, !151}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1214, file: !988, line: 293, baseType: !1556, size: 192, offset: 4320)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 192, elements: !1557)
!1557 = !{!1558}
!1558 = !DISubrange(count: 12)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !1214, file: !988, line: 293, baseType: !190, size: 16, offset: 4512)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !1214, file: !988, line: 293, baseType: !190, size: 16, offset: 4528)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !1214, file: !988, line: 296, baseType: !131, size: 64, offset: 4544)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1214, file: !988, line: 299, baseType: !931, size: 64, offset: 4608)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1214, file: !988, line: 300, baseType: !215, size: 128, offset: 4672)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !1214, file: !988, line: 302, baseType: !1211, size: 64, offset: 4800)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !1214, file: !988, line: 304, baseType: !1566, size: 64, offset: 4864)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !988, line: 68, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !988, line: 65, size: 128, elements: !1569)
!1569 = !{!1570, !1571, !1572}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !1568, file: !988, line: 66, baseType: !256, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !1568, file: !988, line: 67, baseType: !632, size: 64, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !1568, file: !988, line: 67, baseType: !7, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !1214, file: !988, line: 305, baseType: !144, size: 32, offset: 4928)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !1214, file: !988, line: 305, baseType: !144, size: 32, offset: 4960)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !1214, file: !988, line: 307, baseType: !1044, size: 64, offset: 4992)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !1214, file: !988, line: 308, baseType: !1577, size: 64, offset: 5056)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !16, line: 583, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !1214, file: !988, line: 310, baseType: !1580, size: 64, offset: 5120)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !1512, line: 237, size: 704, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1581, file: !1512, line: 238, baseType: !745, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1581, file: !1512, line: 238, baseType: !745, size: 64, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !1581, file: !1512, line: 239, baseType: !745, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !1581, file: !1512, line: 239, baseType: !745, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !1581, file: !1512, line: 240, baseType: !745, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !1581, file: !1512, line: 240, baseType: !745, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !1581, file: !1512, line: 241, baseType: !745, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !1581, file: !1512, line: 241, baseType: !745, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !1581, file: !1512, line: 242, baseType: !745, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !1581, file: !1512, line: 243, baseType: !144, size: 32, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1581, file: !1512, line: 243, baseType: !144, size: 32, offset: 608)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1581, file: !1512, line: 244, baseType: !144, size: 32, offset: 640)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !1581, file: !1512, line: 244, baseType: !144, size: 32, offset: 672)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !1214, file: !988, line: 312, baseType: !256, size: 32, offset: 5184)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1214, file: !988, line: 313, baseType: !256, size: 32, offset: 5216)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !957, file: !958, line: 244, baseType: !986, size: 64, offset: 1920)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !957, file: !958, line: 245, baseType: !1044, size: 64, offset: 1984)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !957, file: !958, line: 246, baseType: !745, size: 64, offset: 2048)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !957, file: !958, line: 247, baseType: !868, size: 64, offset: 2112)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !957, file: !958, line: 249, baseType: !1509, size: 64, offset: 2176)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !957, file: !958, line: 250, baseType: !213, size: 128, offset: 2240)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !957, file: !958, line: 252, baseType: !144, size: 32, offset: 2368)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !957, file: !958, line: 252, baseType: !144, size: 32, offset: 2400)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !957, file: !958, line: 252, baseType: !144, size: 32, offset: 2432)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !957, file: !958, line: 252, baseType: !144, size: 32, offset: 2464)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !957, file: !958, line: 254, baseType: !1609, size: 24, offset: 2496)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 24, elements: !292)
!1610 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !957, file: !958, line: 255, baseType: !1609, size: 24, offset: 2520)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !932, file: !432, line: 208, baseType: !1505, size: 64, offset: 10496)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !844, file: !432, line: 340, baseType: !215, size: 128, offset: 2880)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !844, file: !432, line: 342, baseType: !1274, size: 64, offset: 3008)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !844, file: !432, line: 344, baseType: !291, size: 96, offset: 3072)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !844, file: !432, line: 345, baseType: !712, size: 288, offset: 3168)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !844, file: !432, line: 346, baseType: !712, size: 288, offset: 3456)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !844, file: !432, line: 348, baseType: !144, size: 32, offset: 3744)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !229, file: !6, line: 265, baseType: !1278, size: 64, offset: 10048)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !229, file: !6, line: 267, baseType: !130, size: 8, offset: 10112)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !229, file: !6, line: 268, baseType: !130, size: 8, offset: 10120)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !229, file: !6, line: 269, baseType: !190, size: 16, offset: 10128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !229, file: !6, line: 270, baseType: !256, size: 32, offset: 10144)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !229, file: !6, line: 272, baseType: !1625, size: 64, offset: 10176)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !16, line: 732, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !229, file: !6, line: 275, baseType: !1628, size: 64, offset: 10240)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !6, line: 275, flags: DIFlagFwdDecl)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !229, file: !6, line: 277, baseType: !1526, size: 64, offset: 10304)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !229, file: !6, line: 277, baseType: !1526, size: 64, offset: 10368)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !229, file: !6, line: 278, baseType: !1633, size: 64, offset: 10432)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1634, line: 27, baseType: !1635)
!1634 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1119, line: 45, baseType: !1141)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !229, file: !6, line: 279, baseType: !1633, size: 64, offset: 10496)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !229, file: !6, line: 280, baseType: !7, size: 32, offset: 10560)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !229, file: !6, line: 281, baseType: !7, size: 32, offset: 10592)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !229, file: !6, line: 283, baseType: !213, size: 128, offset: 10624)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !229, file: !6, line: 284, baseType: !213, size: 128, offset: 10752)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !229, file: !6, line: 285, baseType: !1642, size: 64, offset: 10880)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !229, file: !6, line: 287, baseType: !1644, size: 64, offset: 10944)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !89, line: 95, size: 768, elements: !1646)
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "physics_object", scope: !1645, file: !89, line: 97, baseType: !131, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "physics_shape", scope: !1645, file: !89, line: 98, baseType: !131, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1645, file: !89, line: 101, baseType: !190, size: 16, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !1645, file: !89, line: 102, baseType: !190, size: 16, offset: 144)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1645, file: !89, line: 104, baseType: !144, size: 32, offset: 160)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "col_groups", scope: !1645, file: !89, line: 105, baseType: !144, size: 32, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_source", scope: !1645, file: !89, line: 106, baseType: !190, size: 16, offset: 224)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1645, file: !89, line: 107, baseType: !190, size: 16, offset: 240)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1645, file: !89, line: 110, baseType: !256, size: 32, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !1645, file: !89, line: 112, baseType: !256, size: 32, offset: 288)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "restitution", scope: !1645, file: !89, line: 113, baseType: !256, size: 32, offset: 320)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1645, file: !89, line: 115, baseType: !256, size: 32, offset: 352)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lin_damping", scope: !1645, file: !89, line: 117, baseType: !256, size: 32, offset: 384)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "ang_damping", scope: !1645, file: !89, line: 118, baseType: !256, size: 32, offset: 416)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "lin_sleep_thresh", scope: !1645, file: !89, line: 120, baseType: !256, size: 32, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ang_sleep_thresh", scope: !1645, file: !89, line: 121, baseType: !256, size: 32, offset: 480)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !1645, file: !89, line: 123, baseType: !364, size: 128, offset: 512)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1645, file: !89, line: 124, baseType: !291, size: 96, offset: 640)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1645, file: !89, line: 125, baseType: !256, size: 32, offset: 736)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !229, file: !6, line: 288, baseType: !1667, size: 64, offset: 11008)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !89, line: 195, size: 1024, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "ob1", scope: !1668, file: !89, line: 196, baseType: !228, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ob2", scope: !1668, file: !89, line: 197, baseType: !228, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1668, file: !89, line: 200, baseType: !190, size: 16, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !1668, file: !89, line: 201, baseType: !190, size: 16, offset: 144)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1668, file: !89, line: 203, baseType: !144, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "breaking_threshold", scope: !1668, file: !89, line: 205, baseType: !256, size: 32, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1668, file: !89, line: 206, baseType: !256, size: 32, offset: 224)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_lower", scope: !1668, file: !89, line: 210, baseType: !256, size: 32, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_upper", scope: !1668, file: !89, line: 211, baseType: !256, size: 32, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_lower", scope: !1668, file: !89, line: 212, baseType: !256, size: 32, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_upper", scope: !1668, file: !89, line: 213, baseType: !256, size: 32, offset: 352)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_lower", scope: !1668, file: !89, line: 214, baseType: !256, size: 32, offset: 384)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_upper", scope: !1668, file: !89, line: 215, baseType: !256, size: 32, offset: 416)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_lower", scope: !1668, file: !89, line: 217, baseType: !256, size: 32, offset: 448)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_upper", scope: !1668, file: !89, line: 218, baseType: !256, size: 32, offset: 480)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_lower", scope: !1668, file: !89, line: 219, baseType: !256, size: 32, offset: 512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_upper", scope: !1668, file: !89, line: 220, baseType: !256, size: 32, offset: 544)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_lower", scope: !1668, file: !89, line: 221, baseType: !256, size: 32, offset: 576)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_upper", scope: !1668, file: !89, line: 222, baseType: !256, size: 32, offset: 608)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_x", scope: !1668, file: !89, line: 226, baseType: !256, size: 32, offset: 640)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_y", scope: !1668, file: !89, line: 227, baseType: !256, size: 32, offset: 672)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_z", scope: !1668, file: !89, line: 228, baseType: !256, size: 32, offset: 704)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_x", scope: !1668, file: !89, line: 230, baseType: !256, size: 32, offset: 736)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_y", scope: !1668, file: !89, line: 231, baseType: !256, size: 32, offset: 768)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_z", scope: !1668, file: !89, line: 232, baseType: !256, size: 32, offset: 800)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_target_velocity", scope: !1668, file: !89, line: 235, baseType: !256, size: 32, offset: 832)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_target_velocity", scope: !1668, file: !89, line: 236, baseType: !256, size: 32, offset: 864)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_max_impulse", scope: !1668, file: !89, line: 237, baseType: !256, size: 32, offset: 896)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_max_impulse", scope: !1668, file: !89, line: 238, baseType: !256, size: 32, offset: 928)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "physics_constraint", scope: !1668, file: !89, line: 241, baseType: !131, size: 64, offset: 960)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !229, file: !6, line: 290, baseType: !786, size: 64, offset: 11072)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !229, file: !6, line: 291, baseType: !1702, size: 64, offset: 11136)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !569, line: 65, baseType: !568)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !229, file: !6, line: 293, baseType: !213, size: 128, offset: 11200)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !229, file: !6, line: 294, baseType: !1706, size: 64, offset: 11328)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !6, line: 113, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !6, line: 108, size: 256, elements: !1709)
!1709 = !{!1710, !1712, !1713, !1714, !1715}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1708, file: !6, line: 109, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1708, file: !6, line: 109, baseType: !1711, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1708, file: !6, line: 110, baseType: !228, size: 64, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1708, file: !6, line: 111, baseType: !144, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1708, file: !6, line: 112, baseType: !256, size: 32, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !154, file: !155, line: 1221, baseType: !1717, size: 64, offset: 1088)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !155, line: 52, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !154, file: !155, line: 1223, baseType: !153, size: 64, offset: 1152)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !154, file: !155, line: 1225, baseType: !213, size: 128, offset: 1216)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !154, file: !155, line: 1226, baseType: !1722, size: 64, offset: 1344)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !155, line: 69, size: 320, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1723, file: !155, line: 70, baseType: !1722, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1723, file: !155, line: 70, baseType: !1722, size: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1723, file: !155, line: 71, baseType: !7, size: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1723, file: !155, line: 71, baseType: !7, size: 32, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1723, file: !155, line: 72, baseType: !144, size: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1723, file: !155, line: 73, baseType: !190, size: 16, offset: 224)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1723, file: !155, line: 73, baseType: !190, size: 16, offset: 240)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1723, file: !155, line: 74, baseType: !228, size: 64, offset: 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !154, file: !155, line: 1227, baseType: !228, size: 64, offset: 1408)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !154, file: !155, line: 1229, baseType: !291, size: 96, offset: 1472)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !154, file: !155, line: 1230, baseType: !291, size: 96, offset: 1568)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !154, file: !155, line: 1231, baseType: !291, size: 96, offset: 1664)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !154, file: !155, line: 1231, baseType: !291, size: 96, offset: 1760)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !154, file: !155, line: 1233, baseType: !7, size: 32, offset: 1856)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !154, file: !155, line: 1234, baseType: !144, size: 32, offset: 1888)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !154, file: !155, line: 1235, baseType: !7, size: 32, offset: 1920)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !154, file: !155, line: 1237, baseType: !190, size: 16, offset: 1952)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !154, file: !155, line: 1239, baseType: !130, size: 8, offset: 1968)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !154, file: !155, line: 1240, baseType: !682, size: 8, offset: 1976)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !154, file: !155, line: 1242, baseType: !586, size: 64, offset: 1984)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !154, file: !155, line: 1244, baseType: !1746, size: 64, offset: 2048)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !155, line: 59, flags: DIFlagFwdDecl)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !154, file: !155, line: 1246, baseType: !1749, size: 64, offset: 2112)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !155, line: 1067, size: 5184, elements: !1751)
!1751 = !{!1752, !1781, !1782, !1796, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1818, !1834, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1945}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1750, file: !155, line: 1068, baseType: !1753, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !155, line: 934, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !155, line: 925, size: 576, elements: !1756)
!1756 = !{!1757, !1773, !1774, !1775, !1776, !1777, !1780}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1755, file: !155, line: 926, baseType: !1758, size: 320)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !155, line: 830, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !155, line: 813, size: 320, elements: !1760)
!1760 = !{!1761, !1764, !1767, !1768, !1770, !1771, !1772}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1759, file: !155, line: 814, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !155, line: 51, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1759, file: !155, line: 815, baseType: !1765, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !155, line: 815, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1759, file: !155, line: 818, baseType: !131, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1759, file: !155, line: 819, baseType: !1769, size: 32, offset: 192)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 32, elements: !365)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1759, file: !155, line: 822, baseType: !144, size: 32, offset: 224)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1759, file: !155, line: 826, baseType: !144, size: 32, offset: 256)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1759, file: !155, line: 829, baseType: !144, size: 32, offset: 288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1755, file: !155, line: 928, baseType: !190, size: 16, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1755, file: !155, line: 928, baseType: !190, size: 16, offset: 336)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1755, file: !155, line: 929, baseType: !144, size: 32, offset: 352)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1755, file: !155, line: 930, baseType: !625, size: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1755, file: !155, line: 931, baseType: !1778, size: 64, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !155, line: 931, flags: DIFlagFwdDecl)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1755, file: !155, line: 933, baseType: !131, size: 64, offset: 512)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1750, file: !155, line: 1069, baseType: !1753, size: 64, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1750, file: !155, line: 1070, baseType: !1783, size: 64, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !155, line: 916, baseType: !1785)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !155, line: 891, size: 704, elements: !1786)
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1785, file: !155, line: 892, baseType: !1758, size: 320)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1785, file: !155, line: 896, baseType: !144, size: 32, offset: 320)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1785, file: !155, line: 900, baseType: !810, size: 96, offset: 352)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1785, file: !155, line: 903, baseType: !256, size: 32, offset: 448)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1785, file: !155, line: 906, baseType: !144, size: 32, offset: 480)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1785, file: !155, line: 909, baseType: !256, size: 32, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1785, file: !155, line: 912, baseType: !256, size: 32, offset: 544)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1785, file: !155, line: 914, baseType: !228, size: 64, offset: 576)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1785, file: !155, line: 915, baseType: !131, size: 64, offset: 640)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1750, file: !155, line: 1071, baseType: !1797, size: 64, offset: 192)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !155, line: 920, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !155, line: 918, size: 320, elements: !1800)
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1799, file: !155, line: 919, baseType: !1758, size: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1750, file: !155, line: 1075, baseType: !256, size: 32, offset: 256)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1750, file: !155, line: 1077, baseType: !256, size: 32, offset: 288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1750, file: !155, line: 1078, baseType: !256, size: 32, offset: 320)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1750, file: !155, line: 1079, baseType: !190, size: 16, offset: 352)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1750, file: !155, line: 1082, baseType: !190, size: 16, offset: 368)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1750, file: !155, line: 1085, baseType: !130, size: 8, offset: 384)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1750, file: !155, line: 1086, baseType: !130, size: 8, offset: 392)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1750, file: !155, line: 1087, baseType: !130, size: 8, offset: 400)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1750, file: !155, line: 1088, baseType: !130, size: 8, offset: 408)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1750, file: !155, line: 1090, baseType: !256, size: 32, offset: 416)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1750, file: !155, line: 1093, baseType: !190, size: 16, offset: 448)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1750, file: !155, line: 1096, baseType: !130, size: 8, offset: 464)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1750, file: !155, line: 1098, baseType: !1815, size: 40, offset: 472)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 40, elements: !1816)
!1816 = !{!1817}
!1817 = !DISubrange(count: 5)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1750, file: !155, line: 1101, baseType: !1819, size: 832, offset: 512)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !155, line: 836, size: 832, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1819, file: !155, line: 837, baseType: !1758, size: 320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1819, file: !155, line: 839, baseType: !190, size: 16, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1819, file: !155, line: 839, baseType: !190, size: 16, offset: 336)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1819, file: !155, line: 842, baseType: !190, size: 16, offset: 352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1819, file: !155, line: 842, baseType: !190, size: 16, offset: 368)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1819, file: !155, line: 843, baseType: !637, size: 32, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1819, file: !155, line: 845, baseType: !144, size: 32, offset: 416)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1819, file: !155, line: 847, baseType: !131, size: 64, offset: 448)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1819, file: !155, line: 848, baseType: !590, size: 64, offset: 512)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1819, file: !155, line: 849, baseType: !590, size: 64, offset: 576)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1819, file: !155, line: 850, baseType: !590, size: 64, offset: 640)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1819, file: !155, line: 851, baseType: !291, size: 96, offset: 704)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1819, file: !155, line: 852, baseType: !256, size: 32, offset: 800)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1750, file: !155, line: 1104, baseType: !1835, size: 1344, offset: 1344)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !155, line: 867, size: 1344, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1835, file: !155, line: 868, baseType: !190, size: 16)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1835, file: !155, line: 869, baseType: !190, size: 16, offset: 16)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1835, file: !155, line: 870, baseType: !190, size: 16, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1835, file: !155, line: 871, baseType: !190, size: 16, offset: 48)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1835, file: !155, line: 873, baseType: !1842, size: 896, offset: 64)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1843, size: 896, elements: !664)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !155, line: 864, baseType: !1844)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !155, line: 859, size: 128, elements: !1845)
!1845 = !{!1846, !1847, !1848, !1849, !1850, !1851}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1844, file: !155, line: 860, baseType: !190, size: 16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1844, file: !155, line: 861, baseType: !190, size: 16, offset: 16)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1844, file: !155, line: 861, baseType: !190, size: 16, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1844, file: !155, line: 861, baseType: !190, size: 16, offset: 48)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1844, file: !155, line: 862, baseType: !144, size: 32, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1844, file: !155, line: 863, baseType: !256, size: 32, offset: 96)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1835, file: !155, line: 874, baseType: !131, size: 64, offset: 960)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1835, file: !155, line: 876, baseType: !256, size: 32, offset: 1024)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1835, file: !155, line: 876, baseType: !256, size: 32, offset: 1056)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1835, file: !155, line: 878, baseType: !144, size: 32, offset: 1088)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1835, file: !155, line: 879, baseType: !144, size: 32, offset: 1120)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1835, file: !155, line: 881, baseType: !144, size: 32, offset: 1152)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1835, file: !155, line: 881, baseType: !144, size: 32, offset: 1184)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1835, file: !155, line: 883, baseType: !153, size: 64, offset: 1216)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1835, file: !155, line: 884, baseType: !228, size: 64, offset: 1280)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1750, file: !155, line: 1107, baseType: !256, size: 32, offset: 2688)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1750, file: !155, line: 1110, baseType: !256, size: 32, offset: 2720)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1750, file: !155, line: 1113, baseType: !190, size: 16, offset: 2752)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1750, file: !155, line: 1113, baseType: !190, size: 16, offset: 2768)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1750, file: !155, line: 1116, baseType: !130, size: 8, offset: 2784)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1750, file: !155, line: 1117, baseType: !682, size: 8, offset: 2792)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1750, file: !155, line: 1120, baseType: !190, size: 16, offset: 2800)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1750, file: !155, line: 1121, baseType: !256, size: 32, offset: 2816)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1750, file: !155, line: 1122, baseType: !256, size: 32, offset: 2848)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1750, file: !155, line: 1123, baseType: !256, size: 32, offset: 2880)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1750, file: !155, line: 1124, baseType: !256, size: 32, offset: 2912)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1750, file: !155, line: 1125, baseType: !256, size: 32, offset: 2944)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1750, file: !155, line: 1126, baseType: !256, size: 32, offset: 2976)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1750, file: !155, line: 1127, baseType: !256, size: 32, offset: 3008)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1750, file: !155, line: 1128, baseType: !256, size: 32, offset: 3040)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1750, file: !155, line: 1129, baseType: !256, size: 32, offset: 3072)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1750, file: !155, line: 1130, baseType: !256, size: 32, offset: 3104)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1750, file: !155, line: 1131, baseType: !190, size: 16, offset: 3136)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1750, file: !155, line: 1132, baseType: !130, size: 8, offset: 3152)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1750, file: !155, line: 1133, baseType: !130, size: 8, offset: 3160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1750, file: !155, line: 1134, baseType: !1882, size: 24, offset: 3168)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 24, elements: !292)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1750, file: !155, line: 1135, baseType: !130, size: 8, offset: 3192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1750, file: !155, line: 1138, baseType: !228, size: 64, offset: 3200)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1750, file: !155, line: 1139, baseType: !130, size: 8, offset: 3264)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1750, file: !155, line: 1140, baseType: !130, size: 8, offset: 3272)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1750, file: !155, line: 1141, baseType: !130, size: 8, offset: 3280)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1750, file: !155, line: 1142, baseType: !130, size: 8, offset: 3288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1750, file: !155, line: 1143, baseType: !130, size: 8, offset: 3296)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1750, file: !155, line: 1144, baseType: !1891, size: 64, offset: 3304)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 64, elements: !609)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1750, file: !155, line: 1145, baseType: !1891, size: 64, offset: 3368)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1750, file: !155, line: 1148, baseType: !130, size: 8, offset: 3432)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1750, file: !155, line: 1149, baseType: !130, size: 8, offset: 3440)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1750, file: !155, line: 1152, baseType: !130, size: 8, offset: 3448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1750, file: !155, line: 1152, baseType: !130, size: 8, offset: 3456)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1750, file: !155, line: 1153, baseType: !130, size: 8, offset: 3464)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1750, file: !155, line: 1154, baseType: !190, size: 16, offset: 3472)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1750, file: !155, line: 1154, baseType: !190, size: 16, offset: 3488)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1750, file: !155, line: 1155, baseType: !190, size: 16, offset: 3504)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1750, file: !155, line: 1155, baseType: !190, size: 16, offset: 3520)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1750, file: !155, line: 1156, baseType: !130, size: 8, offset: 3536)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1750, file: !155, line: 1157, baseType: !130, size: 8, offset: 3544)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1750, file: !155, line: 1159, baseType: !130, size: 8, offset: 3552)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1750, file: !155, line: 1160, baseType: !130, size: 8, offset: 3560)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1750, file: !155, line: 1161, baseType: !130, size: 8, offset: 3568)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1750, file: !155, line: 1162, baseType: !130, size: 8, offset: 3576)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1750, file: !155, line: 1165, baseType: !144, size: 32, offset: 3584)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1750, file: !155, line: 1166, baseType: !144, size: 32, offset: 3616)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1750, file: !155, line: 1167, baseType: !144, size: 32, offset: 3648)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1750, file: !155, line: 1168, baseType: !144, size: 32, offset: 3680)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1750, file: !155, line: 1171, baseType: !190, size: 16, offset: 3712)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1750, file: !155, line: 1171, baseType: !190, size: 16, offset: 3728)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1750, file: !155, line: 1172, baseType: !144, size: 32, offset: 3744)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1750, file: !155, line: 1173, baseType: !256, size: 32, offset: 3776)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1750, file: !155, line: 1174, baseType: !256, size: 32, offset: 3808)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1750, file: !155, line: 1177, baseType: !1918, size: 1024, offset: 3840)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !155, line: 963, size: 1024, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1943, !1944}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1918, file: !155, line: 965, baseType: !144, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1918, file: !155, line: 968, baseType: !256, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1918, file: !155, line: 971, baseType: !256, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1918, file: !155, line: 974, baseType: !256, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1918, file: !155, line: 977, baseType: !291, size: 96, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1918, file: !155, line: 979, baseType: !291, size: 96, offset: 224)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1918, file: !155, line: 982, baseType: !144, size: 32, offset: 320)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1918, file: !155, line: 987, baseType: !786, size: 64, offset: 352)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1918, file: !155, line: 989, baseType: !256, size: 32, offset: 416)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1918, file: !155, line: 994, baseType: !144, size: 32, offset: 448)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1918, file: !155, line: 995, baseType: !144, size: 32, offset: 480)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1918, file: !155, line: 997, baseType: !130, size: 8, offset: 512)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1918, file: !155, line: 998, baseType: !663, size: 56, offset: 520)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1918, file: !155, line: 1000, baseType: !256, size: 32, offset: 576)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1918, file: !155, line: 1003, baseType: !786, size: 64, offset: 608)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1918, file: !155, line: 1006, baseType: !144, size: 32, offset: 672)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1918, file: !155, line: 1009, baseType: !256, size: 32, offset: 704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1918, file: !155, line: 1012, baseType: !786, size: 64, offset: 736)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1918, file: !155, line: 1015, baseType: !786, size: 64, offset: 800)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1918, file: !155, line: 1018, baseType: !144, size: 32, offset: 864)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1918, file: !155, line: 1019, baseType: !1941, size: 64, offset: 896)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !155, line: 63, flags: DIFlagFwdDecl)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1918, file: !155, line: 1023, baseType: !256, size: 32, offset: 960)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1918, file: !155, line: 1024, baseType: !144, size: 32, offset: 992)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1750, file: !155, line: 1179, baseType: !1946, size: 320, offset: 4864)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !155, line: 1043, size: 320, elements: !1947)
!1947 = !{!1948, !1949, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1946, file: !155, line: 1044, baseType: !130, size: 8)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1946, file: !155, line: 1045, baseType: !1950, size: 16, offset: 8)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 16, elements: !633)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1946, file: !155, line: 1048, baseType: !130, size: 8, offset: 24)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1946, file: !155, line: 1049, baseType: !256, size: 32, offset: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1946, file: !155, line: 1049, baseType: !256, size: 32, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1946, file: !155, line: 1052, baseType: !256, size: 32, offset: 96)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1946, file: !155, line: 1052, baseType: !256, size: 32, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1946, file: !155, line: 1053, baseType: !130, size: 8, offset: 160)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1946, file: !155, line: 1054, baseType: !1882, size: 24, offset: 168)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1946, file: !155, line: 1057, baseType: !256, size: 32, offset: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1946, file: !155, line: 1057, baseType: !256, size: 32, offset: 224)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1946, file: !155, line: 1060, baseType: !256, size: 32, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1946, file: !155, line: 1060, baseType: !256, size: 32, offset: 288)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !154, file: !155, line: 1247, baseType: !1963, size: 64, offset: 2176)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !155, line: 60, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !154, file: !155, line: 1251, baseType: !1966, size: 31872, offset: 2240)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !155, line: 403, size: 31872, elements: !1967)
!1967 = !{!1968, !2003, !2023, !2032, !2052, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2193, !2194, !2195, !2197, !2213, !2214}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1966, file: !155, line: 404, baseType: !1969, size: 1984)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !155, line: 259, size: 1984, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1986, !1998}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1969, file: !155, line: 260, baseType: !130, size: 8)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1969, file: !155, line: 263, baseType: !130, size: 8, offset: 8)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1969, file: !155, line: 266, baseType: !130, size: 8, offset: 16)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1969, file: !155, line: 267, baseType: !130, size: 8, offset: 24)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1969, file: !155, line: 269, baseType: !130, size: 8, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1969, file: !155, line: 270, baseType: !130, size: 8, offset: 40)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1969, file: !155, line: 276, baseType: !130, size: 8, offset: 48)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1969, file: !155, line: 279, baseType: !130, size: 8, offset: 56)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1969, file: !155, line: 280, baseType: !190, size: 16, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1969, file: !155, line: 280, baseType: !190, size: 16, offset: 80)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1969, file: !155, line: 281, baseType: !256, size: 32, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1969, file: !155, line: 284, baseType: !130, size: 8, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1969, file: !155, line: 285, baseType: !130, size: 8, offset: 136)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1969, file: !155, line: 287, baseType: !1985, size: 48, offset: 144)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 48, elements: !708)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1969, file: !155, line: 290, baseType: !1987, size: 1280, offset: 192)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !657, line: 174, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !657, line: 166, size: 1280, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1988, file: !657, line: 167, baseType: !144, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1988, file: !657, line: 167, baseType: !144, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1988, file: !657, line: 168, baseType: !149, size: 512, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1988, file: !657, line: 169, baseType: !149, size: 512, offset: 576)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1988, file: !657, line: 170, baseType: !256, size: 32, offset: 1088)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1988, file: !657, line: 171, baseType: !256, size: 32, offset: 1120)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1988, file: !657, line: 172, baseType: !758, size: 64, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1988, file: !657, line: 173, baseType: !131, size: 64, offset: 1216)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1969, file: !155, line: 291, baseType: !1999, size: 512, offset: 1472)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !657, line: 178, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !657, line: 176, size: 512, elements: !2001)
!2001 = !{!2002}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2000, file: !657, line: 177, baseType: !149, size: 512)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1966, file: !155, line: 406, baseType: !2004, size: 64, offset: 1984)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !155, line: 80, size: 1472, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2005, file: !155, line: 81, baseType: !131, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2005, file: !155, line: 82, baseType: !131, size: 64, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2005, file: !155, line: 83, baseType: !7, size: 32, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2005, file: !155, line: 84, baseType: !7, size: 32, offset: 160)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2005, file: !155, line: 86, baseType: !7, size: 32, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2005, file: !155, line: 87, baseType: !7, size: 32, offset: 224)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2005, file: !155, line: 88, baseType: !7, size: 32, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2005, file: !155, line: 89, baseType: !7, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2005, file: !155, line: 90, baseType: !7, size: 32, offset: 320)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2005, file: !155, line: 91, baseType: !7, size: 32, offset: 352)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2005, file: !155, line: 92, baseType: !7, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2005, file: !155, line: 93, baseType: !7, size: 32, offset: 416)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2005, file: !155, line: 95, baseType: !2020, size: 1024, offset: 448)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 1024, elements: !2021)
!2021 = !{!2022}
!2022 = !DISubrange(count: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1966, file: !155, line: 407, baseType: !2024, size: 64, offset: 2048)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !155, line: 98, size: 1216, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2025, file: !155, line: 100, baseType: !131, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2025, file: !155, line: 101, baseType: !131, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2025, file: !155, line: 103, baseType: !7, size: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2025, file: !155, line: 104, baseType: !7, size: 32, offset: 160)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2025, file: !155, line: 106, baseType: !2020, size: 1024, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1966, file: !155, line: 408, baseType: !2033, size: 512, offset: 2112)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !155, line: 109, size: 512, elements: !2034)
!2034 = !{!2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2033, file: !155, line: 111, baseType: !144, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2033, file: !155, line: 112, baseType: !144, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2033, file: !155, line: 115, baseType: !144, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2033, file: !155, line: 116, baseType: !144, size: 32, offset: 96)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2033, file: !155, line: 117, baseType: !144, size: 32, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2033, file: !155, line: 118, baseType: !144, size: 32, offset: 160)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2033, file: !155, line: 119, baseType: !144, size: 32, offset: 192)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2033, file: !155, line: 120, baseType: !144, size: 32, offset: 224)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2033, file: !155, line: 121, baseType: !144, size: 32, offset: 256)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2033, file: !155, line: 122, baseType: !144, size: 32, offset: 288)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2033, file: !155, line: 125, baseType: !144, size: 32, offset: 320)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2033, file: !155, line: 126, baseType: !144, size: 32, offset: 352)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2033, file: !155, line: 127, baseType: !190, size: 16, offset: 384)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2033, file: !155, line: 128, baseType: !190, size: 16, offset: 400)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2033, file: !155, line: 129, baseType: !144, size: 32, offset: 416)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2033, file: !155, line: 130, baseType: !144, size: 32, offset: 448)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2033, file: !155, line: 131, baseType: !144, size: 32, offset: 480)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1966, file: !155, line: 409, baseType: !2053, size: 576, offset: 2624)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !155, line: 134, size: 576, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2053, file: !155, line: 135, baseType: !144, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2053, file: !155, line: 136, baseType: !144, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2053, file: !155, line: 137, baseType: !144, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2053, file: !155, line: 138, baseType: !144, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2053, file: !155, line: 139, baseType: !144, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2053, file: !155, line: 140, baseType: !144, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2053, file: !155, line: 141, baseType: !144, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2053, file: !155, line: 142, baseType: !144, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2053, file: !155, line: 143, baseType: !256, size: 32, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2053, file: !155, line: 144, baseType: !144, size: 32, offset: 288)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2053, file: !155, line: 145, baseType: !144, size: 32, offset: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2053, file: !155, line: 147, baseType: !144, size: 32, offset: 352)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2053, file: !155, line: 148, baseType: !144, size: 32, offset: 384)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2053, file: !155, line: 149, baseType: !144, size: 32, offset: 416)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2053, file: !155, line: 150, baseType: !144, size: 32, offset: 448)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2053, file: !155, line: 151, baseType: !144, size: 32, offset: 480)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2053, file: !155, line: 152, baseType: !195, size: 64, offset: 512)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1966, file: !155, line: 411, baseType: !144, size: 32, offset: 3200)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1966, file: !155, line: 411, baseType: !144, size: 32, offset: 3232)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1966, file: !155, line: 411, baseType: !144, size: 32, offset: 3264)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1966, file: !155, line: 412, baseType: !256, size: 32, offset: 3296)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1966, file: !155, line: 413, baseType: !144, size: 32, offset: 3328)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1966, file: !155, line: 413, baseType: !144, size: 32, offset: 3360)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1966, file: !155, line: 415, baseType: !144, size: 32, offset: 3392)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1966, file: !155, line: 415, baseType: !144, size: 32, offset: 3424)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1966, file: !155, line: 416, baseType: !190, size: 16, offset: 3456)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1966, file: !155, line: 416, baseType: !190, size: 16, offset: 3472)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1966, file: !155, line: 418, baseType: !256, size: 32, offset: 3488)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1966, file: !155, line: 418, baseType: !256, size: 32, offset: 3520)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1966, file: !155, line: 421, baseType: !256, size: 32, offset: 3552)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1966, file: !155, line: 421, baseType: !256, size: 32, offset: 3584)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1966, file: !155, line: 421, baseType: !256, size: 32, offset: 3616)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1966, file: !155, line: 425, baseType: !190, size: 16, offset: 3648)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1966, file: !155, line: 425, baseType: !190, size: 16, offset: 3664)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1966, file: !155, line: 425, baseType: !190, size: 16, offset: 3680)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1966, file: !155, line: 426, baseType: !190, size: 16, offset: 3696)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1966, file: !155, line: 428, baseType: !190, size: 16, offset: 3712)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1966, file: !155, line: 428, baseType: !190, size: 16, offset: 3728)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1966, file: !155, line: 431, baseType: !144, size: 32, offset: 3744)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1966, file: !155, line: 433, baseType: !190, size: 16, offset: 3776)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1966, file: !155, line: 435, baseType: !190, size: 16, offset: 3792)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1966, file: !155, line: 437, baseType: !190, size: 16, offset: 3808)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1966, file: !155, line: 439, baseType: !190, size: 16, offset: 3824)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1966, file: !155, line: 441, baseType: !190, size: 16, offset: 3840)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1966, file: !155, line: 443, baseType: !190, size: 16, offset: 3856)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1966, file: !155, line: 449, baseType: !144, size: 32, offset: 3872)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1966, file: !155, line: 453, baseType: !144, size: 32, offset: 3904)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1966, file: !155, line: 458, baseType: !190, size: 16, offset: 3936)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1966, file: !155, line: 462, baseType: !190, size: 16, offset: 3952)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1966, file: !155, line: 467, baseType: !144, size: 32, offset: 3968)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1966, file: !155, line: 467, baseType: !144, size: 32, offset: 4000)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1966, file: !155, line: 469, baseType: !190, size: 16, offset: 4032)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1966, file: !155, line: 469, baseType: !190, size: 16, offset: 4048)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1966, file: !155, line: 469, baseType: !190, size: 16, offset: 4064)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1966, file: !155, line: 469, baseType: !190, size: 16, offset: 4080)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1966, file: !155, line: 474, baseType: !190, size: 16, offset: 4096)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1966, file: !155, line: 475, baseType: !130, size: 8, offset: 4112)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1966, file: !155, line: 476, baseType: !130, size: 8, offset: 4120)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1966, file: !155, line: 481, baseType: !144, size: 32, offset: 4128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1966, file: !155, line: 486, baseType: !144, size: 32, offset: 4160)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1966, file: !155, line: 491, baseType: !144, size: 32, offset: 4192)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1966, file: !155, line: 496, baseType: !190, size: 16, offset: 4224)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1966, file: !155, line: 498, baseType: !190, size: 16, offset: 4240)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1966, file: !155, line: 501, baseType: !190, size: 16, offset: 4256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1966, file: !155, line: 502, baseType: !190, size: 16, offset: 4272)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1966, file: !155, line: 508, baseType: !190, size: 16, offset: 4288)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1966, file: !155, line: 513, baseType: !190, size: 16, offset: 4304)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1966, file: !155, line: 515, baseType: !190, size: 16, offset: 4320)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1966, file: !155, line: 515, baseType: !190, size: 16, offset: 4336)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1966, file: !155, line: 519, baseType: !766, size: 128, offset: 4352)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1966, file: !155, line: 519, baseType: !766, size: 128, offset: 4480)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1966, file: !155, line: 520, baseType: !2127, size: 128, offset: 4608)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !767, line: 89, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !767, line: 86, size: 128, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2128, file: !767, line: 87, baseType: !144, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2128, file: !767, line: 87, baseType: !144, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2128, file: !767, line: 88, baseType: !144, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2128, file: !767, line: 88, baseType: !144, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1966, file: !155, line: 523, baseType: !213, size: 128, offset: 4736)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1966, file: !155, line: 524, baseType: !190, size: 16, offset: 4864)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1966, file: !155, line: 527, baseType: !190, size: 16, offset: 4880)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1966, file: !155, line: 532, baseType: !256, size: 32, offset: 4896)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1966, file: !155, line: 532, baseType: !256, size: 32, offset: 4928)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1966, file: !155, line: 534, baseType: !256, size: 32, offset: 4960)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1966, file: !155, line: 538, baseType: !256, size: 32, offset: 4992)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1966, file: !155, line: 542, baseType: !144, size: 32, offset: 5024)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1966, file: !155, line: 545, baseType: !256, size: 32, offset: 5056)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1966, file: !155, line: 545, baseType: !256, size: 32, offset: 5088)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1966, file: !155, line: 545, baseType: !256, size: 32, offset: 5120)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1966, file: !155, line: 548, baseType: !256, size: 32, offset: 5152)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1966, file: !155, line: 551, baseType: !190, size: 16, offset: 5184)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1966, file: !155, line: 551, baseType: !190, size: 16, offset: 5200)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1966, file: !155, line: 551, baseType: !190, size: 16, offset: 5216)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1966, file: !155, line: 551, baseType: !190, size: 16, offset: 5232)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1966, file: !155, line: 552, baseType: !190, size: 16, offset: 5248)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1966, file: !155, line: 552, baseType: !190, size: 16, offset: 5264)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1966, file: !155, line: 553, baseType: !256, size: 32, offset: 5280)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1966, file: !155, line: 553, baseType: !256, size: 32, offset: 5312)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1966, file: !155, line: 554, baseType: !190, size: 16, offset: 5344)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1966, file: !155, line: 554, baseType: !190, size: 16, offset: 5360)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1966, file: !155, line: 555, baseType: !256, size: 32, offset: 5376)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1966, file: !155, line: 555, baseType: !256, size: 32, offset: 5408)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1966, file: !155, line: 558, baseType: !177, size: 8192, offset: 5440)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1966, file: !155, line: 561, baseType: !144, size: 32, offset: 13632)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1966, file: !155, line: 562, baseType: !190, size: 16, offset: 13664)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1966, file: !155, line: 562, baseType: !190, size: 16, offset: 13680)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1966, file: !155, line: 565, baseType: !2163, size: 6144, offset: 13696)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 6144, elements: !2164)
!2164 = !{!2165}
!2165 = !DISubrange(count: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1966, file: !155, line: 568, baseType: !364, size: 128, offset: 19840)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1966, file: !155, line: 569, baseType: !364, size: 128, offset: 19968)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1966, file: !155, line: 572, baseType: !130, size: 8, offset: 20096)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1966, file: !155, line: 573, baseType: !130, size: 8, offset: 20104)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1966, file: !155, line: 574, baseType: !130, size: 8, offset: 20112)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1966, file: !155, line: 575, baseType: !1815, size: 40, offset: 20120)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1966, file: !155, line: 578, baseType: !144, size: 32, offset: 20160)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1966, file: !155, line: 579, baseType: !190, size: 16, offset: 20192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1966, file: !155, line: 580, baseType: !190, size: 16, offset: 20208)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1966, file: !155, line: 581, baseType: !256, size: 32, offset: 20224)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1966, file: !155, line: 582, baseType: !256, size: 32, offset: 20256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1966, file: !155, line: 585, baseType: !190, size: 16, offset: 20288)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1966, file: !155, line: 585, baseType: !190, size: 16, offset: 20304)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1966, file: !155, line: 586, baseType: !256, size: 32, offset: 20320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1966, file: !155, line: 589, baseType: !190, size: 16, offset: 20352)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1966, file: !155, line: 589, baseType: !190, size: 16, offset: 20368)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1966, file: !155, line: 590, baseType: !144, size: 32, offset: 20384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1966, file: !155, line: 593, baseType: !190, size: 16, offset: 20416)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1966, file: !155, line: 593, baseType: !190, size: 16, offset: 20432)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1966, file: !155, line: 594, baseType: !190, size: 16, offset: 20448)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1966, file: !155, line: 594, baseType: !190, size: 16, offset: 20464)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1966, file: !155, line: 595, baseType: !256, size: 32, offset: 20480)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1966, file: !155, line: 596, baseType: !256, size: 32, offset: 20512)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1966, file: !155, line: 597, baseType: !2190, size: 64, offset: 20544)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2192, line: 44, flags: DIFlagFwdDecl)
!2192 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1966, file: !155, line: 600, baseType: !144, size: 32, offset: 20608)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1966, file: !155, line: 601, baseType: !256, size: 32, offset: 20640)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1966, file: !155, line: 604, baseType: !2196, size: 256, offset: 20672)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 256, elements: !696)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1966, file: !155, line: 607, baseType: !2198, size: 10880, offset: 20928)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !155, line: 364, size: 10880, elements: !2199)
!2199 = !{!2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2198, file: !155, line: 365, baseType: !1969, size: 1984)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2198, file: !155, line: 367, baseType: !177, size: 8192, offset: 1984)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2198, file: !155, line: 369, baseType: !190, size: 16, offset: 10176)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2198, file: !155, line: 369, baseType: !190, size: 16, offset: 10192)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2198, file: !155, line: 370, baseType: !190, size: 16, offset: 10208)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2198, file: !155, line: 370, baseType: !190, size: 16, offset: 10224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2198, file: !155, line: 372, baseType: !256, size: 32, offset: 10240)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2198, file: !155, line: 373, baseType: !256, size: 32, offset: 10272)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2198, file: !155, line: 375, baseType: !1882, size: 24, offset: 10304)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2198, file: !155, line: 376, baseType: !130, size: 8, offset: 10328)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2198, file: !155, line: 378, baseType: !130, size: 8, offset: 10336)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2198, file: !155, line: 379, baseType: !1882, size: 24, offset: 10344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2198, file: !155, line: 381, baseType: !149, size: 512, offset: 10368)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1966, file: !155, line: 609, baseType: !144, size: 32, offset: 31808)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1966, file: !155, line: 610, baseType: !144, size: 32, offset: 31840)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !154, file: !155, line: 1252, baseType: !2216, size: 256, offset: 34112)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !155, line: 158, size: 256, elements: !2217)
!2217 = !{!2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2216, file: !155, line: 159, baseType: !144, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2216, file: !155, line: 160, baseType: !256, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2216, file: !155, line: 161, baseType: !256, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2216, file: !155, line: 162, baseType: !256, size: 32, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2216, file: !155, line: 163, baseType: !144, size: 32, offset: 128)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2216, file: !155, line: 164, baseType: !190, size: 16, offset: 160)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2216, file: !155, line: 165, baseType: !190, size: 16, offset: 176)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2216, file: !155, line: 166, baseType: !256, size: 32, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2216, file: !155, line: 167, baseType: !256, size: 32, offset: 224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !154, file: !155, line: 1254, baseType: !213, size: 128, offset: 34368)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !154, file: !155, line: 1255, baseType: !213, size: 128, offset: 34496)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !154, file: !155, line: 1257, baseType: !131, size: 64, offset: 34624)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !154, file: !155, line: 1258, baseType: !131, size: 64, offset: 34688)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !154, file: !155, line: 1259, baseType: !131, size: 64, offset: 34752)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !154, file: !155, line: 1260, baseType: !131, size: 64, offset: 34816)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !154, file: !155, line: 1262, baseType: !131, size: 64, offset: 34880)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !154, file: !155, line: 1265, baseType: !2235, size: 64, offset: 34944)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !155, line: 1265, flags: DIFlagFwdDecl)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !154, file: !155, line: 1266, baseType: !190, size: 16, offset: 35008)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !154, file: !155, line: 1267, baseType: !190, size: 16, offset: 35024)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !154, file: !155, line: 1270, baseType: !144, size: 32, offset: 35040)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !154, file: !155, line: 1271, baseType: !213, size: 128, offset: 35072)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !154, file: !155, line: 1274, baseType: !2242, size: 128, offset: 35200)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !155, line: 650, size: 128, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2242, file: !155, line: 651, baseType: !291, size: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2242, file: !155, line: 652, baseType: !130, size: 8, offset: 96)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2242, file: !155, line: 652, baseType: !130, size: 8, offset: 104)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2242, file: !155, line: 652, baseType: !130, size: 8, offset: 112)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2242, file: !155, line: 652, baseType: !130, size: 8, offset: 120)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !154, file: !155, line: 1275, baseType: !2250, size: 1472, offset: 35328)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !155, line: 676, size: 1472, elements: !2251)
!2251 = !{!2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2273, !2274, !2275, !2276, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2250, file: !155, line: 679, baseType: !2242, size: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2250, file: !155, line: 680, baseType: !190, size: 16, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2250, file: !155, line: 680, baseType: !190, size: 16, offset: 144)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2250, file: !155, line: 680, baseType: !190, size: 16, offset: 160)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2250, file: !155, line: 680, baseType: !190, size: 16, offset: 176)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2250, file: !155, line: 681, baseType: !190, size: 16, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2250, file: !155, line: 681, baseType: !190, size: 16, offset: 208)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2250, file: !155, line: 681, baseType: !190, size: 16, offset: 224)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2250, file: !155, line: 681, baseType: !190, size: 16, offset: 240)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2250, file: !155, line: 682, baseType: !190, size: 16, offset: 256)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2250, file: !155, line: 682, baseType: !751, size: 48, offset: 272)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2250, file: !155, line: 685, baseType: !2264, size: 192, offset: 320)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !155, line: 633, size: 192, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2264, file: !155, line: 634, baseType: !190, size: 16)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2264, file: !155, line: 634, baseType: !190, size: 16, offset: 16)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2264, file: !155, line: 635, baseType: !190, size: 16, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2264, file: !155, line: 635, baseType: !190, size: 16, offset: 48)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2264, file: !155, line: 636, baseType: !256, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2264, file: !155, line: 636, baseType: !256, size: 32, offset: 96)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2264, file: !155, line: 637, baseType: !2190, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2250, file: !155, line: 686, baseType: !190, size: 16, offset: 512)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2250, file: !155, line: 686, baseType: !190, size: 16, offset: 528)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2250, file: !155, line: 687, baseType: !256, size: 32, offset: 544)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2250, file: !155, line: 688, baseType: !2277, size: 448, offset: 576)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !155, line: 674, baseType: !2278)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !155, line: 659, size: 448, elements: !2279)
!2279 = !{!2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2278, file: !155, line: 660, baseType: !256, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2278, file: !155, line: 661, baseType: !256, size: 32, offset: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2278, file: !155, line: 662, baseType: !256, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2278, file: !155, line: 663, baseType: !256, size: 32, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2278, file: !155, line: 664, baseType: !256, size: 32, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2278, file: !155, line: 665, baseType: !256, size: 32, offset: 160)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2278, file: !155, line: 666, baseType: !256, size: 32, offset: 192)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2278, file: !155, line: 667, baseType: !256, size: 32, offset: 224)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2278, file: !155, line: 668, baseType: !256, size: 32, offset: 256)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2278, file: !155, line: 669, baseType: !256, size: 32, offset: 288)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2278, file: !155, line: 670, baseType: !144, size: 32, offset: 320)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2278, file: !155, line: 671, baseType: !256, size: 32, offset: 352)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2278, file: !155, line: 672, baseType: !256, size: 32, offset: 384)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2278, file: !155, line: 673, baseType: !190, size: 16, offset: 416)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2278, file: !155, line: 673, baseType: !190, size: 16, offset: 432)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2250, file: !155, line: 692, baseType: !256, size: 32, offset: 1024)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2250, file: !155, line: 697, baseType: !256, size: 32, offset: 1056)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2250, file: !155, line: 703, baseType: !144, size: 32, offset: 1088)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2250, file: !155, line: 704, baseType: !190, size: 16, offset: 1120)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2250, file: !155, line: 704, baseType: !190, size: 16, offset: 1136)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2250, file: !155, line: 705, baseType: !190, size: 16, offset: 1152)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2250, file: !155, line: 706, baseType: !190, size: 16, offset: 1168)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2250, file: !155, line: 707, baseType: !190, size: 16, offset: 1184)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2250, file: !155, line: 708, baseType: !190, size: 16, offset: 1200)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2250, file: !155, line: 709, baseType: !190, size: 16, offset: 1216)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2250, file: !155, line: 709, baseType: !190, size: 16, offset: 1232)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2250, file: !155, line: 709, baseType: !190, size: 16, offset: 1248)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2250, file: !155, line: 709, baseType: !190, size: 16, offset: 1264)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2250, file: !155, line: 710, baseType: !190, size: 16, offset: 1280)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2250, file: !155, line: 711, baseType: !190, size: 16, offset: 1296)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2250, file: !155, line: 712, baseType: !256, size: 32, offset: 1312)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2250, file: !155, line: 713, baseType: !256, size: 32, offset: 1344)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2250, file: !155, line: 713, baseType: !256, size: 32, offset: 1376)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2250, file: !155, line: 713, baseType: !256, size: 32, offset: 1408)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2250, file: !155, line: 713, baseType: !256, size: 32, offset: 1440)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !154, file: !155, line: 1278, baseType: !2316, size: 64, offset: 36800)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !155, line: 1197, size: 64, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2316, file: !155, line: 1199, baseType: !256, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2316, file: !155, line: 1200, baseType: !130, size: 8, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2316, file: !155, line: 1201, baseType: !130, size: 8, offset: 40)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2316, file: !155, line: 1202, baseType: !190, size: 16, offset: 48)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !154, file: !155, line: 1281, baseType: !322, size: 64, offset: 36864)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !154, file: !155, line: 1284, baseType: !2324, size: 192, offset: 36928)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !155, line: 1208, size: 192, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2324, file: !155, line: 1209, baseType: !291, size: 96)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2324, file: !155, line: 1210, baseType: !144, size: 32, offset: 96)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2324, file: !155, line: 1210, baseType: !144, size: 32, offset: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2324, file: !155, line: 1210, baseType: !144, size: 32, offset: 160)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !154, file: !155, line: 1287, baseType: !2331, size: 64, offset: 37120)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !155, line: 62, flags: DIFlagFwdDecl)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !154, file: !155, line: 1289, baseType: !1633, size: 64, offset: 37184)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !154, file: !155, line: 1290, baseType: !1633, size: 64, offset: 37248)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !154, file: !155, line: 1293, baseType: !1987, size: 1280, offset: 37312)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !154, file: !155, line: 1294, baseType: !1999, size: 512, offset: 38592)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !154, file: !155, line: 1295, baseType: !656, size: 512, offset: 39104)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !154, file: !155, line: 1298, baseType: !2339, size: 64, offset: 39616)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !89, line: 49, size: 704, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2340, file: !89, line: 51, baseType: !1274, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2340, file: !89, line: 53, baseType: !1278, size: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2340, file: !89, line: 54, baseType: !2345, size: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2340, file: !89, line: 56, baseType: !1278, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2340, file: !89, line: 58, baseType: !144, size: 32, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !2340, file: !89, line: 59, baseType: !256, size: 32, offset: 288)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !2340, file: !89, line: 62, baseType: !931, size: 64, offset: 320)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2340, file: !89, line: 63, baseType: !215, size: 128, offset: 384)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "numbodies", scope: !2340, file: !89, line: 64, baseType: !144, size: 32, offset: 512)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "steps_per_second", scope: !2340, file: !89, line: 66, baseType: !190, size: 16, offset: 544)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !2340, file: !89, line: 67, baseType: !190, size: 16, offset: 560)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2340, file: !89, line: 69, baseType: !144, size: 32, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !2340, file: !89, line: 70, baseType: !256, size: 32, offset: 608)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "physics_world", scope: !2340, file: !89, line: 73, baseType: !131, size: 64, offset: 640)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !138, file: !16, line: 109, baseType: !129, size: 64, offset: 832)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !134, file: !16, line: 560, baseType: !153, size: 64, offset: 896)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !134, file: !16, line: 561, baseType: !2360, size: 64, offset: 960)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !2362, line: 69, size: 704, elements: !2363)
!2362 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_cloth.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2363 = !{!2364, !2387, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2402, !2405, !2406, !2409, !2410}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2361, file: !2362, line: 70, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothVertex", file: !2362, line: 90, size: 1216, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2366, file: !2362, line: 91, baseType: !144, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2366, file: !2362, line: 92, baseType: !291, size: 96, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "xconst", scope: !2366, file: !2362, line: 93, baseType: !291, size: 96, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2366, file: !2362, line: 94, baseType: !291, size: 96, offset: 224)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !2366, file: !2362, line: 95, baseType: !291, size: 96, offset: 320)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !2366, file: !2362, line: 96, baseType: !291, size: 96, offset: 416)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "txold", scope: !2366, file: !2362, line: 97, baseType: !291, size: 96, offset: 512)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tv", scope: !2366, file: !2362, line: 98, baseType: !291, size: 96, offset: 608)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2366, file: !2362, line: 99, baseType: !256, size: 32, offset: 704)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "goal", scope: !2366, file: !2362, line: 100, baseType: !256, size: 32, offset: 736)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "impulse", scope: !2366, file: !2362, line: 101, baseType: !291, size: 96, offset: 768)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "xrest", scope: !2366, file: !2362, line: 102, baseType: !745, size: 64, offset: 896)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "impulse_count", scope: !2366, file: !2362, line: 103, baseType: !7, size: 32, offset: 960)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !2366, file: !2362, line: 104, baseType: !256, size: 32, offset: 992)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "struct_stiff", scope: !2366, file: !2362, line: 105, baseType: !256, size: 32, offset: 1024)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "bend_stiff", scope: !2366, file: !2362, line: 106, baseType: !256, size: 32, offset: 1056)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "shear_stiff", scope: !2366, file: !2362, line: 107, baseType: !256, size: 32, offset: 1088)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "spring_count", scope: !2366, file: !2362, line: 108, baseType: !144, size: 32, offset: 1120)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !2366, file: !2362, line: 109, baseType: !256, size: 32, offset: 1152)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "springs", scope: !2361, file: !2362, line: 71, baseType: !2388, size: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !2390, line: 118, flags: DIFlagFwdDecl)
!2390 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !2361, file: !2362, line: 72, baseType: !7, size: 32, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "numsprings", scope: !2361, file: !2362, line: 73, baseType: !7, size: 32, offset: 160)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "numfaces", scope: !2361, file: !2362, line: 74, baseType: !7, size: 32, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "old_solver_type", scope: !2361, file: !2362, line: 75, baseType: !1610, size: 8, offset: 224)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2361, file: !2362, line: 76, baseType: !1610, size: 8, offset: 232)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2361, file: !2362, line: 77, baseType: !190, size: 16, offset: 240)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !2361, file: !2362, line: 78, baseType: !1577, size: 64, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "bvhselftree", scope: !2361, file: !2362, line: 79, baseType: !1577, size: 64, offset: 320)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "mfaces", scope: !2361, file: !2362, line: 80, baseType: !2400, size: 64, offset: 384)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !16, line: 578, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "implicit", scope: !2361, file: !2362, line: 81, baseType: !2403, size: 64, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implicit_Data", file: !2362, line: 81, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "implicitEM", scope: !2361, file: !2362, line: 82, baseType: !2403, size: 64, offset: 512)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "edgeset", scope: !2361, file: !2362, line: 83, baseType: !2407, size: 64, offset: 576)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSet", file: !2362, line: 83, flags: DIFlagFwdDecl)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !2361, file: !2362, line: 84, baseType: !144, size: 32, offset: 640)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2361, file: !2362, line: 84, baseType: !144, size: 32, offset: 672)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !134, file: !16, line: 562, baseType: !2412, size: 64, offset: 1024)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !16, line: 562, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !134, file: !16, line: 563, baseType: !2415, size: 64, offset: 1088)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !16, line: 563, flags: DIFlagFwdDecl)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !134, file: !16, line: 564, baseType: !931, size: 64, offset: 1152)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !134, file: !16, line: 565, baseType: !215, size: 128, offset: 1216)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmokeModifierData", file: !16, line: 356, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeModifierData", file: !16, line: 348, size: 1152, elements: !2422)
!2422 = !{!2423, !2424, !2498, !2528, !2538, !2539}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2421, file: !16, line: 349, baseType: !137, size: 896)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2421, file: !16, line: 351, baseType: !2425, size: 64, offset: 896)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeDomainSettings", file: !2427, line: 82, size: 4672, elements: !2428)
!2427 = !DIFile(filename: "blender/source/blender/makesdna/DNA_smoke_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2428 = !{!2429, !2431, !2434, !2435, !2436, !2437, !2438, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2483, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !2426, file: !2427, line: 83, baseType: !2430, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !2426, file: !2427, line: 84, baseType: !2432, size: 64, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "FLUID_3D", file: !2427, line: 84, flags: DIFlagFwdDecl)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_mutex", scope: !2426, file: !2427, line: 85, baseType: !131, size: 64, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_group", scope: !2426, file: !2427, line: 86, baseType: !1278, size: 64, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !2426, file: !2427, line: 87, baseType: !1278, size: 64, offset: 256)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "coll_group", scope: !2426, file: !2427, line: 88, baseType: !1278, size: 64, offset: 320)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "wt", scope: !2426, file: !2427, line: 89, baseType: !2439, size: 64, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DICompositeType(tag: DW_TAG_structure_type, name: "WTURBULENCE", file: !2427, line: 89, flags: DIFlagFwdDecl)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2426, file: !2427, line: 90, baseType: !599, size: 64, offset: 448)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "tex_wt", scope: !2426, file: !2427, line: 91, baseType: !599, size: 64, offset: 512)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "tex_shadow", scope: !2426, file: !2427, line: 92, baseType: !599, size: 64, offset: 576)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "tex_flame", scope: !2426, file: !2427, line: 93, baseType: !599, size: 64, offset: 640)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !2426, file: !2427, line: 94, baseType: !745, size: 64, offset: 704)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "p0", scope: !2426, file: !2427, line: 97, baseType: !291, size: 96, offset: 768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "p1", scope: !2426, file: !2427, line: 98, baseType: !291, size: 96, offset: 864)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dp0", scope: !2426, file: !2427, line: 99, baseType: !291, size: 96, offset: 960)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !2426, file: !2427, line: 100, baseType: !291, size: 96, offset: 1056)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "global_size", scope: !2426, file: !2427, line: 101, baseType: !291, size: 96, offset: 1152)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "prev_loc", scope: !2426, file: !2427, line: 102, baseType: !291, size: 96, offset: 1248)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2426, file: !2427, line: 103, baseType: !810, size: 96, offset: 1344)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "shift_f", scope: !2426, file: !2427, line: 104, baseType: !291, size: 96, offset: 1440)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "obj_shift_f", scope: !2426, file: !2427, line: 105, baseType: !291, size: 96, offset: 1536)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2426, file: !2427, line: 106, baseType: !373, size: 512, offset: 1632)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2426, file: !2427, line: 107, baseType: !373, size: 512, offset: 2144)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "base_res", scope: !2426, file: !2427, line: 109, baseType: !810, size: 96, offset: 2656)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "res_min", scope: !2426, file: !2427, line: 110, baseType: !810, size: 96, offset: 2752)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "res_max", scope: !2426, file: !2427, line: 111, baseType: !810, size: 96, offset: 2848)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2426, file: !2427, line: 112, baseType: !810, size: 96, offset: 2944)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "total_cells", scope: !2426, file: !2427, line: 113, baseType: !144, size: 32, offset: 3040)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2426, file: !2427, line: 114, baseType: !256, size: 32, offset: 3072)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2426, file: !2427, line: 115, baseType: !256, size: 32, offset: 3104)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_margin", scope: !2426, file: !2427, line: 118, baseType: !144, size: 32, offset: 3136)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_res", scope: !2426, file: !2427, line: 119, baseType: !144, size: 32, offset: 3168)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_threshold", scope: !2426, file: !2427, line: 120, baseType: !256, size: 32, offset: 3200)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2426, file: !2427, line: 122, baseType: !256, size: 32, offset: 3232)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "beta", scope: !2426, file: !2427, line: 123, baseType: !256, size: 32, offset: 3264)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "amplify", scope: !2426, file: !2427, line: 124, baseType: !144, size: 32, offset: 3296)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "maxres", scope: !2426, file: !2427, line: 125, baseType: !144, size: 32, offset: 3328)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2426, file: !2427, line: 126, baseType: !144, size: 32, offset: 3360)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "viewsettings", scope: !2426, file: !2427, line: 127, baseType: !144, size: 32, offset: 3392)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "noise", scope: !2426, file: !2427, line: 128, baseType: !190, size: 16, offset: 3424)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "diss_percent", scope: !2426, file: !2427, line: 129, baseType: !190, size: 16, offset: 3440)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !2426, file: !2427, line: 130, baseType: !144, size: 32, offset: 3456)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2426, file: !2427, line: 131, baseType: !256, size: 32, offset: 3488)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "res_wt", scope: !2426, file: !2427, line: 132, baseType: !810, size: 96, offset: 3520)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "dx_wt", scope: !2426, file: !2427, line: 133, baseType: !256, size: 32, offset: 3616)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "cache_comp", scope: !2426, file: !2427, line: 134, baseType: !144, size: 32, offset: 3648)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "cache_high_comp", scope: !2426, file: !2427, line: 135, baseType: !144, size: 32, offset: 3680)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !2426, file: !2427, line: 138, baseType: !2482, size: 128, offset: 3712)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 128, elements: !633)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2426, file: !2427, line: 139, baseType: !2484, size: 256, offset: 3840)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 256, elements: !633)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2426, file: !2427, line: 140, baseType: !1274, size: 64, offset: 4096)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "border_collisions", scope: !2426, file: !2427, line: 141, baseType: !144, size: 32, offset: 4160)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !2426, file: !2427, line: 142, baseType: !256, size: 32, offset: 4192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "vorticity", scope: !2426, file: !2427, line: 143, baseType: !256, size: 32, offset: 4224)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "active_fields", scope: !2426, file: !2427, line: 144, baseType: !144, size: 32, offset: 4256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !2426, file: !2427, line: 145, baseType: !291, size: 96, offset: 4288)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "highres_sampling", scope: !2426, file: !2427, line: 146, baseType: !144, size: 32, offset: 4384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "burning_rate", scope: !2426, file: !2427, line: 149, baseType: !256, size: 32, offset: 4416)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke", scope: !2426, file: !2427, line: 149, baseType: !256, size: 32, offset: 4448)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "flame_vorticity", scope: !2426, file: !2427, line: 149, baseType: !256, size: 32, offset: 4480)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "flame_ignition", scope: !2426, file: !2427, line: 150, baseType: !256, size: 32, offset: 4512)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "flame_max_temp", scope: !2426, file: !2427, line: 150, baseType: !256, size: 32, offset: 4544)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke_color", scope: !2426, file: !2427, line: 151, baseType: !291, size: 96, offset: 4576)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "flow", scope: !2421, file: !16, line: 352, baseType: !2499, size: 64, offset: 960)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeFlowSettings", file: !2427, line: 177, size: 1472, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !2500, file: !2427, line: 178, baseType: !2430, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2500, file: !2427, line: 179, baseType: !1526, size: 64, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2500, file: !2427, line: 180, baseType: !1213, size: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "noise_texture", scope: !2500, file: !2427, line: 181, baseType: !513, size: 64, offset: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !2500, file: !2427, line: 184, baseType: !745, size: 64, offset: 256)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !2500, file: !2427, line: 185, baseType: !144, size: 32, offset: 320)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "vel_multi", scope: !2500, file: !2427, line: 186, baseType: !256, size: 32, offset: 352)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "vel_normal", scope: !2500, file: !2427, line: 187, baseType: !256, size: 32, offset: 384)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "vel_random", scope: !2500, file: !2427, line: 188, baseType: !256, size: 32, offset: 416)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !2500, file: !2427, line: 190, baseType: !256, size: 32, offset: 448)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2500, file: !2427, line: 191, baseType: !291, size: 96, offset: 480)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "fuel_amount", scope: !2500, file: !2427, line: 192, baseType: !256, size: 32, offset: 576)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2500, file: !2427, line: 193, baseType: !256, size: 32, offset: 608)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "volume_density", scope: !2500, file: !2427, line: 194, baseType: !256, size: 32, offset: 640)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "surface_distance", scope: !2500, file: !2427, line: 195, baseType: !256, size: 32, offset: 672)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "particle_size", scope: !2500, file: !2427, line: 196, baseType: !256, size: 32, offset: 704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !2500, file: !2427, line: 197, baseType: !144, size: 32, offset: 736)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "texture_size", scope: !2500, file: !2427, line: 199, baseType: !256, size: 32, offset: 768)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "texture_offset", scope: !2500, file: !2427, line: 200, baseType: !256, size: 32, offset: 800)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2500, file: !2427, line: 201, baseType: !144, size: 32, offset: 832)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !2500, file: !2427, line: 202, baseType: !149, size: 512, offset: 864)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_density", scope: !2500, file: !2427, line: 203, baseType: !190, size: 16, offset: 1376)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2500, file: !2427, line: 205, baseType: !190, size: 16, offset: 1392)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2500, file: !2427, line: 206, baseType: !190, size: 16, offset: 1408)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "texture_type", scope: !2500, file: !2427, line: 207, baseType: !190, size: 16, offset: 1424)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2500, file: !2427, line: 208, baseType: !144, size: 32, offset: 1440)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "coll", scope: !2421, file: !16, line: 353, baseType: !2529, size: 64, offset: 1024)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeCollSettings", file: !2427, line: 217, size: 256, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !2530, file: !2427, line: 218, baseType: !2430, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2530, file: !2427, line: 219, baseType: !1526, size: 64, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !2530, file: !2427, line: 220, baseType: !745, size: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !2530, file: !2427, line: 221, baseType: !144, size: 32, offset: 192)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2530, file: !2427, line: 222, baseType: !190, size: 16, offset: 224)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2530, file: !2427, line: 223, baseType: !190, size: 16, offset: 240)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2421, file: !16, line: 354, baseType: !256, size: 32, offset: 1088)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2421, file: !16, line: 355, baseType: !144, size: 32, offset: 1120)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintModifierData", file: !16, line: 1140, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintModifierData", file: !16, line: 1133, size: 1088, elements: !2543)
!2543 = !{!2544, !2545, !2557, !2585, !2586}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2542, file: !16, line: 1134, baseType: !137, size: 896)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2542, file: !16, line: 1136, baseType: !2546, size: 64, offset: 896)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintCanvasSettings", file: !351, line: 146, size: 832, elements: !2548)
!2548 = !{!2549, !2551, !2552, !2553, !2554, !2555, !2556}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2547, file: !351, line: 147, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2547, file: !351, line: 148, baseType: !1526, size: 64, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "surfaces", scope: !2547, file: !351, line: 150, baseType: !215, size: 128, offset: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "active_sur", scope: !2547, file: !351, line: 151, baseType: !190, size: 16, offset: 256)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2547, file: !351, line: 151, baseType: !190, size: 16, offset: 272)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2547, file: !351, line: 152, baseType: !144, size: 32, offset: 288)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2547, file: !351, line: 154, baseType: !149, size: 512, offset: 320)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2542, file: !16, line: 1137, baseType: !2558, size: 64, offset: 960)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintBrushSettings", file: !351, line: 203, size: 896, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2559, file: !351, line: 204, baseType: !2550, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2559, file: !351, line: 205, baseType: !1526, size: 64, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2559, file: !351, line: 206, baseType: !1213, size: 64, offset: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2559, file: !351, line: 207, baseType: !349, size: 64, offset: 192)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2559, file: !351, line: 209, baseType: !144, size: 32, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "collision", scope: !2559, file: !351, line: 210, baseType: !144, size: 32, offset: 288)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2559, file: !351, line: 212, baseType: !256, size: 32, offset: 320)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2559, file: !351, line: 212, baseType: !256, size: 32, offset: 352)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2559, file: !351, line: 212, baseType: !256, size: 32, offset: 384)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2559, file: !351, line: 212, baseType: !256, size: 32, offset: 416)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "wetness", scope: !2559, file: !351, line: 213, baseType: !256, size: 32, offset: 448)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "particle_radius", scope: !2559, file: !351, line: 215, baseType: !256, size: 32, offset: 480)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "particle_smooth", scope: !2559, file: !351, line: 215, baseType: !256, size: 32, offset: 512)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "paint_distance", scope: !2559, file: !351, line: 216, baseType: !256, size: 32, offset: 544)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "paint_ramp", scope: !2559, file: !351, line: 219, baseType: !673, size: 64, offset: 576)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "vel_ramp", scope: !2559, file: !351, line: 220, baseType: !673, size: 64, offset: 640)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "proximity_falloff", scope: !2559, file: !351, line: 222, baseType: !190, size: 16, offset: 704)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "wave_type", scope: !2559, file: !351, line: 223, baseType: !190, size: 16, offset: 720)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ray_dir", scope: !2559, file: !351, line: 224, baseType: !190, size: 16, offset: 736)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2559, file: !351, line: 225, baseType: !190, size: 16, offset: 752)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wave_factor", scope: !2559, file: !351, line: 227, baseType: !256, size: 32, offset: 768)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "wave_clamp", scope: !2559, file: !351, line: 227, baseType: !256, size: 32, offset: 800)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "max_velocity", scope: !2559, file: !351, line: 228, baseType: !256, size: 32, offset: 832)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "smudge_strength", scope: !2559, file: !351, line: 228, baseType: !256, size: 32, offset: 864)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2542, file: !16, line: 1138, baseType: !144, size: 32, offset: 1024)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2542, file: !16, line: 1139, baseType: !144, size: 32, offset: 1056)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintSurface", file: !351, line: 136, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintSurface", file: !351, line: 86, size: 12480, elements: !2590)
!2590 = !{!2591, !2593, !2594, !2595, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2589, file: !351, line: 88, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2589, file: !351, line: 88, baseType: !2592, size: 64, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2589, file: !351, line: 89, baseType: !2546, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2589, file: !351, line: 90, baseType: !2596, size: 64, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintSurfaceData", file: !2598, line: 35, size: 320, elements: !2599)
!2598 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_dynamicpaint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2599 = !{!2600, !2601, !2602, !2605, !2608}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "format_data", scope: !2597, file: !2598, line: 36, baseType: !131, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "type_data", scope: !2597, file: !2598, line: 37, baseType: !131, size: 64, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "adj_data", scope: !2597, file: !2598, line: 38, baseType: !2603, size: 64, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DICompositeType(tag: DW_TAG_structure_type, name: "PaintAdjData", file: !2598, line: 38, flags: DIFlagFwdDecl)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "bData", scope: !2597, file: !2598, line: 40, baseType: !2606, size: 64, offset: 192)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DICompositeType(tag: DW_TAG_structure_type, name: "PaintBakeData", file: !2598, line: 40, flags: DIFlagFwdDecl)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "total_points", scope: !2597, file: !2598, line: 41, baseType: !144, size: 32, offset: 256)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "brush_group", scope: !2589, file: !351, line: 92, baseType: !1278, size: 64, offset: 256)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2589, file: !351, line: 93, baseType: !1274, size: 64, offset: 320)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !2589, file: !351, line: 96, baseType: !931, size: 64, offset: 384)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2589, file: !351, line: 97, baseType: !215, size: 128, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !2589, file: !351, line: 98, baseType: !144, size: 32, offset: 576)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2589, file: !351, line: 101, baseType: !149, size: 512, offset: 608)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2589, file: !351, line: 102, baseType: !190, size: 16, offset: 1120)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2589, file: !351, line: 102, baseType: !190, size: 16, offset: 1136)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "disp_type", scope: !2589, file: !351, line: 103, baseType: !190, size: 16, offset: 1152)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "image_fileformat", scope: !2589, file: !351, line: 103, baseType: !190, size: 16, offset: 1168)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "effect_ui", scope: !2589, file: !351, line: 104, baseType: !190, size: 16, offset: 1184)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "preview_id", scope: !2589, file: !351, line: 105, baseType: !190, size: 16, offset: 1200)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "init_color_type", scope: !2589, file: !351, line: 106, baseType: !190, size: 16, offset: 1216)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "pad_s", scope: !2589, file: !351, line: 106, baseType: !190, size: 16, offset: 1232)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2589, file: !351, line: 107, baseType: !144, size: 32, offset: 1248)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !2589, file: !351, line: 107, baseType: !144, size: 32, offset: 1280)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "image_resolution", scope: !2589, file: !351, line: 109, baseType: !144, size: 32, offset: 1312)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "substeps", scope: !2589, file: !351, line: 109, baseType: !144, size: 32, offset: 1344)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2589, file: !351, line: 110, baseType: !144, size: 32, offset: 1376)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2589, file: !351, line: 110, baseType: !144, size: 32, offset: 1408)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2589, file: !351, line: 110, baseType: !144, size: 32, offset: 1440)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "init_color", scope: !2589, file: !351, line: 113, baseType: !364, size: 128, offset: 1472)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "init_texture", scope: !2589, file: !351, line: 114, baseType: !513, size: 64, offset: 1600)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "init_layername", scope: !2589, file: !351, line: 115, baseType: !149, size: 512, offset: 1664)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dry_speed", scope: !2589, file: !351, line: 117, baseType: !144, size: 32, offset: 2176)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !2589, file: !351, line: 117, baseType: !144, size: 32, offset: 2208)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "color_dry_threshold", scope: !2589, file: !351, line: 118, baseType: !256, size: 32, offset: 2240)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "depth_clamp", scope: !2589, file: !351, line: 119, baseType: !256, size: 32, offset: 2272)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "disp_factor", scope: !2589, file: !351, line: 119, baseType: !256, size: 32, offset: 2304)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "spread_speed", scope: !2589, file: !351, line: 121, baseType: !256, size: 32, offset: 2336)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "color_spread_speed", scope: !2589, file: !351, line: 121, baseType: !256, size: 32, offset: 2368)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_speed", scope: !2589, file: !351, line: 121, baseType: !256, size: 32, offset: 2400)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "drip_vel", scope: !2589, file: !351, line: 122, baseType: !256, size: 32, offset: 2432)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "drip_acc", scope: !2589, file: !351, line: 122, baseType: !256, size: 32, offset: 2464)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "influence_scale", scope: !2589, file: !351, line: 125, baseType: !256, size: 32, offset: 2496)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "radius_scale", scope: !2589, file: !351, line: 125, baseType: !256, size: 32, offset: 2528)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "wave_damping", scope: !2589, file: !351, line: 128, baseType: !256, size: 32, offset: 2560)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "wave_speed", scope: !2589, file: !351, line: 128, baseType: !256, size: 32, offset: 2592)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "wave_timescale", scope: !2589, file: !351, line: 128, baseType: !256, size: 32, offset: 2624)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "wave_spring", scope: !2589, file: !351, line: 128, baseType: !256, size: 32, offset: 2656)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "wave_smoothness", scope: !2589, file: !351, line: 128, baseType: !256, size: 32, offset: 2688)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2589, file: !351, line: 129, baseType: !144, size: 32, offset: 2720)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !2589, file: !351, line: 131, baseType: !149, size: 512, offset: 2752)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "image_output_path", scope: !2589, file: !351, line: 132, baseType: !177, size: 8192, offset: 3264)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "output_name", scope: !2589, file: !351, line: 133, baseType: !149, size: 512, offset: 11456)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "output_name2", scope: !2589, file: !351, line: 134, baseType: !149, size: 512, offset: 11968)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !988, line: 314, baseType: !1214)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptcache_bake_data", file: !3, line: 3127, baseType: !2660)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 3119, size: 320, elements: !2661)
!2661 = !{!2662, !2663, !2664, !2665, !2666, !2667, !2733}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "break_operation", scope: !2660, file: !3, line: 3120, baseType: !144, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ended", scope: !2660, file: !3, line: 3121, baseType: !144, size: 32, offset: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !2660, file: !3, line: 3122, baseType: !144, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2660, file: !3, line: 3123, baseType: !144, size: 32, offset: 96)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cfra_ptr", scope: !2660, file: !3, line: 3124, baseType: !868, size: 64, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2660, file: !3, line: 3125, baseType: !2668, size: 64, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2670, line: 104, baseType: !2671)
!2670 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2670, line: 53, size: 15232, elements: !2672)
!2672 = !{!2673, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2726, !2730}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2671, file: !2670, line: 54, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2671, file: !2670, line: 54, baseType: !2674, size: 64, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2671, file: !2670, line: 55, baseType: !177, size: 8192, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2671, file: !2670, line: 56, baseType: !190, size: 16, offset: 8320)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2671, file: !2670, line: 56, baseType: !190, size: 16, offset: 8336)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2671, file: !2670, line: 57, baseType: !190, size: 16, offset: 8352)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2671, file: !2670, line: 57, baseType: !190, size: 16, offset: 8368)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2671, file: !2670, line: 58, baseType: !1633, size: 64, offset: 8384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2671, file: !2670, line: 59, baseType: !2683, size: 128, offset: 8448)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 128, elements: !2684)
!2684 = !{!2685}
!2685 = !DISubrange(count: 16)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2671, file: !2670, line: 60, baseType: !190, size: 16, offset: 8576)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2671, file: !2670, line: 62, baseType: !167, size: 64, offset: 8640)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2671, file: !2670, line: 63, baseType: !213, size: 128, offset: 8704)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2671, file: !2670, line: 64, baseType: !213, size: 128, offset: 8832)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2671, file: !2670, line: 65, baseType: !213, size: 128, offset: 8960)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2671, file: !2670, line: 66, baseType: !213, size: 128, offset: 9088)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2671, file: !2670, line: 67, baseType: !213, size: 128, offset: 9216)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2671, file: !2670, line: 68, baseType: !213, size: 128, offset: 9344)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2671, file: !2670, line: 69, baseType: !213, size: 128, offset: 9472)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2671, file: !2670, line: 70, baseType: !213, size: 128, offset: 9600)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2671, file: !2670, line: 71, baseType: !213, size: 128, offset: 9728)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2671, file: !2670, line: 72, baseType: !213, size: 128, offset: 9856)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2671, file: !2670, line: 73, baseType: !213, size: 128, offset: 9984)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2671, file: !2670, line: 74, baseType: !213, size: 128, offset: 10112)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2671, file: !2670, line: 75, baseType: !213, size: 128, offset: 10240)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2671, file: !2670, line: 76, baseType: !213, size: 128, offset: 10368)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2671, file: !2670, line: 77, baseType: !213, size: 128, offset: 10496)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2671, file: !2670, line: 78, baseType: !213, size: 128, offset: 10624)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2671, file: !2670, line: 79, baseType: !213, size: 128, offset: 10752)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2671, file: !2670, line: 80, baseType: !213, size: 128, offset: 10880)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2671, file: !2670, line: 81, baseType: !213, size: 128, offset: 11008)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2671, file: !2670, line: 82, baseType: !213, size: 128, offset: 11136)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2671, file: !2670, line: 83, baseType: !213, size: 128, offset: 11264)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2671, file: !2670, line: 84, baseType: !213, size: 128, offset: 11392)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2671, file: !2670, line: 85, baseType: !213, size: 128, offset: 11520)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2671, file: !2670, line: 86, baseType: !213, size: 128, offset: 11648)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2671, file: !2670, line: 87, baseType: !213, size: 128, offset: 11776)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2671, file: !2670, line: 88, baseType: !213, size: 128, offset: 11904)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2671, file: !2670, line: 89, baseType: !213, size: 128, offset: 12032)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2671, file: !2670, line: 90, baseType: !213, size: 128, offset: 12160)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2671, file: !2670, line: 91, baseType: !213, size: 128, offset: 12288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2671, file: !2670, line: 92, baseType: !213, size: 128, offset: 12416)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2671, file: !2670, line: 93, baseType: !213, size: 128, offset: 12544)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2671, file: !2670, line: 94, baseType: !213, size: 128, offset: 12672)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2671, file: !2670, line: 95, baseType: !213, size: 128, offset: 12800)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2671, file: !2670, line: 96, baseType: !213, size: 128, offset: 12928)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2671, file: !2670, line: 98, baseType: !2723, size: 2048, offset: 13056)
!2723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 2048, elements: !2724)
!2724 = !{!2725}
!2725 = !DISubrange(count: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2671, file: !2670, line: 101, baseType: !2727, size: 64, offset: 15104)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2729, line: 35, flags: DIFlagFwdDecl)
!2729 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_anim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2671, file: !2670, line: 103, baseType: !2731, size: 64, offset: 15168)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2670, line: 51, flags: DIFlagFwdDecl)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2660, file: !3, line: 3126, baseType: !2734, size: 64, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !155, line: 1299, baseType: !154)
!2736 = !{!0, !2737}
!2737 = !DIGlobalVariableExpression(var: !2738, expr: !DIExpression())
!2738 = distinct !DIGlobalVariable(name: "ptcache_extra_datasize", scope: !2, file: !3, line: 129, type: !2739, isLocal: true, isDefinition: true)
!2739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !633)
!2740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !609)
!2741 = !{i32 7, !"Dwarf Version", i32 4}
!2742 = !{i32 2, !"Debug Info Version", i32 3}
!2743 = !{i32 1, !"wchar_size", i32 4}
!2744 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2745 = distinct !DISubprogram(name: "BKE_ptcache_make_particle_key", scope: !3, file: !3, line: 233, type: !2746, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !1011, !144, !1074, !256}
!2748 = !{}
!2749 = !DILocalVariable(name: "key", arg: 1, scope: !2745, file: !3, line: 233, type: !1011)
!2750 = !DILocation(line: 233, column: 49, scope: !2745)
!2751 = !DILocalVariable(name: "index", arg: 2, scope: !2745, file: !3, line: 233, type: !144)
!2752 = !DILocation(line: 233, column: 58, scope: !2745)
!2753 = !DILocalVariable(name: "data", arg: 3, scope: !2745, file: !3, line: 233, type: !1074)
!2754 = !DILocation(line: 233, column: 72, scope: !2745)
!2755 = !DILocalVariable(name: "time", arg: 4, scope: !2745, file: !3, line: 233, type: !256)
!2756 = !DILocation(line: 233, column: 84, scope: !2745)
!2757 = !DILocation(line: 235, column: 2, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 235, column: 2)
!2759 = !DILocation(line: 235, column: 2, scope: !2745)
!2760 = !DILocation(line: 235, column: 2, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 235, column: 2)
!2762 = !DILocation(line: 236, column: 2, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 236, column: 2)
!2764 = !DILocation(line: 236, column: 2, scope: !2745)
!2765 = !DILocation(line: 236, column: 2, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2763, file: !3, line: 236, column: 2)
!2767 = !DILocation(line: 239, column: 6, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 239, column: 6)
!2769 = !DILocation(line: 239, column: 31, scope: !2768)
!2770 = !DILocation(line: 239, column: 6, scope: !2745)
!2771 = !DILocation(line: 240, column: 15, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 239, column: 39)
!2773 = !DILocation(line: 240, column: 20, scope: !2772)
!2774 = !DILocation(line: 240, column: 25, scope: !2772)
!2775 = !DILocation(line: 240, column: 30, scope: !2772)
!2776 = !DILocation(line: 240, column: 3, scope: !2772)
!2777 = !DILocation(line: 241, column: 2, scope: !2772)
!2778 = !DILocation(line: 243, column: 3, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 243, column: 3)
!2780 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 242, column: 7)
!2781 = !DILocation(line: 243, column: 3, scope: !2780)
!2782 = !DILocation(line: 243, column: 3, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 243, column: 3)
!2784 = !DILocation(line: 246, column: 2, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2745, file: !3, line: 246, column: 2)
!2786 = !DILocation(line: 246, column: 2, scope: !2745)
!2787 = !DILocation(line: 246, column: 2, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 246, column: 2)
!2789 = !DILocation(line: 247, column: 14, scope: !2745)
!2790 = !DILocation(line: 247, column: 2, scope: !2745)
!2791 = !DILocation(line: 247, column: 7, scope: !2745)
!2792 = !DILocation(line: 247, column: 12, scope: !2745)
!2793 = !DILocation(line: 248, column: 1, scope: !2745)
!2794 = distinct !DISubprogram(name: "BKE_ptcache_id_from_softbody", scope: !3, file: !3, line: 1091, type: !2795, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{null, !2797, !2799, !2801}
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheID", file: !958, line: 171, baseType: !1055)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !6, line: 295, baseType: !229)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftBody", file: !432, line: 349, baseType: !844)
!2803 = !DILocalVariable(name: "pid", arg: 1, scope: !2794, file: !3, line: 1091, type: !2797)
!2804 = !DILocation(line: 1091, column: 46, scope: !2794)
!2805 = !DILocalVariable(name: "ob", arg: 2, scope: !2794, file: !3, line: 1091, type: !2799)
!2806 = !DILocation(line: 1091, column: 59, scope: !2794)
!2807 = !DILocalVariable(name: "sb", arg: 3, scope: !2794, file: !3, line: 1091, type: !2801)
!2808 = !DILocation(line: 1091, column: 73, scope: !2794)
!2809 = !DILocation(line: 1093, column: 9, scope: !2794)
!2810 = !DILocation(line: 1093, column: 2, scope: !2794)
!2811 = !DILocation(line: 1095, column: 11, scope: !2794)
!2812 = !DILocation(line: 1095, column: 2, scope: !2794)
!2813 = !DILocation(line: 1095, column: 7, scope: !2794)
!2814 = !DILocation(line: 1095, column: 9, scope: !2794)
!2815 = !DILocation(line: 1096, column: 17, scope: !2794)
!2816 = !DILocation(line: 1096, column: 2, scope: !2794)
!2817 = !DILocation(line: 1096, column: 7, scope: !2794)
!2818 = !DILocation(line: 1096, column: 15, scope: !2794)
!2819 = !DILocation(line: 1097, column: 2, scope: !2794)
!2820 = !DILocation(line: 1097, column: 7, scope: !2794)
!2821 = !DILocation(line: 1097, column: 11, scope: !2794)
!2822 = !DILocation(line: 1098, column: 14, scope: !2794)
!2823 = !DILocation(line: 1098, column: 18, scope: !2794)
!2824 = !DILocation(line: 1098, column: 2, scope: !2794)
!2825 = !DILocation(line: 1098, column: 7, scope: !2794)
!2826 = !DILocation(line: 1098, column: 12, scope: !2794)
!2827 = !DILocation(line: 1099, column: 19, scope: !2794)
!2828 = !DILocation(line: 1099, column: 23, scope: !2794)
!2829 = !DILocation(line: 1099, column: 2, scope: !2794)
!2830 = !DILocation(line: 1099, column: 7, scope: !2794)
!2831 = !DILocation(line: 1099, column: 16, scope: !2794)
!2832 = !DILocation(line: 1100, column: 18, scope: !2794)
!2833 = !DILocation(line: 1100, column: 22, scope: !2794)
!2834 = !DILocation(line: 1100, column: 2, scope: !2794)
!2835 = !DILocation(line: 1100, column: 7, scope: !2794)
!2836 = !DILocation(line: 1100, column: 15, scope: !2794)
!2837 = !DILocation(line: 1101, column: 17, scope: !2794)
!2838 = !DILocation(line: 1101, column: 22, scope: !2794)
!2839 = !DILocation(line: 1101, column: 30, scope: !2794)
!2840 = !DILocation(line: 1101, column: 2, scope: !2794)
!2841 = !DILocation(line: 1101, column: 7, scope: !2794)
!2842 = !DILocation(line: 1101, column: 15, scope: !2794)
!2843 = !DILocation(line: 1102, column: 2, scope: !2794)
!2844 = !DILocation(line: 1102, column: 7, scope: !2794)
!2845 = !DILocation(line: 1102, column: 17, scope: !2794)
!2846 = !DILocation(line: 1104, column: 2, scope: !2794)
!2847 = !DILocation(line: 1104, column: 7, scope: !2794)
!2848 = !DILocation(line: 1104, column: 21, scope: !2794)
!2849 = !DILocation(line: 1105, column: 2, scope: !2794)
!2850 = !DILocation(line: 1105, column: 7, scope: !2794)
!2851 = !DILocation(line: 1105, column: 21, scope: !2794)
!2852 = !DILocation(line: 1106, column: 2, scope: !2794)
!2853 = !DILocation(line: 1106, column: 7, scope: !2794)
!2854 = !DILocation(line: 1106, column: 26, scope: !2794)
!2855 = !DILocation(line: 1108, column: 2, scope: !2794)
!2856 = !DILocation(line: 1108, column: 7, scope: !2794)
!2857 = !DILocation(line: 1108, column: 22, scope: !2794)
!2858 = !DILocation(line: 1109, column: 2, scope: !2794)
!2859 = !DILocation(line: 1109, column: 7, scope: !2794)
!2860 = !DILocation(line: 1109, column: 21, scope: !2794)
!2861 = !DILocation(line: 1111, column: 2, scope: !2794)
!2862 = !DILocation(line: 1111, column: 7, scope: !2794)
!2863 = !DILocation(line: 1111, column: 25, scope: !2794)
!2864 = !DILocation(line: 1112, column: 2, scope: !2794)
!2865 = !DILocation(line: 1112, column: 7, scope: !2794)
!2866 = !DILocation(line: 1112, column: 24, scope: !2794)
!2867 = !DILocation(line: 1113, column: 2, scope: !2794)
!2868 = !DILocation(line: 1113, column: 7, scope: !2794)
!2869 = !DILocation(line: 1113, column: 30, scope: !2794)
!2870 = !DILocation(line: 1115, column: 2, scope: !2794)
!2871 = !DILocation(line: 1115, column: 7, scope: !2794)
!2872 = !DILocation(line: 1115, column: 22, scope: !2794)
!2873 = !DILocation(line: 1116, column: 2, scope: !2794)
!2874 = !DILocation(line: 1116, column: 7, scope: !2794)
!2875 = !DILocation(line: 1116, column: 21, scope: !2794)
!2876 = !DILocation(line: 1118, column: 2, scope: !2794)
!2877 = !DILocation(line: 1118, column: 7, scope: !2794)
!2878 = !DILocation(line: 1118, column: 17, scope: !2794)
!2879 = !DILocation(line: 1119, column: 2, scope: !2794)
!2880 = !DILocation(line: 1119, column: 7, scope: !2794)
!2881 = !DILocation(line: 1119, column: 17, scope: !2794)
!2882 = !DILocation(line: 1121, column: 21, scope: !2794)
!2883 = !DILocation(line: 1121, column: 26, scope: !2794)
!2884 = !DILocation(line: 1121, column: 33, scope: !2794)
!2885 = !DILocation(line: 1121, column: 2, scope: !2794)
!2886 = !DILocation(line: 1121, column: 7, scope: !2794)
!2887 = !DILocation(line: 1121, column: 19, scope: !2794)
!2888 = !DILocation(line: 1123, column: 2, scope: !2794)
!2889 = !DILocation(line: 1123, column: 7, scope: !2794)
!2890 = !DILocation(line: 1123, column: 20, scope: !2794)
!2891 = !DILocation(line: 1124, column: 2, scope: !2794)
!2892 = !DILocation(line: 1124, column: 7, scope: !2794)
!2893 = !DILocation(line: 1124, column: 16, scope: !2794)
!2894 = !DILocation(line: 1125, column: 1, scope: !2794)
!2895 = distinct !DISubprogram(name: "ptcache_softbody_totpoint", scope: !3, file: !3, line: 222, type: !1193, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2896 = !DILocalVariable(name: "soft_v", arg: 1, scope: !2895, file: !3, line: 222, type: !131)
!2897 = !DILocation(line: 222, column: 45, scope: !2895)
!2898 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !2895, file: !3, line: 222, type: !144)
!2899 = !DILocation(line: 222, column: 57, scope: !2895)
!2900 = !DILocalVariable(name: "soft", scope: !2895, file: !3, line: 224, type: !2801)
!2901 = !DILocation(line: 224, column: 12, scope: !2895)
!2902 = !DILocation(line: 224, column: 18, scope: !2895)
!2903 = !DILocation(line: 225, column: 9, scope: !2895)
!2904 = !DILocation(line: 225, column: 15, scope: !2895)
!2905 = !DILocation(line: 225, column: 2, scope: !2895)
!2906 = distinct !DISubprogram(name: "ptcache_softbody_error", scope: !3, file: !3, line: 227, type: !1197, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2907 = !DILocalVariable(name: "UNUSED_soft_v", arg: 1, scope: !2906, file: !3, line: 227, type: !131)
!2908 = !DILocation(line: 227, column: 42, scope: !2906)
!2909 = !DILocalVariable(name: "UNUSED_message", arg: 2, scope: !2906, file: !3, line: 227, type: !1199)
!2910 = !DILocation(line: 227, column: 70, scope: !2906)
!2911 = !DILocation(line: 230, column: 1, scope: !2906)
!2912 = distinct !DISubprogram(name: "ptcache_softbody_write", scope: !3, file: !3, line: 166, type: !1072, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2913 = !DILocalVariable(name: "index", arg: 1, scope: !2912, file: !3, line: 166, type: !144)
!2914 = !DILocation(line: 166, column: 40, scope: !2912)
!2915 = !DILocalVariable(name: "soft_v", arg: 2, scope: !2912, file: !3, line: 166, type: !131)
!2916 = !DILocation(line: 166, column: 53, scope: !2912)
!2917 = !DILocalVariable(name: "data", arg: 3, scope: !2912, file: !3, line: 166, type: !1074)
!2918 = !DILocation(line: 166, column: 68, scope: !2912)
!2919 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !2912, file: !3, line: 166, type: !144)
!2920 = !DILocation(line: 166, column: 78, scope: !2912)
!2921 = !DILocalVariable(name: "soft", scope: !2912, file: !3, line: 168, type: !2801)
!2922 = !DILocation(line: 168, column: 12, scope: !2912)
!2923 = !DILocation(line: 168, column: 18, scope: !2912)
!2924 = !DILocalVariable(name: "bp", scope: !2912, file: !3, line: 169, type: !2925)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "BodyPoint", file: !851, line: 50, baseType: !850)
!2927 = !DILocation(line: 169, column: 13, scope: !2912)
!2928 = !DILocation(line: 169, column: 18, scope: !2912)
!2929 = !DILocation(line: 169, column: 24, scope: !2912)
!2930 = !DILocation(line: 169, column: 33, scope: !2912)
!2931 = !DILocation(line: 169, column: 31, scope: !2912)
!2932 = !DILocation(line: 171, column: 2, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 171, column: 2)
!2934 = !DILocation(line: 171, column: 2, scope: !2912)
!2935 = !DILocation(line: 171, column: 2, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 171, column: 2)
!2937 = !DILocation(line: 172, column: 2, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 172, column: 2)
!2939 = !DILocation(line: 172, column: 2, scope: !2912)
!2940 = !DILocation(line: 172, column: 2, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2938, file: !3, line: 172, column: 2)
!2942 = !DILocation(line: 174, column: 2, scope: !2912)
!2943 = distinct !DISubprogram(name: "ptcache_softbody_read", scope: !3, file: !3, line: 176, type: !1077, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2944 = !DILocalVariable(name: "index", arg: 1, scope: !2943, file: !3, line: 176, type: !144)
!2945 = !DILocation(line: 176, column: 39, scope: !2943)
!2946 = !DILocalVariable(name: "soft_v", arg: 2, scope: !2943, file: !3, line: 176, type: !131)
!2947 = !DILocation(line: 176, column: 52, scope: !2943)
!2948 = !DILocalVariable(name: "data", arg: 3, scope: !2943, file: !3, line: 176, type: !1074)
!2949 = !DILocation(line: 176, column: 67, scope: !2943)
!2950 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !2943, file: !3, line: 176, type: !256)
!2951 = !DILocation(line: 176, column: 79, scope: !2943)
!2952 = !DILocalVariable(name: "old_data", arg: 5, scope: !2943, file: !3, line: 176, type: !745)
!2953 = !DILocation(line: 176, column: 100, scope: !2943)
!2954 = !DILocalVariable(name: "soft", scope: !2943, file: !3, line: 178, type: !2801)
!2955 = !DILocation(line: 178, column: 12, scope: !2943)
!2956 = !DILocation(line: 178, column: 18, scope: !2943)
!2957 = !DILocalVariable(name: "bp", scope: !2943, file: !3, line: 179, type: !2925)
!2958 = !DILocation(line: 179, column: 13, scope: !2943)
!2959 = !DILocation(line: 179, column: 18, scope: !2943)
!2960 = !DILocation(line: 179, column: 24, scope: !2943)
!2961 = !DILocation(line: 179, column: 33, scope: !2943)
!2962 = !DILocation(line: 179, column: 31, scope: !2943)
!2963 = !DILocation(line: 181, column: 6, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 181, column: 6)
!2965 = !DILocation(line: 181, column: 6, scope: !2943)
!2966 = !DILocation(line: 182, column: 10, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 181, column: 16)
!2968 = !DILocation(line: 182, column: 14, scope: !2967)
!2969 = !DILocation(line: 182, column: 3, scope: !2967)
!2970 = !DILocation(line: 182, column: 19, scope: !2967)
!2971 = !DILocation(line: 183, column: 10, scope: !2967)
!2972 = !DILocation(line: 183, column: 14, scope: !2967)
!2973 = !DILocation(line: 183, column: 3, scope: !2967)
!2974 = !DILocation(line: 183, column: 19, scope: !2967)
!2975 = !DILocation(line: 183, column: 24, scope: !2967)
!2976 = !DILocation(line: 184, column: 2, scope: !2967)
!2977 = !DILocation(line: 186, column: 3, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 186, column: 3)
!2979 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 185, column: 7)
!2980 = !DILocation(line: 186, column: 3, scope: !2979)
!2981 = !DILocation(line: 186, column: 3, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 186, column: 3)
!2983 = !DILocation(line: 187, column: 3, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 187, column: 3)
!2985 = !DILocation(line: 187, column: 3, scope: !2979)
!2986 = !DILocation(line: 187, column: 3, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 187, column: 3)
!2988 = !DILocation(line: 189, column: 1, scope: !2943)
!2989 = distinct !DISubprogram(name: "ptcache_softbody_interpolate", scope: !3, file: !3, line: 190, type: !1081, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!2990 = !DILocalVariable(name: "index", arg: 1, scope: !2989, file: !3, line: 190, type: !144)
!2991 = !DILocation(line: 190, column: 46, scope: !2989)
!2992 = !DILocalVariable(name: "soft_v", arg: 2, scope: !2989, file: !3, line: 190, type: !131)
!2993 = !DILocation(line: 190, column: 59, scope: !2989)
!2994 = !DILocalVariable(name: "data", arg: 3, scope: !2989, file: !3, line: 190, type: !1074)
!2995 = !DILocation(line: 190, column: 74, scope: !2989)
!2996 = !DILocalVariable(name: "cfra", arg: 4, scope: !2989, file: !3, line: 190, type: !256)
!2997 = !DILocation(line: 190, column: 86, scope: !2989)
!2998 = !DILocalVariable(name: "cfra1", arg: 5, scope: !2989, file: !3, line: 190, type: !256)
!2999 = !DILocation(line: 190, column: 98, scope: !2989)
!3000 = !DILocalVariable(name: "cfra2", arg: 6, scope: !2989, file: !3, line: 190, type: !256)
!3001 = !DILocation(line: 190, column: 111, scope: !2989)
!3002 = !DILocalVariable(name: "old_data", arg: 7, scope: !2989, file: !3, line: 190, type: !745)
!3003 = !DILocation(line: 190, column: 125, scope: !2989)
!3004 = !DILocalVariable(name: "soft", scope: !2989, file: !3, line: 192, type: !2801)
!3005 = !DILocation(line: 192, column: 12, scope: !2989)
!3006 = !DILocation(line: 192, column: 18, scope: !2989)
!3007 = !DILocalVariable(name: "bp", scope: !2989, file: !3, line: 193, type: !2925)
!3008 = !DILocation(line: 193, column: 13, scope: !2989)
!3009 = !DILocation(line: 193, column: 18, scope: !2989)
!3010 = !DILocation(line: 193, column: 24, scope: !2989)
!3011 = !DILocation(line: 193, column: 33, scope: !2989)
!3012 = !DILocation(line: 193, column: 31, scope: !2989)
!3013 = !DILocalVariable(name: "keys", scope: !2989, file: !3, line: 194, type: !3014)
!3014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 1792, elements: !365)
!3015 = !DILocation(line: 194, column: 14, scope: !2989)
!3016 = !DILocalVariable(name: "dfra", scope: !2989, file: !3, line: 195, type: !256)
!3017 = !DILocation(line: 195, column: 8, scope: !2989)
!3018 = !DILocation(line: 197, column: 6, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 197, column: 6)
!3020 = !DILocation(line: 197, column: 15, scope: !3019)
!3021 = !DILocation(line: 197, column: 12, scope: !3019)
!3022 = !DILocation(line: 197, column: 6, scope: !2989)
!3023 = !DILocation(line: 198, column: 3, scope: !3019)
!3024 = !DILocation(line: 200, column: 13, scope: !2989)
!3025 = !DILocation(line: 200, column: 21, scope: !2989)
!3026 = !DILocation(line: 200, column: 25, scope: !2989)
!3027 = !DILocation(line: 200, column: 29, scope: !2989)
!3028 = !DILocation(line: 200, column: 2, scope: !2989)
!3029 = !DILocation(line: 201, column: 13, scope: !2989)
!3030 = !DILocation(line: 201, column: 21, scope: !2989)
!3031 = !DILocation(line: 201, column: 26, scope: !2989)
!3032 = !DILocation(line: 201, column: 30, scope: !2989)
!3033 = !DILocation(line: 201, column: 2, scope: !2989)
!3034 = !DILocation(line: 203, column: 6, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2989, file: !3, line: 203, column: 6)
!3036 = !DILocation(line: 203, column: 6, scope: !2989)
!3037 = !DILocation(line: 204, column: 10, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 203, column: 16)
!3039 = !DILocation(line: 204, column: 18, scope: !3038)
!3040 = !DILocation(line: 204, column: 3, scope: !3038)
!3041 = !DILocation(line: 204, column: 22, scope: !3038)
!3042 = !DILocation(line: 205, column: 10, scope: !3038)
!3043 = !DILocation(line: 205, column: 18, scope: !3038)
!3044 = !DILocation(line: 205, column: 3, scope: !3038)
!3045 = !DILocation(line: 205, column: 23, scope: !3038)
!3046 = !DILocation(line: 205, column: 32, scope: !3038)
!3047 = !DILocation(line: 206, column: 2, scope: !3038)
!3048 = !DILocation(line: 208, column: 33, scope: !3035)
!3049 = !DILocation(line: 208, column: 37, scope: !3035)
!3050 = !DILocation(line: 208, column: 44, scope: !3035)
!3051 = !DILocation(line: 208, column: 50, scope: !3035)
!3052 = !DILocation(line: 208, column: 3, scope: !3035)
!3053 = !DILocation(line: 210, column: 9, scope: !2989)
!3054 = !DILocation(line: 210, column: 17, scope: !2989)
!3055 = !DILocation(line: 210, column: 15, scope: !2989)
!3056 = !DILocation(line: 210, column: 7, scope: !2989)
!3057 = !DILocation(line: 212, column: 12, scope: !2989)
!3058 = !DILocation(line: 212, column: 20, scope: !2989)
!3059 = !DILocation(line: 212, column: 25, scope: !2989)
!3060 = !DILocation(line: 212, column: 2, scope: !2989)
!3061 = !DILocation(line: 213, column: 12, scope: !2989)
!3062 = !DILocation(line: 213, column: 20, scope: !2989)
!3063 = !DILocation(line: 213, column: 25, scope: !2989)
!3064 = !DILocation(line: 213, column: 2, scope: !2989)
!3065 = !DILocation(line: 215, column: 32, scope: !2989)
!3066 = !DILocation(line: 215, column: 39, scope: !2989)
!3067 = !DILocation(line: 215, column: 46, scope: !2989)
!3068 = !DILocation(line: 215, column: 44, scope: !2989)
!3069 = !DILocation(line: 215, column: 55, scope: !2989)
!3070 = !DILocation(line: 215, column: 53, scope: !2989)
!3071 = !DILocation(line: 215, column: 61, scope: !2989)
!3072 = !DILocation(line: 215, column: 2, scope: !2989)
!3073 = !DILocation(line: 217, column: 18, scope: !2989)
!3074 = !DILocation(line: 217, column: 12, scope: !2989)
!3075 = !DILocation(line: 217, column: 30, scope: !2989)
!3076 = !DILocation(line: 217, column: 28, scope: !2989)
!3077 = !DILocation(line: 217, column: 2, scope: !2989)
!3078 = !DILocation(line: 219, column: 13, scope: !2989)
!3079 = !DILocation(line: 219, column: 17, scope: !2989)
!3080 = !DILocation(line: 219, column: 28, scope: !2989)
!3081 = !DILocation(line: 219, column: 22, scope: !2989)
!3082 = !DILocation(line: 219, column: 2, scope: !2989)
!3083 = !DILocation(line: 220, column: 13, scope: !2989)
!3084 = !DILocation(line: 220, column: 17, scope: !2989)
!3085 = !DILocation(line: 220, column: 28, scope: !2989)
!3086 = !DILocation(line: 220, column: 22, scope: !2989)
!3087 = !DILocation(line: 220, column: 2, scope: !2989)
!3088 = !DILocation(line: 221, column: 1, scope: !2989)
!3089 = distinct !DISubprogram(name: "ptcache_basic_header_write", scope: !3, file: !3, line: 154, type: !1204, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3090 = !DILocalVariable(name: "pf", arg: 1, scope: !3089, file: !3, line: 154, type: !1087)
!3091 = !DILocation(line: 154, column: 52, scope: !3089)
!3092 = !DILocation(line: 157, column: 15, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 157, column: 6)
!3094 = !DILocation(line: 157, column: 19, scope: !3093)
!3095 = !DILocation(line: 157, column: 14, scope: !3093)
!3096 = !DILocation(line: 157, column: 54, scope: !3093)
!3097 = !DILocation(line: 157, column: 58, scope: !3093)
!3098 = !DILocation(line: 157, column: 7, scope: !3093)
!3099 = !DILocation(line: 157, column: 6, scope: !3089)
!3100 = !DILocation(line: 158, column: 3, scope: !3093)
!3101 = !DILocation(line: 160, column: 15, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 160, column: 6)
!3103 = !DILocation(line: 160, column: 19, scope: !3102)
!3104 = !DILocation(line: 160, column: 14, scope: !3102)
!3105 = !DILocation(line: 160, column: 56, scope: !3102)
!3106 = !DILocation(line: 160, column: 60, scope: !3102)
!3107 = !DILocation(line: 160, column: 7, scope: !3102)
!3108 = !DILocation(line: 160, column: 6, scope: !3089)
!3109 = !DILocation(line: 161, column: 3, scope: !3102)
!3110 = !DILocation(line: 163, column: 2, scope: !3089)
!3111 = !DILocation(line: 164, column: 1, scope: !3089)
!3112 = distinct !DISubprogram(name: "ptcache_basic_header_read", scope: !3, file: !3, line: 141, type: !1204, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3113 = !DILocalVariable(name: "pf", arg: 1, scope: !3112, file: !3, line: 141, type: !1087)
!3114 = !DILocation(line: 141, column: 51, scope: !3112)
!3115 = !DILocalVariable(name: "error", scope: !3112, file: !3, line: 143, type: !144)
!3116 = !DILocation(line: 143, column: 6, scope: !3112)
!3117 = !DILocation(line: 146, column: 7, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 146, column: 6)
!3119 = !DILocation(line: 146, column: 13, scope: !3118)
!3120 = !DILocation(line: 146, column: 24, scope: !3118)
!3121 = !DILocation(line: 146, column: 28, scope: !3118)
!3122 = !DILocation(line: 146, column: 23, scope: !3118)
!3123 = !DILocation(line: 146, column: 63, scope: !3118)
!3124 = !DILocation(line: 146, column: 67, scope: !3118)
!3125 = !DILocation(line: 146, column: 17, scope: !3118)
!3126 = !DILocation(line: 146, column: 6, scope: !3112)
!3127 = !DILocation(line: 147, column: 9, scope: !3118)
!3128 = !DILocation(line: 147, column: 3, scope: !3118)
!3129 = !DILocation(line: 149, column: 7, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 149, column: 6)
!3131 = !DILocation(line: 149, column: 13, scope: !3130)
!3132 = !DILocation(line: 149, column: 24, scope: !3130)
!3133 = !DILocation(line: 149, column: 28, scope: !3130)
!3134 = !DILocation(line: 149, column: 23, scope: !3130)
!3135 = !DILocation(line: 149, column: 65, scope: !3130)
!3136 = !DILocation(line: 149, column: 69, scope: !3130)
!3137 = !DILocation(line: 149, column: 17, scope: !3130)
!3138 = !DILocation(line: 149, column: 6, scope: !3112)
!3139 = !DILocation(line: 150, column: 9, scope: !3130)
!3140 = !DILocation(line: 150, column: 3, scope: !3130)
!3141 = !DILocation(line: 152, column: 10, scope: !3112)
!3142 = !DILocation(line: 152, column: 9, scope: !3112)
!3143 = !DILocation(line: 152, column: 2, scope: !3112)
!3144 = distinct !DISubprogram(name: "BKE_ptcache_id_from_particles", scope: !3, file: !3, line: 1126, type: !3145, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{null, !2797, !2799, !2655}
!3147 = !DILocalVariable(name: "pid", arg: 1, scope: !3144, file: !3, line: 1126, type: !2797)
!3148 = !DILocation(line: 1126, column: 47, scope: !3144)
!3149 = !DILocalVariable(name: "ob", arg: 2, scope: !3144, file: !3, line: 1126, type: !2799)
!3150 = !DILocation(line: 1126, column: 60, scope: !3144)
!3151 = !DILocalVariable(name: "psys", arg: 3, scope: !3144, file: !3, line: 1126, type: !2655)
!3152 = !DILocation(line: 1126, column: 80, scope: !3144)
!3153 = !DILocation(line: 1128, column: 9, scope: !3144)
!3154 = !DILocation(line: 1128, column: 2, scope: !3144)
!3155 = !DILocation(line: 1130, column: 11, scope: !3144)
!3156 = !DILocation(line: 1130, column: 2, scope: !3144)
!3157 = !DILocation(line: 1130, column: 7, scope: !3144)
!3158 = !DILocation(line: 1130, column: 9, scope: !3144)
!3159 = !DILocation(line: 1131, column: 17, scope: !3144)
!3160 = !DILocation(line: 1131, column: 2, scope: !3144)
!3161 = !DILocation(line: 1131, column: 7, scope: !3144)
!3162 = !DILocation(line: 1131, column: 15, scope: !3144)
!3163 = !DILocation(line: 1132, column: 2, scope: !3144)
!3164 = !DILocation(line: 1132, column: 7, scope: !3144)
!3165 = !DILocation(line: 1132, column: 11, scope: !3144)
!3166 = !DILocation(line: 1133, column: 20, scope: !3144)
!3167 = !DILocation(line: 1133, column: 26, scope: !3144)
!3168 = !DILocation(line: 1133, column: 38, scope: !3144)
!3169 = !DILocation(line: 1133, column: 2, scope: !3144)
!3170 = !DILocation(line: 1133, column: 7, scope: !3144)
!3171 = !DILocation(line: 1133, column: 18, scope: !3144)
!3172 = !DILocation(line: 1134, column: 14, scope: !3144)
!3173 = !DILocation(line: 1134, column: 20, scope: !3144)
!3174 = !DILocation(line: 1134, column: 2, scope: !3144)
!3175 = !DILocation(line: 1134, column: 7, scope: !3144)
!3176 = !DILocation(line: 1134, column: 12, scope: !3144)
!3177 = !DILocation(line: 1135, column: 19, scope: !3144)
!3178 = !DILocation(line: 1135, column: 25, scope: !3144)
!3179 = !DILocation(line: 1135, column: 2, scope: !3144)
!3180 = !DILocation(line: 1135, column: 7, scope: !3144)
!3181 = !DILocation(line: 1135, column: 16, scope: !3144)
!3182 = !DILocation(line: 1136, column: 18, scope: !3144)
!3183 = !DILocation(line: 1136, column: 24, scope: !3144)
!3184 = !DILocation(line: 1136, column: 2, scope: !3144)
!3185 = !DILocation(line: 1136, column: 7, scope: !3144)
!3186 = !DILocation(line: 1136, column: 15, scope: !3144)
!3187 = !DILocation(line: 1138, column: 6, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1138, column: 6)
!3189 = !DILocation(line: 1138, column: 12, scope: !3188)
!3190 = !DILocation(line: 1138, column: 18, scope: !3188)
!3191 = !DILocation(line: 1138, column: 23, scope: !3188)
!3192 = !DILocation(line: 1138, column: 6, scope: !3144)
!3193 = !DILocation(line: 1139, column: 3, scope: !3188)
!3194 = !DILocation(line: 1139, column: 8, scope: !3188)
!3195 = !DILocation(line: 1139, column: 13, scope: !3188)
!3196 = !DILocation(line: 1141, column: 2, scope: !3144)
!3197 = !DILocation(line: 1141, column: 7, scope: !3144)
!3198 = !DILocation(line: 1141, column: 19, scope: !3144)
!3199 = !DILocation(line: 1142, column: 2, scope: !3144)
!3200 = !DILocation(line: 1142, column: 7, scope: !3144)
!3201 = !DILocation(line: 1142, column: 19, scope: !3144)
!3202 = !DILocation(line: 1143, column: 2, scope: !3144)
!3203 = !DILocation(line: 1143, column: 7, scope: !3144)
!3204 = !DILocation(line: 1143, column: 17, scope: !3144)
!3205 = !DILocation(line: 1145, column: 2, scope: !3144)
!3206 = !DILocation(line: 1145, column: 7, scope: !3144)
!3207 = !DILocation(line: 1145, column: 22, scope: !3144)
!3208 = !DILocation(line: 1146, column: 2, scope: !3144)
!3209 = !DILocation(line: 1146, column: 7, scope: !3144)
!3210 = !DILocation(line: 1146, column: 21, scope: !3144)
!3211 = !DILocation(line: 1147, column: 2, scope: !3144)
!3212 = !DILocation(line: 1147, column: 7, scope: !3144)
!3213 = !DILocation(line: 1147, column: 26, scope: !3144)
!3214 = !DILocation(line: 1149, column: 2, scope: !3144)
!3215 = !DILocation(line: 1149, column: 7, scope: !3144)
!3216 = !DILocation(line: 1149, column: 22, scope: !3144)
!3217 = !DILocation(line: 1150, column: 2, scope: !3144)
!3218 = !DILocation(line: 1150, column: 7, scope: !3144)
!3219 = !DILocation(line: 1150, column: 21, scope: !3144)
!3220 = !DILocation(line: 1152, column: 2, scope: !3144)
!3221 = !DILocation(line: 1152, column: 7, scope: !3144)
!3222 = !DILocation(line: 1152, column: 25, scope: !3144)
!3223 = !DILocation(line: 1153, column: 2, scope: !3144)
!3224 = !DILocation(line: 1153, column: 7, scope: !3144)
!3225 = !DILocation(line: 1153, column: 24, scope: !3144)
!3226 = !DILocation(line: 1154, column: 2, scope: !3144)
!3227 = !DILocation(line: 1154, column: 7, scope: !3144)
!3228 = !DILocation(line: 1154, column: 30, scope: !3144)
!3229 = !DILocation(line: 1156, column: 2, scope: !3144)
!3230 = !DILocation(line: 1156, column: 7, scope: !3144)
!3231 = !DILocation(line: 1156, column: 22, scope: !3144)
!3232 = !DILocation(line: 1157, column: 2, scope: !3144)
!3233 = !DILocation(line: 1157, column: 7, scope: !3144)
!3234 = !DILocation(line: 1157, column: 21, scope: !3144)
!3235 = !DILocation(line: 1159, column: 2, scope: !3144)
!3236 = !DILocation(line: 1159, column: 7, scope: !3144)
!3237 = !DILocation(line: 1159, column: 18, scope: !3144)
!3238 = !DILocation(line: 1161, column: 6, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1161, column: 6)
!3240 = !DILocation(line: 1161, column: 12, scope: !3239)
!3241 = !DILocation(line: 1161, column: 18, scope: !3239)
!3242 = !DILocation(line: 1161, column: 27, scope: !3239)
!3243 = !DILocation(line: 1161, column: 6, scope: !3144)
!3244 = !DILocation(line: 1162, column: 3, scope: !3239)
!3245 = !DILocation(line: 1162, column: 8, scope: !3239)
!3246 = !DILocation(line: 1162, column: 18, scope: !3239)
!3247 = !DILocation(line: 1163, column: 11, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 1163, column: 11)
!3249 = !DILocation(line: 1163, column: 17, scope: !3248)
!3250 = !DILocation(line: 1163, column: 23, scope: !3248)
!3251 = !DILocation(line: 1163, column: 32, scope: !3248)
!3252 = !DILocation(line: 1163, column: 51, scope: !3248)
!3253 = !DILocation(line: 1163, column: 54, scope: !3248)
!3254 = !DILocation(line: 1163, column: 60, scope: !3248)
!3255 = !DILocation(line: 1163, column: 66, scope: !3248)
!3256 = !DILocation(line: 1163, column: 72, scope: !3248)
!3257 = !DILocation(line: 1163, column: 75, scope: !3248)
!3258 = !DILocation(line: 1163, column: 81, scope: !3248)
!3259 = !DILocation(line: 1163, column: 87, scope: !3248)
!3260 = !DILocation(line: 1163, column: 94, scope: !3248)
!3261 = !DILocation(line: 1163, column: 99, scope: !3248)
!3262 = !DILocation(line: 1163, column: 11, scope: !3239)
!3263 = !DILocation(line: 1164, column: 3, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1163, column: 127)
!3265 = !DILocation(line: 1164, column: 8, scope: !3264)
!3266 = !DILocation(line: 1164, column: 25, scope: !3264)
!3267 = !DILocation(line: 1165, column: 3, scope: !3264)
!3268 = !DILocation(line: 1165, column: 8, scope: !3264)
!3269 = !DILocation(line: 1165, column: 24, scope: !3264)
!3270 = !DILocation(line: 1166, column: 2, scope: !3264)
!3271 = !DILocation(line: 1168, column: 6, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1168, column: 6)
!3273 = !DILocation(line: 1168, column: 12, scope: !3272)
!3274 = !DILocation(line: 1168, column: 18, scope: !3272)
!3275 = !DILocation(line: 1168, column: 23, scope: !3272)
!3276 = !DILocation(line: 1168, column: 6, scope: !3144)
!3277 = !DILocation(line: 1169, column: 3, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1168, column: 41)
!3279 = !DILocation(line: 1169, column: 8, scope: !3278)
!3280 = !DILocation(line: 1169, column: 18, scope: !3278)
!3281 = !DILocation(line: 1171, column: 7, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1171, column: 7)
!3283 = !DILocation(line: 1171, column: 13, scope: !3282)
!3284 = !DILocation(line: 1171, column: 19, scope: !3282)
!3285 = !DILocation(line: 1171, column: 27, scope: !3282)
!3286 = !DILocation(line: 1171, column: 44, scope: !3282)
!3287 = !DILocation(line: 1172, column: 7, scope: !3282)
!3288 = !DILocation(line: 1172, column: 13, scope: !3282)
!3289 = !DILocation(line: 1172, column: 19, scope: !3282)
!3290 = !DILocation(line: 1172, column: 27, scope: !3282)
!3291 = !DILocation(line: 1172, column: 44, scope: !3282)
!3292 = !DILocation(line: 1173, column: 7, scope: !3282)
!3293 = !DILocation(line: 1173, column: 13, scope: !3282)
!3294 = !DILocation(line: 1173, column: 19, scope: !3282)
!3295 = !DILocation(line: 1173, column: 26, scope: !3282)
!3296 = !DILocation(line: 1171, column: 7, scope: !3278)
!3297 = !DILocation(line: 1175, column: 4, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 1174, column: 3)
!3299 = !DILocation(line: 1175, column: 9, scope: !3298)
!3300 = !DILocation(line: 1175, column: 20, scope: !3298)
!3301 = !DILocation(line: 1176, column: 3, scope: !3298)
!3302 = !DILocation(line: 1177, column: 2, scope: !3278)
!3303 = !DILocation(line: 1179, column: 2, scope: !3144)
!3304 = !DILocation(line: 1179, column: 7, scope: !3144)
!3305 = !DILocation(line: 1179, column: 17, scope: !3144)
!3306 = !DILocation(line: 1181, column: 2, scope: !3144)
!3307 = !DILocation(line: 1181, column: 7, scope: !3144)
!3308 = !DILocation(line: 1181, column: 20, scope: !3144)
!3309 = !DILocation(line: 1182, column: 2, scope: !3144)
!3310 = !DILocation(line: 1182, column: 7, scope: !3144)
!3311 = !DILocation(line: 1182, column: 16, scope: !3144)
!3312 = !DILocation(line: 1183, column: 1, scope: !3144)
!3313 = distinct !DISubprogram(name: "ptcache_particle_totpoint", scope: !3, file: !3, line: 405, type: !1193, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3314 = !DILocalVariable(name: "psys_v", arg: 1, scope: !3313, file: !3, line: 405, type: !131)
!3315 = !DILocation(line: 405, column: 45, scope: !3313)
!3316 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !3313, file: !3, line: 405, type: !144)
!3317 = !DILocation(line: 405, column: 57, scope: !3313)
!3318 = !DILocalVariable(name: "psys", scope: !3313, file: !3, line: 407, type: !2655)
!3319 = !DILocation(line: 407, column: 18, scope: !3313)
!3320 = !DILocation(line: 407, column: 25, scope: !3313)
!3321 = !DILocation(line: 408, column: 9, scope: !3313)
!3322 = !DILocation(line: 408, column: 15, scope: !3313)
!3323 = !DILocation(line: 408, column: 2, scope: !3313)
!3324 = distinct !DISubprogram(name: "ptcache_particle_totwrite", scope: !3, file: !3, line: 416, type: !1193, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3325 = !DILocalVariable(name: "psys_v", arg: 1, scope: !3324, file: !3, line: 416, type: !131)
!3326 = !DILocation(line: 416, column: 45, scope: !3324)
!3327 = !DILocalVariable(name: "cfra", arg: 2, scope: !3324, file: !3, line: 416, type: !144)
!3328 = !DILocation(line: 416, column: 57, scope: !3324)
!3329 = !DILocalVariable(name: "psys", scope: !3324, file: !3, line: 418, type: !2655)
!3330 = !DILocation(line: 418, column: 18, scope: !3324)
!3331 = !DILocation(line: 418, column: 25, scope: !3324)
!3332 = !DILocalVariable(name: "pa", scope: !3324, file: !3, line: 419, type: !1488)
!3333 = !DILocation(line: 419, column: 16, scope: !3324)
!3334 = !DILocation(line: 419, column: 20, scope: !3324)
!3335 = !DILocation(line: 419, column: 26, scope: !3324)
!3336 = !DILocalVariable(name: "p", scope: !3324, file: !3, line: 420, type: !144)
!3337 = !DILocation(line: 420, column: 6, scope: !3324)
!3338 = !DILocalVariable(name: "step", scope: !3324, file: !3, line: 420, type: !144)
!3339 = !DILocation(line: 420, column: 9, scope: !3324)
!3340 = !DILocation(line: 420, column: 16, scope: !3324)
!3341 = !DILocation(line: 420, column: 22, scope: !3324)
!3342 = !DILocation(line: 420, column: 34, scope: !3324)
!3343 = !DILocalVariable(name: "totwrite", scope: !3324, file: !3, line: 421, type: !144)
!3344 = !DILocation(line: 421, column: 6, scope: !3324)
!3345 = !DILocation(line: 423, column: 6, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 423, column: 6)
!3347 = !DILocation(line: 423, column: 11, scope: !3346)
!3348 = !DILocation(line: 423, column: 6, scope: !3324)
!3349 = !DILocation(line: 424, column: 10, scope: !3346)
!3350 = !DILocation(line: 424, column: 16, scope: !3346)
!3351 = !DILocation(line: 424, column: 3, scope: !3346)
!3352 = !DILocation(line: 426, column: 8, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 426, column: 2)
!3354 = !DILocation(line: 426, column: 7, scope: !3353)
!3355 = !DILocation(line: 426, column: 12, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 426, column: 2)
!3357 = !DILocation(line: 426, column: 14, scope: !3356)
!3358 = !DILocation(line: 426, column: 20, scope: !3356)
!3359 = !DILocation(line: 426, column: 13, scope: !3356)
!3360 = !DILocation(line: 426, column: 2, scope: !3353)
!3361 = !DILocation(line: 427, column: 16, scope: !3356)
!3362 = !DILocation(line: 427, column: 24, scope: !3356)
!3363 = !DILocation(line: 427, column: 28, scope: !3356)
!3364 = !DILocation(line: 427, column: 35, scope: !3356)
!3365 = !DILocation(line: 427, column: 33, scope: !3356)
!3366 = !DILocation(line: 427, column: 21, scope: !3356)
!3367 = !DILocation(line: 427, column: 40, scope: !3356)
!3368 = !DILocation(line: 427, column: 43, scope: !3356)
!3369 = !DILocation(line: 427, column: 51, scope: !3356)
!3370 = !DILocation(line: 427, column: 55, scope: !3356)
!3371 = !DILocation(line: 427, column: 65, scope: !3356)
!3372 = !DILocation(line: 427, column: 63, scope: !3356)
!3373 = !DILocation(line: 427, column: 48, scope: !3356)
!3374 = !DILocation(line: 0, scope: !3356)
!3375 = !DILocation(line: 427, column: 12, scope: !3356)
!3376 = !DILocation(line: 427, column: 3, scope: !3356)
!3377 = !DILocation(line: 426, column: 30, scope: !3356)
!3378 = !DILocation(line: 426, column: 36, scope: !3356)
!3379 = !DILocation(line: 426, column: 2, scope: !3356)
!3380 = distinct !{!3380, !3360, !3381}
!3381 = !DILocation(line: 427, column: 69, scope: !3353)
!3382 = !DILocation(line: 429, column: 9, scope: !3324)
!3383 = !DILocation(line: 429, column: 2, scope: !3324)
!3384 = !DILocation(line: 430, column: 1, scope: !3324)
!3385 = distinct !DISubprogram(name: "ptcache_particle_error", scope: !3, file: !3, line: 411, type: !1197, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3386 = !DILocalVariable(name: "UNUSED_psys_v", arg: 1, scope: !3385, file: !3, line: 411, type: !131)
!3387 = !DILocation(line: 411, column: 42, scope: !3385)
!3388 = !DILocalVariable(name: "UNUSED_message", arg: 2, scope: !3385, file: !3, line: 411, type: !1199)
!3389 = !DILocation(line: 411, column: 70, scope: !3385)
!3390 = !DILocation(line: 414, column: 1, scope: !3385)
!3391 = distinct !DISubprogram(name: "ptcache_particle_write", scope: !3, file: !3, line: 249, type: !1072, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3392 = !DILocalVariable(name: "index", arg: 1, scope: !3391, file: !3, line: 249, type: !144)
!3393 = !DILocation(line: 249, column: 40, scope: !3391)
!3394 = !DILocalVariable(name: "psys_v", arg: 2, scope: !3391, file: !3, line: 249, type: !131)
!3395 = !DILocation(line: 249, column: 53, scope: !3391)
!3396 = !DILocalVariable(name: "data", arg: 3, scope: !3391, file: !3, line: 249, type: !1074)
!3397 = !DILocation(line: 249, column: 68, scope: !3391)
!3398 = !DILocalVariable(name: "cfra", arg: 4, scope: !3391, file: !3, line: 249, type: !144)
!3399 = !DILocation(line: 249, column: 78, scope: !3391)
!3400 = !DILocalVariable(name: "psys", scope: !3391, file: !3, line: 251, type: !2655)
!3401 = !DILocation(line: 251, column: 18, scope: !3391)
!3402 = !DILocation(line: 251, column: 24, scope: !3391)
!3403 = !DILocalVariable(name: "pa", scope: !3391, file: !3, line: 252, type: !1488)
!3404 = !DILocation(line: 252, column: 16, scope: !3391)
!3405 = !DILocation(line: 252, column: 21, scope: !3391)
!3406 = !DILocation(line: 252, column: 27, scope: !3391)
!3407 = !DILocation(line: 252, column: 39, scope: !3391)
!3408 = !DILocation(line: 252, column: 37, scope: !3391)
!3409 = !DILocalVariable(name: "boid", scope: !3391, file: !3, line: 253, type: !1013)
!3410 = !DILocation(line: 253, column: 16, scope: !3391)
!3411 = !DILocation(line: 253, column: 24, scope: !3391)
!3412 = !DILocation(line: 253, column: 30, scope: !3391)
!3413 = !DILocation(line: 253, column: 36, scope: !3391)
!3414 = !DILocation(line: 253, column: 45, scope: !3391)
!3415 = !DILocation(line: 253, column: 23, scope: !3391)
!3416 = !DILocation(line: 253, column: 67, scope: !3391)
!3417 = !DILocation(line: 253, column: 71, scope: !3391)
!3418 = !DILocalVariable(name: "times", scope: !3391, file: !3, line: 254, type: !291)
!3419 = !DILocation(line: 254, column: 8, scope: !3391)
!3420 = !DILocalVariable(name: "step", scope: !3391, file: !3, line: 255, type: !144)
!3421 = !DILocation(line: 255, column: 6, scope: !3391)
!3422 = !DILocation(line: 255, column: 13, scope: !3391)
!3423 = !DILocation(line: 255, column: 19, scope: !3391)
!3424 = !DILocation(line: 255, column: 31, scope: !3391)
!3425 = !DILocation(line: 258, column: 6, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 258, column: 6)
!3427 = !DILocation(line: 258, column: 29, scope: !3426)
!3428 = !DILocation(line: 258, column: 33, scope: !3426)
!3429 = !DILocation(line: 258, column: 40, scope: !3426)
!3430 = !DILocation(line: 258, column: 44, scope: !3426)
!3431 = !DILocation(line: 258, column: 51, scope: !3426)
!3432 = !DILocation(line: 258, column: 49, scope: !3426)
!3433 = !DILocation(line: 258, column: 38, scope: !3426)
!3434 = !DILocation(line: 258, column: 56, scope: !3426)
!3435 = !DILocation(line: 258, column: 59, scope: !3426)
!3436 = !DILocation(line: 258, column: 66, scope: !3426)
!3437 = !DILocation(line: 258, column: 70, scope: !3426)
!3438 = !DILocation(line: 258, column: 80, scope: !3426)
!3439 = !DILocation(line: 258, column: 78, scope: !3426)
!3440 = !DILocation(line: 258, column: 64, scope: !3426)
!3441 = !DILocation(line: 258, column: 6, scope: !3391)
!3442 = !DILocation(line: 259, column: 3, scope: !3426)
!3443 = !DILocation(line: 261, column: 13, scope: !3391)
!3444 = !DILocation(line: 261, column: 17, scope: !3391)
!3445 = !DILocation(line: 261, column: 2, scope: !3391)
!3446 = !DILocation(line: 261, column: 11, scope: !3391)
!3447 = !DILocation(line: 262, column: 13, scope: !3391)
!3448 = !DILocation(line: 262, column: 17, scope: !3391)
!3449 = !DILocation(line: 262, column: 2, scope: !3391)
!3450 = !DILocation(line: 262, column: 11, scope: !3391)
!3451 = !DILocation(line: 263, column: 13, scope: !3391)
!3452 = !DILocation(line: 263, column: 17, scope: !3391)
!3453 = !DILocation(line: 263, column: 2, scope: !3391)
!3454 = !DILocation(line: 263, column: 11, scope: !3391)
!3455 = !DILocation(line: 265, column: 2, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 265, column: 2)
!3457 = !DILocation(line: 265, column: 2, scope: !3391)
!3458 = !DILocation(line: 265, column: 2, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 265, column: 2)
!3460 = !DILocation(line: 266, column: 2, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 266, column: 2)
!3462 = !DILocation(line: 266, column: 2, scope: !3391)
!3463 = !DILocation(line: 266, column: 2, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 266, column: 2)
!3465 = !DILocation(line: 267, column: 2, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 267, column: 2)
!3467 = !DILocation(line: 267, column: 2, scope: !3391)
!3468 = !DILocation(line: 267, column: 2, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 267, column: 2)
!3470 = !DILocation(line: 268, column: 2, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 268, column: 2)
!3472 = !DILocation(line: 268, column: 2, scope: !3391)
!3473 = !DILocation(line: 268, column: 2, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 268, column: 2)
!3475 = !DILocation(line: 269, column: 2, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 269, column: 2)
!3477 = !DILocation(line: 269, column: 2, scope: !3391)
!3478 = !DILocation(line: 269, column: 2, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 269, column: 2)
!3480 = !DILocation(line: 270, column: 2, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 270, column: 2)
!3482 = !DILocation(line: 270, column: 2, scope: !3391)
!3483 = !DILocation(line: 270, column: 2, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 270, column: 2)
!3485 = !DILocation(line: 271, column: 2, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 271, column: 2)
!3487 = !DILocation(line: 271, column: 2, scope: !3391)
!3488 = !DILocation(line: 271, column: 2, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 271, column: 2)
!3490 = !DILocation(line: 273, column: 6, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 273, column: 6)
!3492 = !DILocation(line: 273, column: 6, scope: !3391)
!3493 = !DILocation(line: 274, column: 3, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 274, column: 3)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 273, column: 12)
!3496 = !DILocation(line: 274, column: 3, scope: !3495)
!3497 = !DILocation(line: 274, column: 3, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 274, column: 3)
!3499 = !DILocation(line: 275, column: 2, scope: !3495)
!3500 = !DILocation(line: 278, column: 14, scope: !3391)
!3501 = !DILocation(line: 278, column: 18, scope: !3391)
!3502 = !DILocation(line: 278, column: 24, scope: !3391)
!3503 = !DILocation(line: 278, column: 32, scope: !3391)
!3504 = !DILocation(line: 278, column: 36, scope: !3391)
!3505 = !DILocation(line: 278, column: 29, scope: !3391)
!3506 = !DILocation(line: 278, column: 41, scope: !3391)
!3507 = !DILocation(line: 278, column: 44, scope: !3391)
!3508 = !DILocation(line: 278, column: 48, scope: !3391)
!3509 = !DILocation(line: 278, column: 59, scope: !3391)
!3510 = !DILocation(line: 278, column: 67, scope: !3391)
!3511 = !DILocation(line: 278, column: 71, scope: !3391)
!3512 = !DILocation(line: 278, column: 64, scope: !3391)
!3513 = !DILocation(line: 0, scope: !3391)
!3514 = !DILocation(line: 278, column: 11, scope: !3391)
!3515 = !DILocation(line: 278, column: 2, scope: !3391)
!3516 = !DILocation(line: 279, column: 1, scope: !3391)
!3517 = distinct !DISubprogram(name: "ptcache_particle_read", scope: !3, file: !3, line: 280, type: !1077, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3518 = !DILocalVariable(name: "index", arg: 1, scope: !3517, file: !3, line: 280, type: !144)
!3519 = !DILocation(line: 280, column: 39, scope: !3517)
!3520 = !DILocalVariable(name: "psys_v", arg: 2, scope: !3517, file: !3, line: 280, type: !131)
!3521 = !DILocation(line: 280, column: 52, scope: !3517)
!3522 = !DILocalVariable(name: "data", arg: 3, scope: !3517, file: !3, line: 280, type: !1074)
!3523 = !DILocation(line: 280, column: 67, scope: !3517)
!3524 = !DILocalVariable(name: "cfra", arg: 4, scope: !3517, file: !3, line: 280, type: !256)
!3525 = !DILocation(line: 280, column: 79, scope: !3517)
!3526 = !DILocalVariable(name: "old_data", arg: 5, scope: !3517, file: !3, line: 280, type: !745)
!3527 = !DILocation(line: 280, column: 92, scope: !3517)
!3528 = !DILocalVariable(name: "psys", scope: !3517, file: !3, line: 282, type: !2655)
!3529 = !DILocation(line: 282, column: 18, scope: !3517)
!3530 = !DILocation(line: 282, column: 24, scope: !3517)
!3531 = !DILocalVariable(name: "pa", scope: !3517, file: !3, line: 283, type: !1488)
!3532 = !DILocation(line: 283, column: 16, scope: !3517)
!3533 = !DILocalVariable(name: "boid", scope: !3517, file: !3, line: 284, type: !1013)
!3534 = !DILocation(line: 284, column: 16, scope: !3517)
!3535 = !DILocalVariable(name: "timestep", scope: !3517, file: !3, line: 285, type: !256)
!3536 = !DILocation(line: 285, column: 8, scope: !3517)
!3537 = !DILocation(line: 285, column: 27, scope: !3517)
!3538 = !DILocation(line: 285, column: 33, scope: !3517)
!3539 = !DILocation(line: 285, column: 39, scope: !3517)
!3540 = !DILocation(line: 285, column: 25, scope: !3517)
!3541 = !DILocation(line: 287, column: 6, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 287, column: 6)
!3543 = !DILocation(line: 287, column: 15, scope: !3542)
!3544 = !DILocation(line: 287, column: 21, scope: !3542)
!3545 = !DILocation(line: 287, column: 12, scope: !3542)
!3546 = !DILocation(line: 287, column: 6, scope: !3517)
!3547 = !DILocation(line: 288, column: 3, scope: !3542)
!3548 = !DILocation(line: 290, column: 7, scope: !3517)
!3549 = !DILocation(line: 290, column: 13, scope: !3517)
!3550 = !DILocation(line: 290, column: 25, scope: !3517)
!3551 = !DILocation(line: 290, column: 23, scope: !3517)
!3552 = !DILocation(line: 290, column: 5, scope: !3517)
!3553 = !DILocation(line: 291, column: 10, scope: !3517)
!3554 = !DILocation(line: 291, column: 16, scope: !3517)
!3555 = !DILocation(line: 291, column: 22, scope: !3517)
!3556 = !DILocation(line: 291, column: 31, scope: !3517)
!3557 = !DILocation(line: 291, column: 9, scope: !3517)
!3558 = !DILocation(line: 291, column: 53, scope: !3517)
!3559 = !DILocation(line: 291, column: 57, scope: !3517)
!3560 = !DILocation(line: 291, column: 7, scope: !3517)
!3561 = !DILocation(line: 293, column: 6, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 293, column: 6)
!3563 = !DILocation(line: 293, column: 13, scope: !3562)
!3564 = !DILocation(line: 293, column: 17, scope: !3562)
!3565 = !DILocation(line: 293, column: 23, scope: !3562)
!3566 = !DILocation(line: 293, column: 11, scope: !3562)
!3567 = !DILocation(line: 293, column: 6, scope: !3517)
!3568 = !DILocation(line: 294, column: 11, scope: !3562)
!3569 = !DILocation(line: 294, column: 15, scope: !3562)
!3570 = !DILocation(line: 294, column: 3, scope: !3562)
!3571 = !DILocation(line: 294, column: 28, scope: !3562)
!3572 = !DILocation(line: 294, column: 32, scope: !3562)
!3573 = !DILocation(line: 296, column: 6, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 296, column: 6)
!3575 = !DILocation(line: 296, column: 6, scope: !3517)
!3576 = !DILocation(line: 298, column: 11, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 296, column: 16)
!3578 = !DILocation(line: 298, column: 15, scope: !3577)
!3579 = !DILocation(line: 298, column: 3, scope: !3577)
!3580 = !DILocation(line: 298, column: 22, scope: !3577)
!3581 = !DILocation(line: 299, column: 3, scope: !3577)
!3582 = !DILocation(line: 302, column: 33, scope: !3517)
!3583 = !DILocation(line: 302, column: 37, scope: !3517)
!3584 = !DILocation(line: 302, column: 47, scope: !3517)
!3585 = !DILocation(line: 302, column: 53, scope: !3517)
!3586 = !DILocation(line: 302, column: 2, scope: !3517)
!3587 = !DILocation(line: 305, column: 6, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 305, column: 6)
!3589 = !DILocation(line: 305, column: 13, scope: !3588)
!3590 = !DILocation(line: 305, column: 17, scope: !3588)
!3591 = !DILocation(line: 305, column: 11, scope: !3588)
!3592 = !DILocation(line: 305, column: 6, scope: !3517)
!3593 = !DILocation(line: 306, column: 20, scope: !3588)
!3594 = !DILocation(line: 306, column: 24, scope: !3588)
!3595 = !DILocation(line: 306, column: 3, scope: !3588)
!3596 = !DILocation(line: 306, column: 7, scope: !3588)
!3597 = !DILocation(line: 306, column: 13, scope: !3588)
!3598 = !DILocation(line: 306, column: 18, scope: !3588)
!3599 = !DILocation(line: 307, column: 11, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 307, column: 11)
!3601 = !DILocation(line: 307, column: 18, scope: !3600)
!3602 = !DILocation(line: 307, column: 22, scope: !3600)
!3603 = !DILocation(line: 307, column: 16, scope: !3600)
!3604 = !DILocation(line: 307, column: 11, scope: !3588)
!3605 = !DILocation(line: 308, column: 20, scope: !3600)
!3606 = !DILocation(line: 308, column: 24, scope: !3600)
!3607 = !DILocation(line: 308, column: 3, scope: !3600)
!3608 = !DILocation(line: 308, column: 7, scope: !3600)
!3609 = !DILocation(line: 308, column: 13, scope: !3600)
!3610 = !DILocation(line: 308, column: 18, scope: !3600)
!3611 = !DILocation(line: 310, column: 6, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 310, column: 6)
!3613 = !DILocation(line: 310, column: 6, scope: !3517)
!3614 = !DILocation(line: 311, column: 3, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 311, column: 3)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 310, column: 29)
!3617 = !DILocation(line: 311, column: 3, scope: !3616)
!3618 = !DILocation(line: 311, column: 3, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 311, column: 3)
!3620 = !DILocation(line: 312, column: 2, scope: !3616)
!3621 = !DILocation(line: 314, column: 6, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 314, column: 6)
!3623 = !DILocation(line: 314, column: 6, scope: !3517)
!3624 = !DILocalVariable(name: "times", scope: !3625, file: !3, line: 315, type: !291)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 314, column: 30)
!3626 = !DILocation(line: 315, column: 9, scope: !3625)
!3627 = !DILocation(line: 316, column: 3, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 316, column: 3)
!3629 = !DILocation(line: 316, column: 3, scope: !3625)
!3630 = !DILocation(line: 316, column: 3, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 316, column: 3)
!3632 = !DILocation(line: 317, column: 14, scope: !3625)
!3633 = !DILocation(line: 317, column: 3, scope: !3625)
!3634 = !DILocation(line: 317, column: 7, scope: !3625)
!3635 = !DILocation(line: 317, column: 12, scope: !3625)
!3636 = !DILocation(line: 318, column: 17, scope: !3625)
!3637 = !DILocation(line: 318, column: 3, scope: !3625)
!3638 = !DILocation(line: 318, column: 7, scope: !3625)
!3639 = !DILocation(line: 318, column: 15, scope: !3625)
!3640 = !DILocation(line: 319, column: 18, scope: !3625)
!3641 = !DILocation(line: 319, column: 3, scope: !3625)
!3642 = !DILocation(line: 319, column: 7, scope: !3625)
!3643 = !DILocation(line: 319, column: 16, scope: !3625)
!3644 = !DILocation(line: 320, column: 2, scope: !3625)
!3645 = !DILocation(line: 322, column: 6, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 322, column: 6)
!3647 = !DILocation(line: 322, column: 6, scope: !3517)
!3648 = !DILocation(line: 323, column: 3, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 323, column: 3)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 322, column: 12)
!3651 = !DILocation(line: 323, column: 3, scope: !3650)
!3652 = !DILocation(line: 323, column: 3, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 323, column: 3)
!3654 = !DILocation(line: 324, column: 2, scope: !3650)
!3655 = !DILocation(line: 327, column: 6, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 327, column: 6)
!3657 = !DILocation(line: 327, column: 32, scope: !3656)
!3658 = !DILocation(line: 327, column: 36, scope: !3656)
!3659 = !DILocation(line: 327, column: 6, scope: !3517)
!3660 = !DILocation(line: 328, column: 7, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 328, column: 7)
!3662 = distinct !DILexicalBlock(scope: !3656, file: !3, line: 327, column: 63)
!3663 = !DILocation(line: 328, column: 14, scope: !3661)
!3664 = !DILocation(line: 328, column: 18, scope: !3661)
!3665 = !DILocation(line: 328, column: 29, scope: !3661)
!3666 = !DILocation(line: 328, column: 12, scope: !3661)
!3667 = !DILocation(line: 328, column: 7, scope: !3662)
!3668 = !DILocation(line: 329, column: 16, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 328, column: 35)
!3670 = !DILocation(line: 329, column: 20, scope: !3669)
!3671 = !DILocation(line: 329, column: 26, scope: !3669)
!3672 = !DILocation(line: 329, column: 31, scope: !3669)
!3673 = !DILocation(line: 329, column: 35, scope: !3669)
!3674 = !DILocation(line: 329, column: 41, scope: !3669)
!3675 = !DILocation(line: 329, column: 45, scope: !3669)
!3676 = !DILocation(line: 329, column: 49, scope: !3669)
!3677 = !DILocation(line: 329, column: 60, scope: !3669)
!3678 = !DILocation(line: 329, column: 4, scope: !3669)
!3679 = !DILocation(line: 330, column: 14, scope: !3669)
!3680 = !DILocation(line: 330, column: 18, scope: !3669)
!3681 = !DILocation(line: 330, column: 24, scope: !3669)
!3682 = !DILocation(line: 330, column: 30, scope: !3669)
!3683 = !DILocation(line: 330, column: 37, scope: !3669)
!3684 = !DILocation(line: 330, column: 41, scope: !3669)
!3685 = !DILocation(line: 330, column: 52, scope: !3669)
!3686 = !DILocation(line: 330, column: 35, scope: !3669)
!3687 = !DILocation(line: 330, column: 60, scope: !3669)
!3688 = !DILocation(line: 330, column: 58, scope: !3669)
!3689 = !DILocation(line: 330, column: 4, scope: !3669)
!3690 = !DILocation(line: 331, column: 3, scope: !3669)
!3691 = !DILocation(line: 333, column: 16, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 332, column: 8)
!3693 = !DILocation(line: 333, column: 20, scope: !3692)
!3694 = !DILocation(line: 333, column: 26, scope: !3692)
!3695 = !DILocation(line: 333, column: 31, scope: !3692)
!3696 = !DILocation(line: 333, column: 35, scope: !3692)
!3697 = !DILocation(line: 333, column: 46, scope: !3692)
!3698 = !DILocation(line: 333, column: 50, scope: !3692)
!3699 = !DILocation(line: 333, column: 54, scope: !3692)
!3700 = !DILocation(line: 333, column: 60, scope: !3692)
!3701 = !DILocation(line: 333, column: 4, scope: !3692)
!3702 = !DILocation(line: 334, column: 14, scope: !3692)
!3703 = !DILocation(line: 334, column: 18, scope: !3692)
!3704 = !DILocation(line: 334, column: 24, scope: !3692)
!3705 = !DILocation(line: 334, column: 30, scope: !3692)
!3706 = !DILocation(line: 334, column: 34, scope: !3692)
!3707 = !DILocation(line: 334, column: 45, scope: !3692)
!3708 = !DILocation(line: 334, column: 52, scope: !3692)
!3709 = !DILocation(line: 334, column: 50, scope: !3692)
!3710 = !DILocation(line: 334, column: 60, scope: !3692)
!3711 = !DILocation(line: 334, column: 58, scope: !3692)
!3712 = !DILocation(line: 334, column: 4, scope: !3692)
!3713 = !DILocation(line: 336, column: 2, scope: !3662)
!3714 = !DILocation(line: 339, column: 6, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 339, column: 6)
!3716 = !DILocation(line: 339, column: 32, scope: !3715)
!3717 = !DILocation(line: 339, column: 36, scope: !3715)
!3718 = !DILocation(line: 339, column: 6, scope: !3517)
!3719 = !DILocation(line: 340, column: 11, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 339, column: 63)
!3721 = !DILocation(line: 340, column: 15, scope: !3720)
!3722 = !DILocation(line: 340, column: 21, scope: !3720)
!3723 = !DILocation(line: 340, column: 3, scope: !3720)
!3724 = !DILocation(line: 341, column: 2, scope: !3720)
!3725 = !DILocation(line: 342, column: 1, scope: !3517)
!3726 = distinct !DISubprogram(name: "ptcache_particle_interpolate", scope: !3, file: !3, line: 343, type: !1081, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3727 = !DILocalVariable(name: "index", arg: 1, scope: !3726, file: !3, line: 343, type: !144)
!3728 = !DILocation(line: 343, column: 46, scope: !3726)
!3729 = !DILocalVariable(name: "psys_v", arg: 2, scope: !3726, file: !3, line: 343, type: !131)
!3730 = !DILocation(line: 343, column: 59, scope: !3726)
!3731 = !DILocalVariable(name: "data", arg: 3, scope: !3726, file: !3, line: 343, type: !1074)
!3732 = !DILocation(line: 343, column: 74, scope: !3726)
!3733 = !DILocalVariable(name: "cfra", arg: 4, scope: !3726, file: !3, line: 343, type: !256)
!3734 = !DILocation(line: 343, column: 86, scope: !3726)
!3735 = !DILocalVariable(name: "cfra1", arg: 5, scope: !3726, file: !3, line: 343, type: !256)
!3736 = !DILocation(line: 343, column: 98, scope: !3726)
!3737 = !DILocalVariable(name: "cfra2", arg: 6, scope: !3726, file: !3, line: 343, type: !256)
!3738 = !DILocation(line: 343, column: 111, scope: !3726)
!3739 = !DILocalVariable(name: "old_data", arg: 7, scope: !3726, file: !3, line: 343, type: !745)
!3740 = !DILocation(line: 343, column: 125, scope: !3726)
!3741 = !DILocalVariable(name: "psys", scope: !3726, file: !3, line: 345, type: !2655)
!3742 = !DILocation(line: 345, column: 18, scope: !3726)
!3743 = !DILocation(line: 345, column: 24, scope: !3726)
!3744 = !DILocalVariable(name: "pa", scope: !3726, file: !3, line: 346, type: !1488)
!3745 = !DILocation(line: 346, column: 16, scope: !3726)
!3746 = !DILocalVariable(name: "keys", scope: !3726, file: !3, line: 347, type: !3014)
!3747 = !DILocation(line: 347, column: 14, scope: !3726)
!3748 = !DILocalVariable(name: "dfra", scope: !3726, file: !3, line: 348, type: !256)
!3749 = !DILocation(line: 348, column: 8, scope: !3726)
!3750 = !DILocalVariable(name: "timestep", scope: !3726, file: !3, line: 348, type: !256)
!3751 = !DILocation(line: 348, column: 14, scope: !3726)
!3752 = !DILocation(line: 348, column: 33, scope: !3726)
!3753 = !DILocation(line: 348, column: 39, scope: !3726)
!3754 = !DILocation(line: 348, column: 45, scope: !3726)
!3755 = !DILocation(line: 348, column: 31, scope: !3726)
!3756 = !DILocation(line: 350, column: 6, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 350, column: 6)
!3758 = !DILocation(line: 350, column: 15, scope: !3757)
!3759 = !DILocation(line: 350, column: 21, scope: !3757)
!3760 = !DILocation(line: 350, column: 12, scope: !3757)
!3761 = !DILocation(line: 350, column: 6, scope: !3726)
!3762 = !DILocation(line: 351, column: 3, scope: !3757)
!3763 = !DILocation(line: 353, column: 7, scope: !3726)
!3764 = !DILocation(line: 353, column: 13, scope: !3726)
!3765 = !DILocation(line: 353, column: 25, scope: !3726)
!3766 = !DILocation(line: 353, column: 23, scope: !3726)
!3767 = !DILocation(line: 353, column: 5, scope: !3726)
!3768 = !DILocation(line: 356, column: 11, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 356, column: 6)
!3770 = !DILocation(line: 356, column: 6, scope: !3769)
!3771 = !DILocation(line: 356, column: 19, scope: !3769)
!3772 = !DILocation(line: 356, column: 23, scope: !3769)
!3773 = !DILocation(line: 356, column: 30, scope: !3769)
!3774 = !DILocation(line: 356, column: 36, scope: !3769)
!3775 = !DILocation(line: 356, column: 48, scope: !3769)
!3776 = !DILocation(line: 356, column: 28, scope: !3769)
!3777 = !DILocation(line: 356, column: 17, scope: !3769)
!3778 = !DILocation(line: 356, column: 53, scope: !3769)
!3779 = !DILocation(line: 356, column: 61, scope: !3769)
!3780 = !DILocation(line: 356, column: 56, scope: !3769)
!3781 = !DILocation(line: 356, column: 69, scope: !3769)
!3782 = !DILocation(line: 356, column: 73, scope: !3769)
!3783 = !DILocation(line: 356, column: 83, scope: !3769)
!3784 = !DILocation(line: 356, column: 89, scope: !3769)
!3785 = !DILocation(line: 356, column: 101, scope: !3769)
!3786 = !DILocation(line: 356, column: 81, scope: !3769)
!3787 = !DILocation(line: 356, column: 67, scope: !3769)
!3788 = !DILocation(line: 356, column: 6, scope: !3726)
!3789 = !DILocation(line: 357, column: 3, scope: !3769)
!3790 = !DILocation(line: 359, column: 9, scope: !3726)
!3791 = !DILocation(line: 359, column: 7, scope: !3726)
!3792 = !DILocation(line: 360, column: 10, scope: !3726)
!3793 = !DILocation(line: 360, column: 8, scope: !3726)
!3794 = !DILocation(line: 361, column: 10, scope: !3726)
!3795 = !DILocation(line: 361, column: 8, scope: !3726)
!3796 = !DILocation(line: 363, column: 6, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 363, column: 6)
!3798 = !DILocation(line: 363, column: 15, scope: !3797)
!3799 = !DILocation(line: 363, column: 12, scope: !3797)
!3800 = !DILocation(line: 363, column: 6, scope: !3726)
!3801 = !DILocation(line: 364, column: 3, scope: !3797)
!3802 = !DILocation(line: 366, column: 9, scope: !3726)
!3803 = !DILocation(line: 366, column: 13, scope: !3726)
!3804 = !DILocation(line: 366, column: 2, scope: !3726)
!3805 = !DILocation(line: 366, column: 18, scope: !3726)
!3806 = !DILocation(line: 366, column: 22, scope: !3726)
!3807 = !DILocation(line: 367, column: 6, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 367, column: 6)
!3809 = !DILocation(line: 367, column: 6, scope: !3726)
!3810 = !DILocation(line: 368, column: 10, scope: !3808)
!3811 = !DILocation(line: 368, column: 14, scope: !3808)
!3812 = !DILocation(line: 368, column: 3, scope: !3808)
!3813 = !DILocation(line: 368, column: 18, scope: !3808)
!3814 = !DILocation(line: 370, column: 33, scope: !3808)
!3815 = !DILocation(line: 370, column: 37, scope: !3808)
!3816 = !DILocation(line: 370, column: 44, scope: !3808)
!3817 = !DILocation(line: 370, column: 50, scope: !3808)
!3818 = !DILocation(line: 370, column: 3, scope: !3808)
!3819 = !DILocation(line: 373, column: 6, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 373, column: 6)
!3821 = !DILocation(line: 373, column: 32, scope: !3820)
!3822 = !DILocation(line: 373, column: 36, scope: !3820)
!3823 = !DILocation(line: 373, column: 6, scope: !3726)
!3824 = !DILocation(line: 374, column: 7, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 374, column: 7)
!3826 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 373, column: 63)
!3827 = !DILocation(line: 374, column: 15, scope: !3825)
!3828 = !DILocation(line: 374, column: 22, scope: !3825)
!3829 = !DILocation(line: 374, column: 30, scope: !3825)
!3830 = !DILocation(line: 374, column: 20, scope: !3825)
!3831 = !DILocation(line: 374, column: 7, scope: !3826)
!3832 = !DILocation(line: 375, column: 16, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 374, column: 36)
!3834 = !DILocation(line: 375, column: 24, scope: !3833)
!3835 = !DILocation(line: 375, column: 29, scope: !3833)
!3836 = !DILocation(line: 375, column: 37, scope: !3833)
!3837 = !DILocation(line: 375, column: 41, scope: !3833)
!3838 = !DILocation(line: 375, column: 49, scope: !3833)
!3839 = !DILocation(line: 375, column: 4, scope: !3833)
!3840 = !DILocation(line: 376, column: 14, scope: !3833)
!3841 = !DILocation(line: 376, column: 22, scope: !3833)
!3842 = !DILocation(line: 376, column: 28, scope: !3833)
!3843 = !DILocation(line: 376, column: 36, scope: !3833)
!3844 = !DILocation(line: 376, column: 43, scope: !3833)
!3845 = !DILocation(line: 376, column: 51, scope: !3833)
!3846 = !DILocation(line: 376, column: 41, scope: !3833)
!3847 = !DILocation(line: 376, column: 59, scope: !3833)
!3848 = !DILocation(line: 376, column: 57, scope: !3833)
!3849 = !DILocation(line: 376, column: 4, scope: !3833)
!3850 = !DILocation(line: 377, column: 3, scope: !3833)
!3851 = !DILocation(line: 379, column: 16, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 378, column: 8)
!3853 = !DILocation(line: 379, column: 24, scope: !3852)
!3854 = !DILocation(line: 379, column: 29, scope: !3852)
!3855 = !DILocation(line: 379, column: 37, scope: !3852)
!3856 = !DILocation(line: 379, column: 41, scope: !3852)
!3857 = !DILocation(line: 379, column: 49, scope: !3852)
!3858 = !DILocation(line: 379, column: 4, scope: !3852)
!3859 = !DILocation(line: 380, column: 14, scope: !3852)
!3860 = !DILocation(line: 380, column: 22, scope: !3852)
!3861 = !DILocation(line: 380, column: 28, scope: !3852)
!3862 = !DILocation(line: 380, column: 36, scope: !3852)
!3863 = !DILocation(line: 380, column: 43, scope: !3852)
!3864 = !DILocation(line: 380, column: 51, scope: !3852)
!3865 = !DILocation(line: 380, column: 41, scope: !3852)
!3866 = !DILocation(line: 380, column: 59, scope: !3852)
!3867 = !DILocation(line: 380, column: 57, scope: !3852)
!3868 = !DILocation(line: 380, column: 4, scope: !3852)
!3869 = !DILocation(line: 382, column: 2, scope: !3826)
!3870 = !DILocation(line: 385, column: 6, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 385, column: 6)
!3872 = !DILocation(line: 385, column: 32, scope: !3871)
!3873 = !DILocation(line: 385, column: 36, scope: !3871)
!3874 = !DILocation(line: 385, column: 6, scope: !3726)
!3875 = !DILocation(line: 386, column: 15, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 385, column: 63)
!3877 = !DILocation(line: 386, column: 23, scope: !3876)
!3878 = !DILocation(line: 386, column: 28, scope: !3876)
!3879 = !DILocation(line: 386, column: 36, scope: !3876)
!3880 = !DILocation(line: 386, column: 3, scope: !3876)
!3881 = !DILocation(line: 387, column: 2, scope: !3876)
!3882 = !DILocation(line: 389, column: 6, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 389, column: 6)
!3884 = !DILocation(line: 389, column: 13, scope: !3883)
!3885 = !DILocation(line: 389, column: 17, scope: !3883)
!3886 = !DILocation(line: 389, column: 11, scope: !3883)
!3887 = !DILocation(line: 389, column: 6, scope: !3726)
!3888 = !DILocation(line: 390, column: 11, scope: !3883)
!3889 = !DILocation(line: 390, column: 9, scope: !3883)
!3890 = !DILocation(line: 390, column: 3, scope: !3883)
!3891 = !DILocation(line: 392, column: 9, scope: !3726)
!3892 = !DILocation(line: 392, column: 17, scope: !3726)
!3893 = !DILocation(line: 392, column: 15, scope: !3726)
!3894 = !DILocation(line: 392, column: 7, scope: !3726)
!3895 = !DILocation(line: 394, column: 12, scope: !3726)
!3896 = !DILocation(line: 394, column: 20, scope: !3726)
!3897 = !DILocation(line: 394, column: 25, scope: !3726)
!3898 = !DILocation(line: 394, column: 32, scope: !3726)
!3899 = !DILocation(line: 394, column: 30, scope: !3726)
!3900 = !DILocation(line: 394, column: 2, scope: !3726)
!3901 = !DILocation(line: 395, column: 12, scope: !3726)
!3902 = !DILocation(line: 395, column: 20, scope: !3726)
!3903 = !DILocation(line: 395, column: 25, scope: !3726)
!3904 = !DILocation(line: 395, column: 32, scope: !3726)
!3905 = !DILocation(line: 395, column: 30, scope: !3726)
!3906 = !DILocation(line: 395, column: 2, scope: !3726)
!3907 = !DILocation(line: 397, column: 32, scope: !3726)
!3908 = !DILocation(line: 397, column: 39, scope: !3726)
!3909 = !DILocation(line: 397, column: 46, scope: !3726)
!3910 = !DILocation(line: 397, column: 44, scope: !3726)
!3911 = !DILocation(line: 397, column: 55, scope: !3726)
!3912 = !DILocation(line: 397, column: 53, scope: !3726)
!3913 = !DILocation(line: 397, column: 62, scope: !3726)
!3914 = !DILocation(line: 397, column: 66, scope: !3726)
!3915 = !DILocation(line: 397, column: 2, scope: !3726)
!3916 = !DILocation(line: 398, column: 17, scope: !3726)
!3917 = !DILocation(line: 398, column: 21, scope: !3726)
!3918 = !DILocation(line: 398, column: 27, scope: !3726)
!3919 = !DILocation(line: 398, column: 32, scope: !3726)
!3920 = !DILocation(line: 398, column: 40, scope: !3726)
!3921 = !DILocation(line: 398, column: 45, scope: !3726)
!3922 = !DILocation(line: 398, column: 53, scope: !3726)
!3923 = !DILocation(line: 398, column: 59, scope: !3726)
!3924 = !DILocation(line: 398, column: 66, scope: !3726)
!3925 = !DILocation(line: 398, column: 64, scope: !3726)
!3926 = !DILocation(line: 398, column: 75, scope: !3726)
!3927 = !DILocation(line: 398, column: 73, scope: !3726)
!3928 = !DILocation(line: 398, column: 2, scope: !3726)
!3929 = !DILocation(line: 400, column: 12, scope: !3726)
!3930 = !DILocation(line: 400, column: 16, scope: !3726)
!3931 = !DILocation(line: 400, column: 22, scope: !3726)
!3932 = !DILocation(line: 400, column: 34, scope: !3726)
!3933 = !DILocation(line: 400, column: 41, scope: !3726)
!3934 = !DILocation(line: 400, column: 39, scope: !3726)
!3935 = !DILocation(line: 400, column: 31, scope: !3726)
!3936 = !DILocation(line: 400, column: 2, scope: !3726)
!3937 = !DILocation(line: 402, column: 19, scope: !3726)
!3938 = !DILocation(line: 402, column: 2, scope: !3726)
!3939 = !DILocation(line: 402, column: 6, scope: !3726)
!3940 = !DILocation(line: 402, column: 12, scope: !3726)
!3941 = !DILocation(line: 402, column: 17, scope: !3726)
!3942 = !DILocation(line: 403, column: 1, scope: !3726)
!3943 = distinct !DISubprogram(name: "ptcache_particle_extra_write", scope: !3, file: !3, line: 432, type: !3944, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !131, !3946, !144}
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheMem", file: !432, line: 168, baseType: !1172)
!3948 = !DILocalVariable(name: "psys_v", arg: 1, scope: !3943, file: !3, line: 432, type: !131)
!3949 = !DILocation(line: 432, column: 48, scope: !3943)
!3950 = !DILocalVariable(name: "pm", arg: 2, scope: !3943, file: !3, line: 432, type: !3946)
!3951 = !DILocation(line: 432, column: 68, scope: !3943)
!3952 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !3943, file: !3, line: 432, type: !144)
!3953 = !DILocation(line: 432, column: 76, scope: !3943)
!3954 = !DILocalVariable(name: "psys", scope: !3943, file: !3, line: 434, type: !2655)
!3955 = !DILocation(line: 434, column: 18, scope: !3943)
!3956 = !DILocation(line: 434, column: 25, scope: !3943)
!3957 = !DILocalVariable(name: "extra", scope: !3943, file: !3, line: 435, type: !3958)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheExtra", file: !432, line: 157, baseType: !3960)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheExtra", file: !432, line: 153, size: 256, elements: !3961)
!3961 = !{!3962, !3964, !3965, !3966, !3967}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3960, file: !432, line: 154, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3960, file: !432, line: 154, baseType: !3963, size: 64, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3960, file: !432, line: 155, baseType: !7, size: 32, offset: 128)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "totdata", scope: !3960, file: !432, line: 155, baseType: !7, size: 32, offset: 160)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3960, file: !432, line: 156, baseType: !131, size: 64, offset: 192)
!3968 = !DILocation(line: 435, column: 16, scope: !3943)
!3969 = !DILocation(line: 437, column: 6, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 437, column: 6)
!3971 = !DILocation(line: 437, column: 12, scope: !3970)
!3972 = !DILocation(line: 437, column: 18, scope: !3970)
!3973 = !DILocation(line: 437, column: 27, scope: !3970)
!3974 = !DILocation(line: 437, column: 46, scope: !3970)
!3975 = !DILocation(line: 438, column: 3, scope: !3970)
!3976 = !DILocation(line: 438, column: 9, scope: !3970)
!3977 = !DILocation(line: 438, column: 15, scope: !3970)
!3978 = !DILocation(line: 438, column: 21, scope: !3970)
!3979 = !DILocation(line: 438, column: 24, scope: !3970)
!3980 = !DILocation(line: 438, column: 30, scope: !3970)
!3981 = !DILocation(line: 438, column: 36, scope: !3970)
!3982 = !DILocation(line: 438, column: 43, scope: !3970)
!3983 = !DILocation(line: 438, column: 48, scope: !3970)
!3984 = !DILocation(line: 438, column: 75, scope: !3970)
!3985 = !DILocation(line: 439, column: 3, scope: !3970)
!3986 = !DILocation(line: 439, column: 9, scope: !3970)
!3987 = !DILocation(line: 439, column: 26, scope: !3970)
!3988 = !DILocation(line: 439, column: 29, scope: !3970)
!3989 = !DILocation(line: 439, column: 35, scope: !3970)
!3990 = !DILocation(line: 437, column: 6, scope: !3943)
!3991 = !DILocation(line: 441, column: 11, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 439, column: 50)
!3993 = !DILocation(line: 441, column: 9, scope: !3992)
!3994 = !DILocation(line: 443, column: 3, scope: !3992)
!3995 = !DILocation(line: 443, column: 10, scope: !3992)
!3996 = !DILocation(line: 443, column: 15, scope: !3992)
!3997 = !DILocation(line: 444, column: 20, scope: !3992)
!3998 = !DILocation(line: 444, column: 26, scope: !3992)
!3999 = !DILocation(line: 444, column: 3, scope: !3992)
!4000 = !DILocation(line: 444, column: 10, scope: !3992)
!4001 = !DILocation(line: 444, column: 18, scope: !3992)
!4002 = !DILocation(line: 446, column: 17, scope: !3992)
!4003 = !DILocation(line: 446, column: 29, scope: !3992)
!4004 = !DILocation(line: 446, column: 36, scope: !3992)
!4005 = !DILocation(line: 446, column: 69, scope: !3992)
!4006 = !DILocation(line: 446, column: 76, scope: !3992)
!4007 = !DILocation(line: 446, column: 46, scope: !3992)
!4008 = !DILocation(line: 446, column: 44, scope: !3992)
!4009 = !DILocation(line: 446, column: 3, scope: !3992)
!4010 = !DILocation(line: 446, column: 10, scope: !3992)
!4011 = !DILocation(line: 446, column: 15, scope: !3992)
!4012 = !DILocation(line: 447, column: 10, scope: !3992)
!4013 = !DILocation(line: 447, column: 17, scope: !3992)
!4014 = !DILocation(line: 447, column: 23, scope: !3992)
!4015 = !DILocation(line: 447, column: 29, scope: !3992)
!4016 = !DILocation(line: 447, column: 3, scope: !3992)
!4017 = !DILocation(line: 447, column: 44, scope: !3992)
!4018 = !DILocation(line: 447, column: 51, scope: !3992)
!4019 = !DILocation(line: 447, column: 84, scope: !3992)
!4020 = !DILocation(line: 447, column: 91, scope: !3992)
!4021 = !DILocation(line: 447, column: 61, scope: !3992)
!4022 = !DILocation(line: 447, column: 59, scope: !3992)
!4023 = !DILocation(line: 449, column: 16, scope: !3992)
!4024 = !DILocation(line: 449, column: 20, scope: !3992)
!4025 = !DILocation(line: 449, column: 31, scope: !3992)
!4026 = !DILocation(line: 449, column: 3, scope: !3992)
!4027 = !DILocation(line: 450, column: 2, scope: !3992)
!4028 = !DILocation(line: 451, column: 1, scope: !3943)
!4029 = distinct !DISubprogram(name: "ptcache_particle_extra_read", scope: !3, file: !3, line: 453, type: !4030, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{null, !131, !3946, !256}
!4032 = !DILocalVariable(name: "psys_v", arg: 1, scope: !4029, file: !3, line: 453, type: !131)
!4033 = !DILocation(line: 453, column: 47, scope: !4029)
!4034 = !DILocalVariable(name: "pm", arg: 2, scope: !4029, file: !3, line: 453, type: !3946)
!4035 = !DILocation(line: 453, column: 67, scope: !4029)
!4036 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !4029, file: !3, line: 453, type: !256)
!4037 = !DILocation(line: 453, column: 77, scope: !4029)
!4038 = !DILocalVariable(name: "psys", scope: !4029, file: !3, line: 455, type: !2655)
!4039 = !DILocation(line: 455, column: 18, scope: !4029)
!4040 = !DILocation(line: 455, column: 25, scope: !4029)
!4041 = !DILocalVariable(name: "extra", scope: !4029, file: !3, line: 456, type: !3958)
!4042 = !DILocation(line: 456, column: 16, scope: !4029)
!4043 = !DILocation(line: 456, column: 24, scope: !4029)
!4044 = !DILocation(line: 456, column: 28, scope: !4029)
!4045 = !DILocation(line: 456, column: 38, scope: !4029)
!4046 = !DILocation(line: 458, column: 2, scope: !4029)
!4047 = !DILocation(line: 458, column: 9, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 458, column: 2)
!4049 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 458, column: 2)
!4050 = !DILocation(line: 458, column: 2, scope: !4049)
!4051 = !DILocation(line: 459, column: 11, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 458, column: 35)
!4053 = !DILocation(line: 459, column: 18, scope: !4052)
!4054 = !DILocation(line: 459, column: 3, scope: !4052)
!4055 = !DILocation(line: 462, column: 9, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 462, column: 9)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3, line: 461, column: 4)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 459, column: 24)
!4059 = !DILocation(line: 462, column: 15, scope: !4056)
!4060 = !DILocation(line: 462, column: 9, scope: !4057)
!4061 = !DILocation(line: 463, column: 6, scope: !4056)
!4062 = !DILocation(line: 463, column: 16, scope: !4056)
!4063 = !DILocation(line: 463, column: 22, scope: !4056)
!4064 = !DILocation(line: 465, column: 27, scope: !4057)
!4065 = !DILocation(line: 465, column: 41, scope: !4057)
!4066 = !DILocation(line: 465, column: 48, scope: !4057)
!4067 = !DILocation(line: 465, column: 5, scope: !4057)
!4068 = !DILocation(line: 465, column: 11, scope: !4057)
!4069 = !DILocation(line: 465, column: 25, scope: !4057)
!4070 = !DILocation(line: 466, column: 57, scope: !4057)
!4071 = !DILocation(line: 466, column: 64, scope: !4057)
!4072 = !DILocation(line: 466, column: 30, scope: !4057)
!4073 = !DILocation(line: 466, column: 36, scope: !4057)
!4074 = !DILocation(line: 466, column: 55, scope: !4057)
!4075 = !DILocation(line: 466, column: 5, scope: !4057)
!4076 = !DILocation(line: 466, column: 11, scope: !4057)
!4077 = !DILocation(line: 466, column: 28, scope: !4057)
!4078 = !DILocation(line: 467, column: 5, scope: !4057)
!4079 = !DILocation(line: 470, column: 2, scope: !4052)
!4080 = !DILocation(line: 458, column: 22, scope: !4048)
!4081 = !DILocation(line: 458, column: 29, scope: !4048)
!4082 = !DILocation(line: 458, column: 21, scope: !4048)
!4083 = !DILocation(line: 458, column: 2, scope: !4048)
!4084 = distinct !{!4084, !4050, !4085}
!4085 = !DILocation(line: 470, column: 2, scope: !4049)
!4086 = !DILocation(line: 471, column: 1, scope: !4029)
!4087 = distinct !DISubprogram(name: "BKE_ptcache_id_from_cloth", scope: !3, file: !3, line: 1184, type: !4088, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !2797, !2799, !132}
!4090 = !DILocalVariable(name: "pid", arg: 1, scope: !4087, file: !3, line: 1184, type: !2797)
!4091 = !DILocation(line: 1184, column: 43, scope: !4087)
!4092 = !DILocalVariable(name: "ob", arg: 2, scope: !4087, file: !3, line: 1184, type: !2799)
!4093 = !DILocation(line: 1184, column: 56, scope: !4087)
!4094 = !DILocalVariable(name: "clmd", arg: 3, scope: !4087, file: !3, line: 1184, type: !132)
!4095 = !DILocation(line: 1184, column: 79, scope: !4087)
!4096 = !DILocation(line: 1186, column: 9, scope: !4087)
!4097 = !DILocation(line: 1186, column: 2, scope: !4087)
!4098 = !DILocation(line: 1188, column: 11, scope: !4087)
!4099 = !DILocation(line: 1188, column: 2, scope: !4087)
!4100 = !DILocation(line: 1188, column: 7, scope: !4087)
!4101 = !DILocation(line: 1188, column: 9, scope: !4087)
!4102 = !DILocation(line: 1189, column: 17, scope: !4087)
!4103 = !DILocation(line: 1189, column: 2, scope: !4087)
!4104 = !DILocation(line: 1189, column: 7, scope: !4087)
!4105 = !DILocation(line: 1189, column: 15, scope: !4087)
!4106 = !DILocation(line: 1190, column: 2, scope: !4087)
!4107 = !DILocation(line: 1190, column: 7, scope: !4087)
!4108 = !DILocation(line: 1190, column: 11, scope: !4087)
!4109 = !DILocation(line: 1191, column: 20, scope: !4087)
!4110 = !DILocation(line: 1191, column: 26, scope: !4087)
!4111 = !DILocation(line: 1191, column: 39, scope: !4087)
!4112 = !DILocation(line: 1191, column: 2, scope: !4087)
!4113 = !DILocation(line: 1191, column: 7, scope: !4087)
!4114 = !DILocation(line: 1191, column: 18, scope: !4087)
!4115 = !DILocation(line: 1192, column: 14, scope: !4087)
!4116 = !DILocation(line: 1192, column: 20, scope: !4087)
!4117 = !DILocation(line: 1192, column: 2, scope: !4087)
!4118 = !DILocation(line: 1192, column: 7, scope: !4087)
!4119 = !DILocation(line: 1192, column: 12, scope: !4087)
!4120 = !DILocation(line: 1193, column: 19, scope: !4087)
!4121 = !DILocation(line: 1193, column: 25, scope: !4087)
!4122 = !DILocation(line: 1193, column: 2, scope: !4087)
!4123 = !DILocation(line: 1193, column: 7, scope: !4087)
!4124 = !DILocation(line: 1193, column: 16, scope: !4087)
!4125 = !DILocation(line: 1194, column: 18, scope: !4087)
!4126 = !DILocation(line: 1194, column: 24, scope: !4087)
!4127 = !DILocation(line: 1194, column: 2, scope: !4087)
!4128 = !DILocation(line: 1194, column: 7, scope: !4087)
!4129 = !DILocation(line: 1194, column: 15, scope: !4087)
!4130 = !DILocation(line: 1195, column: 17, scope: !4087)
!4131 = !DILocation(line: 1195, column: 22, scope: !4087)
!4132 = !DILocation(line: 1195, column: 30, scope: !4087)
!4133 = !DILocation(line: 1195, column: 2, scope: !4087)
!4134 = !DILocation(line: 1195, column: 7, scope: !4087)
!4135 = !DILocation(line: 1195, column: 15, scope: !4087)
!4136 = !DILocation(line: 1196, column: 2, scope: !4087)
!4137 = !DILocation(line: 1196, column: 7, scope: !4087)
!4138 = !DILocation(line: 1196, column: 17, scope: !4087)
!4139 = !DILocation(line: 1198, column: 2, scope: !4087)
!4140 = !DILocation(line: 1198, column: 7, scope: !4087)
!4141 = !DILocation(line: 1198, column: 21, scope: !4087)
!4142 = !DILocation(line: 1199, column: 2, scope: !4087)
!4143 = !DILocation(line: 1199, column: 7, scope: !4087)
!4144 = !DILocation(line: 1199, column: 21, scope: !4087)
!4145 = !DILocation(line: 1200, column: 2, scope: !4087)
!4146 = !DILocation(line: 1200, column: 7, scope: !4087)
!4147 = !DILocation(line: 1200, column: 26, scope: !4087)
!4148 = !DILocation(line: 1202, column: 2, scope: !4087)
!4149 = !DILocation(line: 1202, column: 7, scope: !4087)
!4150 = !DILocation(line: 1202, column: 22, scope: !4087)
!4151 = !DILocation(line: 1203, column: 2, scope: !4087)
!4152 = !DILocation(line: 1203, column: 7, scope: !4087)
!4153 = !DILocation(line: 1203, column: 21, scope: !4087)
!4154 = !DILocation(line: 1205, column: 2, scope: !4087)
!4155 = !DILocation(line: 1205, column: 7, scope: !4087)
!4156 = !DILocation(line: 1205, column: 25, scope: !4087)
!4157 = !DILocation(line: 1206, column: 2, scope: !4087)
!4158 = !DILocation(line: 1206, column: 7, scope: !4087)
!4159 = !DILocation(line: 1206, column: 24, scope: !4087)
!4160 = !DILocation(line: 1207, column: 2, scope: !4087)
!4161 = !DILocation(line: 1207, column: 7, scope: !4087)
!4162 = !DILocation(line: 1207, column: 30, scope: !4087)
!4163 = !DILocation(line: 1209, column: 2, scope: !4087)
!4164 = !DILocation(line: 1209, column: 7, scope: !4087)
!4165 = !DILocation(line: 1209, column: 22, scope: !4087)
!4166 = !DILocation(line: 1210, column: 2, scope: !4087)
!4167 = !DILocation(line: 1210, column: 7, scope: !4087)
!4168 = !DILocation(line: 1210, column: 21, scope: !4087)
!4169 = !DILocation(line: 1212, column: 2, scope: !4087)
!4170 = !DILocation(line: 1212, column: 7, scope: !4087)
!4171 = !DILocation(line: 1212, column: 17, scope: !4087)
!4172 = !DILocation(line: 1213, column: 2, scope: !4087)
!4173 = !DILocation(line: 1213, column: 7, scope: !4087)
!4174 = !DILocation(line: 1213, column: 17, scope: !4087)
!4175 = !DILocation(line: 1215, column: 2, scope: !4087)
!4176 = !DILocation(line: 1215, column: 7, scope: !4087)
!4177 = !DILocation(line: 1215, column: 20, scope: !4087)
!4178 = !DILocation(line: 1216, column: 2, scope: !4087)
!4179 = !DILocation(line: 1216, column: 7, scope: !4087)
!4180 = !DILocation(line: 1216, column: 16, scope: !4087)
!4181 = !DILocation(line: 1217, column: 1, scope: !4087)
!4182 = distinct !DISubprogram(name: "ptcache_cloth_totpoint", scope: !3, file: !3, line: 539, type: !1193, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4183 = !DILocalVariable(name: "cloth_v", arg: 1, scope: !4182, file: !3, line: 539, type: !131)
!4184 = !DILocation(line: 539, column: 42, scope: !4182)
!4185 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !4182, file: !3, line: 539, type: !144)
!4186 = !DILocation(line: 539, column: 55, scope: !4182)
!4187 = !DILocalVariable(name: "clmd", scope: !4182, file: !3, line: 541, type: !132)
!4188 = !DILocation(line: 541, column: 21, scope: !4182)
!4189 = !DILocation(line: 541, column: 27, scope: !4182)
!4190 = !DILocation(line: 542, column: 9, scope: !4182)
!4191 = !DILocation(line: 542, column: 15, scope: !4182)
!4192 = !DILocation(line: 542, column: 29, scope: !4182)
!4193 = !DILocation(line: 542, column: 35, scope: !4182)
!4194 = !DILocation(line: 542, column: 48, scope: !4182)
!4195 = !DILocation(line: 542, column: 2, scope: !4182)
!4196 = distinct !DISubprogram(name: "ptcache_cloth_error", scope: !3, file: !3, line: 545, type: !1197, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4197 = !DILocalVariable(name: "cloth_v", arg: 1, scope: !4196, file: !3, line: 545, type: !131)
!4198 = !DILocation(line: 545, column: 39, scope: !4196)
!4199 = !DILocalVariable(name: "message", arg: 2, scope: !4196, file: !3, line: 545, type: !1199)
!4200 = !DILocation(line: 545, column: 60, scope: !4196)
!4201 = !DILocalVariable(name: "clmd", scope: !4196, file: !3, line: 547, type: !132)
!4202 = !DILocation(line: 547, column: 21, scope: !4196)
!4203 = !DILocation(line: 547, column: 27, scope: !4196)
!4204 = !DILocation(line: 548, column: 21, scope: !4196)
!4205 = !DILocation(line: 548, column: 27, scope: !4196)
!4206 = !DILocation(line: 548, column: 43, scope: !4196)
!4207 = !DILocation(line: 548, column: 2, scope: !4196)
!4208 = !DILocation(line: 549, column: 1, scope: !4196)
!4209 = distinct !DISubprogram(name: "ptcache_cloth_write", scope: !3, file: !3, line: 474, type: !1072, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4210 = !DILocalVariable(name: "index", arg: 1, scope: !4209, file: !3, line: 474, type: !144)
!4211 = !DILocation(line: 474, column: 37, scope: !4209)
!4212 = !DILocalVariable(name: "cloth_v", arg: 2, scope: !4209, file: !3, line: 474, type: !131)
!4213 = !DILocation(line: 474, column: 50, scope: !4209)
!4214 = !DILocalVariable(name: "data", arg: 3, scope: !4209, file: !3, line: 474, type: !1074)
!4215 = !DILocation(line: 474, column: 66, scope: !4209)
!4216 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !4209, file: !3, line: 474, type: !144)
!4217 = !DILocation(line: 474, column: 76, scope: !4209)
!4218 = !DILocalVariable(name: "clmd", scope: !4209, file: !3, line: 476, type: !132)
!4219 = !DILocation(line: 476, column: 21, scope: !4209)
!4220 = !DILocation(line: 476, column: 27, scope: !4209)
!4221 = !DILocalVariable(name: "cloth", scope: !4209, file: !3, line: 477, type: !4222)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_typedef, name: "Cloth", file: !2362, line: 85, baseType: !2361)
!4224 = !DILocation(line: 477, column: 9, scope: !4209)
!4225 = !DILocation(line: 477, column: 16, scope: !4209)
!4226 = !DILocation(line: 477, column: 22, scope: !4209)
!4227 = !DILocalVariable(name: "vert", scope: !4209, file: !3, line: 478, type: !4228)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothVertex", file: !2362, line: 111, baseType: !2366)
!4230 = !DILocation(line: 478, column: 15, scope: !4209)
!4231 = !DILocation(line: 478, column: 22, scope: !4209)
!4232 = !DILocation(line: 478, column: 29, scope: !4209)
!4233 = !DILocation(line: 478, column: 37, scope: !4209)
!4234 = !DILocation(line: 478, column: 35, scope: !4209)
!4235 = !DILocation(line: 480, column: 2, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 480, column: 2)
!4237 = !DILocation(line: 480, column: 2, scope: !4209)
!4238 = !DILocation(line: 480, column: 2, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 480, column: 2)
!4240 = !DILocation(line: 481, column: 2, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 481, column: 2)
!4242 = !DILocation(line: 481, column: 2, scope: !4209)
!4243 = !DILocation(line: 481, column: 2, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 481, column: 2)
!4245 = !DILocation(line: 482, column: 2, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 482, column: 2)
!4247 = !DILocation(line: 482, column: 2, scope: !4209)
!4248 = !DILocation(line: 482, column: 2, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 482, column: 2)
!4250 = !DILocation(line: 484, column: 2, scope: !4209)
!4251 = distinct !DISubprogram(name: "ptcache_cloth_read", scope: !3, file: !3, line: 486, type: !1077, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4252 = !DILocalVariable(name: "index", arg: 1, scope: !4251, file: !3, line: 486, type: !144)
!4253 = !DILocation(line: 486, column: 36, scope: !4251)
!4254 = !DILocalVariable(name: "cloth_v", arg: 2, scope: !4251, file: !3, line: 486, type: !131)
!4255 = !DILocation(line: 486, column: 49, scope: !4251)
!4256 = !DILocalVariable(name: "data", arg: 3, scope: !4251, file: !3, line: 486, type: !1074)
!4257 = !DILocation(line: 486, column: 65, scope: !4251)
!4258 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !4251, file: !3, line: 486, type: !256)
!4259 = !DILocation(line: 486, column: 77, scope: !4251)
!4260 = !DILocalVariable(name: "old_data", arg: 5, scope: !4251, file: !3, line: 486, type: !745)
!4261 = !DILocation(line: 486, column: 98, scope: !4251)
!4262 = !DILocalVariable(name: "clmd", scope: !4251, file: !3, line: 488, type: !132)
!4263 = !DILocation(line: 488, column: 21, scope: !4251)
!4264 = !DILocation(line: 488, column: 27, scope: !4251)
!4265 = !DILocalVariable(name: "cloth", scope: !4251, file: !3, line: 489, type: !4222)
!4266 = !DILocation(line: 489, column: 9, scope: !4251)
!4267 = !DILocation(line: 489, column: 16, scope: !4251)
!4268 = !DILocation(line: 489, column: 22, scope: !4251)
!4269 = !DILocalVariable(name: "vert", scope: !4251, file: !3, line: 490, type: !4228)
!4270 = !DILocation(line: 490, column: 15, scope: !4251)
!4271 = !DILocation(line: 490, column: 22, scope: !4251)
!4272 = !DILocation(line: 490, column: 29, scope: !4251)
!4273 = !DILocation(line: 490, column: 37, scope: !4251)
!4274 = !DILocation(line: 490, column: 35, scope: !4251)
!4275 = !DILocation(line: 492, column: 6, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 492, column: 6)
!4277 = !DILocation(line: 492, column: 6, scope: !4251)
!4278 = !DILocation(line: 493, column: 10, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 492, column: 16)
!4280 = !DILocation(line: 493, column: 16, scope: !4279)
!4281 = !DILocation(line: 493, column: 3, scope: !4279)
!4282 = !DILocation(line: 493, column: 19, scope: !4279)
!4283 = !DILocation(line: 494, column: 10, scope: !4279)
!4284 = !DILocation(line: 494, column: 16, scope: !4279)
!4285 = !DILocation(line: 494, column: 3, scope: !4279)
!4286 = !DILocation(line: 494, column: 24, scope: !4279)
!4287 = !DILocation(line: 494, column: 29, scope: !4279)
!4288 = !DILocation(line: 495, column: 10, scope: !4279)
!4289 = !DILocation(line: 495, column: 16, scope: !4279)
!4290 = !DILocation(line: 495, column: 3, scope: !4279)
!4291 = !DILocation(line: 495, column: 19, scope: !4279)
!4292 = !DILocation(line: 495, column: 24, scope: !4279)
!4293 = !DILocation(line: 496, column: 2, scope: !4279)
!4294 = !DILocation(line: 498, column: 3, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 498, column: 3)
!4296 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 497, column: 7)
!4297 = !DILocation(line: 498, column: 3, scope: !4296)
!4298 = !DILocation(line: 498, column: 3, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 498, column: 3)
!4300 = !DILocation(line: 499, column: 3, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 499, column: 3)
!4302 = !DILocation(line: 499, column: 3, scope: !4296)
!4303 = !DILocation(line: 499, column: 3, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 499, column: 3)
!4305 = !DILocation(line: 500, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 500, column: 3)
!4307 = !DILocation(line: 500, column: 3, scope: !4296)
!4308 = !DILocation(line: 500, column: 3, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 500, column: 3)
!4310 = !DILocation(line: 502, column: 1, scope: !4251)
!4311 = distinct !DISubprogram(name: "ptcache_cloth_interpolate", scope: !3, file: !3, line: 503, type: !1081, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4312 = !DILocalVariable(name: "index", arg: 1, scope: !4311, file: !3, line: 503, type: !144)
!4313 = !DILocation(line: 503, column: 43, scope: !4311)
!4314 = !DILocalVariable(name: "cloth_v", arg: 2, scope: !4311, file: !3, line: 503, type: !131)
!4315 = !DILocation(line: 503, column: 56, scope: !4311)
!4316 = !DILocalVariable(name: "data", arg: 3, scope: !4311, file: !3, line: 503, type: !1074)
!4317 = !DILocation(line: 503, column: 72, scope: !4311)
!4318 = !DILocalVariable(name: "cfra", arg: 4, scope: !4311, file: !3, line: 503, type: !256)
!4319 = !DILocation(line: 503, column: 84, scope: !4311)
!4320 = !DILocalVariable(name: "cfra1", arg: 5, scope: !4311, file: !3, line: 503, type: !256)
!4321 = !DILocation(line: 503, column: 96, scope: !4311)
!4322 = !DILocalVariable(name: "cfra2", arg: 6, scope: !4311, file: !3, line: 503, type: !256)
!4323 = !DILocation(line: 503, column: 109, scope: !4311)
!4324 = !DILocalVariable(name: "old_data", arg: 7, scope: !4311, file: !3, line: 503, type: !745)
!4325 = !DILocation(line: 503, column: 123, scope: !4311)
!4326 = !DILocalVariable(name: "clmd", scope: !4311, file: !3, line: 505, type: !132)
!4327 = !DILocation(line: 505, column: 21, scope: !4311)
!4328 = !DILocation(line: 505, column: 27, scope: !4311)
!4329 = !DILocalVariable(name: "cloth", scope: !4311, file: !3, line: 506, type: !4222)
!4330 = !DILocation(line: 506, column: 9, scope: !4311)
!4331 = !DILocation(line: 506, column: 16, scope: !4311)
!4332 = !DILocation(line: 506, column: 22, scope: !4311)
!4333 = !DILocalVariable(name: "vert", scope: !4311, file: !3, line: 507, type: !4228)
!4334 = !DILocation(line: 507, column: 15, scope: !4311)
!4335 = !DILocation(line: 507, column: 22, scope: !4311)
!4336 = !DILocation(line: 507, column: 29, scope: !4311)
!4337 = !DILocation(line: 507, column: 37, scope: !4311)
!4338 = !DILocation(line: 507, column: 35, scope: !4311)
!4339 = !DILocalVariable(name: "keys", scope: !4311, file: !3, line: 508, type: !3014)
!4340 = !DILocation(line: 508, column: 14, scope: !4311)
!4341 = !DILocalVariable(name: "dfra", scope: !4311, file: !3, line: 509, type: !256)
!4342 = !DILocation(line: 509, column: 8, scope: !4311)
!4343 = !DILocation(line: 511, column: 6, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 511, column: 6)
!4345 = !DILocation(line: 511, column: 15, scope: !4344)
!4346 = !DILocation(line: 511, column: 12, scope: !4344)
!4347 = !DILocation(line: 511, column: 6, scope: !4311)
!4348 = !DILocation(line: 512, column: 3, scope: !4344)
!4349 = !DILocation(line: 514, column: 13, scope: !4311)
!4350 = !DILocation(line: 514, column: 21, scope: !4311)
!4351 = !DILocation(line: 514, column: 25, scope: !4311)
!4352 = !DILocation(line: 514, column: 31, scope: !4311)
!4353 = !DILocation(line: 514, column: 2, scope: !4311)
!4354 = !DILocation(line: 515, column: 13, scope: !4311)
!4355 = !DILocation(line: 515, column: 21, scope: !4311)
!4356 = !DILocation(line: 515, column: 26, scope: !4311)
!4357 = !DILocation(line: 515, column: 32, scope: !4311)
!4358 = !DILocation(line: 515, column: 2, scope: !4311)
!4359 = !DILocation(line: 517, column: 6, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 517, column: 6)
!4361 = !DILocation(line: 517, column: 6, scope: !4311)
!4362 = !DILocation(line: 518, column: 10, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 517, column: 16)
!4364 = !DILocation(line: 518, column: 18, scope: !4363)
!4365 = !DILocation(line: 518, column: 3, scope: !4363)
!4366 = !DILocation(line: 518, column: 22, scope: !4363)
!4367 = !DILocation(line: 519, column: 10, scope: !4363)
!4368 = !DILocation(line: 519, column: 18, scope: !4363)
!4369 = !DILocation(line: 519, column: 3, scope: !4363)
!4370 = !DILocation(line: 519, column: 23, scope: !4363)
!4371 = !DILocation(line: 519, column: 32, scope: !4363)
!4372 = !DILocation(line: 520, column: 2, scope: !4363)
!4373 = !DILocation(line: 522, column: 33, scope: !4360)
!4374 = !DILocation(line: 522, column: 37, scope: !4360)
!4375 = !DILocation(line: 522, column: 44, scope: !4360)
!4376 = !DILocation(line: 522, column: 50, scope: !4360)
!4377 = !DILocation(line: 522, column: 3, scope: !4360)
!4378 = !DILocation(line: 524, column: 9, scope: !4311)
!4379 = !DILocation(line: 524, column: 17, scope: !4311)
!4380 = !DILocation(line: 524, column: 15, scope: !4311)
!4381 = !DILocation(line: 524, column: 7, scope: !4311)
!4382 = !DILocation(line: 526, column: 12, scope: !4311)
!4383 = !DILocation(line: 526, column: 20, scope: !4311)
!4384 = !DILocation(line: 526, column: 25, scope: !4311)
!4385 = !DILocation(line: 526, column: 2, scope: !4311)
!4386 = !DILocation(line: 527, column: 12, scope: !4311)
!4387 = !DILocation(line: 527, column: 20, scope: !4311)
!4388 = !DILocation(line: 527, column: 25, scope: !4311)
!4389 = !DILocation(line: 527, column: 2, scope: !4311)
!4390 = !DILocation(line: 529, column: 32, scope: !4311)
!4391 = !DILocation(line: 529, column: 39, scope: !4311)
!4392 = !DILocation(line: 529, column: 46, scope: !4311)
!4393 = !DILocation(line: 529, column: 44, scope: !4311)
!4394 = !DILocation(line: 529, column: 55, scope: !4311)
!4395 = !DILocation(line: 529, column: 53, scope: !4311)
!4396 = !DILocation(line: 529, column: 61, scope: !4311)
!4397 = !DILocation(line: 529, column: 2, scope: !4311)
!4398 = !DILocation(line: 531, column: 18, scope: !4311)
!4399 = !DILocation(line: 531, column: 12, scope: !4311)
!4400 = !DILocation(line: 531, column: 30, scope: !4311)
!4401 = !DILocation(line: 531, column: 28, scope: !4311)
!4402 = !DILocation(line: 531, column: 2, scope: !4311)
!4403 = !DILocation(line: 533, column: 13, scope: !4311)
!4404 = !DILocation(line: 533, column: 19, scope: !4311)
!4405 = !DILocation(line: 533, column: 28, scope: !4311)
!4406 = !DILocation(line: 533, column: 22, scope: !4311)
!4407 = !DILocation(line: 533, column: 2, scope: !4311)
!4408 = !DILocation(line: 534, column: 13, scope: !4311)
!4409 = !DILocation(line: 534, column: 19, scope: !4311)
!4410 = !DILocation(line: 534, column: 28, scope: !4311)
!4411 = !DILocation(line: 534, column: 22, scope: !4311)
!4412 = !DILocation(line: 534, column: 2, scope: !4311)
!4413 = !DILocation(line: 537, column: 1, scope: !4311)
!4414 = distinct !DISubprogram(name: "BKE_ptcache_id_from_smoke", scope: !3, file: !3, line: 1218, type: !4415, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{null, !2797, !228, !2430}
!4417 = !DILocalVariable(name: "pid", arg: 1, scope: !4414, file: !3, line: 1218, type: !2797)
!4418 = !DILocation(line: 1218, column: 43, scope: !4414)
!4419 = !DILocalVariable(name: "ob", arg: 2, scope: !4414, file: !3, line: 1218, type: !228)
!4420 = !DILocation(line: 1218, column: 63, scope: !4414)
!4421 = !DILocalVariable(name: "smd", arg: 3, scope: !4414, file: !3, line: 1218, type: !2430)
!4422 = !DILocation(line: 1218, column: 93, scope: !4414)
!4423 = !DILocalVariable(name: "sds", scope: !4414, file: !3, line: 1220, type: !4424)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmokeDomainSettings", file: !2427, line: 152, baseType: !2426)
!4426 = !DILocation(line: 1220, column: 23, scope: !4414)
!4427 = !DILocation(line: 1220, column: 29, scope: !4414)
!4428 = !DILocation(line: 1220, column: 34, scope: !4414)
!4429 = !DILocation(line: 1222, column: 9, scope: !4414)
!4430 = !DILocation(line: 1222, column: 2, scope: !4414)
!4431 = !DILocation(line: 1224, column: 11, scope: !4414)
!4432 = !DILocation(line: 1224, column: 2, scope: !4414)
!4433 = !DILocation(line: 1224, column: 7, scope: !4414)
!4434 = !DILocation(line: 1224, column: 9, scope: !4414)
!4435 = !DILocation(line: 1225, column: 17, scope: !4414)
!4436 = !DILocation(line: 1225, column: 2, scope: !4414)
!4437 = !DILocation(line: 1225, column: 7, scope: !4414)
!4438 = !DILocation(line: 1225, column: 15, scope: !4414)
!4439 = !DILocation(line: 1227, column: 2, scope: !4414)
!4440 = !DILocation(line: 1227, column: 7, scope: !4414)
!4441 = !DILocation(line: 1227, column: 11, scope: !4414)
!4442 = !DILocation(line: 1228, column: 20, scope: !4414)
!4443 = !DILocation(line: 1228, column: 25, scope: !4414)
!4444 = !DILocation(line: 1228, column: 41, scope: !4414)
!4445 = !DILocation(line: 1228, column: 2, scope: !4414)
!4446 = !DILocation(line: 1228, column: 7, scope: !4414)
!4447 = !DILocation(line: 1228, column: 18, scope: !4414)
!4448 = !DILocation(line: 1230, column: 14, scope: !4414)
!4449 = !DILocation(line: 1230, column: 19, scope: !4414)
!4450 = !DILocation(line: 1230, column: 2, scope: !4414)
!4451 = !DILocation(line: 1230, column: 7, scope: !4414)
!4452 = !DILocation(line: 1230, column: 12, scope: !4414)
!4453 = !DILocation(line: 1231, column: 20, scope: !4414)
!4454 = !DILocation(line: 1231, column: 25, scope: !4414)
!4455 = !DILocation(line: 1231, column: 2, scope: !4414)
!4456 = !DILocation(line: 1231, column: 7, scope: !4414)
!4457 = !DILocation(line: 1231, column: 16, scope: !4414)
!4458 = !DILocation(line: 1232, column: 19, scope: !4414)
!4459 = !DILocation(line: 1232, column: 24, scope: !4414)
!4460 = !DILocation(line: 1232, column: 2, scope: !4414)
!4461 = !DILocation(line: 1232, column: 7, scope: !4414)
!4462 = !DILocation(line: 1232, column: 15, scope: !4414)
!4463 = !DILocation(line: 1234, column: 17, scope: !4414)
!4464 = !DILocation(line: 1234, column: 22, scope: !4414)
!4465 = !DILocation(line: 1234, column: 30, scope: !4414)
!4466 = !DILocation(line: 1234, column: 2, scope: !4414)
!4467 = !DILocation(line: 1234, column: 7, scope: !4414)
!4468 = !DILocation(line: 1234, column: 15, scope: !4414)
!4469 = !DILocation(line: 1235, column: 2, scope: !4414)
!4470 = !DILocation(line: 1235, column: 7, scope: !4414)
!4471 = !DILocation(line: 1235, column: 17, scope: !4414)
!4472 = !DILocation(line: 1237, column: 2, scope: !4414)
!4473 = !DILocation(line: 1237, column: 7, scope: !4414)
!4474 = !DILocation(line: 1237, column: 21, scope: !4414)
!4475 = !DILocation(line: 1238, column: 2, scope: !4414)
!4476 = !DILocation(line: 1238, column: 7, scope: !4414)
!4477 = !DILocation(line: 1238, column: 21, scope: !4414)
!4478 = !DILocation(line: 1239, column: 2, scope: !4414)
!4479 = !DILocation(line: 1239, column: 7, scope: !4414)
!4480 = !DILocation(line: 1239, column: 26, scope: !4414)
!4481 = !DILocation(line: 1241, column: 2, scope: !4414)
!4482 = !DILocation(line: 1241, column: 7, scope: !4414)
!4483 = !DILocation(line: 1241, column: 21, scope: !4414)
!4484 = !DILocation(line: 1242, column: 2, scope: !4414)
!4485 = !DILocation(line: 1242, column: 7, scope: !4414)
!4486 = !DILocation(line: 1242, column: 22, scope: !4414)
!4487 = !DILocation(line: 1244, column: 2, scope: !4414)
!4488 = !DILocation(line: 1244, column: 7, scope: !4414)
!4489 = !DILocation(line: 1244, column: 25, scope: !4414)
!4490 = !DILocation(line: 1245, column: 2, scope: !4414)
!4491 = !DILocation(line: 1245, column: 7, scope: !4414)
!4492 = !DILocation(line: 1245, column: 24, scope: !4414)
!4493 = !DILocation(line: 1246, column: 2, scope: !4414)
!4494 = !DILocation(line: 1246, column: 7, scope: !4414)
!4495 = !DILocation(line: 1246, column: 30, scope: !4414)
!4496 = !DILocation(line: 1248, column: 2, scope: !4414)
!4497 = !DILocation(line: 1248, column: 7, scope: !4414)
!4498 = !DILocation(line: 1248, column: 22, scope: !4414)
!4499 = !DILocation(line: 1249, column: 2, scope: !4414)
!4500 = !DILocation(line: 1249, column: 7, scope: !4414)
!4501 = !DILocation(line: 1249, column: 21, scope: !4414)
!4502 = !DILocation(line: 1251, column: 2, scope: !4414)
!4503 = !DILocation(line: 1251, column: 7, scope: !4414)
!4504 = !DILocation(line: 1251, column: 17, scope: !4414)
!4505 = !DILocation(line: 1252, column: 2, scope: !4414)
!4506 = !DILocation(line: 1252, column: 7, scope: !4414)
!4507 = !DILocation(line: 1252, column: 17, scope: !4414)
!4508 = !DILocation(line: 1254, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1254, column: 6)
!4510 = !DILocation(line: 1254, column: 11, scope: !4509)
!4511 = !DILocation(line: 1254, column: 6, scope: !4414)
!4512 = !DILocation(line: 1255, column: 3, scope: !4509)
!4513 = !DILocation(line: 1255, column: 8, scope: !4509)
!4514 = !DILocation(line: 1255, column: 19, scope: !4509)
!4515 = !DILocation(line: 1256, column: 6, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 1256, column: 6)
!4517 = !DILocation(line: 1256, column: 11, scope: !4516)
!4518 = !DILocation(line: 1256, column: 6, scope: !4414)
!4519 = !DILocation(line: 1257, column: 3, scope: !4516)
!4520 = !DILocation(line: 1257, column: 8, scope: !4516)
!4521 = !DILocation(line: 1257, column: 19, scope: !4516)
!4522 = !DILocation(line: 1259, column: 2, scope: !4414)
!4523 = !DILocation(line: 1259, column: 7, scope: !4414)
!4524 = !DILocation(line: 1259, column: 20, scope: !4414)
!4525 = !DILocation(line: 1260, column: 2, scope: !4414)
!4526 = !DILocation(line: 1260, column: 7, scope: !4414)
!4527 = !DILocation(line: 1260, column: 16, scope: !4414)
!4528 = !DILocation(line: 1261, column: 1, scope: !4414)
!4529 = distinct !DISubprogram(name: "ptcache_smoke_totpoint", scope: !3, file: !3, line: 890, type: !1193, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4530 = !DILocalVariable(name: "UNUSED_smoke_v", arg: 1, scope: !4529, file: !3, line: 890, type: !131)
!4531 = !DILocation(line: 890, column: 42, scope: !4529)
!4532 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !4529, file: !3, line: 890, type: !144)
!4533 = !DILocation(line: 890, column: 63, scope: !4529)
!4534 = !DILocation(line: 890, column: 79, scope: !4529)
!4535 = distinct !DISubprogram(name: "ptcache_smoke_error", scope: !3, file: !3, line: 891, type: !1197, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4536 = !DILocalVariable(name: "UNUSED_smoke_v", arg: 1, scope: !4535, file: !3, line: 891, type: !131)
!4537 = !DILocation(line: 891, column: 39, scope: !4535)
!4538 = !DILocalVariable(name: "UNUSED_message", arg: 2, scope: !4535, file: !3, line: 891, type: !1199)
!4539 = !DILocation(line: 891, column: 68, scope: !4535)
!4540 = !DILocation(line: 891, column: 87, scope: !4535)
!4541 = distinct !DISubprogram(name: "ptcache_smoke_read", scope: !3, file: !3, line: 892, type: !1085, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4542 = !DILocalVariable(name: "UNUSED_pf", arg: 1, scope: !4541, file: !3, line: 892, type: !1087)
!4543 = !DILocation(line: 892, column: 45, scope: !4541)
!4544 = !DILocalVariable(name: "UNUSED_smoke_v", arg: 2, scope: !4541, file: !3, line: 892, type: !131)
!4545 = !DILocation(line: 892, column: 63, scope: !4541)
!4546 = !DILocation(line: 892, column: 82, scope: !4541)
!4547 = distinct !DISubprogram(name: "ptcache_smoke_write", scope: !3, file: !3, line: 893, type: !1085, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4548 = !DILocalVariable(name: "UNUSED_pf", arg: 1, scope: !4547, file: !3, line: 893, type: !1087)
!4549 = !DILocation(line: 893, column: 46, scope: !4547)
!4550 = !DILocalVariable(name: "UNUSED_smoke_v", arg: 2, scope: !4547, file: !3, line: 893, type: !131)
!4551 = !DILocation(line: 893, column: 64, scope: !4547)
!4552 = !DILocation(line: 893, column: 83, scope: !4547)
!4553 = distinct !DISubprogram(name: "BKE_ptcache_id_from_dynamicpaint", scope: !3, file: !3, line: 1263, type: !4554, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{null, !2797, !2799, !2587}
!4556 = !DILocalVariable(name: "pid", arg: 1, scope: !4553, file: !3, line: 1263, type: !2797)
!4557 = !DILocation(line: 1263, column: 50, scope: !4553)
!4558 = !DILocalVariable(name: "ob", arg: 2, scope: !4553, file: !3, line: 1263, type: !2799)
!4559 = !DILocation(line: 1263, column: 63, scope: !4553)
!4560 = !DILocalVariable(name: "surface", arg: 3, scope: !4553, file: !3, line: 1263, type: !2587)
!4561 = !DILocation(line: 1263, column: 88, scope: !4553)
!4562 = !DILocation(line: 1266, column: 9, scope: !4553)
!4563 = !DILocation(line: 1266, column: 2, scope: !4553)
!4564 = !DILocation(line: 1268, column: 11, scope: !4553)
!4565 = !DILocation(line: 1268, column: 2, scope: !4553)
!4566 = !DILocation(line: 1268, column: 7, scope: !4553)
!4567 = !DILocation(line: 1268, column: 9, scope: !4553)
!4568 = !DILocation(line: 1269, column: 17, scope: !4553)
!4569 = !DILocation(line: 1269, column: 2, scope: !4553)
!4570 = !DILocation(line: 1269, column: 7, scope: !4553)
!4571 = !DILocation(line: 1269, column: 15, scope: !4553)
!4572 = !DILocation(line: 1270, column: 2, scope: !4553)
!4573 = !DILocation(line: 1270, column: 7, scope: !4553)
!4574 = !DILocation(line: 1270, column: 11, scope: !4553)
!4575 = !DILocation(line: 1271, column: 14, scope: !4553)
!4576 = !DILocation(line: 1271, column: 23, scope: !4553)
!4577 = !DILocation(line: 1271, column: 2, scope: !4553)
!4578 = !DILocation(line: 1271, column: 7, scope: !4553)
!4579 = !DILocation(line: 1271, column: 12, scope: !4553)
!4580 = !DILocation(line: 1272, column: 19, scope: !4553)
!4581 = !DILocation(line: 1272, column: 28, scope: !4553)
!4582 = !DILocation(line: 1272, column: 2, scope: !4553)
!4583 = !DILocation(line: 1272, column: 7, scope: !4553)
!4584 = !DILocation(line: 1272, column: 16, scope: !4553)
!4585 = !DILocation(line: 1273, column: 18, scope: !4553)
!4586 = !DILocation(line: 1273, column: 27, scope: !4553)
!4587 = !DILocation(line: 1273, column: 2, scope: !4553)
!4588 = !DILocation(line: 1273, column: 7, scope: !4553)
!4589 = !DILocation(line: 1273, column: 15, scope: !4553)
!4590 = !DILocation(line: 1274, column: 17, scope: !4553)
!4591 = !DILocation(line: 1274, column: 22, scope: !4553)
!4592 = !DILocation(line: 1274, column: 30, scope: !4553)
!4593 = !DILocation(line: 1274, column: 2, scope: !4553)
!4594 = !DILocation(line: 1274, column: 7, scope: !4553)
!4595 = !DILocation(line: 1274, column: 15, scope: !4553)
!4596 = !DILocation(line: 1275, column: 2, scope: !4553)
!4597 = !DILocation(line: 1275, column: 7, scope: !4553)
!4598 = !DILocation(line: 1275, column: 17, scope: !4553)
!4599 = !DILocation(line: 1277, column: 2, scope: !4553)
!4600 = !DILocation(line: 1277, column: 7, scope: !4553)
!4601 = !DILocation(line: 1277, column: 21, scope: !4553)
!4602 = !DILocation(line: 1278, column: 2, scope: !4553)
!4603 = !DILocation(line: 1278, column: 7, scope: !4553)
!4604 = !DILocation(line: 1278, column: 21, scope: !4553)
!4605 = !DILocation(line: 1279, column: 2, scope: !4553)
!4606 = !DILocation(line: 1279, column: 7, scope: !4553)
!4607 = !DILocation(line: 1279, column: 26, scope: !4553)
!4608 = !DILocation(line: 1281, column: 2, scope: !4553)
!4609 = !DILocation(line: 1281, column: 7, scope: !4553)
!4610 = !DILocation(line: 1281, column: 22, scope: !4553)
!4611 = !DILocation(line: 1282, column: 2, scope: !4553)
!4612 = !DILocation(line: 1282, column: 7, scope: !4553)
!4613 = !DILocation(line: 1282, column: 21, scope: !4553)
!4614 = !DILocation(line: 1284, column: 2, scope: !4553)
!4615 = !DILocation(line: 1284, column: 7, scope: !4553)
!4616 = !DILocation(line: 1284, column: 25, scope: !4553)
!4617 = !DILocation(line: 1285, column: 2, scope: !4553)
!4618 = !DILocation(line: 1285, column: 7, scope: !4553)
!4619 = !DILocation(line: 1285, column: 24, scope: !4553)
!4620 = !DILocation(line: 1286, column: 2, scope: !4553)
!4621 = !DILocation(line: 1286, column: 7, scope: !4553)
!4622 = !DILocation(line: 1286, column: 30, scope: !4553)
!4623 = !DILocation(line: 1288, column: 2, scope: !4553)
!4624 = !DILocation(line: 1288, column: 7, scope: !4553)
!4625 = !DILocation(line: 1288, column: 22, scope: !4553)
!4626 = !DILocation(line: 1289, column: 2, scope: !4553)
!4627 = !DILocation(line: 1289, column: 7, scope: !4553)
!4628 = !DILocation(line: 1289, column: 21, scope: !4553)
!4629 = !DILocation(line: 1291, column: 2, scope: !4553)
!4630 = !DILocation(line: 1291, column: 7, scope: !4553)
!4631 = !DILocation(line: 1291, column: 17, scope: !4553)
!4632 = !DILocation(line: 1292, column: 2, scope: !4553)
!4633 = !DILocation(line: 1292, column: 7, scope: !4553)
!4634 = !DILocation(line: 1292, column: 17, scope: !4553)
!4635 = !DILocation(line: 1294, column: 21, scope: !4553)
!4636 = !DILocation(line: 1294, column: 26, scope: !4553)
!4637 = !DILocation(line: 1294, column: 33, scope: !4553)
!4638 = !DILocation(line: 1294, column: 2, scope: !4553)
!4639 = !DILocation(line: 1294, column: 7, scope: !4553)
!4640 = !DILocation(line: 1294, column: 19, scope: !4553)
!4641 = !DILocation(line: 1296, column: 2, scope: !4553)
!4642 = !DILocation(line: 1296, column: 7, scope: !4553)
!4643 = !DILocation(line: 1296, column: 20, scope: !4553)
!4644 = !DILocation(line: 1297, column: 2, scope: !4553)
!4645 = !DILocation(line: 1297, column: 7, scope: !4553)
!4646 = !DILocation(line: 1297, column: 16, scope: !4553)
!4647 = !DILocation(line: 1298, column: 1, scope: !4553)
!4648 = distinct !DISubprogram(name: "ptcache_dynamicpaint_totpoint", scope: !3, file: !3, line: 896, type: !1193, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4649 = !DILocalVariable(name: "sd", arg: 1, scope: !4648, file: !3, line: 896, type: !131)
!4650 = !DILocation(line: 896, column: 48, scope: !4648)
!4651 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !4648, file: !3, line: 896, type: !144)
!4652 = !DILocation(line: 896, column: 56, scope: !4648)
!4653 = !DILocalVariable(name: "surface", scope: !4648, file: !3, line: 898, type: !2587)
!4654 = !DILocation(line: 898, column: 23, scope: !4648)
!4655 = !DILocation(line: 898, column: 55, scope: !4648)
!4656 = !DILocation(line: 898, column: 33, scope: !4648)
!4657 = !DILocation(line: 900, column: 7, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 900, column: 6)
!4659 = !DILocation(line: 900, column: 16, scope: !4658)
!4660 = !DILocation(line: 900, column: 6, scope: !4648)
!4661 = !DILocation(line: 900, column: 22, scope: !4658)
!4662 = !DILocation(line: 901, column: 14, scope: !4658)
!4663 = !DILocation(line: 901, column: 23, scope: !4658)
!4664 = !DILocation(line: 901, column: 29, scope: !4658)
!4665 = !DILocation(line: 901, column: 7, scope: !4658)
!4666 = !DILocation(line: 902, column: 1, scope: !4648)
!4667 = distinct !DISubprogram(name: "ptcache_dynamicpaint_error", scope: !3, file: !3, line: 904, type: !1197, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4668 = !DILocalVariable(name: "UNUSED_sd", arg: 1, scope: !4667, file: !3, line: 904, type: !131)
!4669 = !DILocation(line: 904, column: 46, scope: !4667)
!4670 = !DILocalVariable(name: "UNUSED_message", arg: 2, scope: !4667, file: !3, line: 904, type: !1199)
!4671 = !DILocation(line: 904, column: 70, scope: !4667)
!4672 = !DILocation(line: 907, column: 1, scope: !4667)
!4673 = distinct !DISubprogram(name: "ptcache_dynamicpaint_write", scope: !3, file: !3, line: 911, type: !1085, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4674 = !DILocalVariable(name: "pf", arg: 1, scope: !4673, file: !3, line: 911, type: !1087)
!4675 = !DILocation(line: 911, column: 53, scope: !4673)
!4676 = !DILocalVariable(name: "dp_v", arg: 2, scope: !4673, file: !3, line: 911, type: !131)
!4677 = !DILocation(line: 911, column: 63, scope: !4673)
!4678 = !DILocalVariable(name: "surface", scope: !4673, file: !3, line: 913, type: !2587)
!4679 = !DILocation(line: 913, column: 23, scope: !4673)
!4680 = !DILocation(line: 913, column: 55, scope: !4673)
!4681 = !DILocation(line: 913, column: 33, scope: !4673)
!4682 = !DILocalVariable(name: "cache_compress", scope: !4673, file: !3, line: 914, type: !144)
!4683 = !DILocation(line: 914, column: 6, scope: !4673)
!4684 = !DILocation(line: 917, column: 21, scope: !4673)
!4685 = !DILocation(line: 917, column: 2, scope: !4673)
!4686 = !DILocation(line: 919, column: 6, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 919, column: 6)
!4688 = !DILocation(line: 919, column: 15, scope: !4687)
!4689 = !DILocation(line: 919, column: 22, scope: !4687)
!4690 = !DILocation(line: 919, column: 55, scope: !4687)
!4691 = !DILocation(line: 919, column: 58, scope: !4687)
!4692 = !DILocation(line: 919, column: 67, scope: !4687)
!4693 = !DILocation(line: 919, column: 6, scope: !4673)
!4694 = !DILocalVariable(name: "total_points", scope: !4695, file: !3, line: 920, type: !144)
!4695 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 919, column: 73)
!4696 = !DILocation(line: 920, column: 7, scope: !4695)
!4697 = !DILocation(line: 920, column: 20, scope: !4695)
!4698 = !DILocation(line: 920, column: 29, scope: !4695)
!4699 = !DILocation(line: 920, column: 35, scope: !4695)
!4700 = !DILocalVariable(name: "in_len", scope: !4695, file: !3, line: 921, type: !7)
!4701 = !DILocation(line: 921, column: 16, scope: !4695)
!4702 = !DILocalVariable(name: "out", scope: !4695, file: !3, line: 922, type: !2657)
!4703 = !DILocation(line: 922, column: 18, scope: !4695)
!4704 = !DILocation(line: 925, column: 22, scope: !4695)
!4705 = !DILocation(line: 925, column: 27, scope: !4695)
!4706 = !DILocation(line: 925, column: 36, scope: !4695)
!4707 = !DILocation(line: 925, column: 26, scope: !4695)
!4708 = !DILocation(line: 925, column: 3, scope: !4695)
!4709 = !DILocation(line: 927, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 927, column: 7)
!4711 = !DILocation(line: 927, column: 16, scope: !4710)
!4712 = !DILocation(line: 927, column: 21, scope: !4710)
!4713 = !DILocation(line: 927, column: 7, scope: !4695)
!4714 = !DILocation(line: 928, column: 34, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 927, column: 52)
!4716 = !DILocation(line: 928, column: 32, scope: !4715)
!4717 = !DILocation(line: 928, column: 13, scope: !4715)
!4718 = !DILocation(line: 928, column: 11, scope: !4715)
!4719 = !DILocation(line: 929, column: 3, scope: !4715)
!4720 = !DILocation(line: 930, column: 12, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 930, column: 12)
!4722 = !DILocation(line: 930, column: 21, scope: !4721)
!4723 = !DILocation(line: 930, column: 26, scope: !4721)
!4724 = !DILocation(line: 930, column: 59, scope: !4721)
!4725 = !DILocation(line: 931, column: 12, scope: !4721)
!4726 = !DILocation(line: 931, column: 21, scope: !4721)
!4727 = !DILocation(line: 931, column: 26, scope: !4721)
!4728 = !DILocation(line: 930, column: 12, scope: !4710)
!4729 = !DILocation(line: 933, column: 29, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 932, column: 3)
!4731 = !DILocation(line: 933, column: 27, scope: !4730)
!4732 = !DILocation(line: 933, column: 13, scope: !4730)
!4733 = !DILocation(line: 933, column: 11, scope: !4730)
!4734 = !DILocation(line: 934, column: 3, scope: !4730)
!4735 = !DILocation(line: 935, column: 12, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 935, column: 12)
!4737 = !DILocation(line: 935, column: 21, scope: !4736)
!4738 = !DILocation(line: 935, column: 26, scope: !4736)
!4739 = !DILocation(line: 935, column: 12, scope: !4721)
!4740 = !DILocation(line: 936, column: 38, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 935, column: 56)
!4742 = !DILocation(line: 936, column: 36, scope: !4741)
!4743 = !DILocation(line: 936, column: 13, scope: !4741)
!4744 = !DILocation(line: 936, column: 11, scope: !4741)
!4745 = !DILocation(line: 937, column: 3, scope: !4741)
!4746 = !DILocation(line: 939, column: 4, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 938, column: 8)
!4748 = !DILocation(line: 942, column: 26, scope: !4695)
!4749 = !DILocation(line: 942, column: 38, scope: !4695)
!4750 = !DILocation(line: 942, column: 7, scope: !4695)
!4751 = !DILocation(line: 944, column: 33, scope: !4695)
!4752 = !DILocation(line: 944, column: 54, scope: !4695)
!4753 = !DILocation(line: 944, column: 63, scope: !4695)
!4754 = !DILocation(line: 944, column: 69, scope: !4695)
!4755 = !DILocation(line: 944, column: 80, scope: !4695)
!4756 = !DILocation(line: 944, column: 88, scope: !4695)
!4757 = !DILocation(line: 944, column: 93, scope: !4695)
!4758 = !DILocation(line: 944, column: 3, scope: !4695)
!4759 = !DILocation(line: 945, column: 3, scope: !4695)
!4760 = !DILocation(line: 945, column: 13, scope: !4695)
!4761 = !DILocation(line: 947, column: 2, scope: !4695)
!4762 = !DILocation(line: 948, column: 2, scope: !4673)
!4763 = !DILocation(line: 949, column: 1, scope: !4673)
!4764 = distinct !DISubprogram(name: "ptcache_dynamicpaint_read", scope: !3, file: !3, line: 950, type: !1085, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4765 = !DILocalVariable(name: "pf", arg: 1, scope: !4764, file: !3, line: 950, type: !1087)
!4766 = !DILocation(line: 950, column: 51, scope: !4764)
!4767 = !DILocalVariable(name: "dp_v", arg: 2, scope: !4764, file: !3, line: 950, type: !131)
!4768 = !DILocation(line: 950, column: 61, scope: !4764)
!4769 = !DILocalVariable(name: "surface", scope: !4764, file: !3, line: 952, type: !2587)
!4770 = !DILocation(line: 952, column: 23, scope: !4764)
!4771 = !DILocation(line: 952, column: 55, scope: !4764)
!4772 = !DILocation(line: 952, column: 33, scope: !4764)
!4773 = !DILocalVariable(name: "version", scope: !4764, file: !3, line: 953, type: !4774)
!4774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 32, elements: !365)
!4775 = !DILocation(line: 953, column: 7, scope: !4764)
!4776 = !DILocation(line: 956, column: 20, scope: !4764)
!4777 = !DILocation(line: 956, column: 24, scope: !4764)
!4778 = !DILocation(line: 956, column: 2, scope: !4764)
!4779 = !DILocation(line: 957, column: 14, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 957, column: 6)
!4781 = !DILocation(line: 957, column: 6, scope: !4780)
!4782 = !DILocation(line: 957, column: 6, scope: !4764)
!4783 = !DILocation(line: 958, column: 65, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 957, column: 49)
!4785 = !DILocation(line: 958, column: 3, scope: !4784)
!4786 = !DILocation(line: 959, column: 3, scope: !4784)
!4787 = !DILocation(line: 962, column: 6, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 962, column: 6)
!4789 = !DILocation(line: 962, column: 15, scope: !4788)
!4790 = !DILocation(line: 962, column: 22, scope: !4788)
!4791 = !DILocation(line: 962, column: 55, scope: !4788)
!4792 = !DILocation(line: 962, column: 58, scope: !4788)
!4793 = !DILocation(line: 962, column: 67, scope: !4788)
!4794 = !DILocation(line: 962, column: 6, scope: !4764)
!4795 = !DILocalVariable(name: "data_len", scope: !4796, file: !3, line: 963, type: !7)
!4796 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 962, column: 73)
!4797 = !DILocation(line: 963, column: 16, scope: !4796)
!4798 = !DILocalVariable(name: "surface_type", scope: !4796, file: !3, line: 964, type: !144)
!4799 = !DILocation(line: 964, column: 7, scope: !4796)
!4800 = !DILocation(line: 967, column: 21, scope: !4796)
!4801 = !DILocation(line: 967, column: 25, scope: !4796)
!4802 = !DILocation(line: 967, column: 3, scope: !4796)
!4803 = !DILocation(line: 969, column: 7, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 969, column: 7)
!4805 = !DILocation(line: 969, column: 23, scope: !4804)
!4806 = !DILocation(line: 969, column: 32, scope: !4804)
!4807 = !DILocation(line: 969, column: 20, scope: !4804)
!4808 = !DILocation(line: 969, column: 7, scope: !4796)
!4809 = !DILocation(line: 970, column: 4, scope: !4804)
!4810 = !DILocation(line: 973, column: 7, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 973, column: 7)
!4812 = !DILocation(line: 973, column: 16, scope: !4811)
!4813 = !DILocation(line: 973, column: 21, scope: !4811)
!4814 = !DILocation(line: 973, column: 7, scope: !4796)
!4815 = !DILocation(line: 974, column: 13, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 973, column: 52)
!4817 = !DILocation(line: 975, column: 3, scope: !4816)
!4818 = !DILocation(line: 976, column: 12, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 976, column: 12)
!4820 = !DILocation(line: 976, column: 21, scope: !4819)
!4821 = !DILocation(line: 976, column: 26, scope: !4819)
!4822 = !DILocation(line: 976, column: 59, scope: !4819)
!4823 = !DILocation(line: 977, column: 12, scope: !4819)
!4824 = !DILocation(line: 977, column: 21, scope: !4819)
!4825 = !DILocation(line: 977, column: 26, scope: !4819)
!4826 = !DILocation(line: 976, column: 12, scope: !4811)
!4827 = !DILocation(line: 979, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 978, column: 3)
!4829 = !DILocation(line: 980, column: 3, scope: !4828)
!4830 = !DILocation(line: 981, column: 12, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 981, column: 12)
!4832 = !DILocation(line: 981, column: 21, scope: !4831)
!4833 = !DILocation(line: 981, column: 26, scope: !4831)
!4834 = !DILocation(line: 981, column: 12, scope: !4819)
!4835 = !DILocation(line: 982, column: 13, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 981, column: 56)
!4837 = !DILocation(line: 983, column: 3, scope: !4836)
!4838 = !DILocation(line: 985, column: 4, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 984, column: 8)
!4840 = !DILocation(line: 988, column: 32, scope: !4796)
!4841 = !DILocation(line: 988, column: 53, scope: !4796)
!4842 = !DILocation(line: 988, column: 62, scope: !4796)
!4843 = !DILocation(line: 988, column: 68, scope: !4796)
!4844 = !DILocation(line: 988, column: 79, scope: !4796)
!4845 = !DILocation(line: 988, column: 88, scope: !4796)
!4846 = !DILocation(line: 988, column: 97, scope: !4796)
!4847 = !DILocation(line: 988, column: 103, scope: !4796)
!4848 = !DILocation(line: 988, column: 87, scope: !4796)
!4849 = !DILocation(line: 988, column: 3, scope: !4796)
!4850 = !DILocation(line: 990, column: 2, scope: !4796)
!4851 = !DILocation(line: 991, column: 2, scope: !4764)
!4852 = !DILocation(line: 992, column: 1, scope: !4764)
!4853 = distinct !DISubprogram(name: "BKE_ptcache_id_from_rigidbody", scope: !3, file: !3, line: 1300, type: !4854, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !2797, !2799, !4856}
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigidBodyWorld", file: !89, line: 74, baseType: !2340)
!4858 = !DILocalVariable(name: "pid", arg: 1, scope: !4853, file: !3, line: 1300, type: !2797)
!4859 = !DILocation(line: 1300, column: 47, scope: !4853)
!4860 = !DILocalVariable(name: "ob", arg: 2, scope: !4853, file: !3, line: 1300, type: !2799)
!4861 = !DILocation(line: 1300, column: 60, scope: !4853)
!4862 = !DILocalVariable(name: "rbw", arg: 3, scope: !4853, file: !3, line: 1300, type: !4856)
!4863 = !DILocation(line: 1300, column: 80, scope: !4853)
!4864 = !DILocation(line: 1303, column: 9, scope: !4853)
!4865 = !DILocation(line: 1303, column: 2, scope: !4853)
!4866 = !DILocation(line: 1305, column: 11, scope: !4853)
!4867 = !DILocation(line: 1305, column: 2, scope: !4853)
!4868 = !DILocation(line: 1305, column: 7, scope: !4853)
!4869 = !DILocation(line: 1305, column: 9, scope: !4853)
!4870 = !DILocation(line: 1306, column: 17, scope: !4853)
!4871 = !DILocation(line: 1306, column: 2, scope: !4853)
!4872 = !DILocation(line: 1306, column: 7, scope: !4853)
!4873 = !DILocation(line: 1306, column: 15, scope: !4853)
!4874 = !DILocation(line: 1307, column: 2, scope: !4853)
!4875 = !DILocation(line: 1307, column: 7, scope: !4853)
!4876 = !DILocation(line: 1307, column: 11, scope: !4853)
!4877 = !DILocation(line: 1308, column: 14, scope: !4853)
!4878 = !DILocation(line: 1308, column: 19, scope: !4853)
!4879 = !DILocation(line: 1308, column: 2, scope: !4853)
!4880 = !DILocation(line: 1308, column: 7, scope: !4853)
!4881 = !DILocation(line: 1308, column: 12, scope: !4853)
!4882 = !DILocation(line: 1309, column: 19, scope: !4853)
!4883 = !DILocation(line: 1309, column: 24, scope: !4853)
!4884 = !DILocation(line: 1309, column: 2, scope: !4853)
!4885 = !DILocation(line: 1309, column: 7, scope: !4853)
!4886 = !DILocation(line: 1309, column: 16, scope: !4853)
!4887 = !DILocation(line: 1310, column: 18, scope: !4853)
!4888 = !DILocation(line: 1310, column: 23, scope: !4853)
!4889 = !DILocation(line: 1310, column: 2, scope: !4853)
!4890 = !DILocation(line: 1310, column: 7, scope: !4853)
!4891 = !DILocation(line: 1310, column: 15, scope: !4853)
!4892 = !DILocation(line: 1311, column: 17, scope: !4853)
!4893 = !DILocation(line: 1311, column: 22, scope: !4853)
!4894 = !DILocation(line: 1311, column: 30, scope: !4853)
!4895 = !DILocation(line: 1311, column: 2, scope: !4853)
!4896 = !DILocation(line: 1311, column: 7, scope: !4853)
!4897 = !DILocation(line: 1311, column: 15, scope: !4853)
!4898 = !DILocation(line: 1312, column: 2, scope: !4853)
!4899 = !DILocation(line: 1312, column: 7, scope: !4853)
!4900 = !DILocation(line: 1312, column: 17, scope: !4853)
!4901 = !DILocation(line: 1314, column: 2, scope: !4853)
!4902 = !DILocation(line: 1314, column: 7, scope: !4853)
!4903 = !DILocation(line: 1314, column: 21, scope: !4853)
!4904 = !DILocation(line: 1315, column: 2, scope: !4853)
!4905 = !DILocation(line: 1315, column: 7, scope: !4853)
!4906 = !DILocation(line: 1315, column: 21, scope: !4853)
!4907 = !DILocation(line: 1316, column: 2, scope: !4853)
!4908 = !DILocation(line: 1316, column: 7, scope: !4853)
!4909 = !DILocation(line: 1316, column: 26, scope: !4853)
!4910 = !DILocation(line: 1318, column: 2, scope: !4853)
!4911 = !DILocation(line: 1318, column: 7, scope: !4853)
!4912 = !DILocation(line: 1318, column: 22, scope: !4853)
!4913 = !DILocation(line: 1319, column: 2, scope: !4853)
!4914 = !DILocation(line: 1319, column: 7, scope: !4853)
!4915 = !DILocation(line: 1319, column: 21, scope: !4853)
!4916 = !DILocation(line: 1321, column: 2, scope: !4853)
!4917 = !DILocation(line: 1321, column: 7, scope: !4853)
!4918 = !DILocation(line: 1321, column: 25, scope: !4853)
!4919 = !DILocation(line: 1322, column: 2, scope: !4853)
!4920 = !DILocation(line: 1322, column: 7, scope: !4853)
!4921 = !DILocation(line: 1322, column: 24, scope: !4853)
!4922 = !DILocation(line: 1323, column: 2, scope: !4853)
!4923 = !DILocation(line: 1323, column: 7, scope: !4853)
!4924 = !DILocation(line: 1323, column: 30, scope: !4853)
!4925 = !DILocation(line: 1325, column: 2, scope: !4853)
!4926 = !DILocation(line: 1325, column: 7, scope: !4853)
!4927 = !DILocation(line: 1325, column: 22, scope: !4853)
!4928 = !DILocation(line: 1326, column: 2, scope: !4853)
!4929 = !DILocation(line: 1326, column: 7, scope: !4853)
!4930 = !DILocation(line: 1326, column: 21, scope: !4853)
!4931 = !DILocation(line: 1328, column: 2, scope: !4853)
!4932 = !DILocation(line: 1328, column: 7, scope: !4853)
!4933 = !DILocation(line: 1328, column: 17, scope: !4853)
!4934 = !DILocation(line: 1329, column: 2, scope: !4853)
!4935 = !DILocation(line: 1329, column: 7, scope: !4853)
!4936 = !DILocation(line: 1329, column: 17, scope: !4853)
!4937 = !DILocation(line: 1331, column: 21, scope: !4853)
!4938 = !DILocation(line: 1331, column: 26, scope: !4853)
!4939 = !DILocation(line: 1331, column: 33, scope: !4853)
!4940 = !DILocation(line: 1331, column: 2, scope: !4853)
!4941 = !DILocation(line: 1331, column: 7, scope: !4853)
!4942 = !DILocation(line: 1331, column: 19, scope: !4853)
!4943 = !DILocation(line: 1333, column: 2, scope: !4853)
!4944 = !DILocation(line: 1333, column: 7, scope: !4853)
!4945 = !DILocation(line: 1333, column: 20, scope: !4853)
!4946 = !DILocation(line: 1334, column: 2, scope: !4853)
!4947 = !DILocation(line: 1334, column: 7, scope: !4853)
!4948 = !DILocation(line: 1334, column: 16, scope: !4853)
!4949 = !DILocation(line: 1335, column: 1, scope: !4853)
!4950 = distinct !DISubprogram(name: "ptcache_rigidbody_totpoint", scope: !3, file: !3, line: 1078, type: !1193, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4951 = !DILocalVariable(name: "rb_v", arg: 1, scope: !4950, file: !3, line: 1078, type: !131)
!4952 = !DILocation(line: 1078, column: 45, scope: !4950)
!4953 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !4950, file: !3, line: 1078, type: !144)
!4954 = !DILocation(line: 1078, column: 55, scope: !4950)
!4955 = !DILocalVariable(name: "rbw", scope: !4950, file: !3, line: 1080, type: !4856)
!4956 = !DILocation(line: 1080, column: 18, scope: !4950)
!4957 = !DILocation(line: 1080, column: 24, scope: !4950)
!4958 = !DILocation(line: 1082, column: 9, scope: !4950)
!4959 = !DILocation(line: 1082, column: 14, scope: !4950)
!4960 = !DILocation(line: 1082, column: 2, scope: !4950)
!4961 = distinct !DISubprogram(name: "ptcache_rigidbody_error", scope: !3, file: !3, line: 1085, type: !1197, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4962 = !DILocalVariable(name: "UNUSED_rb_v", arg: 1, scope: !4961, file: !3, line: 1085, type: !131)
!4963 = !DILocation(line: 1085, column: 43, scope: !4961)
!4964 = !DILocalVariable(name: "UNUSED_message", arg: 2, scope: !4961, file: !3, line: 1085, type: !1199)
!4965 = !DILocation(line: 1085, column: 69, scope: !4961)
!4966 = !DILocation(line: 1088, column: 1, scope: !4961)
!4967 = distinct !DISubprogram(name: "ptcache_rigidbody_write", scope: !3, file: !3, line: 995, type: !1072, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!4968 = !DILocalVariable(name: "index", arg: 1, scope: !4967, file: !3, line: 995, type: !144)
!4969 = !DILocation(line: 995, column: 41, scope: !4967)
!4970 = !DILocalVariable(name: "rb_v", arg: 2, scope: !4967, file: !3, line: 995, type: !131)
!4971 = !DILocation(line: 995, column: 54, scope: !4967)
!4972 = !DILocalVariable(name: "data", arg: 3, scope: !4967, file: !3, line: 995, type: !1074)
!4973 = !DILocation(line: 995, column: 67, scope: !4967)
!4974 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !4967, file: !3, line: 995, type: !144)
!4975 = !DILocation(line: 995, column: 77, scope: !4967)
!4976 = !DILocalVariable(name: "rbw", scope: !4967, file: !3, line: 997, type: !4856)
!4977 = !DILocation(line: 997, column: 18, scope: !4967)
!4978 = !DILocation(line: 997, column: 24, scope: !4967)
!4979 = !DILocalVariable(name: "ob", scope: !4967, file: !3, line: 998, type: !2799)
!4980 = !DILocation(line: 998, column: 10, scope: !4967)
!4981 = !DILocation(line: 1000, column: 6, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1000, column: 6)
!4983 = !DILocation(line: 1000, column: 11, scope: !4982)
!4984 = !DILocation(line: 1000, column: 6, scope: !4967)
!4985 = !DILocation(line: 1001, column: 8, scope: !4982)
!4986 = !DILocation(line: 1001, column: 13, scope: !4982)
!4987 = !DILocation(line: 1001, column: 21, scope: !4982)
!4988 = !DILocation(line: 1001, column: 6, scope: !4982)
!4989 = !DILocation(line: 1001, column: 3, scope: !4982)
!4990 = !DILocation(line: 1003, column: 6, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1003, column: 6)
!4992 = !DILocation(line: 1003, column: 9, scope: !4991)
!4993 = !DILocation(line: 1003, column: 12, scope: !4991)
!4994 = !DILocation(line: 1003, column: 16, scope: !4991)
!4995 = !DILocation(line: 1003, column: 6, scope: !4967)
!4996 = !DILocalVariable(name: "rbo", scope: !4997, file: !3, line: 1004, type: !4998)
!4997 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 1003, column: 34)
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 64)
!4999 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigidBodyOb", file: !89, line: 126, baseType: !1645)
!5000 = !DILocation(line: 1004, column: 16, scope: !4997)
!5001 = !DILocation(line: 1004, column: 22, scope: !4997)
!5002 = !DILocation(line: 1004, column: 26, scope: !4997)
!5003 = !DILocation(line: 1006, column: 7, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 1006, column: 7)
!5005 = !DILocation(line: 1006, column: 12, scope: !5004)
!5006 = !DILocation(line: 1006, column: 17, scope: !5004)
!5007 = !DILocation(line: 1006, column: 7, scope: !4997)
!5008 = !DILocation(line: 1011, column: 4, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1011, column: 4)
!5010 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 1006, column: 37)
!5011 = !DILocation(line: 1011, column: 4, scope: !5010)
!5012 = !DILocation(line: 1011, column: 4, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1011, column: 4)
!5014 = !DILocation(line: 1012, column: 4, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1012, column: 4)
!5016 = !DILocation(line: 1012, column: 4, scope: !5010)
!5017 = !DILocation(line: 1012, column: 4, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 1012, column: 4)
!5019 = !DILocation(line: 1013, column: 3, scope: !5010)
!5020 = !DILocation(line: 1014, column: 2, scope: !4997)
!5021 = !DILocation(line: 1016, column: 2, scope: !4967)
!5022 = distinct !DISubprogram(name: "ptcache_rigidbody_read", scope: !3, file: !3, line: 1018, type: !1077, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5023 = !DILocalVariable(name: "index", arg: 1, scope: !5022, file: !3, line: 1018, type: !144)
!5024 = !DILocation(line: 1018, column: 40, scope: !5022)
!5025 = !DILocalVariable(name: "rb_v", arg: 2, scope: !5022, file: !3, line: 1018, type: !131)
!5026 = !DILocation(line: 1018, column: 53, scope: !5022)
!5027 = !DILocalVariable(name: "data", arg: 3, scope: !5022, file: !3, line: 1018, type: !1074)
!5028 = !DILocation(line: 1018, column: 66, scope: !5022)
!5029 = !DILocalVariable(name: "UNUSED_cfra", arg: 4, scope: !5022, file: !3, line: 1018, type: !256)
!5030 = !DILocation(line: 1018, column: 78, scope: !5022)
!5031 = !DILocalVariable(name: "old_data", arg: 5, scope: !5022, file: !3, line: 1018, type: !745)
!5032 = !DILocation(line: 1018, column: 99, scope: !5022)
!5033 = !DILocalVariable(name: "rbw", scope: !5022, file: !3, line: 1020, type: !4856)
!5034 = !DILocation(line: 1020, column: 18, scope: !5022)
!5035 = !DILocation(line: 1020, column: 24, scope: !5022)
!5036 = !DILocalVariable(name: "ob", scope: !5022, file: !3, line: 1021, type: !2799)
!5037 = !DILocation(line: 1021, column: 10, scope: !5022)
!5038 = !DILocation(line: 1023, column: 6, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1023, column: 6)
!5040 = !DILocation(line: 1023, column: 11, scope: !5039)
!5041 = !DILocation(line: 1023, column: 6, scope: !5022)
!5042 = !DILocation(line: 1024, column: 8, scope: !5039)
!5043 = !DILocation(line: 1024, column: 13, scope: !5039)
!5044 = !DILocation(line: 1024, column: 21, scope: !5039)
!5045 = !DILocation(line: 1024, column: 6, scope: !5039)
!5046 = !DILocation(line: 1024, column: 3, scope: !5039)
!5047 = !DILocation(line: 1026, column: 6, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1026, column: 6)
!5049 = !DILocation(line: 1026, column: 9, scope: !5048)
!5050 = !DILocation(line: 1026, column: 12, scope: !5048)
!5051 = !DILocation(line: 1026, column: 16, scope: !5048)
!5052 = !DILocation(line: 1026, column: 6, scope: !5022)
!5053 = !DILocalVariable(name: "rbo", scope: !5054, file: !3, line: 1027, type: !4998)
!5054 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 1026, column: 34)
!5055 = !DILocation(line: 1027, column: 16, scope: !5054)
!5056 = !DILocation(line: 1027, column: 22, scope: !5054)
!5057 = !DILocation(line: 1027, column: 26, scope: !5054)
!5058 = !DILocation(line: 1029, column: 7, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 1029, column: 7)
!5060 = !DILocation(line: 1029, column: 12, scope: !5059)
!5061 = !DILocation(line: 1029, column: 17, scope: !5059)
!5062 = !DILocation(line: 1029, column: 7, scope: !5054)
!5063 = !DILocation(line: 1031, column: 8, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1031, column: 8)
!5065 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 1029, column: 37)
!5066 = !DILocation(line: 1031, column: 8, scope: !5065)
!5067 = !DILocation(line: 1032, column: 12, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1031, column: 18)
!5069 = !DILocation(line: 1032, column: 17, scope: !5068)
!5070 = !DILocation(line: 1032, column: 5, scope: !5068)
!5071 = !DILocation(line: 1032, column: 22, scope: !5068)
!5072 = !DILocation(line: 1033, column: 12, scope: !5068)
!5073 = !DILocation(line: 1033, column: 17, scope: !5068)
!5074 = !DILocation(line: 1033, column: 5, scope: !5068)
!5075 = !DILocation(line: 1033, column: 22, scope: !5068)
!5076 = !DILocation(line: 1033, column: 27, scope: !5068)
!5077 = !DILocation(line: 1034, column: 4, scope: !5068)
!5078 = !DILocation(line: 1036, column: 5, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1036, column: 5)
!5080 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 1035, column: 9)
!5081 = !DILocation(line: 1036, column: 5, scope: !5080)
!5082 = !DILocation(line: 1036, column: 5, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 1036, column: 5)
!5084 = !DILocation(line: 1037, column: 5, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1037, column: 5)
!5086 = !DILocation(line: 1037, column: 5, scope: !5080)
!5087 = !DILocation(line: 1037, column: 5, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 1037, column: 5)
!5089 = !DILocation(line: 1039, column: 3, scope: !5065)
!5090 = !DILocation(line: 1040, column: 2, scope: !5054)
!5091 = !DILocation(line: 1041, column: 1, scope: !5022)
!5092 = distinct !DISubprogram(name: "ptcache_rigidbody_interpolate", scope: !3, file: !3, line: 1042, type: !1081, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5093 = !DILocalVariable(name: "index", arg: 1, scope: !5092, file: !3, line: 1042, type: !144)
!5094 = !DILocation(line: 1042, column: 47, scope: !5092)
!5095 = !DILocalVariable(name: "rb_v", arg: 2, scope: !5092, file: !3, line: 1042, type: !131)
!5096 = !DILocation(line: 1042, column: 60, scope: !5092)
!5097 = !DILocalVariable(name: "data", arg: 3, scope: !5092, file: !3, line: 1042, type: !1074)
!5098 = !DILocation(line: 1042, column: 73, scope: !5092)
!5099 = !DILocalVariable(name: "cfra", arg: 4, scope: !5092, file: !3, line: 1042, type: !256)
!5100 = !DILocation(line: 1042, column: 85, scope: !5092)
!5101 = !DILocalVariable(name: "cfra1", arg: 5, scope: !5092, file: !3, line: 1042, type: !256)
!5102 = !DILocation(line: 1042, column: 97, scope: !5092)
!5103 = !DILocalVariable(name: "cfra2", arg: 6, scope: !5092, file: !3, line: 1042, type: !256)
!5104 = !DILocation(line: 1042, column: 110, scope: !5092)
!5105 = !DILocalVariable(name: "old_data", arg: 7, scope: !5092, file: !3, line: 1042, type: !745)
!5106 = !DILocation(line: 1042, column: 124, scope: !5092)
!5107 = !DILocalVariable(name: "rbw", scope: !5092, file: !3, line: 1044, type: !4856)
!5108 = !DILocation(line: 1044, column: 18, scope: !5092)
!5109 = !DILocation(line: 1044, column: 24, scope: !5092)
!5110 = !DILocalVariable(name: "ob", scope: !5092, file: !3, line: 1045, type: !2799)
!5111 = !DILocation(line: 1045, column: 10, scope: !5092)
!5112 = !DILocalVariable(name: "keys", scope: !5092, file: !3, line: 1046, type: !3014)
!5113 = !DILocation(line: 1046, column: 14, scope: !5092)
!5114 = !DILocalVariable(name: "dfra", scope: !5092, file: !3, line: 1047, type: !256)
!5115 = !DILocation(line: 1047, column: 8, scope: !5092)
!5116 = !DILocation(line: 1049, column: 6, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 1049, column: 6)
!5118 = !DILocation(line: 1049, column: 11, scope: !5117)
!5119 = !DILocation(line: 1049, column: 6, scope: !5092)
!5120 = !DILocation(line: 1050, column: 8, scope: !5117)
!5121 = !DILocation(line: 1050, column: 13, scope: !5117)
!5122 = !DILocation(line: 1050, column: 21, scope: !5117)
!5123 = !DILocation(line: 1050, column: 6, scope: !5117)
!5124 = !DILocation(line: 1050, column: 3, scope: !5117)
!5125 = !DILocation(line: 1052, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 1052, column: 6)
!5127 = !DILocation(line: 1052, column: 9, scope: !5126)
!5128 = !DILocation(line: 1052, column: 12, scope: !5126)
!5129 = !DILocation(line: 1052, column: 16, scope: !5126)
!5130 = !DILocation(line: 1052, column: 6, scope: !5092)
!5131 = !DILocalVariable(name: "rbo", scope: !5132, file: !3, line: 1053, type: !4998)
!5132 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 1052, column: 34)
!5133 = !DILocation(line: 1053, column: 16, scope: !5132)
!5134 = !DILocation(line: 1053, column: 22, scope: !5132)
!5135 = !DILocation(line: 1053, column: 26, scope: !5132)
!5136 = !DILocation(line: 1055, column: 7, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1055, column: 7)
!5138 = !DILocation(line: 1055, column: 12, scope: !5137)
!5139 = !DILocation(line: 1055, column: 17, scope: !5137)
!5140 = !DILocation(line: 1055, column: 7, scope: !5132)
!5141 = !DILocation(line: 1057, column: 15, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1055, column: 37)
!5143 = !DILocation(line: 1057, column: 23, scope: !5142)
!5144 = !DILocation(line: 1057, column: 27, scope: !5142)
!5145 = !DILocation(line: 1057, column: 32, scope: !5142)
!5146 = !DILocation(line: 1057, column: 4, scope: !5142)
!5147 = !DILocation(line: 1058, column: 15, scope: !5142)
!5148 = !DILocation(line: 1058, column: 23, scope: !5142)
!5149 = !DILocation(line: 1058, column: 28, scope: !5142)
!5150 = !DILocation(line: 1058, column: 33, scope: !5142)
!5151 = !DILocation(line: 1058, column: 4, scope: !5142)
!5152 = !DILocation(line: 1060, column: 8, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1060, column: 8)
!5154 = !DILocation(line: 1060, column: 8, scope: !5142)
!5155 = !DILocation(line: 1061, column: 12, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 1060, column: 18)
!5157 = !DILocation(line: 1061, column: 20, scope: !5156)
!5158 = !DILocation(line: 1061, column: 5, scope: !5156)
!5159 = !DILocation(line: 1061, column: 24, scope: !5156)
!5160 = !DILocation(line: 1062, column: 12, scope: !5156)
!5161 = !DILocation(line: 1062, column: 20, scope: !5156)
!5162 = !DILocation(line: 1062, column: 5, scope: !5156)
!5163 = !DILocation(line: 1062, column: 25, scope: !5156)
!5164 = !DILocation(line: 1062, column: 30, scope: !5156)
!5165 = !DILocation(line: 1063, column: 4, scope: !5156)
!5166 = !DILocation(line: 1065, column: 35, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 1064, column: 9)
!5168 = !DILocation(line: 1065, column: 39, scope: !5167)
!5169 = !DILocation(line: 1065, column: 46, scope: !5167)
!5170 = !DILocation(line: 1065, column: 52, scope: !5167)
!5171 = !DILocation(line: 1065, column: 5, scope: !5167)
!5172 = !DILocation(line: 1068, column: 11, scope: !5142)
!5173 = !DILocation(line: 1068, column: 19, scope: !5142)
!5174 = !DILocation(line: 1068, column: 17, scope: !5142)
!5175 = !DILocation(line: 1068, column: 9, scope: !5142)
!5176 = !DILocation(line: 1070, column: 34, scope: !5142)
!5177 = !DILocation(line: 1070, column: 41, scope: !5142)
!5178 = !DILocation(line: 1070, column: 48, scope: !5142)
!5179 = !DILocation(line: 1070, column: 46, scope: !5142)
!5180 = !DILocation(line: 1070, column: 57, scope: !5142)
!5181 = !DILocation(line: 1070, column: 55, scope: !5142)
!5182 = !DILocation(line: 1070, column: 63, scope: !5142)
!5183 = !DILocation(line: 1070, column: 4, scope: !5142)
!5184 = !DILocation(line: 1071, column: 25, scope: !5142)
!5185 = !DILocation(line: 1071, column: 19, scope: !5142)
!5186 = !DILocation(line: 1071, column: 30, scope: !5142)
!5187 = !DILocation(line: 1071, column: 38, scope: !5142)
!5188 = !DILocation(line: 1071, column: 43, scope: !5142)
!5189 = !DILocation(line: 1071, column: 51, scope: !5142)
!5190 = !DILocation(line: 1071, column: 57, scope: !5142)
!5191 = !DILocation(line: 1071, column: 64, scope: !5142)
!5192 = !DILocation(line: 1071, column: 62, scope: !5142)
!5193 = !DILocation(line: 1071, column: 73, scope: !5142)
!5194 = !DILocation(line: 1071, column: 71, scope: !5142)
!5195 = !DILocation(line: 1071, column: 4, scope: !5142)
!5196 = !DILocation(line: 1073, column: 15, scope: !5142)
!5197 = !DILocation(line: 1073, column: 20, scope: !5142)
!5198 = !DILocation(line: 1073, column: 31, scope: !5142)
!5199 = !DILocation(line: 1073, column: 25, scope: !5142)
!5200 = !DILocation(line: 1073, column: 4, scope: !5142)
!5201 = !DILocation(line: 1074, column: 15, scope: !5142)
!5202 = !DILocation(line: 1074, column: 20, scope: !5142)
!5203 = !DILocation(line: 1074, column: 31, scope: !5142)
!5204 = !DILocation(line: 1074, column: 25, scope: !5142)
!5205 = !DILocation(line: 1074, column: 4, scope: !5142)
!5206 = !DILocation(line: 1075, column: 3, scope: !5142)
!5207 = !DILocation(line: 1076, column: 2, scope: !5132)
!5208 = !DILocation(line: 1077, column: 1, scope: !5092)
!5209 = distinct !DISubprogram(name: "BKE_ptcache_ids_from_object", scope: !3, file: !3, line: 1337, type: !5210, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{null, !1642, !2799, !2734, !144}
!5212 = !DILocalVariable(name: "lb", arg: 1, scope: !5209, file: !3, line: 1337, type: !1642)
!5213 = !DILocation(line: 1337, column: 44, scope: !5209)
!5214 = !DILocalVariable(name: "ob", arg: 2, scope: !5209, file: !3, line: 1337, type: !2799)
!5215 = !DILocation(line: 1337, column: 56, scope: !5209)
!5216 = !DILocalVariable(name: "scene", arg: 3, scope: !5209, file: !3, line: 1337, type: !2734)
!5217 = !DILocation(line: 1337, column: 67, scope: !5209)
!5218 = !DILocalVariable(name: "duplis", arg: 4, scope: !5209, file: !3, line: 1337, type: !144)
!5219 = !DILocation(line: 1337, column: 78, scope: !5209)
!5220 = !DILocalVariable(name: "pid", scope: !5209, file: !3, line: 1339, type: !2797)
!5221 = !DILocation(line: 1339, column: 13, scope: !5209)
!5222 = !DILocalVariable(name: "psys", scope: !5209, file: !3, line: 1340, type: !2655)
!5223 = !DILocation(line: 1340, column: 18, scope: !5209)
!5224 = !DILocalVariable(name: "md", scope: !5209, file: !3, line: 1341, type: !5225)
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!5226 = !DILocation(line: 1341, column: 16, scope: !5209)
!5227 = !DILocation(line: 1343, column: 13, scope: !5209)
!5228 = !DILocation(line: 1343, column: 17, scope: !5209)
!5229 = !DILocation(line: 1343, column: 21, scope: !5209)
!5230 = !DILocation(line: 1343, column: 2, scope: !5209)
!5231 = !DILocation(line: 1343, column: 6, scope: !5209)
!5232 = !DILocation(line: 1343, column: 11, scope: !5209)
!5233 = !DILocation(line: 1345, column: 6, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1345, column: 6)
!5235 = !DILocation(line: 1345, column: 10, scope: !5234)
!5236 = !DILocation(line: 1345, column: 6, scope: !5209)
!5237 = !DILocation(line: 1346, column: 8, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1345, column: 16)
!5239 = !DILocation(line: 1346, column: 6, scope: !5238)
!5240 = !DILocation(line: 1347, column: 32, scope: !5238)
!5241 = !DILocation(line: 1347, column: 37, scope: !5238)
!5242 = !DILocation(line: 1347, column: 41, scope: !5238)
!5243 = !DILocation(line: 1347, column: 45, scope: !5238)
!5244 = !DILocation(line: 1347, column: 3, scope: !5238)
!5245 = !DILocation(line: 1348, column: 15, scope: !5238)
!5246 = !DILocation(line: 1348, column: 19, scope: !5238)
!5247 = !DILocation(line: 1348, column: 3, scope: !5238)
!5248 = !DILocation(line: 1349, column: 2, scope: !5238)
!5249 = !DILocation(line: 1351, column: 12, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1351, column: 2)
!5251 = !DILocation(line: 1351, column: 16, scope: !5250)
!5252 = !DILocation(line: 1351, column: 31, scope: !5250)
!5253 = !DILocation(line: 1351, column: 11, scope: !5250)
!5254 = !DILocation(line: 1351, column: 7, scope: !5250)
!5255 = !DILocation(line: 1351, column: 38, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1351, column: 2)
!5257 = !DILocation(line: 1351, column: 2, scope: !5250)
!5258 = !DILocation(line: 1352, column: 7, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1352, column: 7)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 1351, column: 61)
!5261 = !DILocation(line: 1352, column: 13, scope: !5259)
!5262 = !DILocation(line: 1352, column: 17, scope: !5259)
!5263 = !DILocation(line: 1352, column: 7, scope: !5260)
!5264 = !DILocation(line: 1353, column: 4, scope: !5259)
!5265 = !DILocation(line: 1356, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1356, column: 7)
!5267 = !DILocation(line: 1356, column: 7, scope: !5260)
!5268 = !DILocation(line: 1357, column: 4, scope: !5266)
!5269 = !DILocation(line: 1363, column: 7, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1363, column: 7)
!5271 = !DILocation(line: 1363, column: 13, scope: !5270)
!5272 = !DILocation(line: 1363, column: 19, scope: !5270)
!5273 = !DILocation(line: 1363, column: 24, scope: !5270)
!5274 = !DILocation(line: 1363, column: 7, scope: !5260)
!5275 = !DILocation(line: 1364, column: 4, scope: !5270)
!5276 = !DILocation(line: 1366, column: 8, scope: !5260)
!5277 = !DILocation(line: 1366, column: 6, scope: !5260)
!5278 = !DILocation(line: 1367, column: 33, scope: !5260)
!5279 = !DILocation(line: 1367, column: 38, scope: !5260)
!5280 = !DILocation(line: 1367, column: 42, scope: !5260)
!5281 = !DILocation(line: 1367, column: 3, scope: !5260)
!5282 = !DILocation(line: 1368, column: 15, scope: !5260)
!5283 = !DILocation(line: 1368, column: 19, scope: !5260)
!5284 = !DILocation(line: 1368, column: 3, scope: !5260)
!5285 = !DILocation(line: 1369, column: 2, scope: !5260)
!5286 = !DILocation(line: 1351, column: 49, scope: !5256)
!5287 = !DILocation(line: 1351, column: 55, scope: !5256)
!5288 = !DILocation(line: 1351, column: 48, scope: !5256)
!5289 = !DILocation(line: 1351, column: 2, scope: !5256)
!5290 = distinct !{!5290, !5257, !5291}
!5291 = !DILocation(line: 1369, column: 2, scope: !5250)
!5292 = !DILocation(line: 1371, column: 10, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1371, column: 2)
!5294 = !DILocation(line: 1371, column: 14, scope: !5293)
!5295 = !DILocation(line: 1371, column: 24, scope: !5293)
!5296 = !DILocation(line: 1371, column: 9, scope: !5293)
!5297 = !DILocation(line: 1371, column: 7, scope: !5293)
!5298 = !DILocation(line: 1371, column: 31, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 1371, column: 2)
!5300 = !DILocation(line: 1371, column: 2, scope: !5293)
!5301 = !DILocation(line: 1372, column: 7, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1372, column: 7)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 1371, column: 48)
!5304 = !DILocation(line: 1372, column: 11, scope: !5302)
!5305 = !DILocation(line: 1372, column: 16, scope: !5302)
!5306 = !DILocation(line: 1372, column: 7, scope: !5303)
!5307 = !DILocation(line: 1373, column: 9, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 1372, column: 40)
!5309 = !DILocation(line: 1373, column: 7, scope: !5308)
!5310 = !DILocation(line: 1374, column: 30, scope: !5308)
!5311 = !DILocation(line: 1374, column: 35, scope: !5308)
!5312 = !DILocation(line: 1374, column: 59, scope: !5308)
!5313 = !DILocation(line: 1374, column: 39, scope: !5308)
!5314 = !DILocation(line: 1374, column: 4, scope: !5308)
!5315 = !DILocation(line: 1375, column: 16, scope: !5308)
!5316 = !DILocation(line: 1375, column: 20, scope: !5308)
!5317 = !DILocation(line: 1375, column: 4, scope: !5308)
!5318 = !DILocation(line: 1376, column: 3, scope: !5308)
!5319 = !DILocation(line: 1377, column: 12, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 1377, column: 12)
!5321 = !DILocation(line: 1377, column: 16, scope: !5320)
!5322 = !DILocation(line: 1377, column: 21, scope: !5320)
!5323 = !DILocation(line: 1377, column: 12, scope: !5302)
!5324 = !DILocalVariable(name: "smd", scope: !5325, file: !3, line: 1378, type: !2419)
!5325 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1377, column: 45)
!5326 = !DILocation(line: 1378, column: 23, scope: !5325)
!5327 = !DILocation(line: 1378, column: 50, scope: !5325)
!5328 = !DILocation(line: 1378, column: 29, scope: !5325)
!5329 = !DILocation(line: 1379, column: 8, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 1379, column: 8)
!5331 = !DILocation(line: 1379, column: 13, scope: !5330)
!5332 = !DILocation(line: 1379, column: 18, scope: !5330)
!5333 = !DILocation(line: 1379, column: 8, scope: !5325)
!5334 = !DILocation(line: 1380, column: 10, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 1379, column: 43)
!5336 = !DILocation(line: 1380, column: 8, scope: !5335)
!5337 = !DILocation(line: 1381, column: 31, scope: !5335)
!5338 = !DILocation(line: 1381, column: 36, scope: !5335)
!5339 = !DILocation(line: 1381, column: 60, scope: !5335)
!5340 = !DILocation(line: 1381, column: 40, scope: !5335)
!5341 = !DILocation(line: 1381, column: 5, scope: !5335)
!5342 = !DILocation(line: 1382, column: 17, scope: !5335)
!5343 = !DILocation(line: 1382, column: 21, scope: !5335)
!5344 = !DILocation(line: 1382, column: 5, scope: !5335)
!5345 = !DILocation(line: 1383, column: 4, scope: !5335)
!5346 = !DILocation(line: 1384, column: 3, scope: !5325)
!5347 = !DILocation(line: 1385, column: 12, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1385, column: 12)
!5349 = !DILocation(line: 1385, column: 16, scope: !5348)
!5350 = !DILocation(line: 1385, column: 21, scope: !5348)
!5351 = !DILocation(line: 1385, column: 12, scope: !5320)
!5352 = !DILocalVariable(name: "pmd", scope: !5353, file: !3, line: 1386, type: !2540)
!5353 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1385, column: 52)
!5354 = !DILocation(line: 1386, column: 30, scope: !5353)
!5355 = !DILocation(line: 1386, column: 64, scope: !5353)
!5356 = !DILocation(line: 1386, column: 36, scope: !5353)
!5357 = !DILocation(line: 1387, column: 8, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 1387, column: 8)
!5359 = !DILocation(line: 1387, column: 13, scope: !5358)
!5360 = !DILocation(line: 1387, column: 8, scope: !5353)
!5361 = !DILocalVariable(name: "surface", scope: !5362, file: !3, line: 1388, type: !2587)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 1387, column: 21)
!5363 = !DILocation(line: 1388, column: 26, scope: !5362)
!5364 = !DILocation(line: 1388, column: 36, scope: !5362)
!5365 = !DILocation(line: 1388, column: 41, scope: !5362)
!5366 = !DILocation(line: 1388, column: 49, scope: !5362)
!5367 = !DILocation(line: 1388, column: 58, scope: !5362)
!5368 = !DILocation(line: 1390, column: 5, scope: !5362)
!5369 = !DILocation(line: 1390, column: 12, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1390, column: 5)
!5371 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1390, column: 5)
!5372 = !DILocation(line: 1390, column: 5, scope: !5371)
!5373 = !DILocation(line: 1391, column: 11, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 1390, column: 44)
!5375 = !DILocation(line: 1391, column: 9, scope: !5374)
!5376 = !DILocation(line: 1392, column: 39, scope: !5374)
!5377 = !DILocation(line: 1392, column: 44, scope: !5374)
!5378 = !DILocation(line: 1392, column: 48, scope: !5374)
!5379 = !DILocation(line: 1392, column: 6, scope: !5374)
!5380 = !DILocation(line: 1393, column: 18, scope: !5374)
!5381 = !DILocation(line: 1393, column: 22, scope: !5374)
!5382 = !DILocation(line: 1393, column: 6, scope: !5374)
!5383 = !DILocation(line: 1394, column: 5, scope: !5374)
!5384 = !DILocation(line: 1390, column: 29, scope: !5370)
!5385 = !DILocation(line: 1390, column: 38, scope: !5370)
!5386 = !DILocation(line: 1390, column: 28, scope: !5370)
!5387 = !DILocation(line: 1390, column: 5, scope: !5370)
!5388 = distinct !{!5388, !5372, !5389}
!5389 = !DILocation(line: 1394, column: 5, scope: !5371)
!5390 = !DILocation(line: 1395, column: 4, scope: !5362)
!5391 = !DILocation(line: 1396, column: 3, scope: !5353)
!5392 = !DILocation(line: 1397, column: 2, scope: !5303)
!5393 = !DILocation(line: 1371, column: 38, scope: !5299)
!5394 = !DILocation(line: 1371, column: 42, scope: !5299)
!5395 = !DILocation(line: 1371, column: 37, scope: !5299)
!5396 = !DILocation(line: 1371, column: 2, scope: !5299)
!5397 = distinct !{!5397, !5300, !5398}
!5398 = !DILocation(line: 1397, column: 2, scope: !5293)
!5399 = !DILocation(line: 1399, column: 6, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1399, column: 6)
!5401 = !DILocation(line: 1399, column: 12, scope: !5400)
!5402 = !DILocation(line: 1399, column: 15, scope: !5400)
!5403 = !DILocation(line: 1399, column: 19, scope: !5400)
!5404 = !DILocation(line: 1399, column: 36, scope: !5400)
!5405 = !DILocation(line: 1399, column: 39, scope: !5400)
!5406 = !DILocation(line: 1399, column: 46, scope: !5400)
!5407 = !DILocation(line: 1399, column: 6, scope: !5209)
!5408 = !DILocation(line: 1400, column: 9, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 1399, column: 63)
!5410 = !DILocation(line: 1400, column: 7, scope: !5409)
!5411 = !DILocation(line: 1401, column: 33, scope: !5409)
!5412 = !DILocation(line: 1401, column: 38, scope: !5409)
!5413 = !DILocation(line: 1401, column: 42, scope: !5409)
!5414 = !DILocation(line: 1401, column: 49, scope: !5409)
!5415 = !DILocation(line: 1401, column: 3, scope: !5409)
!5416 = !DILocation(line: 1402, column: 15, scope: !5409)
!5417 = !DILocation(line: 1402, column: 19, scope: !5409)
!5418 = !DILocation(line: 1402, column: 3, scope: !5409)
!5419 = !DILocation(line: 1403, column: 2, scope: !5409)
!5420 = !DILocation(line: 1405, column: 6, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1405, column: 6)
!5422 = !DILocation(line: 1405, column: 12, scope: !5421)
!5423 = !DILocation(line: 1405, column: 22, scope: !5421)
!5424 = !DILocation(line: 1405, column: 25, scope: !5421)
!5425 = !DILocation(line: 1405, column: 30, scope: !5421)
!5426 = !DILocation(line: 1405, column: 34, scope: !5421)
!5427 = !DILocation(line: 1405, column: 38, scope: !5421)
!5428 = !DILocation(line: 1405, column: 48, scope: !5421)
!5429 = !DILocation(line: 1405, column: 6, scope: !5209)
!5430 = !DILocalVariable(name: "lb_dupli_ob", scope: !5431, file: !3, line: 1406, type: !1642)
!5431 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 1405, column: 61)
!5432 = !DILocation(line: 1406, column: 13, scope: !5431)
!5433 = !DILocation(line: 1408, column: 44, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 1408, column: 7)
!5435 = !DILocation(line: 1408, column: 50, scope: !5434)
!5436 = !DILocation(line: 1408, column: 60, scope: !5434)
!5437 = !DILocation(line: 1408, column: 67, scope: !5434)
!5438 = !DILocation(line: 1408, column: 22, scope: !5434)
!5439 = !DILocation(line: 1408, column: 20, scope: !5434)
!5440 = !DILocation(line: 1408, column: 7, scope: !5431)
!5441 = !DILocalVariable(name: "dob", scope: !5442, file: !3, line: 1409, type: !5443)
!5442 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 1408, column: 80)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 64)
!5444 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliObject", file: !6, line: 331, baseType: !5445)
!5445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliObject", file: !6, line: 316, size: 1216, elements: !5446)
!5446 = !{!5447, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458}
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5445, file: !6, line: 317, baseType: !5448, size: 64)
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5445, file: !6, line: 317, baseType: !5448, size: 64, offset: 64)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !5445, file: !6, line: 318, baseType: !228, size: 64, offset: 128)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5445, file: !6, line: 319, baseType: !373, size: 512, offset: 192)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !5445, file: !6, line: 320, baseType: !291, size: 96, offset: 704)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5445, file: !6, line: 320, baseType: !786, size: 64, offset: 800)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5445, file: !6, line: 322, baseType: !190, size: 16, offset: 864)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "no_draw", scope: !5445, file: !6, line: 323, baseType: !130, size: 8, offset: 880)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "animated", scope: !5445, file: !6, line: 323, baseType: !130, size: 8, offset: 888)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_id", scope: !5445, file: !6, line: 327, baseType: !2740, size: 256, offset: 896)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "particle_system", scope: !5445, file: !6, line: 330, baseType: !1213, size: 64, offset: 1152)
!5459 = !DILocation(line: 1409, column: 17, scope: !5442)
!5460 = !DILocation(line: 1410, column: 14, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 1410, column: 4)
!5462 = !DILocation(line: 1410, column: 27, scope: !5461)
!5463 = !DILocation(line: 1410, column: 12, scope: !5461)
!5464 = !DILocation(line: 1410, column: 9, scope: !5461)
!5465 = !DILocation(line: 1410, column: 34, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1410, column: 4)
!5467 = !DILocation(line: 1410, column: 4, scope: !5461)
!5468 = !DILocation(line: 1411, column: 9, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1411, column: 9)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1410, column: 55)
!5471 = !DILocation(line: 1411, column: 14, scope: !5469)
!5472 = !DILocation(line: 1411, column: 20, scope: !5469)
!5473 = !DILocation(line: 1411, column: 17, scope: !5469)
!5474 = !DILocation(line: 1411, column: 9, scope: !5470)
!5475 = !DILocalVariable(name: "lb_dupli_pid", scope: !5476, file: !3, line: 1412, type: !213)
!5476 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 1411, column: 24)
!5477 = !DILocation(line: 1412, column: 15, scope: !5476)
!5478 = !DILocation(line: 1413, column: 49, scope: !5476)
!5479 = !DILocation(line: 1413, column: 54, scope: !5476)
!5480 = !DILocation(line: 1413, column: 58, scope: !5476)
!5481 = !DILocation(line: 1413, column: 65, scope: !5476)
!5482 = !DILocation(line: 1413, column: 6, scope: !5476)
!5483 = !DILocation(line: 1414, column: 25, scope: !5476)
!5484 = !DILocation(line: 1414, column: 6, scope: !5476)
!5485 = !DILocation(line: 1415, column: 23, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1415, column: 10)
!5487 = !DILocation(line: 1415, column: 10, scope: !5486)
!5488 = !DILocation(line: 1415, column: 10, scope: !5476)
!5489 = !DILocation(line: 1416, column: 7, scope: !5486)
!5490 = !DILocation(line: 1417, column: 5, scope: !5476)
!5491 = !DILocation(line: 1418, column: 4, scope: !5470)
!5492 = !DILocation(line: 1410, column: 44, scope: !5466)
!5493 = !DILocation(line: 1410, column: 49, scope: !5466)
!5494 = !DILocation(line: 1410, column: 42, scope: !5466)
!5495 = !DILocation(line: 1410, column: 4, scope: !5466)
!5496 = distinct !{!5496, !5467, !5497}
!5497 = !DILocation(line: 1418, column: 4, scope: !5461)
!5498 = !DILocation(line: 1420, column: 26, scope: !5442)
!5499 = !DILocation(line: 1420, column: 4, scope: !5442)
!5500 = !DILocation(line: 1421, column: 3, scope: !5442)
!5501 = !DILocation(line: 1422, column: 2, scope: !5431)
!5502 = !DILocation(line: 1423, column: 1, scope: !5209)
!5503 = distinct !DISubprogram(name: "BKE_ptcache_data_size", scope: !3, file: !3, line: 1745, type: !5504, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!144, !144}
!5506 = !DILocalVariable(name: "data_type", arg: 1, scope: !5503, file: !3, line: 1745, type: !144)
!5507 = !DILocation(line: 1745, column: 31, scope: !5503)
!5508 = !DILocation(line: 1747, column: 27, scope: !5503)
!5509 = !DILocation(line: 1747, column: 9, scope: !5503)
!5510 = !DILocation(line: 1747, column: 2, scope: !5503)
!5511 = distinct !DISubprogram(name: "BKE_ptcache_mem_index_find", scope: !3, file: !3, line: 1765, type: !5512, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!144, !3946, !7}
!5514 = !DILocalVariable(name: "pm", arg: 1, scope: !5511, file: !3, line: 1765, type: !3946)
!5515 = !DILocation(line: 1765, column: 44, scope: !5511)
!5516 = !DILocalVariable(name: "index", arg: 2, scope: !5511, file: !3, line: 1765, type: !7)
!5517 = !DILocation(line: 1765, column: 61, scope: !5511)
!5518 = !DILocation(line: 1767, column: 6, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1767, column: 6)
!5520 = !DILocation(line: 1767, column: 10, scope: !5519)
!5521 = !DILocation(line: 1767, column: 19, scope: !5519)
!5522 = !DILocation(line: 1767, column: 23, scope: !5519)
!5523 = !DILocation(line: 1767, column: 26, scope: !5519)
!5524 = !DILocation(line: 1767, column: 30, scope: !5519)
!5525 = !DILocation(line: 1767, column: 6, scope: !5511)
!5526 = !DILocalVariable(name: "data", scope: !5527, file: !3, line: 1768, type: !625)
!5527 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1767, column: 54)
!5528 = !DILocation(line: 1768, column: 17, scope: !5527)
!5529 = !DILocation(line: 1768, column: 24, scope: !5527)
!5530 = !DILocation(line: 1768, column: 28, scope: !5527)
!5531 = !DILocalVariable(name: "mid", scope: !5527, file: !3, line: 1769, type: !7)
!5532 = !DILocation(line: 1769, column: 16, scope: !5527)
!5533 = !DILocalVariable(name: "low", scope: !5527, file: !3, line: 1769, type: !7)
!5534 = !DILocation(line: 1769, column: 21, scope: !5527)
!5535 = !DILocalVariable(name: "high", scope: !5527, file: !3, line: 1769, type: !7)
!5536 = !DILocation(line: 1769, column: 30, scope: !5527)
!5537 = !DILocation(line: 1769, column: 37, scope: !5527)
!5538 = !DILocation(line: 1769, column: 41, scope: !5527)
!5539 = !DILocation(line: 1769, column: 50, scope: !5527)
!5540 = !DILocation(line: 1771, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1771, column: 7)
!5542 = !DILocation(line: 1771, column: 16, scope: !5541)
!5543 = !DILocation(line: 1771, column: 15, scope: !5541)
!5544 = !DILocation(line: 1771, column: 13, scope: !5541)
!5545 = !DILocation(line: 1771, column: 21, scope: !5541)
!5546 = !DILocation(line: 1771, column: 24, scope: !5541)
!5547 = !DILocation(line: 1771, column: 34, scope: !5541)
!5548 = !DILocation(line: 1771, column: 39, scope: !5541)
!5549 = !DILocation(line: 1771, column: 38, scope: !5541)
!5550 = !DILocation(line: 1771, column: 32, scope: !5541)
!5551 = !DILocation(line: 1771, column: 30, scope: !5541)
!5552 = !DILocation(line: 1771, column: 7, scope: !5527)
!5553 = !DILocation(line: 1772, column: 4, scope: !5541)
!5554 = !DILocation(line: 1775, column: 7, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1775, column: 7)
!5556 = !DILocation(line: 1775, column: 14, scope: !5555)
!5557 = !DILocation(line: 1775, column: 13, scope: !5555)
!5558 = !DILocation(line: 1775, column: 12, scope: !5555)
!5559 = !DILocation(line: 1775, column: 21, scope: !5555)
!5560 = !DILocation(line: 1775, column: 19, scope: !5555)
!5561 = !DILocation(line: 1775, column: 26, scope: !5555)
!5562 = !DILocation(line: 1775, column: 29, scope: !5555)
!5563 = !DILocation(line: 1775, column: 34, scope: !5555)
!5564 = !DILocation(line: 1775, column: 41, scope: !5555)
!5565 = !DILocation(line: 1775, column: 40, scope: !5555)
!5566 = !DILocation(line: 1775, column: 39, scope: !5555)
!5567 = !DILocation(line: 1775, column: 50, scope: !5555)
!5568 = !DILocation(line: 1775, column: 47, scope: !5555)
!5569 = !DILocation(line: 1775, column: 7, scope: !5527)
!5570 = !DILocation(line: 1776, column: 11, scope: !5555)
!5571 = !DILocation(line: 1776, column: 18, scope: !5555)
!5572 = !DILocation(line: 1776, column: 17, scope: !5555)
!5573 = !DILocation(line: 1776, column: 16, scope: !5555)
!5574 = !DILocation(line: 1776, column: 4, scope: !5555)
!5575 = !DILocation(line: 1778, column: 3, scope: !5527)
!5576 = !DILocation(line: 1778, column: 10, scope: !5527)
!5577 = !DILocation(line: 1778, column: 17, scope: !5527)
!5578 = !DILocation(line: 1778, column: 14, scope: !5527)
!5579 = !DILocation(line: 1779, column: 10, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1778, column: 23)
!5581 = !DILocation(line: 1779, column: 16, scope: !5580)
!5582 = !DILocation(line: 1779, column: 14, scope: !5580)
!5583 = !DILocation(line: 1779, column: 21, scope: !5580)
!5584 = !DILocation(line: 1779, column: 7, scope: !5580)
!5585 = !DILocation(line: 1781, column: 8, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 1781, column: 8)
!5587 = !DILocation(line: 1781, column: 13, scope: !5586)
!5588 = !DILocation(line: 1781, column: 20, scope: !5586)
!5589 = !DILocation(line: 1781, column: 18, scope: !5586)
!5590 = !DILocation(line: 1781, column: 8, scope: !5580)
!5591 = !DILocation(line: 1782, column: 12, scope: !5586)
!5592 = !DILocation(line: 1782, column: 16, scope: !5586)
!5593 = !DILocation(line: 1782, column: 10, scope: !5586)
!5594 = !DILocation(line: 1782, column: 5, scope: !5586)
!5595 = !DILocation(line: 1783, column: 13, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 1783, column: 13)
!5597 = !DILocation(line: 1783, column: 18, scope: !5596)
!5598 = !DILocation(line: 1783, column: 25, scope: !5596)
!5599 = !DILocation(line: 1783, column: 23, scope: !5596)
!5600 = !DILocation(line: 1783, column: 13, scope: !5586)
!5601 = !DILocation(line: 1784, column: 11, scope: !5596)
!5602 = !DILocation(line: 1784, column: 15, scope: !5596)
!5603 = !DILocation(line: 1784, column: 9, scope: !5596)
!5604 = !DILocation(line: 1784, column: 5, scope: !5596)
!5605 = !DILocation(line: 1786, column: 12, scope: !5596)
!5606 = !DILocation(line: 1786, column: 5, scope: !5596)
!5607 = distinct !{!5607, !5575, !5608}
!5608 = !DILocation(line: 1787, column: 3, scope: !5527)
!5609 = !DILocation(line: 1789, column: 3, scope: !5527)
!5610 = !DILocation(line: 1792, column: 11, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1791, column: 7)
!5612 = !DILocation(line: 1792, column: 19, scope: !5611)
!5613 = !DILocation(line: 1792, column: 23, scope: !5611)
!5614 = !DILocation(line: 1792, column: 17, scope: !5611)
!5615 = !DILocation(line: 1792, column: 34, scope: !5611)
!5616 = !DILocation(line: 1792, column: 3, scope: !5611)
!5617 = !DILocation(line: 1794, column: 1, scope: !5511)
!5618 = distinct !DISubprogram(name: "BKE_ptcache_mem_pointers_init", scope: !3, file: !3, line: 1796, type: !5619, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{null, !3946}
!5621 = !DILocalVariable(name: "pm", arg: 1, scope: !5618, file: !3, line: 1796, type: !3946)
!5622 = !DILocation(line: 1796, column: 48, scope: !5618)
!5623 = !DILocalVariable(name: "data_types", scope: !5618, file: !3, line: 1798, type: !144)
!5624 = !DILocation(line: 1798, column: 6, scope: !5618)
!5625 = !DILocation(line: 1798, column: 19, scope: !5618)
!5626 = !DILocation(line: 1798, column: 23, scope: !5618)
!5627 = !DILocalVariable(name: "i", scope: !5618, file: !3, line: 1799, type: !144)
!5628 = !DILocation(line: 1799, column: 6, scope: !5618)
!5629 = !DILocation(line: 1801, column: 8, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 1801, column: 2)
!5631 = !DILocation(line: 1801, column: 7, scope: !5630)
!5632 = !DILocation(line: 1801, column: 12, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1801, column: 2)
!5634 = !DILocation(line: 1801, column: 13, scope: !5633)
!5635 = !DILocation(line: 1801, column: 2, scope: !5630)
!5636 = !DILocation(line: 1802, column: 18, scope: !5633)
!5637 = !DILocation(line: 1802, column: 35, scope: !5633)
!5638 = !DILocation(line: 1802, column: 33, scope: !5633)
!5639 = !DILocation(line: 1802, column: 29, scope: !5633)
!5640 = !DILocation(line: 1802, column: 17, scope: !5633)
!5641 = !DILocation(line: 1802, column: 41, scope: !5633)
!5642 = !DILocation(line: 1802, column: 45, scope: !5633)
!5643 = !DILocation(line: 1802, column: 50, scope: !5633)
!5644 = !DILocation(line: 1802, column: 3, scope: !5633)
!5645 = !DILocation(line: 1802, column: 7, scope: !5633)
!5646 = !DILocation(line: 1802, column: 11, scope: !5633)
!5647 = !DILocation(line: 1802, column: 14, scope: !5633)
!5648 = !DILocation(line: 1801, column: 31, scope: !5633)
!5649 = !DILocation(line: 1801, column: 2, scope: !5633)
!5650 = distinct !{!5650, !5635, !5651}
!5651 = !DILocation(line: 1802, column: 59, scope: !5630)
!5652 = !DILocation(line: 1803, column: 1, scope: !5618)
!5653 = distinct !DISubprogram(name: "BKE_ptcache_mem_pointers_incr", scope: !3, file: !3, line: 1805, type: !5619, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5654 = !DILocalVariable(name: "pm", arg: 1, scope: !5653, file: !3, line: 1805, type: !3946)
!5655 = !DILocation(line: 1805, column: 48, scope: !5653)
!5656 = !DILocalVariable(name: "i", scope: !5653, file: !3, line: 1807, type: !144)
!5657 = !DILocation(line: 1807, column: 6, scope: !5653)
!5658 = !DILocation(line: 1809, column: 8, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1809, column: 2)
!5660 = !DILocation(line: 1809, column: 7, scope: !5659)
!5661 = !DILocation(line: 1809, column: 12, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1809, column: 2)
!5663 = !DILocation(line: 1809, column: 13, scope: !5662)
!5664 = !DILocation(line: 1809, column: 2, scope: !5659)
!5665 = !DILocation(line: 1810, column: 7, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 1810, column: 7)
!5667 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1809, column: 35)
!5668 = !DILocation(line: 1810, column: 11, scope: !5666)
!5669 = !DILocation(line: 1810, column: 15, scope: !5666)
!5670 = !DILocation(line: 1810, column: 7, scope: !5667)
!5671 = !DILocation(line: 1811, column: 25, scope: !5666)
!5672 = !DILocation(line: 1811, column: 29, scope: !5666)
!5673 = !DILocation(line: 1811, column: 33, scope: !5666)
!5674 = !DILocation(line: 1811, column: 56, scope: !5666)
!5675 = !DILocation(line: 1811, column: 38, scope: !5666)
!5676 = !DILocation(line: 1811, column: 36, scope: !5666)
!5677 = !DILocation(line: 1811, column: 4, scope: !5666)
!5678 = !DILocation(line: 1811, column: 8, scope: !5666)
!5679 = !DILocation(line: 1811, column: 12, scope: !5666)
!5680 = !DILocation(line: 1811, column: 15, scope: !5666)
!5681 = !DILocation(line: 1812, column: 2, scope: !5667)
!5682 = !DILocation(line: 1809, column: 31, scope: !5662)
!5683 = !DILocation(line: 1809, column: 2, scope: !5662)
!5684 = distinct !{!5684, !5664, !5685}
!5685 = !DILocation(line: 1812, column: 2, scope: !5659)
!5686 = !DILocation(line: 1813, column: 1, scope: !5653)
!5687 = distinct !DISubprogram(name: "BKE_ptcache_mem_pointers_seek", scope: !3, file: !3, line: 1814, type: !5688, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5688 = !DISubroutineType(types: !5689)
!5689 = !{!144, !144, !3946}
!5690 = !DILocalVariable(name: "point_index", arg: 1, scope: !5687, file: !3, line: 1814, type: !144)
!5691 = !DILocation(line: 1814, column: 40, scope: !5687)
!5692 = !DILocalVariable(name: "pm", arg: 2, scope: !5687, file: !3, line: 1814, type: !3946)
!5693 = !DILocation(line: 1814, column: 65, scope: !5687)
!5694 = !DILocalVariable(name: "data_types", scope: !5687, file: !3, line: 1816, type: !144)
!5695 = !DILocation(line: 1816, column: 6, scope: !5687)
!5696 = !DILocation(line: 1816, column: 19, scope: !5687)
!5697 = !DILocation(line: 1816, column: 23, scope: !5687)
!5698 = !DILocalVariable(name: "i", scope: !5687, file: !3, line: 1817, type: !144)
!5699 = !DILocation(line: 1817, column: 6, scope: !5687)
!5700 = !DILocalVariable(name: "index", scope: !5687, file: !3, line: 1817, type: !144)
!5701 = !DILocation(line: 1817, column: 9, scope: !5687)
!5702 = !DILocation(line: 1817, column: 44, scope: !5687)
!5703 = !DILocation(line: 1817, column: 48, scope: !5687)
!5704 = !DILocation(line: 1817, column: 17, scope: !5687)
!5705 = !DILocation(line: 1819, column: 6, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1819, column: 6)
!5707 = !DILocation(line: 1819, column: 12, scope: !5706)
!5708 = !DILocation(line: 1819, column: 6, scope: !5687)
!5709 = !DILocation(line: 1825, column: 3, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1819, column: 17)
!5711 = !DILocation(line: 1828, column: 8, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1828, column: 2)
!5713 = !DILocation(line: 1828, column: 7, scope: !5712)
!5714 = !DILocation(line: 1828, column: 12, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 1828, column: 2)
!5716 = !DILocation(line: 1828, column: 13, scope: !5715)
!5717 = !DILocation(line: 1828, column: 2, scope: !5712)
!5718 = !DILocation(line: 1829, column: 16, scope: !5715)
!5719 = !DILocation(line: 1829, column: 33, scope: !5715)
!5720 = !DILocation(line: 1829, column: 31, scope: !5715)
!5721 = !DILocation(line: 1829, column: 27, scope: !5715)
!5722 = !DILocation(line: 1829, column: 46, scope: !5715)
!5723 = !DILocation(line: 1829, column: 50, scope: !5715)
!5724 = !DILocation(line: 1829, column: 55, scope: !5715)
!5725 = !DILocation(line: 1829, column: 60, scope: !5715)
!5726 = !DILocation(line: 1829, column: 86, scope: !5715)
!5727 = !DILocation(line: 1829, column: 68, scope: !5715)
!5728 = !DILocation(line: 1829, column: 66, scope: !5715)
!5729 = !DILocation(line: 1829, column: 58, scope: !5715)
!5730 = !DILocation(line: 1829, column: 3, scope: !5715)
!5731 = !DILocation(line: 1829, column: 7, scope: !5715)
!5732 = !DILocation(line: 1829, column: 11, scope: !5715)
!5733 = !DILocation(line: 1829, column: 14, scope: !5715)
!5734 = !DILocation(line: 1828, column: 31, scope: !5715)
!5735 = !DILocation(line: 1828, column: 2, scope: !5715)
!5736 = distinct !{!5736, !5717, !5737}
!5737 = !DILocation(line: 1829, column: 91, scope: !5712)
!5738 = !DILocation(line: 1831, column: 2, scope: !5687)
!5739 = !DILocation(line: 1832, column: 1, scope: !5687)
!5740 = distinct !DISubprogram(name: "BKE_ptcache_read", scope: !3, file: !3, line: 2263, type: !5741, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!144, !2797, !256}
!5743 = !DILocalVariable(name: "pid", arg: 1, scope: !5740, file: !3, line: 2263, type: !2797)
!5744 = !DILocation(line: 2263, column: 33, scope: !5740)
!5745 = !DILocalVariable(name: "cfra", arg: 2, scope: !5740, file: !3, line: 2263, type: !256)
!5746 = !DILocation(line: 2263, column: 44, scope: !5740)
!5747 = !DILocalVariable(name: "cfrai", scope: !5740, file: !3, line: 2265, type: !144)
!5748 = !DILocation(line: 2265, column: 6, scope: !5740)
!5749 = !DILocation(line: 2265, column: 25, scope: !5740)
!5750 = !DILocation(line: 2265, column: 19, scope: !5740)
!5751 = !DILocation(line: 2265, column: 14, scope: !5740)
!5752 = !DILocalVariable(name: "cfra1", scope: !5740, file: !3, line: 2265, type: !144)
!5753 = !DILocation(line: 2265, column: 32, scope: !5740)
!5754 = !DILocalVariable(name: "cfra2", scope: !5740, file: !3, line: 2265, type: !144)
!5755 = !DILocation(line: 2265, column: 41, scope: !5740)
!5756 = !DILocalVariable(name: "ret", scope: !5740, file: !3, line: 2266, type: !144)
!5757 = !DILocation(line: 2266, column: 6, scope: !5740)
!5758 = !DILocation(line: 2269, column: 6, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2269, column: 6)
!5760 = !DILocation(line: 2269, column: 11, scope: !5759)
!5761 = !DILocation(line: 2269, column: 20, scope: !5759)
!5762 = !DILocation(line: 2269, column: 25, scope: !5759)
!5763 = !DILocation(line: 2269, column: 35, scope: !5759)
!5764 = !DILocation(line: 2269, column: 42, scope: !5759)
!5765 = !DILocation(line: 2269, column: 6, scope: !5740)
!5766 = !DILocation(line: 2270, column: 3, scope: !5759)
!5767 = !DILocation(line: 2272, column: 6, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2272, column: 6)
!5769 = !DILocation(line: 2272, column: 11, scope: !5768)
!5770 = !DILocation(line: 2272, column: 18, scope: !5768)
!5771 = !DILocation(line: 2272, column: 23, scope: !5768)
!5772 = !DILocation(line: 2272, column: 6, scope: !5740)
!5773 = !DILocation(line: 2273, column: 3, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 2272, column: 44)
!5775 = !DILocation(line: 2273, column: 8, scope: !5774)
!5776 = !DILocation(line: 2273, column: 15, scope: !5774)
!5777 = !DILocation(line: 2273, column: 20, scope: !5774)
!5778 = !DILocation(line: 2274, column: 16, scope: !5774)
!5779 = !DILocation(line: 2274, column: 3, scope: !5774)
!5780 = !DILocation(line: 2275, column: 2, scope: !5774)
!5781 = !DILocation(line: 2278, column: 6, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2278, column: 6)
!5783 = !DILocation(line: 2278, column: 21, scope: !5782)
!5784 = !DILocation(line: 2278, column: 14, scope: !5782)
!5785 = !DILocation(line: 2278, column: 11, scope: !5782)
!5786 = !DILocation(line: 2278, column: 27, scope: !5782)
!5787 = !DILocation(line: 2278, column: 51, scope: !5782)
!5788 = !DILocation(line: 2278, column: 56, scope: !5782)
!5789 = !DILocation(line: 2278, column: 30, scope: !5782)
!5790 = !DILocation(line: 2278, column: 6, scope: !5740)
!5791 = !DILocation(line: 2279, column: 11, scope: !5782)
!5792 = !DILocation(line: 2279, column: 9, scope: !5782)
!5793 = !DILocation(line: 2279, column: 3, scope: !5782)
!5794 = !DILocation(line: 2282, column: 6, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2282, column: 6)
!5796 = !DILocation(line: 2282, column: 12, scope: !5795)
!5797 = !DILocation(line: 2282, column: 6, scope: !5740)
!5798 = !DILocation(line: 2283, column: 30, scope: !5795)
!5799 = !DILocation(line: 2283, column: 35, scope: !5795)
!5800 = !DILocation(line: 2283, column: 3, scope: !5795)
!5801 = !DILocation(line: 2285, column: 6, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2285, column: 6)
!5803 = !DILocation(line: 2285, column: 12, scope: !5802)
!5804 = !DILocation(line: 2285, column: 17, scope: !5802)
!5805 = !DILocation(line: 2285, column: 20, scope: !5802)
!5806 = !DILocation(line: 2285, column: 26, scope: !5802)
!5807 = !DILocation(line: 2285, column: 6, scope: !5740)
!5808 = !DILocation(line: 2286, column: 3, scope: !5802)
!5809 = !DILocation(line: 2289, column: 6, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2289, column: 6)
!5811 = !DILocation(line: 2289, column: 12, scope: !5810)
!5812 = !DILocation(line: 2289, column: 17, scope: !5810)
!5813 = !DILocation(line: 2289, column: 20, scope: !5810)
!5814 = !DILocation(line: 2289, column: 26, scope: !5810)
!5815 = !DILocation(line: 2289, column: 29, scope: !5810)
!5816 = !DILocation(line: 2289, column: 38, scope: !5810)
!5817 = !DILocation(line: 2289, column: 43, scope: !5810)
!5818 = !DILocation(line: 2289, column: 50, scope: !5810)
!5819 = !DILocation(line: 2289, column: 35, scope: !5810)
!5820 = !DILocation(line: 2289, column: 6, scope: !5740)
!5821 = !DILocation(line: 2290, column: 3, scope: !5810)
!5822 = !DILocation(line: 2291, column: 6, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2291, column: 6)
!5824 = !DILocation(line: 2291, column: 12, scope: !5823)
!5825 = !DILocation(line: 2291, column: 15, scope: !5823)
!5826 = !DILocation(line: 2291, column: 24, scope: !5823)
!5827 = !DILocation(line: 2291, column: 21, scope: !5823)
!5828 = !DILocation(line: 2291, column: 6, scope: !5740)
!5829 = !DILocation(line: 2292, column: 3, scope: !5823)
!5830 = !DILocation(line: 2294, column: 6, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2294, column: 6)
!5832 = !DILocation(line: 2294, column: 6, scope: !5740)
!5833 = !DILocation(line: 2296, column: 7, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 2296, column: 7)
!5835 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 2294, column: 13)
!5836 = !DILocation(line: 2296, column: 12, scope: !5834)
!5837 = !DILocation(line: 2296, column: 7, scope: !5835)
!5838 = !DILocation(line: 2297, column: 29, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 2297, column: 8)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2296, column: 25)
!5841 = !DILocation(line: 2297, column: 34, scope: !5839)
!5842 = !DILocation(line: 2297, column: 9, scope: !5839)
!5843 = !DILocation(line: 2297, column: 8, scope: !5840)
!5844 = !DILocation(line: 2298, column: 5, scope: !5839)
!5845 = !DILocation(line: 2299, column: 3, scope: !5840)
!5846 = !DILocation(line: 2300, column: 12, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2300, column: 12)
!5848 = !DILocation(line: 2300, column: 17, scope: !5847)
!5849 = !DILocation(line: 2300, column: 12, scope: !5834)
!5850 = !DILocation(line: 2301, column: 17, scope: !5847)
!5851 = !DILocation(line: 2301, column: 22, scope: !5847)
!5852 = !DILocation(line: 2301, column: 4, scope: !5847)
!5853 = !DILocation(line: 2302, column: 2, scope: !5835)
!5854 = !DILocation(line: 2304, column: 6, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2304, column: 6)
!5856 = !DILocation(line: 2304, column: 6, scope: !5740)
!5857 = !DILocation(line: 2306, column: 7, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !3, line: 2306, column: 7)
!5859 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 2304, column: 13)
!5860 = !DILocation(line: 2306, column: 12, scope: !5858)
!5861 = !DILocation(line: 2306, column: 7, scope: !5859)
!5862 = !DILocation(line: 2307, column: 29, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 2307, column: 8)
!5864 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2306, column: 25)
!5865 = !DILocation(line: 2307, column: 34, scope: !5863)
!5866 = !DILocation(line: 2307, column: 9, scope: !5863)
!5867 = !DILocation(line: 2307, column: 8, scope: !5864)
!5868 = !DILocation(line: 2308, column: 5, scope: !5863)
!5869 = !DILocation(line: 2309, column: 3, scope: !5864)
!5870 = !DILocation(line: 2310, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 2310, column: 12)
!5872 = !DILocation(line: 2310, column: 17, scope: !5871)
!5873 = !DILocation(line: 2310, column: 12, scope: !5858)
!5874 = !DILocation(line: 2311, column: 8, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2311, column: 8)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2310, column: 29)
!5877 = !DILocation(line: 2311, column: 14, scope: !5875)
!5878 = !DILocation(line: 2311, column: 17, scope: !5875)
!5879 = !DILocation(line: 2311, column: 23, scope: !5875)
!5880 = !DILocation(line: 2311, column: 26, scope: !5875)
!5881 = !DILocation(line: 2311, column: 31, scope: !5875)
!5882 = !DILocation(line: 2311, column: 8, scope: !5876)
!5883 = !DILocation(line: 2312, column: 25, scope: !5875)
!5884 = !DILocation(line: 2312, column: 30, scope: !5875)
!5885 = !DILocation(line: 2312, column: 36, scope: !5875)
!5886 = !DILocation(line: 2312, column: 43, scope: !5875)
!5887 = !DILocation(line: 2312, column: 5, scope: !5875)
!5888 = !DILocation(line: 2314, column: 18, scope: !5875)
!5889 = !DILocation(line: 2314, column: 23, scope: !5875)
!5890 = !DILocation(line: 2314, column: 5, scope: !5875)
!5891 = !DILocation(line: 2315, column: 3, scope: !5876)
!5892 = !DILocation(line: 2316, column: 2, scope: !5859)
!5893 = !DILocation(line: 2318, column: 6, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2318, column: 6)
!5895 = !DILocation(line: 2318, column: 6, scope: !5740)
!5896 = !DILocation(line: 2319, column: 10, scope: !5894)
!5897 = !DILocation(line: 2319, column: 7, scope: !5894)
!5898 = !DILocation(line: 2319, column: 3, scope: !5894)
!5899 = !DILocation(line: 2320, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2320, column: 11)
!5901 = !DILocation(line: 2320, column: 11, scope: !5894)
!5902 = !DILocation(line: 2321, column: 7, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 2320, column: 18)
!5904 = !DILocation(line: 2322, column: 26, scope: !5903)
!5905 = !DILocation(line: 2322, column: 3, scope: !5903)
!5906 = !DILocation(line: 2322, column: 8, scope: !5903)
!5907 = !DILocation(line: 2322, column: 15, scope: !5903)
!5908 = !DILocation(line: 2322, column: 24, scope: !5903)
!5909 = !DILocation(line: 2323, column: 2, scope: !5903)
!5910 = !DILocation(line: 2325, column: 15, scope: !5740)
!5911 = !DILocation(line: 2325, column: 10, scope: !5740)
!5912 = !DILocation(line: 2325, column: 8, scope: !5740)
!5913 = !DILocation(line: 2327, column: 6, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2327, column: 6)
!5915 = !DILocation(line: 2327, column: 11, scope: !5914)
!5916 = !DILocation(line: 2327, column: 18, scope: !5914)
!5917 = !DILocation(line: 2327, column: 23, scope: !5914)
!5918 = !DILocation(line: 2327, column: 6, scope: !5740)
!5919 = !DILocation(line: 2328, column: 24, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 2327, column: 43)
!5921 = !DILocation(line: 2328, column: 50, scope: !5920)
!5922 = !DILocation(line: 2328, column: 3, scope: !5920)
!5923 = !DILocation(line: 2329, column: 2, scope: !5920)
!5924 = !DILocation(line: 2330, column: 11, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 2330, column: 11)
!5926 = !DILocation(line: 2330, column: 16, scope: !5925)
!5927 = !DILocation(line: 2330, column: 23, scope: !5925)
!5928 = !DILocation(line: 2330, column: 28, scope: !5925)
!5929 = !DILocation(line: 2330, column: 11, scope: !5914)
!5930 = !DILocation(line: 2331, column: 7, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 2331, column: 7)
!5932 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 2330, column: 54)
!5933 = !DILocation(line: 2331, column: 15, scope: !5931)
!5934 = !DILocation(line: 2331, column: 20, scope: !5931)
!5935 = !DILocation(line: 2331, column: 27, scope: !5931)
!5936 = !DILocation(line: 2331, column: 12, scope: !5931)
!5937 = !DILocation(line: 2331, column: 7, scope: !5932)
!5938 = !DILocation(line: 2332, column: 4, scope: !5931)
!5939 = !DILocation(line: 2332, column: 9, scope: !5931)
!5940 = !DILocation(line: 2332, column: 16, scope: !5931)
!5941 = !DILocation(line: 2332, column: 21, scope: !5931)
!5942 = !DILocation(line: 2334, column: 24, scope: !5932)
!5943 = !DILocation(line: 2334, column: 50, scope: !5932)
!5944 = !DILocation(line: 2334, column: 3, scope: !5932)
!5945 = !DILocation(line: 2335, column: 2, scope: !5932)
!5946 = !DILocation(line: 2337, column: 9, scope: !5740)
!5947 = !DILocation(line: 2337, column: 2, scope: !5740)
!5948 = !DILocation(line: 2338, column: 1, scope: !5740)
!5949 = distinct !DISubprogram(name: "ptcache_read", scope: !3, file: !3, line: 2154, type: !5950, scopeLine: 2155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{!144, !2797, !144}
!5952 = !DILocalVariable(name: "pid", arg: 1, scope: !5949, file: !3, line: 2154, type: !2797)
!5953 = !DILocation(line: 2154, column: 36, scope: !5949)
!5954 = !DILocalVariable(name: "cfra", arg: 2, scope: !5949, file: !3, line: 2154, type: !144)
!5955 = !DILocation(line: 2154, column: 45, scope: !5949)
!5956 = !DILocalVariable(name: "pm", scope: !5949, file: !3, line: 2156, type: !3946)
!5957 = !DILocation(line: 2156, column: 14, scope: !5949)
!5958 = !DILocalVariable(name: "i", scope: !5949, file: !3, line: 2157, type: !144)
!5959 = !DILocation(line: 2157, column: 6, scope: !5949)
!5960 = !DILocalVariable(name: "index", scope: !5949, file: !3, line: 2158, type: !868)
!5961 = !DILocation(line: 2158, column: 7, scope: !5949)
!5962 = !DILocation(line: 2161, column: 6, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2161, column: 6)
!5964 = !DILocation(line: 2161, column: 11, scope: !5963)
!5965 = !DILocation(line: 2161, column: 18, scope: !5963)
!5966 = !DILocation(line: 2161, column: 23, scope: !5963)
!5967 = !DILocation(line: 2161, column: 6, scope: !5949)
!5968 = !DILocation(line: 2162, column: 34, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2161, column: 45)
!5970 = !DILocation(line: 2162, column: 39, scope: !5969)
!5971 = !DILocation(line: 2162, column: 8, scope: !5969)
!5972 = !DILocation(line: 2162, column: 6, scope: !5969)
!5973 = !DILocation(line: 2163, column: 2, scope: !5969)
!5974 = !DILocation(line: 2165, column: 8, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2164, column: 7)
!5976 = !DILocation(line: 2165, column: 13, scope: !5975)
!5977 = !DILocation(line: 2165, column: 20, scope: !5975)
!5978 = !DILocation(line: 2165, column: 30, scope: !5975)
!5979 = !DILocation(line: 2165, column: 6, scope: !5975)
!5980 = !DILocation(line: 2167, column: 3, scope: !5975)
!5981 = !DILocation(line: 2167, column: 10, scope: !5975)
!5982 = !DILocation(line: 2167, column: 13, scope: !5975)
!5983 = !DILocation(line: 2167, column: 16, scope: !5975)
!5984 = !DILocation(line: 2167, column: 20, scope: !5975)
!5985 = !DILocation(line: 2167, column: 29, scope: !5975)
!5986 = !DILocation(line: 2167, column: 26, scope: !5975)
!5987 = !DILocation(line: 0, scope: !5975)
!5988 = !DILocation(line: 2168, column: 9, scope: !5975)
!5989 = !DILocation(line: 2168, column: 13, scope: !5975)
!5990 = !DILocation(line: 2168, column: 7, scope: !5975)
!5991 = distinct !{!5991, !5980, !5989}
!5992 = !DILocation(line: 2172, column: 6, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2172, column: 6)
!5994 = !DILocation(line: 2172, column: 6, scope: !5949)
!5995 = !DILocalVariable(name: "totpoint", scope: !5996, file: !3, line: 2173, type: !144)
!5996 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2172, column: 10)
!5997 = !DILocation(line: 2173, column: 7, scope: !5996)
!5998 = !DILocation(line: 2173, column: 18, scope: !5996)
!5999 = !DILocation(line: 2173, column: 22, scope: !5996)
!6000 = !DILocation(line: 2175, column: 8, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2175, column: 7)
!6002 = !DILocation(line: 2175, column: 13, scope: !6001)
!6003 = !DILocation(line: 2175, column: 24, scope: !6001)
!6004 = !DILocation(line: 2175, column: 49, scope: !6001)
!6005 = !DILocation(line: 2175, column: 7, scope: !5996)
!6006 = !DILocalVariable(name: "pid_totpoint", scope: !6007, file: !3, line: 2176, type: !144)
!6007 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2175, column: 55)
!6008 = !DILocation(line: 2176, column: 8, scope: !6007)
!6009 = !DILocation(line: 2176, column: 23, scope: !6007)
!6010 = !DILocation(line: 2176, column: 28, scope: !6007)
!6011 = !DILocation(line: 2176, column: 37, scope: !6007)
!6012 = !DILocation(line: 2176, column: 42, scope: !6007)
!6013 = !DILocation(line: 2176, column: 52, scope: !6007)
!6014 = !DILocation(line: 2178, column: 8, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 2178, column: 8)
!6016 = !DILocation(line: 2178, column: 20, scope: !6015)
!6017 = !DILocation(line: 2178, column: 17, scope: !6015)
!6018 = !DILocation(line: 2178, column: 8, scope: !6007)
!6019 = !DILocation(line: 2179, column: 5, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 2178, column: 34)
!6021 = !DILocation(line: 2179, column: 10, scope: !6020)
!6022 = !DILocation(line: 2179, column: 16, scope: !6020)
!6023 = !DILocation(line: 2179, column: 21, scope: !6020)
!6024 = !DILocation(line: 2180, column: 16, scope: !6020)
!6025 = !DILocation(line: 2180, column: 14, scope: !6020)
!6026 = !DILocation(line: 2181, column: 4, scope: !6020)
!6027 = !DILocation(line: 2182, column: 3, scope: !6007)
!6028 = !DILocation(line: 2184, column: 33, scope: !5996)
!6029 = !DILocation(line: 2184, column: 3, scope: !5996)
!6030 = !DILocation(line: 2186, column: 9, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2186, column: 3)
!6032 = !DILocation(line: 2186, column: 8, scope: !6031)
!6033 = !DILocation(line: 2186, column: 13, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6031, file: !3, line: 2186, column: 3)
!6035 = !DILocation(line: 2186, column: 15, scope: !6034)
!6036 = !DILocation(line: 2186, column: 14, scope: !6034)
!6037 = !DILocation(line: 2186, column: 3, scope: !6031)
!6038 = !DILocation(line: 2187, column: 8, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 2187, column: 8)
!6040 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 2186, column: 30)
!6041 = !DILocation(line: 2187, column: 12, scope: !6039)
!6042 = !DILocation(line: 2187, column: 23, scope: !6039)
!6043 = !DILocation(line: 2187, column: 8, scope: !6040)
!6044 = !DILocation(line: 2188, column: 13, scope: !6039)
!6045 = !DILocation(line: 2188, column: 17, scope: !6039)
!6046 = !DILocation(line: 2188, column: 11, scope: !6039)
!6047 = !DILocation(line: 2188, column: 5, scope: !6039)
!6048 = !DILocation(line: 2190, column: 4, scope: !6040)
!6049 = !DILocation(line: 2190, column: 9, scope: !6040)
!6050 = !DILocation(line: 2190, column: 21, scope: !6040)
!6051 = !DILocation(line: 2190, column: 20, scope: !6040)
!6052 = !DILocation(line: 2190, column: 28, scope: !6040)
!6053 = !DILocation(line: 2190, column: 33, scope: !6040)
!6054 = !DILocation(line: 2190, column: 43, scope: !6040)
!6055 = !DILocation(line: 2190, column: 47, scope: !6040)
!6056 = !DILocation(line: 2190, column: 59, scope: !6040)
!6057 = !DILocation(line: 2190, column: 63, scope: !6040)
!6058 = !DILocation(line: 2190, column: 52, scope: !6040)
!6059 = !DILocation(line: 2192, column: 34, scope: !6040)
!6060 = !DILocation(line: 2192, column: 4, scope: !6040)
!6061 = !DILocation(line: 2193, column: 3, scope: !6040)
!6062 = !DILocation(line: 2186, column: 26, scope: !6034)
!6063 = !DILocation(line: 2186, column: 3, scope: !6034)
!6064 = distinct !{!6064, !6037, !6065}
!6065 = !DILocation(line: 2193, column: 3, scope: !6031)
!6066 = !DILocation(line: 2195, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2195, column: 7)
!6068 = !DILocation(line: 2195, column: 12, scope: !6067)
!6069 = !DILocation(line: 2195, column: 28, scope: !6067)
!6070 = !DILocation(line: 2195, column: 31, scope: !6067)
!6071 = !DILocation(line: 2195, column: 35, scope: !6067)
!6072 = !DILocation(line: 2195, column: 45, scope: !6067)
!6073 = !DILocation(line: 2195, column: 7, scope: !5996)
!6074 = !DILocation(line: 2196, column: 4, scope: !6067)
!6075 = !DILocation(line: 2196, column: 9, scope: !6067)
!6076 = !DILocation(line: 2196, column: 25, scope: !6067)
!6077 = !DILocation(line: 2196, column: 30, scope: !6067)
!6078 = !DILocation(line: 2196, column: 40, scope: !6067)
!6079 = !DILocation(line: 2196, column: 51, scope: !6067)
!6080 = !DILocation(line: 2196, column: 55, scope: !6067)
!6081 = !DILocation(line: 2196, column: 44, scope: !6067)
!6082 = !DILocation(line: 2199, column: 7, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2199, column: 7)
!6084 = !DILocation(line: 2199, column: 12, scope: !6083)
!6085 = !DILocation(line: 2199, column: 19, scope: !6083)
!6086 = !DILocation(line: 2199, column: 24, scope: !6083)
!6087 = !DILocation(line: 2199, column: 7, scope: !5996)
!6088 = !DILocation(line: 2200, column: 22, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 2199, column: 46)
!6090 = !DILocation(line: 2200, column: 4, scope: !6089)
!6091 = !DILocation(line: 2201, column: 23, scope: !6089)
!6092 = !DILocation(line: 2201, column: 4, scope: !6089)
!6093 = !DILocation(line: 2202, column: 4, scope: !6089)
!6094 = !DILocation(line: 2202, column: 14, scope: !6089)
!6095 = !DILocation(line: 2203, column: 3, scope: !6089)
!6096 = !DILocation(line: 2204, column: 2, scope: !5996)
!6097 = !DILocation(line: 2206, column: 2, scope: !5949)
!6098 = distinct !DISubprogram(name: "BKE_ptcache_id_exist", scope: !3, file: !3, line: 2676, type: !5950, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!6099 = !DILocalVariable(name: "pid", arg: 1, scope: !6098, file: !3, line: 2676, type: !2797)
!6100 = !DILocation(line: 2676, column: 38, scope: !6098)
!6101 = !DILocalVariable(name: "cfra", arg: 2, scope: !6098, file: !3, line: 2676, type: !144)
!6102 = !DILocation(line: 2676, column: 47, scope: !6098)
!6103 = !DILocation(line: 2678, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2678, column: 6)
!6105 = !DILocation(line: 2678, column: 12, scope: !6104)
!6106 = !DILocation(line: 2678, column: 6, scope: !6098)
!6107 = !DILocation(line: 2679, column: 3, scope: !6104)
!6108 = !DILocation(line: 2681, column: 6, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2681, column: 6)
!6110 = !DILocation(line: 2681, column: 11, scope: !6109)
!6111 = !DILocation(line: 2681, column: 16, scope: !6109)
!6112 = !DILocation(line: 2681, column: 23, scope: !6109)
!6113 = !DILocation(line: 2681, column: 10, scope: !6109)
!6114 = !DILocation(line: 2681, column: 34, scope: !6109)
!6115 = !DILocation(line: 2681, column: 37, scope: !6109)
!6116 = !DILocation(line: 2681, column: 44, scope: !6109)
!6117 = !DILocation(line: 2681, column: 49, scope: !6109)
!6118 = !DILocation(line: 2681, column: 56, scope: !6109)
!6119 = !DILocation(line: 2681, column: 42, scope: !6109)
!6120 = !DILocation(line: 2681, column: 6, scope: !6098)
!6121 = !DILocation(line: 2682, column: 3, scope: !6109)
!6122 = !DILocation(line: 2684, column: 6, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2684, column: 6)
!6124 = !DILocation(line: 2684, column: 11, scope: !6123)
!6125 = !DILocation(line: 2684, column: 18, scope: !6123)
!6126 = !DILocation(line: 2684, column: 32, scope: !6123)
!6127 = !DILocation(line: 2684, column: 35, scope: !6123)
!6128 = !DILocation(line: 2684, column: 40, scope: !6123)
!6129 = !DILocation(line: 2684, column: 47, scope: !6123)
!6130 = !DILocation(line: 2684, column: 61, scope: !6123)
!6131 = !DILocation(line: 2684, column: 66, scope: !6123)
!6132 = !DILocation(line: 2684, column: 71, scope: !6123)
!6133 = !DILocation(line: 2684, column: 78, scope: !6123)
!6134 = !DILocation(line: 2684, column: 65, scope: !6123)
!6135 = !DILocation(line: 2684, column: 89, scope: !6123)
!6136 = !DILocation(line: 2684, column: 6, scope: !6098)
!6137 = !DILocation(line: 2685, column: 3, scope: !6123)
!6138 = !DILocation(line: 2687, column: 6, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 2687, column: 6)
!6140 = !DILocation(line: 2687, column: 11, scope: !6139)
!6141 = !DILocation(line: 2687, column: 18, scope: !6139)
!6142 = !DILocation(line: 2687, column: 23, scope: !6139)
!6143 = !DILocation(line: 2687, column: 6, scope: !6098)
!6144 = !DILocalVariable(name: "filename", scope: !6145, file: !3, line: 2688, type: !6146)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2687, column: 45)
!6146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 16384, elements: !6147)
!6147 = !{!6148}
!6148 = !DISubrange(count: 2048)
!6149 = !DILocation(line: 2688, column: 8, scope: !6145)
!6150 = !DILocation(line: 2690, column: 20, scope: !6145)
!6151 = !DILocation(line: 2690, column: 25, scope: !6145)
!6152 = !DILocation(line: 2690, column: 35, scope: !6145)
!6153 = !DILocation(line: 2690, column: 3, scope: !6145)
!6154 = !DILocation(line: 2692, column: 21, scope: !6145)
!6155 = !DILocation(line: 2692, column: 10, scope: !6145)
!6156 = !DILocation(line: 2692, column: 3, scope: !6145)
!6157 = !DILocalVariable(name: "pm", scope: !6158, file: !3, line: 2695, type: !3946)
!6158 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 2694, column: 7)
!6159 = !DILocation(line: 2695, column: 15, scope: !6158)
!6160 = !DILocation(line: 2695, column: 20, scope: !6158)
!6161 = !DILocation(line: 2695, column: 25, scope: !6158)
!6162 = !DILocation(line: 2695, column: 32, scope: !6158)
!6163 = !DILocation(line: 2695, column: 42, scope: !6158)
!6164 = !DILocation(line: 2697, column: 3, scope: !6158)
!6165 = !DILocation(line: 2697, column: 10, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 2697, column: 3)
!6167 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 2697, column: 3)
!6168 = !DILocation(line: 2697, column: 3, scope: !6167)
!6169 = !DILocation(line: 2698, column: 8, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 2698, column: 8)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2697, column: 27)
!6172 = !DILocation(line: 2698, column: 12, scope: !6170)
!6173 = !DILocation(line: 2698, column: 19, scope: !6170)
!6174 = !DILocation(line: 2698, column: 17, scope: !6170)
!6175 = !DILocation(line: 2698, column: 8, scope: !6171)
!6176 = !DILocation(line: 2699, column: 5, scope: !6170)
!6177 = !DILocation(line: 2700, column: 3, scope: !6171)
!6178 = !DILocation(line: 2697, column: 17, scope: !6166)
!6179 = !DILocation(line: 2697, column: 21, scope: !6166)
!6180 = !DILocation(line: 2697, column: 16, scope: !6166)
!6181 = !DILocation(line: 2697, column: 3, scope: !6166)
!6182 = distinct !{!6182, !6168, !6183}
!6183 = !DILocation(line: 2700, column: 3, scope: !6167)
!6184 = !DILocation(line: 2701, column: 3, scope: !6158)
!6185 = !DILocation(line: 2703, column: 1, scope: !6098)
!6186 = distinct !DISubprogram(name: "ptcache_find_frames_around", scope: !3, file: !3, line: 1890, type: !6187, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{null, !2797, !7, !868, !868}
!6189 = !DILocalVariable(name: "pid", arg: 1, scope: !6186, file: !3, line: 1890, type: !2797)
!6190 = !DILocation(line: 1890, column: 51, scope: !6186)
!6191 = !DILocalVariable(name: "frame", arg: 2, scope: !6186, file: !3, line: 1890, type: !7)
!6192 = !DILocation(line: 1890, column: 69, scope: !6186)
!6193 = !DILocalVariable(name: "fra1", arg: 3, scope: !6186, file: !3, line: 1890, type: !868)
!6194 = !DILocation(line: 1890, column: 81, scope: !6186)
!6195 = !DILocalVariable(name: "fra2", arg: 4, scope: !6186, file: !3, line: 1890, type: !868)
!6196 = !DILocation(line: 1890, column: 92, scope: !6186)
!6197 = !DILocation(line: 1892, column: 6, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1892, column: 6)
!6199 = !DILocation(line: 1892, column: 11, scope: !6198)
!6200 = !DILocation(line: 1892, column: 18, scope: !6198)
!6201 = !DILocation(line: 1892, column: 23, scope: !6198)
!6202 = !DILocation(line: 1892, column: 6, scope: !6186)
!6203 = !DILocalVariable(name: "cfra1", scope: !6204, file: !3, line: 1893, type: !144)
!6204 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1892, column: 45)
!6205 = !DILocation(line: 1893, column: 7, scope: !6204)
!6206 = !DILocation(line: 1893, column: 13, scope: !6204)
!6207 = !DILocalVariable(name: "cfra2", scope: !6204, file: !3, line: 1893, type: !144)
!6208 = !DILocation(line: 1893, column: 20, scope: !6204)
!6209 = !DILocation(line: 1893, column: 26, scope: !6204)
!6210 = !DILocation(line: 1893, column: 31, scope: !6204)
!6211 = !DILocation(line: 1895, column: 3, scope: !6204)
!6212 = !DILocation(line: 1895, column: 10, scope: !6204)
!6213 = !DILocation(line: 1895, column: 19, scope: !6204)
!6214 = !DILocation(line: 1895, column: 24, scope: !6204)
!6215 = !DILocation(line: 1895, column: 31, scope: !6204)
!6216 = !DILocation(line: 1895, column: 16, scope: !6204)
!6217 = !DILocation(line: 1895, column: 42, scope: !6204)
!6218 = !DILocation(line: 1895, column: 67, scope: !6204)
!6219 = !DILocation(line: 1895, column: 72, scope: !6204)
!6220 = !DILocation(line: 1895, column: 46, scope: !6204)
!6221 = !DILocation(line: 1895, column: 45, scope: !6204)
!6222 = !DILocation(line: 0, scope: !6204)
!6223 = !DILocation(line: 1896, column: 9, scope: !6204)
!6224 = distinct !{!6224, !6211, !6223}
!6225 = !DILocation(line: 1898, column: 7, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1898, column: 7)
!6227 = !DILocation(line: 1898, column: 15, scope: !6226)
!6228 = !DILocation(line: 1898, column: 20, scope: !6226)
!6229 = !DILocation(line: 1898, column: 27, scope: !6226)
!6230 = !DILocation(line: 1898, column: 13, scope: !6226)
!6231 = !DILocation(line: 1898, column: 7, scope: !6204)
!6232 = !DILocation(line: 1899, column: 10, scope: !6226)
!6233 = !DILocation(line: 1899, column: 4, scope: !6226)
!6234 = !DILocation(line: 1901, column: 3, scope: !6204)
!6235 = !DILocation(line: 1901, column: 10, scope: !6204)
!6236 = !DILocation(line: 1901, column: 19, scope: !6204)
!6237 = !DILocation(line: 1901, column: 24, scope: !6204)
!6238 = !DILocation(line: 1901, column: 31, scope: !6204)
!6239 = !DILocation(line: 1901, column: 16, scope: !6204)
!6240 = !DILocation(line: 1901, column: 40, scope: !6204)
!6241 = !DILocation(line: 1901, column: 65, scope: !6204)
!6242 = !DILocation(line: 1901, column: 70, scope: !6204)
!6243 = !DILocation(line: 1901, column: 44, scope: !6204)
!6244 = !DILocation(line: 1901, column: 43, scope: !6204)
!6245 = !DILocation(line: 1902, column: 9, scope: !6204)
!6246 = distinct !{!6246, !6234, !6245}
!6247 = !DILocation(line: 1904, column: 7, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1904, column: 7)
!6249 = !DILocation(line: 1904, column: 15, scope: !6248)
!6250 = !DILocation(line: 1904, column: 20, scope: !6248)
!6251 = !DILocation(line: 1904, column: 27, scope: !6248)
!6252 = !DILocation(line: 1904, column: 13, scope: !6248)
!6253 = !DILocation(line: 1904, column: 7, scope: !6204)
!6254 = !DILocation(line: 1905, column: 10, scope: !6248)
!6255 = !DILocation(line: 1905, column: 4, scope: !6248)
!6256 = !DILocation(line: 1907, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1907, column: 7)
!6258 = !DILocation(line: 1907, column: 13, scope: !6257)
!6259 = !DILocation(line: 1907, column: 17, scope: !6257)
!6260 = !DILocation(line: 1907, column: 7, scope: !6204)
!6261 = !DILocation(line: 1908, column: 5, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 1907, column: 24)
!6263 = !DILocation(line: 1908, column: 10, scope: !6262)
!6264 = !DILocation(line: 1909, column: 12, scope: !6262)
!6265 = !DILocation(line: 1909, column: 5, scope: !6262)
!6266 = !DILocation(line: 1909, column: 10, scope: !6262)
!6267 = !DILocation(line: 1910, column: 3, scope: !6262)
!6268 = !DILocation(line: 1912, column: 12, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 1911, column: 8)
!6270 = !DILocation(line: 1912, column: 5, scope: !6269)
!6271 = !DILocation(line: 1912, column: 10, scope: !6269)
!6272 = !DILocation(line: 1913, column: 12, scope: !6269)
!6273 = !DILocation(line: 1913, column: 5, scope: !6269)
!6274 = !DILocation(line: 1913, column: 10, scope: !6269)
!6275 = !DILocation(line: 1915, column: 2, scope: !6204)
!6276 = !DILocation(line: 1916, column: 11, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1916, column: 11)
!6278 = !DILocation(line: 1916, column: 16, scope: !6277)
!6279 = !DILocation(line: 1916, column: 23, scope: !6277)
!6280 = !DILocation(line: 1916, column: 33, scope: !6277)
!6281 = !DILocation(line: 1916, column: 11, scope: !6198)
!6282 = !DILocalVariable(name: "pm", scope: !6283, file: !3, line: 1917, type: !3946)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1916, column: 40)
!6284 = !DILocation(line: 1917, column: 15, scope: !6283)
!6285 = !DILocation(line: 1917, column: 20, scope: !6283)
!6286 = !DILocation(line: 1917, column: 25, scope: !6283)
!6287 = !DILocation(line: 1917, column: 32, scope: !6283)
!6288 = !DILocation(line: 1917, column: 42, scope: !6283)
!6289 = !DILocalVariable(name: "pm2", scope: !6283, file: !3, line: 1918, type: !3946)
!6290 = !DILocation(line: 1918, column: 15, scope: !6283)
!6291 = !DILocation(line: 1918, column: 21, scope: !6283)
!6292 = !DILocation(line: 1918, column: 26, scope: !6283)
!6293 = !DILocation(line: 1918, column: 33, scope: !6283)
!6294 = !DILocation(line: 1918, column: 43, scope: !6283)
!6295 = !DILocation(line: 1920, column: 3, scope: !6283)
!6296 = !DILocation(line: 1920, column: 10, scope: !6283)
!6297 = !DILocation(line: 1920, column: 14, scope: !6283)
!6298 = !DILocation(line: 1920, column: 19, scope: !6283)
!6299 = !DILocation(line: 1920, column: 22, scope: !6283)
!6300 = !DILocation(line: 1920, column: 26, scope: !6283)
!6301 = !DILocation(line: 1920, column: 32, scope: !6283)
!6302 = !DILocation(line: 1920, column: 41, scope: !6283)
!6303 = !DILocation(line: 1920, column: 38, scope: !6283)
!6304 = !DILocation(line: 0, scope: !6283)
!6305 = !DILocation(line: 1921, column: 8, scope: !6283)
!6306 = !DILocation(line: 1921, column: 12, scope: !6283)
!6307 = !DILocation(line: 1921, column: 6, scope: !6283)
!6308 = distinct !{!6308, !6295, !6306}
!6309 = !DILocation(line: 1923, column: 7, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1923, column: 7)
!6311 = !DILocation(line: 1923, column: 12, scope: !6310)
!6312 = !DILocation(line: 1923, column: 20, scope: !6310)
!6313 = !DILocation(line: 1923, column: 18, scope: !6310)
!6314 = !DILocation(line: 1923, column: 7, scope: !6283)
!6315 = !DILocation(line: 1924, column: 8, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1923, column: 27)
!6317 = !DILocation(line: 1925, column: 3, scope: !6316)
!6318 = !DILocation(line: 1927, column: 4, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1926, column: 8)
!6320 = !DILocation(line: 1927, column: 11, scope: !6319)
!6321 = !DILocation(line: 1927, column: 16, scope: !6319)
!6322 = !DILocation(line: 1927, column: 21, scope: !6319)
!6323 = !DILocation(line: 1927, column: 24, scope: !6319)
!6324 = !DILocation(line: 1927, column: 29, scope: !6319)
!6325 = !DILocation(line: 1927, column: 35, scope: !6319)
!6326 = !DILocation(line: 1927, column: 43, scope: !6319)
!6327 = !DILocation(line: 1927, column: 41, scope: !6319)
!6328 = !DILocation(line: 0, scope: !6319)
!6329 = !DILocation(line: 1928, column: 10, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 1927, column: 50)
!6331 = !DILocation(line: 1928, column: 15, scope: !6330)
!6332 = !DILocation(line: 1928, column: 8, scope: !6330)
!6333 = distinct !{!6333, !6318, !6334}
!6334 = !DILocation(line: 1929, column: 4, scope: !6319)
!6335 = !DILocation(line: 1932, column: 8, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1932, column: 7)
!6337 = !DILocation(line: 1932, column: 7, scope: !6283)
!6338 = !DILocation(line: 1933, column: 5, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1932, column: 13)
!6340 = !DILocation(line: 1933, column: 10, scope: !6339)
!6341 = !DILocation(line: 1934, column: 12, scope: !6339)
!6342 = !DILocation(line: 1934, column: 16, scope: !6339)
!6343 = !DILocation(line: 1934, column: 5, scope: !6339)
!6344 = !DILocation(line: 1934, column: 10, scope: !6339)
!6345 = !DILocation(line: 1935, column: 3, scope: !6339)
!6346 = !DILocation(line: 1937, column: 12, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1936, column: 8)
!6348 = !DILocation(line: 1937, column: 16, scope: !6347)
!6349 = !DILocation(line: 1937, column: 5, scope: !6347)
!6350 = !DILocation(line: 1937, column: 10, scope: !6347)
!6351 = !DILocation(line: 1938, column: 12, scope: !6347)
!6352 = !DILocation(line: 1938, column: 17, scope: !6347)
!6353 = !DILocation(line: 1938, column: 5, scope: !6347)
!6354 = !DILocation(line: 1938, column: 10, scope: !6347)
!6355 = !DILocation(line: 1940, column: 2, scope: !6283)
!6356 = !DILocation(line: 1941, column: 1, scope: !6186)
!6357 = distinct !DISubprogram(name: "ptcache_read_stream", scope: !3, file: !3, line: 2109, type: !5950, scopeLine: 2110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!6358 = !DILocalVariable(name: "pid", arg: 1, scope: !6357, file: !3, line: 2109, type: !2797)
!6359 = !DILocation(line: 2109, column: 43, scope: !6357)
!6360 = !DILocalVariable(name: "cfra", arg: 2, scope: !6357, file: !3, line: 2109, type: !144)
!6361 = !DILocation(line: 2109, column: 52, scope: !6357)
!6362 = !DILocalVariable(name: "pf", scope: !6357, file: !3, line: 2111, type: !1087)
!6363 = !DILocation(line: 2111, column: 15, scope: !6357)
!6364 = !DILocation(line: 2111, column: 38, scope: !6357)
!6365 = !DILocation(line: 2111, column: 62, scope: !6357)
!6366 = !DILocation(line: 2111, column: 20, scope: !6357)
!6367 = !DILocalVariable(name: "error", scope: !6357, file: !3, line: 2112, type: !144)
!6368 = !DILocation(line: 2112, column: 6, scope: !6357)
!6369 = !DILocation(line: 2114, column: 6, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 2114, column: 6)
!6371 = !DILocation(line: 2114, column: 11, scope: !6370)
!6372 = !DILocation(line: 2114, column: 23, scope: !6370)
!6373 = !DILocation(line: 2114, column: 6, scope: !6357)
!6374 = !DILocation(line: 2115, column: 3, scope: !6370)
!6375 = !DILocation(line: 2117, column: 6, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 2117, column: 6)
!6377 = !DILocation(line: 2117, column: 9, scope: !6376)
!6378 = !DILocation(line: 2117, column: 6, scope: !6357)
!6379 = !DILocation(line: 2118, column: 9, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2118, column: 7)
!6381 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 2117, column: 18)
!6382 = !DILocation(line: 2118, column: 15, scope: !6380)
!6383 = !DILocation(line: 2118, column: 7, scope: !6381)
!6384 = !DILocation(line: 2119, column: 4, scope: !6380)
!6385 = !DILocation(line: 2120, column: 3, scope: !6381)
!6386 = !DILocation(line: 2123, column: 38, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 2123, column: 6)
!6388 = !DILocation(line: 2123, column: 7, scope: !6387)
!6389 = !DILocation(line: 2123, column: 6, scope: !6357)
!6390 = !DILocation(line: 2124, column: 3, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2123, column: 43)
!6392 = !DILocation(line: 2124, column: 8, scope: !6391)
!6393 = !DILocation(line: 2124, column: 14, scope: !6391)
!6394 = !DILocation(line: 2124, column: 19, scope: !6391)
!6395 = !DILocation(line: 2125, column: 9, scope: !6391)
!6396 = !DILocation(line: 2126, column: 2, scope: !6391)
!6397 = !DILocation(line: 2127, column: 11, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2127, column: 11)
!6399 = !DILocation(line: 2127, column: 15, scope: !6398)
!6400 = !DILocation(line: 2127, column: 23, scope: !6398)
!6401 = !DILocation(line: 2127, column: 28, scope: !6398)
!6402 = !DILocation(line: 2127, column: 20, scope: !6398)
!6403 = !DILocation(line: 2127, column: 11, scope: !6387)
!6404 = !DILocation(line: 2128, column: 3, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2127, column: 34)
!6406 = !DILocation(line: 2128, column: 8, scope: !6405)
!6407 = !DILocation(line: 2128, column: 14, scope: !6405)
!6408 = !DILocation(line: 2128, column: 19, scope: !6405)
!6409 = !DILocation(line: 2129, column: 9, scope: !6405)
!6410 = !DILocation(line: 2130, column: 2, scope: !6405)
!6411 = !DILocation(line: 2131, column: 12, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2131, column: 11)
!6413 = !DILocation(line: 2131, column: 17, scope: !6412)
!6414 = !DILocation(line: 2131, column: 29, scope: !6412)
!6415 = !DILocation(line: 2131, column: 11, scope: !6398)
!6416 = !DILocation(line: 2132, column: 3, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2131, column: 34)
!6418 = !DILocation(line: 2132, column: 8, scope: !6417)
!6419 = !DILocation(line: 2132, column: 14, scope: !6417)
!6420 = !DILocation(line: 2132, column: 19, scope: !6417)
!6421 = !DILocation(line: 2133, column: 9, scope: !6417)
!6422 = !DILocation(line: 2134, column: 2, scope: !6417)
!6423 = !DILocation(line: 2135, column: 11, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2135, column: 11)
!6425 = !DILocation(line: 2135, column: 15, scope: !6424)
!6426 = !DILocation(line: 2135, column: 27, scope: !6424)
!6427 = !DILocation(line: 2135, column: 32, scope: !6424)
!6428 = !DILocation(line: 2135, column: 41, scope: !6424)
!6429 = !DILocation(line: 2135, column: 46, scope: !6424)
!6430 = !DILocation(line: 2135, column: 56, scope: !6424)
!6431 = !DILocation(line: 2135, column: 24, scope: !6424)
!6432 = !DILocation(line: 2135, column: 11, scope: !6412)
!6433 = !DILocation(line: 2136, column: 3, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 2135, column: 63)
!6435 = !DILocation(line: 2136, column: 8, scope: !6434)
!6436 = !DILocation(line: 2136, column: 14, scope: !6434)
!6437 = !DILocation(line: 2136, column: 19, scope: !6434)
!6438 = !DILocation(line: 2137, column: 9, scope: !6434)
!6439 = !DILocation(line: 2138, column: 2, scope: !6434)
!6440 = !DILocation(line: 2140, column: 7, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 2140, column: 6)
!6442 = !DILocation(line: 2140, column: 6, scope: !6357)
!6443 = !DILocation(line: 2141, column: 30, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 2140, column: 14)
!6445 = !DILocation(line: 2141, column: 3, scope: !6444)
!6446 = !DILocation(line: 2144, column: 8, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2144, column: 7)
!6448 = !DILocation(line: 2144, column: 13, scope: !6447)
!6449 = !DILocation(line: 2144, column: 25, scope: !6447)
!6450 = !DILocation(line: 2144, column: 29, scope: !6447)
!6451 = !DILocation(line: 2144, column: 34, scope: !6447)
!6452 = !DILocation(line: 2144, column: 7, scope: !6444)
!6453 = !DILocation(line: 2145, column: 4, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2144, column: 45)
!6455 = !DILocation(line: 2145, column: 9, scope: !6454)
!6456 = !DILocation(line: 2145, column: 15, scope: !6454)
!6457 = !DILocation(line: 2145, column: 20, scope: !6454)
!6458 = !DILocation(line: 2146, column: 10, scope: !6454)
!6459 = !DILocation(line: 2147, column: 3, scope: !6454)
!6460 = !DILocation(line: 2148, column: 2, scope: !6444)
!6461 = !DILocation(line: 2150, column: 21, scope: !6357)
!6462 = !DILocation(line: 2150, column: 2, scope: !6357)
!6463 = !DILocation(line: 2152, column: 9, scope: !6357)
!6464 = !DILocation(line: 2152, column: 15, scope: !6357)
!6465 = !DILocation(line: 2152, column: 2, scope: !6357)
!6466 = !DILocation(line: 2153, column: 1, scope: !6357)
!6467 = distinct !DISubprogram(name: "ptcache_interpolate", scope: !3, file: !3, line: 2208, type: !6468, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!144, !2797, !256, !144, !144}
!6470 = !DILocalVariable(name: "pid", arg: 1, scope: !6467, file: !3, line: 2208, type: !2797)
!6471 = !DILocation(line: 2208, column: 43, scope: !6467)
!6472 = !DILocalVariable(name: "cfra", arg: 2, scope: !6467, file: !3, line: 2208, type: !256)
!6473 = !DILocation(line: 2208, column: 54, scope: !6467)
!6474 = !DILocalVariable(name: "cfra1", arg: 3, scope: !6467, file: !3, line: 2208, type: !144)
!6475 = !DILocation(line: 2208, column: 64, scope: !6467)
!6476 = !DILocalVariable(name: "cfra2", arg: 4, scope: !6467, file: !3, line: 2208, type: !144)
!6477 = !DILocation(line: 2208, column: 75, scope: !6467)
!6478 = !DILocalVariable(name: "pm", scope: !6467, file: !3, line: 2210, type: !3946)
!6479 = !DILocation(line: 2210, column: 14, scope: !6467)
!6480 = !DILocalVariable(name: "i", scope: !6467, file: !3, line: 2211, type: !144)
!6481 = !DILocation(line: 2211, column: 6, scope: !6467)
!6482 = !DILocalVariable(name: "index", scope: !6467, file: !3, line: 2212, type: !868)
!6483 = !DILocation(line: 2212, column: 7, scope: !6467)
!6484 = !DILocation(line: 2215, column: 6, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 2215, column: 6)
!6486 = !DILocation(line: 2215, column: 11, scope: !6485)
!6487 = !DILocation(line: 2215, column: 18, scope: !6485)
!6488 = !DILocation(line: 2215, column: 23, scope: !6485)
!6489 = !DILocation(line: 2215, column: 6, scope: !6467)
!6490 = !DILocation(line: 2216, column: 34, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 2215, column: 45)
!6492 = !DILocation(line: 2216, column: 39, scope: !6491)
!6493 = !DILocation(line: 2216, column: 8, scope: !6491)
!6494 = !DILocation(line: 2216, column: 6, scope: !6491)
!6495 = !DILocation(line: 2217, column: 2, scope: !6491)
!6496 = !DILocation(line: 2219, column: 8, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 2218, column: 7)
!6498 = !DILocation(line: 2219, column: 13, scope: !6497)
!6499 = !DILocation(line: 2219, column: 20, scope: !6497)
!6500 = !DILocation(line: 2219, column: 30, scope: !6497)
!6501 = !DILocation(line: 2219, column: 6, scope: !6497)
!6502 = !DILocation(line: 2221, column: 3, scope: !6497)
!6503 = !DILocation(line: 2221, column: 10, scope: !6497)
!6504 = !DILocation(line: 2221, column: 13, scope: !6497)
!6505 = !DILocation(line: 2221, column: 16, scope: !6497)
!6506 = !DILocation(line: 2221, column: 20, scope: !6497)
!6507 = !DILocation(line: 2221, column: 29, scope: !6497)
!6508 = !DILocation(line: 2221, column: 26, scope: !6497)
!6509 = !DILocation(line: 0, scope: !6497)
!6510 = !DILocation(line: 2222, column: 9, scope: !6497)
!6511 = !DILocation(line: 2222, column: 13, scope: !6497)
!6512 = !DILocation(line: 2222, column: 7, scope: !6497)
!6513 = distinct !{!6513, !6502, !6511}
!6514 = !DILocation(line: 2226, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 2226, column: 6)
!6516 = !DILocation(line: 2226, column: 6, scope: !6467)
!6517 = !DILocalVariable(name: "totpoint", scope: !6518, file: !3, line: 2227, type: !144)
!6518 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2226, column: 10)
!6519 = !DILocation(line: 2227, column: 7, scope: !6518)
!6520 = !DILocation(line: 2227, column: 18, scope: !6518)
!6521 = !DILocation(line: 2227, column: 22, scope: !6518)
!6522 = !DILocation(line: 2229, column: 8, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 2229, column: 7)
!6524 = !DILocation(line: 2229, column: 13, scope: !6523)
!6525 = !DILocation(line: 2229, column: 24, scope: !6523)
!6526 = !DILocation(line: 2229, column: 49, scope: !6523)
!6527 = !DILocation(line: 2229, column: 7, scope: !6518)
!6528 = !DILocalVariable(name: "pid_totpoint", scope: !6529, file: !3, line: 2230, type: !144)
!6529 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2229, column: 55)
!6530 = !DILocation(line: 2230, column: 8, scope: !6529)
!6531 = !DILocation(line: 2230, column: 23, scope: !6529)
!6532 = !DILocation(line: 2230, column: 28, scope: !6529)
!6533 = !DILocation(line: 2230, column: 37, scope: !6529)
!6534 = !DILocation(line: 2230, column: 42, scope: !6529)
!6535 = !DILocation(line: 2230, column: 57, scope: !6529)
!6536 = !DILocation(line: 2230, column: 52, scope: !6529)
!6537 = !DILocation(line: 2232, column: 8, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 2232, column: 8)
!6539 = !DILocation(line: 2232, column: 20, scope: !6538)
!6540 = !DILocation(line: 2232, column: 17, scope: !6538)
!6541 = !DILocation(line: 2232, column: 8, scope: !6529)
!6542 = !DILocation(line: 2233, column: 5, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2232, column: 34)
!6544 = !DILocation(line: 2233, column: 10, scope: !6543)
!6545 = !DILocation(line: 2233, column: 16, scope: !6543)
!6546 = !DILocation(line: 2233, column: 21, scope: !6543)
!6547 = !DILocation(line: 2234, column: 16, scope: !6543)
!6548 = !DILocation(line: 2234, column: 14, scope: !6543)
!6549 = !DILocation(line: 2235, column: 4, scope: !6543)
!6550 = !DILocation(line: 2236, column: 3, scope: !6529)
!6551 = !DILocation(line: 2238, column: 33, scope: !6518)
!6552 = !DILocation(line: 2238, column: 3, scope: !6518)
!6553 = !DILocation(line: 2240, column: 9, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 2240, column: 3)
!6555 = !DILocation(line: 2240, column: 8, scope: !6554)
!6556 = !DILocation(line: 2240, column: 13, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2240, column: 3)
!6558 = !DILocation(line: 2240, column: 15, scope: !6557)
!6559 = !DILocation(line: 2240, column: 14, scope: !6557)
!6560 = !DILocation(line: 2240, column: 3, scope: !6554)
!6561 = !DILocation(line: 2241, column: 8, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 2241, column: 8)
!6563 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 2240, column: 30)
!6564 = !DILocation(line: 2241, column: 12, scope: !6562)
!6565 = !DILocation(line: 2241, column: 23, scope: !6562)
!6566 = !DILocation(line: 2241, column: 8, scope: !6563)
!6567 = !DILocation(line: 2242, column: 13, scope: !6562)
!6568 = !DILocation(line: 2242, column: 17, scope: !6562)
!6569 = !DILocation(line: 2242, column: 11, scope: !6562)
!6570 = !DILocation(line: 2242, column: 5, scope: !6562)
!6571 = !DILocation(line: 2244, column: 4, scope: !6563)
!6572 = !DILocation(line: 2244, column: 9, scope: !6563)
!6573 = !DILocation(line: 2244, column: 28, scope: !6563)
!6574 = !DILocation(line: 2244, column: 27, scope: !6563)
!6575 = !DILocation(line: 2244, column: 35, scope: !6563)
!6576 = !DILocation(line: 2244, column: 40, scope: !6563)
!6577 = !DILocation(line: 2244, column: 50, scope: !6563)
!6578 = !DILocation(line: 2244, column: 54, scope: !6563)
!6579 = !DILocation(line: 2244, column: 59, scope: !6563)
!6580 = !DILocation(line: 2244, column: 72, scope: !6563)
!6581 = !DILocation(line: 2244, column: 65, scope: !6563)
!6582 = !DILocation(line: 2244, column: 86, scope: !6563)
!6583 = !DILocation(line: 2244, column: 79, scope: !6563)
!6584 = !DILocation(line: 2245, column: 34, scope: !6563)
!6585 = !DILocation(line: 2245, column: 4, scope: !6563)
!6586 = !DILocation(line: 2246, column: 3, scope: !6563)
!6587 = !DILocation(line: 2240, column: 26, scope: !6557)
!6588 = !DILocation(line: 2240, column: 3, scope: !6557)
!6589 = distinct !{!6589, !6560, !6590}
!6590 = !DILocation(line: 2246, column: 3, scope: !6554)
!6591 = !DILocation(line: 2248, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 2248, column: 7)
!6593 = !DILocation(line: 2248, column: 12, scope: !6592)
!6594 = !DILocation(line: 2248, column: 35, scope: !6592)
!6595 = !DILocation(line: 2248, column: 38, scope: !6592)
!6596 = !DILocation(line: 2248, column: 42, scope: !6592)
!6597 = !DILocation(line: 2248, column: 52, scope: !6592)
!6598 = !DILocation(line: 2248, column: 7, scope: !6518)
!6599 = !DILocation(line: 2249, column: 4, scope: !6592)
!6600 = !DILocation(line: 2249, column: 9, scope: !6592)
!6601 = !DILocation(line: 2249, column: 32, scope: !6592)
!6602 = !DILocation(line: 2249, column: 37, scope: !6592)
!6603 = !DILocation(line: 2249, column: 47, scope: !6592)
!6604 = !DILocation(line: 2249, column: 51, scope: !6592)
!6605 = !DILocation(line: 2249, column: 64, scope: !6592)
!6606 = !DILocation(line: 2249, column: 57, scope: !6592)
!6607 = !DILocation(line: 2249, column: 78, scope: !6592)
!6608 = !DILocation(line: 2249, column: 71, scope: !6592)
!6609 = !DILocation(line: 2252, column: 7, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 2252, column: 7)
!6611 = !DILocation(line: 2252, column: 12, scope: !6610)
!6612 = !DILocation(line: 2252, column: 19, scope: !6610)
!6613 = !DILocation(line: 2252, column: 24, scope: !6610)
!6614 = !DILocation(line: 2252, column: 7, scope: !6518)
!6615 = !DILocation(line: 2253, column: 22, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 2252, column: 46)
!6617 = !DILocation(line: 2253, column: 4, scope: !6616)
!6618 = !DILocation(line: 2254, column: 23, scope: !6616)
!6619 = !DILocation(line: 2254, column: 4, scope: !6616)
!6620 = !DILocation(line: 2255, column: 4, scope: !6616)
!6621 = !DILocation(line: 2255, column: 14, scope: !6616)
!6622 = !DILocation(line: 2256, column: 3, scope: !6616)
!6623 = !DILocation(line: 2257, column: 2, scope: !6518)
!6624 = !DILocation(line: 2259, column: 2, scope: !6467)
!6625 = distinct !DISubprogram(name: "BKE_ptcache_id_clear", scope: !3, file: !3, line: 2532, type: !6626, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{null, !2797, !144, !7}
!6628 = !DILocalVariable(name: "pid", arg: 1, scope: !6625, file: !3, line: 2532, type: !2797)
!6629 = !DILocation(line: 2532, column: 38, scope: !6625)
!6630 = !DILocalVariable(name: "mode", arg: 2, scope: !6625, file: !3, line: 2532, type: !144)
!6631 = !DILocation(line: 2532, column: 47, scope: !6625)
!6632 = !DILocalVariable(name: "cfra", arg: 3, scope: !6625, file: !3, line: 2532, type: !7)
!6633 = !DILocation(line: 2532, column: 66, scope: !6625)
!6634 = !DILocalVariable(name: "len", scope: !6625, file: !3, line: 2534, type: !7)
!6635 = !DILocation(line: 2534, column: 15, scope: !6625)
!6636 = !DILocalVariable(name: "sta", scope: !6625, file: !3, line: 2535, type: !7)
!6637 = !DILocation(line: 2535, column: 15, scope: !6625)
!6638 = !DILocalVariable(name: "end", scope: !6625, file: !3, line: 2535, type: !7)
!6639 = !DILocation(line: 2535, column: 20, scope: !6625)
!6640 = !DILocalVariable(name: "dir", scope: !6625, file: !3, line: 2538, type: !6641)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !6643, line: 127, baseType: !6644)
!6643 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!6644 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !6643, line: 127, flags: DIFlagFwdDecl)
!6645 = !DILocation(line: 2538, column: 7, scope: !6625)
!6646 = !DILocalVariable(name: "de", scope: !6625, file: !3, line: 2539, type: !6647)
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6648, size: 64)
!6648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !6649, line: 22, size: 2240, elements: !6650)
!6649 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!6650 = !{!6651, !6653, !6654, !6655, !6656}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !6648, file: !6649, line: 25, baseType: !6652, size: 64)
!6652 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1119, line: 148, baseType: !1141)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !6648, file: !6649, line: 26, baseType: !1118, size: 64, offset: 64)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !6648, file: !6649, line: 31, baseType: !409, size: 16, offset: 128)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !6648, file: !6649, line: 32, baseType: !1610, size: 8, offset: 144)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !6648, file: !6649, line: 33, baseType: !2723, size: 2048, offset: 152)
!6657 = !DILocation(line: 2539, column: 17, scope: !6625)
!6658 = !DILocalVariable(name: "path", scope: !6625, file: !3, line: 2540, type: !177)
!6659 = !DILocation(line: 2540, column: 7, scope: !6625)
!6660 = !DILocalVariable(name: "filename", scope: !6625, file: !3, line: 2541, type: !6146)
!6661 = !DILocation(line: 2541, column: 7, scope: !6625)
!6662 = !DILocalVariable(name: "path_full", scope: !6625, file: !3, line: 2542, type: !6146)
!6663 = !DILocation(line: 2542, column: 7, scope: !6625)
!6664 = !DILocalVariable(name: "ext", scope: !6625, file: !3, line: 2543, type: !177)
!6665 = !DILocation(line: 2543, column: 7, scope: !6625)
!6666 = !DILocation(line: 2545, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2545, column: 6)
!6668 = !DILocation(line: 2545, column: 11, scope: !6667)
!6669 = !DILocation(line: 2545, column: 15, scope: !6667)
!6670 = !DILocation(line: 2545, column: 20, scope: !6667)
!6671 = !DILocation(line: 2545, column: 26, scope: !6667)
!6672 = !DILocation(line: 2545, column: 29, scope: !6667)
!6673 = !DILocation(line: 2545, column: 34, scope: !6667)
!6674 = !DILocation(line: 2545, column: 41, scope: !6667)
!6675 = !DILocation(line: 2545, column: 46, scope: !6667)
!6676 = !DILocation(line: 2545, column: 6, scope: !6625)
!6677 = !DILocation(line: 2546, column: 3, scope: !6667)
!6678 = !DILocation(line: 2548, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2548, column: 6)
!6680 = !DILocation(line: 2548, column: 11, scope: !6679)
!6681 = !DILocation(line: 2548, column: 18, scope: !6679)
!6682 = !DILocation(line: 2548, column: 23, scope: !6679)
!6683 = !DILocation(line: 2548, column: 6, scope: !6625)
!6684 = !DILocation(line: 2549, column: 3, scope: !6679)
!6685 = !DILocation(line: 2551, column: 8, scope: !6625)
!6686 = !DILocation(line: 2551, column: 13, scope: !6625)
!6687 = !DILocation(line: 2551, column: 20, scope: !6625)
!6688 = !DILocation(line: 2551, column: 6, scope: !6625)
!6689 = !DILocation(line: 2552, column: 8, scope: !6625)
!6690 = !DILocation(line: 2552, column: 13, scope: !6625)
!6691 = !DILocation(line: 2552, column: 20, scope: !6625)
!6692 = !DILocation(line: 2552, column: 6, scope: !6625)
!6693 = !DILocation(line: 2563, column: 10, scope: !6625)
!6694 = !DILocation(line: 2563, column: 2, scope: !6625)
!6695 = !DILocation(line: 2567, column: 7, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2567, column: 7)
!6697 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2563, column: 16)
!6698 = !DILocation(line: 2567, column: 12, scope: !6696)
!6699 = !DILocation(line: 2567, column: 19, scope: !6696)
!6700 = !DILocation(line: 2567, column: 24, scope: !6696)
!6701 = !DILocation(line: 2567, column: 7, scope: !6697)
!6702 = !DILocation(line: 2568, column: 17, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 2567, column: 46)
!6704 = !DILocation(line: 2568, column: 22, scope: !6703)
!6705 = !DILocation(line: 2568, column: 4, scope: !6703)
!6706 = !DILocation(line: 2570, column: 27, scope: !6703)
!6707 = !DILocation(line: 2570, column: 32, scope: !6703)
!6708 = !DILocation(line: 2570, column: 42, scope: !6703)
!6709 = !DILocation(line: 2570, column: 10, scope: !6703)
!6710 = !DILocation(line: 2570, column: 8, scope: !6703)
!6711 = !DILocation(line: 2572, column: 18, scope: !6703)
!6712 = !DILocation(line: 2572, column: 10, scope: !6703)
!6713 = !DILocation(line: 2572, column: 8, scope: !6703)
!6714 = !DILocation(line: 2573, column: 8, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2573, column: 8)
!6716 = !DILocation(line: 2573, column: 11, scope: !6715)
!6717 = !DILocation(line: 2573, column: 8, scope: !6703)
!6718 = !DILocation(line: 2574, column: 5, scope: !6715)
!6719 = !DILocation(line: 2576, column: 17, scope: !6703)
!6720 = !DILocation(line: 2576, column: 55, scope: !6703)
!6721 = !DILocation(line: 2576, column: 60, scope: !6703)
!6722 = !DILocation(line: 2576, column: 4, scope: !6703)
!6723 = !DILocation(line: 2578, column: 4, scope: !6703)
!6724 = !DILocation(line: 2578, column: 25, scope: !6703)
!6725 = !DILocation(line: 2578, column: 17, scope: !6703)
!6726 = !DILocation(line: 2578, column: 15, scope: !6703)
!6727 = !DILocation(line: 2578, column: 31, scope: !6703)
!6728 = !DILocation(line: 2579, column: 16, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2579, column: 9)
!6730 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2578, column: 40)
!6731 = !DILocation(line: 2579, column: 20, scope: !6729)
!6732 = !DILocation(line: 2579, column: 28, scope: !6729)
!6733 = !DILocation(line: 2579, column: 9, scope: !6729)
!6734 = !DILocation(line: 2579, column: 9, scope: !6730)
!6735 = !DILocation(line: 2580, column: 18, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 2580, column: 10)
!6737 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2579, column: 34)
!6738 = !DILocation(line: 2580, column: 28, scope: !6736)
!6739 = !DILocation(line: 2580, column: 32, scope: !6736)
!6740 = !DILocation(line: 2580, column: 40, scope: !6736)
!6741 = !DILocation(line: 2580, column: 10, scope: !6736)
!6742 = !DILocation(line: 2580, column: 46, scope: !6736)
!6743 = !DILocation(line: 2580, column: 10, scope: !6737)
!6744 = !DILocation(line: 2581, column: 11, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2581, column: 11)
!6746 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 2580, column: 52)
!6747 = !DILocation(line: 2581, column: 16, scope: !6745)
!6748 = !DILocation(line: 2581, column: 11, scope: !6746)
!6749 = !DILocation(line: 2582, column: 33, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 2581, column: 38)
!6751 = !DILocation(line: 2582, column: 8, scope: !6750)
!6752 = !DILocation(line: 2582, column: 13, scope: !6750)
!6753 = !DILocation(line: 2582, column: 20, scope: !6750)
!6754 = !DILocation(line: 2582, column: 31, scope: !6750)
!6755 = !DILocation(line: 2583, column: 25, scope: !6750)
!6756 = !DILocation(line: 2583, column: 55, scope: !6750)
!6757 = !DILocation(line: 2583, column: 61, scope: !6750)
!6758 = !DILocation(line: 2583, column: 65, scope: !6750)
!6759 = !DILocation(line: 2583, column: 8, scope: !6750)
!6760 = !DILocation(line: 2584, column: 19, scope: !6750)
!6761 = !DILocation(line: 2584, column: 8, scope: !6750)
!6762 = !DILocation(line: 2585, column: 7, scope: !6750)
!6763 = !DILocalVariable(name: "frame", scope: !6764, file: !3, line: 2588, type: !7)
!6764 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 2586, column: 12)
!6765 = !DILocation(line: 2588, column: 21, scope: !6764)
!6766 = !DILocalVariable(name: "len2", scope: !6764, file: !3, line: 2588, type: !7)
!6767 = !DILocation(line: 2588, column: 28, scope: !6764)
!6768 = !DILocation(line: 2588, column: 47, scope: !6764)
!6769 = !DILocation(line: 2588, column: 51, scope: !6764)
!6770 = !DILocation(line: 2588, column: 40, scope: !6764)
!6771 = !DILocation(line: 2588, column: 35, scope: !6764)
!6772 = !DILocalVariable(name: "num", scope: !6764, file: !3, line: 2589, type: !663)
!6773 = !DILocation(line: 2589, column: 13, scope: !6764)
!6774 = !DILocation(line: 2591, column: 12, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2591, column: 12)
!6776 = !DILocation(line: 2591, column: 17, scope: !6775)
!6777 = !DILocation(line: 2591, column: 12, scope: !6764)
!6778 = !DILocation(line: 2592, column: 21, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 2591, column: 23)
!6780 = !DILocation(line: 2592, column: 26, scope: !6779)
!6781 = !DILocation(line: 2592, column: 30, scope: !6779)
!6782 = !DILocation(line: 2592, column: 47, scope: !6779)
!6783 = !DILocation(line: 2592, column: 51, scope: !6779)
!6784 = !DILocation(line: 2592, column: 40, scope: !6779)
!6785 = !DILocation(line: 2592, column: 59, scope: !6779)
!6786 = !DILocation(line: 2592, column: 37, scope: !6779)
!6787 = !DILocation(line: 2592, column: 9, scope: !6779)
!6788 = !DILocation(line: 2593, column: 22, scope: !6779)
!6789 = !DILocation(line: 2593, column: 17, scope: !6779)
!6790 = !DILocation(line: 2593, column: 15, scope: !6779)
!6791 = !DILocation(line: 2595, column: 14, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2595, column: 13)
!6793 = !DILocation(line: 2595, column: 19, scope: !6792)
!6794 = !DILocation(line: 2595, column: 43, scope: !6792)
!6795 = !DILocation(line: 2595, column: 46, scope: !6792)
!6796 = !DILocation(line: 2595, column: 54, scope: !6792)
!6797 = !DILocation(line: 2595, column: 52, scope: !6792)
!6798 = !DILocation(line: 2595, column: 60, scope: !6792)
!6799 = !DILocation(line: 2596, column: 14, scope: !6792)
!6800 = !DILocation(line: 2596, column: 19, scope: !6792)
!6801 = !DILocation(line: 2596, column: 42, scope: !6792)
!6802 = !DILocation(line: 2596, column: 45, scope: !6792)
!6803 = !DILocation(line: 2596, column: 53, scope: !6792)
!6804 = !DILocation(line: 2596, column: 51, scope: !6792)
!6805 = !DILocation(line: 2595, column: 13, scope: !6779)
!6806 = !DILocation(line: 2599, column: 27, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2597, column: 9)
!6808 = !DILocation(line: 2599, column: 57, scope: !6807)
!6809 = !DILocation(line: 2599, column: 63, scope: !6807)
!6810 = !DILocation(line: 2599, column: 67, scope: !6807)
!6811 = !DILocation(line: 2599, column: 10, scope: !6807)
!6812 = !DILocation(line: 2600, column: 21, scope: !6807)
!6813 = !DILocation(line: 2600, column: 10, scope: !6807)
!6814 = !DILocation(line: 2601, column: 14, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 2601, column: 14)
!6816 = !DILocation(line: 2601, column: 19, scope: !6815)
!6817 = !DILocation(line: 2601, column: 26, scope: !6815)
!6818 = !DILocation(line: 2601, column: 40, scope: !6815)
!6819 = !DILocation(line: 2601, column: 43, scope: !6815)
!6820 = !DILocation(line: 2601, column: 51, scope: !6815)
!6821 = !DILocation(line: 2601, column: 49, scope: !6815)
!6822 = !DILocation(line: 2601, column: 55, scope: !6815)
!6823 = !DILocation(line: 2601, column: 58, scope: !6815)
!6824 = !DILocation(line: 2601, column: 67, scope: !6815)
!6825 = !DILocation(line: 2601, column: 64, scope: !6815)
!6826 = !DILocation(line: 2601, column: 14, scope: !6807)
!6827 = !DILocation(line: 2602, column: 11, scope: !6815)
!6828 = !DILocation(line: 2602, column: 16, scope: !6815)
!6829 = !DILocation(line: 2602, column: 23, scope: !6815)
!6830 = !DILocation(line: 2602, column: 37, scope: !6815)
!6831 = !DILocation(line: 2602, column: 43, scope: !6815)
!6832 = !DILocation(line: 2602, column: 42, scope: !6815)
!6833 = !DILocation(line: 2602, column: 48, scope: !6815)
!6834 = !DILocation(line: 2603, column: 9, scope: !6807)
!6835 = !DILocation(line: 2604, column: 8, scope: !6779)
!6836 = !DILocation(line: 2606, column: 6, scope: !6746)
!6837 = !DILocation(line: 2607, column: 5, scope: !6737)
!6838 = distinct !{!6838, !6723, !6839}
!6839 = !DILocation(line: 2608, column: 4, scope: !6703)
!6840 = !DILocation(line: 2609, column: 13, scope: !6703)
!6841 = !DILocation(line: 2609, column: 4, scope: !6703)
!6842 = !DILocation(line: 2611, column: 8, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2611, column: 8)
!6844 = !DILocation(line: 2611, column: 13, scope: !6843)
!6845 = !DILocation(line: 2611, column: 34, scope: !6843)
!6846 = !DILocation(line: 2611, column: 37, scope: !6843)
!6847 = !DILocation(line: 2611, column: 42, scope: !6843)
!6848 = !DILocation(line: 2611, column: 49, scope: !6843)
!6849 = !DILocation(line: 2611, column: 8, scope: !6703)
!6850 = !DILocation(line: 2612, column: 12, scope: !6843)
!6851 = !DILocation(line: 2612, column: 17, scope: !6843)
!6852 = !DILocation(line: 2612, column: 24, scope: !6843)
!6853 = !DILocation(line: 2612, column: 42, scope: !6843)
!6854 = !DILocation(line: 2612, column: 57, scope: !6843)
!6855 = !DILocation(line: 2612, column: 62, scope: !6843)
!6856 = !DILocation(line: 2612, column: 69, scope: !6843)
!6857 = !DILocation(line: 2612, column: 5, scope: !6843)
!6858 = !DILocation(line: 2613, column: 3, scope: !6703)
!6859 = !DILocalVariable(name: "pm", scope: !6860, file: !3, line: 2615, type: !3946)
!6860 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 2614, column: 8)
!6861 = !DILocation(line: 2615, column: 16, scope: !6860)
!6862 = !DILocation(line: 2615, column: 20, scope: !6860)
!6863 = !DILocation(line: 2615, column: 25, scope: !6860)
!6864 = !DILocation(line: 2615, column: 32, scope: !6860)
!6865 = !DILocation(line: 2615, column: 42, scope: !6860)
!6866 = !DILocalVariable(name: "link", scope: !6860, file: !3, line: 2616, type: !3946)
!6867 = !DILocation(line: 2616, column: 16, scope: !6860)
!6868 = !DILocation(line: 2618, column: 8, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2618, column: 8)
!6870 = !DILocation(line: 2618, column: 13, scope: !6869)
!6871 = !DILocation(line: 2618, column: 8, scope: !6860)
!6872 = !DILocation(line: 2620, column: 30, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 2618, column: 35)
!6874 = !DILocation(line: 2620, column: 5, scope: !6873)
!6875 = !DILocation(line: 2620, column: 10, scope: !6873)
!6876 = !DILocation(line: 2620, column: 17, scope: !6873)
!6877 = !DILocation(line: 2620, column: 28, scope: !6873)
!6878 = !DILocation(line: 2621, column: 5, scope: !6873)
!6879 = !DILocation(line: 2621, column: 12, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 2621, column: 5)
!6881 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 2621, column: 5)
!6882 = !DILocation(line: 2621, column: 5, scope: !6881)
!6883 = !DILocation(line: 2622, column: 24, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 2621, column: 29)
!6885 = !DILocation(line: 2622, column: 6, scope: !6884)
!6886 = !DILocation(line: 2623, column: 25, scope: !6884)
!6887 = !DILocation(line: 2623, column: 6, scope: !6884)
!6888 = !DILocation(line: 2624, column: 5, scope: !6884)
!6889 = !DILocation(line: 2621, column: 19, scope: !6880)
!6890 = !DILocation(line: 2621, column: 23, scope: !6880)
!6891 = !DILocation(line: 2621, column: 18, scope: !6880)
!6892 = !DILocation(line: 2621, column: 5, scope: !6880)
!6893 = distinct !{!6893, !6882, !6894}
!6894 = !DILocation(line: 2624, column: 5, scope: !6881)
!6895 = !DILocation(line: 2625, column: 20, scope: !6873)
!6896 = !DILocation(line: 2625, column: 25, scope: !6873)
!6897 = !DILocation(line: 2625, column: 32, scope: !6873)
!6898 = !DILocation(line: 2625, column: 5, scope: !6873)
!6899 = !DILocation(line: 2627, column: 9, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 2627, column: 9)
!6901 = !DILocation(line: 2627, column: 14, scope: !6900)
!6902 = !DILocation(line: 2627, column: 21, scope: !6900)
!6903 = !DILocation(line: 2627, column: 9, scope: !6873)
!6904 = !DILocation(line: 2628, column: 13, scope: !6900)
!6905 = !DILocation(line: 2628, column: 18, scope: !6900)
!6906 = !DILocation(line: 2628, column: 25, scope: !6900)
!6907 = !DILocation(line: 2628, column: 43, scope: !6900)
!6908 = !DILocation(line: 2628, column: 58, scope: !6900)
!6909 = !DILocation(line: 2628, column: 63, scope: !6900)
!6910 = !DILocation(line: 2628, column: 70, scope: !6900)
!6911 = !DILocation(line: 2628, column: 6, scope: !6900)
!6912 = !DILocation(line: 2629, column: 4, scope: !6873)
!6913 = !DILocation(line: 2631, column: 5, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 2630, column: 9)
!6915 = !DILocation(line: 2631, column: 12, scope: !6914)
!6916 = !DILocation(line: 2632, column: 11, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 2632, column: 10)
!6918 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 2631, column: 16)
!6919 = !DILocation(line: 2632, column: 16, scope: !6917)
!6920 = !DILocation(line: 2632, column: 40, scope: !6917)
!6921 = !DILocation(line: 2632, column: 43, scope: !6917)
!6922 = !DILocation(line: 2632, column: 47, scope: !6917)
!6923 = !DILocation(line: 2632, column: 55, scope: !6917)
!6924 = !DILocation(line: 2632, column: 53, scope: !6917)
!6925 = !DILocation(line: 2632, column: 61, scope: !6917)
!6926 = !DILocation(line: 2633, column: 11, scope: !6917)
!6927 = !DILocation(line: 2633, column: 16, scope: !6917)
!6928 = !DILocation(line: 2633, column: 39, scope: !6917)
!6929 = !DILocation(line: 2633, column: 42, scope: !6917)
!6930 = !DILocation(line: 2633, column: 46, scope: !6917)
!6931 = !DILocation(line: 2633, column: 54, scope: !6917)
!6932 = !DILocation(line: 2633, column: 52, scope: !6917)
!6933 = !DILocation(line: 2632, column: 10, scope: !6918)
!6934 = !DILocation(line: 2635, column: 14, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 2634, column: 6)
!6936 = !DILocation(line: 2635, column: 12, scope: !6935)
!6937 = !DILocation(line: 2636, column: 11, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 2636, column: 11)
!6939 = !DILocation(line: 2636, column: 16, scope: !6938)
!6940 = !DILocation(line: 2636, column: 23, scope: !6938)
!6941 = !DILocation(line: 2636, column: 37, scope: !6938)
!6942 = !DILocation(line: 2636, column: 40, scope: !6938)
!6943 = !DILocation(line: 2636, column: 44, scope: !6938)
!6944 = !DILocation(line: 2636, column: 52, scope: !6938)
!6945 = !DILocation(line: 2636, column: 50, scope: !6938)
!6946 = !DILocation(line: 2636, column: 56, scope: !6938)
!6947 = !DILocation(line: 2636, column: 59, scope: !6938)
!6948 = !DILocation(line: 2636, column: 63, scope: !6938)
!6949 = !DILocation(line: 2636, column: 72, scope: !6938)
!6950 = !DILocation(line: 2636, column: 69, scope: !6938)
!6951 = !DILocation(line: 2636, column: 11, scope: !6935)
!6952 = !DILocation(line: 2637, column: 8, scope: !6938)
!6953 = !DILocation(line: 2637, column: 13, scope: !6938)
!6954 = !DILocation(line: 2637, column: 20, scope: !6938)
!6955 = !DILocation(line: 2637, column: 34, scope: !6938)
!6956 = !DILocation(line: 2637, column: 38, scope: !6938)
!6957 = !DILocation(line: 2637, column: 44, scope: !6938)
!6958 = !DILocation(line: 2637, column: 43, scope: !6938)
!6959 = !DILocation(line: 2637, column: 49, scope: !6938)
!6960 = !DILocation(line: 2638, column: 25, scope: !6935)
!6961 = !DILocation(line: 2638, column: 7, scope: !6935)
!6962 = !DILocation(line: 2639, column: 26, scope: !6935)
!6963 = !DILocation(line: 2639, column: 7, scope: !6935)
!6964 = !DILocation(line: 2640, column: 12, scope: !6935)
!6965 = !DILocation(line: 2640, column: 16, scope: !6935)
!6966 = !DILocation(line: 2640, column: 10, scope: !6935)
!6967 = !DILocation(line: 2641, column: 22, scope: !6935)
!6968 = !DILocation(line: 2641, column: 27, scope: !6935)
!6969 = !DILocation(line: 2641, column: 34, scope: !6935)
!6970 = !DILocation(line: 2641, column: 45, scope: !6935)
!6971 = !DILocation(line: 2641, column: 7, scope: !6935)
!6972 = !DILocation(line: 2642, column: 6, scope: !6935)
!6973 = !DILocation(line: 2644, column: 12, scope: !6917)
!6974 = !DILocation(line: 2644, column: 16, scope: !6917)
!6975 = !DILocation(line: 2644, column: 10, scope: !6917)
!6976 = distinct !{!6976, !6913, !6977}
!6977 = !DILocation(line: 2645, column: 5, scope: !6914)
!6978 = !DILocation(line: 2648, column: 3, scope: !6697)
!6979 = !DILocation(line: 2651, column: 7, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2651, column: 7)
!6981 = !DILocation(line: 2651, column: 12, scope: !6980)
!6982 = !DILocation(line: 2651, column: 19, scope: !6980)
!6983 = !DILocation(line: 2651, column: 24, scope: !6980)
!6984 = !DILocation(line: 2651, column: 7, scope: !6697)
!6985 = !DILocation(line: 2652, column: 29, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 2652, column: 8)
!6987 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 2651, column: 46)
!6988 = !DILocation(line: 2652, column: 34, scope: !6986)
!6989 = !DILocation(line: 2652, column: 8, scope: !6986)
!6990 = !DILocation(line: 2652, column: 8, scope: !6987)
!6991 = !DILocation(line: 2653, column: 22, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 2652, column: 41)
!6993 = !DILocation(line: 2653, column: 27, scope: !6992)
!6994 = !DILocation(line: 2653, column: 37, scope: !6992)
!6995 = !DILocation(line: 2653, column: 5, scope: !6992)
!6996 = !DILocation(line: 2654, column: 16, scope: !6992)
!6997 = !DILocation(line: 2654, column: 5, scope: !6992)
!6998 = !DILocation(line: 2655, column: 4, scope: !6992)
!6999 = !DILocation(line: 2656, column: 3, scope: !6987)
!7000 = !DILocalVariable(name: "pm", scope: !7001, file: !3, line: 2658, type: !3946)
!7001 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 2657, column: 8)
!7002 = !DILocation(line: 2658, column: 16, scope: !7001)
!7003 = !DILocation(line: 2658, column: 21, scope: !7001)
!7004 = !DILocation(line: 2658, column: 26, scope: !7001)
!7005 = !DILocation(line: 2658, column: 33, scope: !7001)
!7006 = !DILocation(line: 2658, column: 43, scope: !7001)
!7007 = !DILocation(line: 2660, column: 4, scope: !7001)
!7008 = !DILocation(line: 2660, column: 11, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2660, column: 4)
!7010 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2660, column: 4)
!7011 = !DILocation(line: 2660, column: 4, scope: !7010)
!7012 = !DILocation(line: 2661, column: 9, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 2661, column: 9)
!7014 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 2660, column: 28)
!7015 = !DILocation(line: 2661, column: 13, scope: !7013)
!7016 = !DILocation(line: 2661, column: 22, scope: !7013)
!7017 = !DILocation(line: 2661, column: 19, scope: !7013)
!7018 = !DILocation(line: 2661, column: 9, scope: !7014)
!7019 = !DILocation(line: 2662, column: 24, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 2661, column: 28)
!7021 = !DILocation(line: 2662, column: 6, scope: !7020)
!7022 = !DILocation(line: 2663, column: 25, scope: !7020)
!7023 = !DILocation(line: 2663, column: 6, scope: !7020)
!7024 = !DILocation(line: 2664, column: 21, scope: !7020)
!7025 = !DILocation(line: 2664, column: 26, scope: !7020)
!7026 = !DILocation(line: 2664, column: 33, scope: !7020)
!7027 = !DILocation(line: 2664, column: 44, scope: !7020)
!7028 = !DILocation(line: 2664, column: 6, scope: !7020)
!7029 = !DILocation(line: 2665, column: 6, scope: !7020)
!7030 = !DILocation(line: 2667, column: 4, scope: !7014)
!7031 = !DILocation(line: 2660, column: 18, scope: !7009)
!7032 = !DILocation(line: 2660, column: 22, scope: !7009)
!7033 = !DILocation(line: 2660, column: 17, scope: !7009)
!7034 = !DILocation(line: 2660, column: 4, scope: !7009)
!7035 = distinct !{!7035, !7011, !7036}
!7036 = !DILocation(line: 2667, column: 4, scope: !7010)
!7037 = !DILocation(line: 2669, column: 7, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 2669, column: 7)
!7039 = !DILocation(line: 2669, column: 12, scope: !7038)
!7040 = !DILocation(line: 2669, column: 19, scope: !7038)
!7041 = !DILocation(line: 2669, column: 33, scope: !7038)
!7042 = !DILocation(line: 2669, column: 36, scope: !7038)
!7043 = !DILocation(line: 2669, column: 44, scope: !7038)
!7044 = !DILocation(line: 2669, column: 41, scope: !7038)
!7045 = !DILocation(line: 2669, column: 48, scope: !7038)
!7046 = !DILocation(line: 2669, column: 51, scope: !7038)
!7047 = !DILocation(line: 2669, column: 59, scope: !7038)
!7048 = !DILocation(line: 2669, column: 56, scope: !7038)
!7049 = !DILocation(line: 2669, column: 7, scope: !6697)
!7050 = !DILocation(line: 2670, column: 4, scope: !7038)
!7051 = !DILocation(line: 2670, column: 9, scope: !7038)
!7052 = !DILocation(line: 2670, column: 16, scope: !7038)
!7053 = !DILocation(line: 2670, column: 30, scope: !7038)
!7054 = !DILocation(line: 2670, column: 35, scope: !7038)
!7055 = !DILocation(line: 2670, column: 34, scope: !7038)
!7056 = !DILocation(line: 2670, column: 40, scope: !7038)
!7057 = !DILocation(line: 2671, column: 3, scope: !6697)
!7058 = !DILocation(line: 2674, column: 26, scope: !6625)
!7059 = !DILocation(line: 2674, column: 2, scope: !6625)
!7060 = !DILocation(line: 2675, column: 1, scope: !6625)
!7061 = distinct !DISubprogram(name: "BKE_ptcache_write", scope: !3, file: !3, line: 2491, type: !7062, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!144, !2797, !7}
!7064 = !DILocalVariable(name: "pid", arg: 1, scope: !7061, file: !3, line: 2491, type: !2797)
!7065 = !DILocation(line: 2491, column: 34, scope: !7061)
!7066 = !DILocalVariable(name: "cfra", arg: 2, scope: !7061, file: !3, line: 2491, type: !7)
!7067 = !DILocation(line: 2491, column: 52, scope: !7061)
!7068 = !DILocalVariable(name: "cache", scope: !7061, file: !3, line: 2493, type: !7069)
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7070, size: 64)
!7070 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointCache", file: !432, line: 209, baseType: !932)
!7071 = !DILocation(line: 2493, column: 14, scope: !7061)
!7072 = !DILocation(line: 2493, column: 22, scope: !7061)
!7073 = !DILocation(line: 2493, column: 27, scope: !7061)
!7074 = !DILocalVariable(name: "totpoint", scope: !7061, file: !3, line: 2494, type: !144)
!7075 = !DILocation(line: 2494, column: 6, scope: !7061)
!7076 = !DILocation(line: 2494, column: 17, scope: !7061)
!7077 = !DILocation(line: 2494, column: 22, scope: !7061)
!7078 = !DILocation(line: 2494, column: 31, scope: !7061)
!7079 = !DILocation(line: 2494, column: 36, scope: !7061)
!7080 = !DILocation(line: 2494, column: 46, scope: !7061)
!7081 = !DILocalVariable(name: "overwrite", scope: !7061, file: !3, line: 2495, type: !144)
!7082 = !DILocation(line: 2495, column: 6, scope: !7061)
!7083 = !DILocalVariable(name: "error", scope: !7061, file: !3, line: 2495, type: !144)
!7084 = !DILocation(line: 2495, column: 21, scope: !7061)
!7085 = !DILocation(line: 2497, column: 6, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2497, column: 6)
!7087 = !DILocation(line: 2497, column: 15, scope: !7086)
!7088 = !DILocation(line: 2497, column: 20, scope: !7086)
!7089 = !DILocation(line: 2497, column: 24, scope: !7086)
!7090 = !DILocation(line: 2497, column: 6, scope: !7061)
!7091 = !DILocation(line: 2497, column: 31, scope: !7086)
!7092 = !DILocation(line: 2497, column: 36, scope: !7086)
!7093 = !DILocation(line: 2497, column: 47, scope: !7086)
!7094 = !DILocation(line: 2497, column: 54, scope: !7086)
!7095 = !DILocation(line: 2497, column: 59, scope: !7086)
!7096 = !DILocation(line: 2497, column: 70, scope: !7086)
!7097 = !DILocation(line: 2498, column: 3, scope: !7086)
!7098 = !DILocation(line: 2500, column: 27, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2500, column: 6)
!7100 = !DILocation(line: 2500, column: 32, scope: !7099)
!7101 = !DILocation(line: 2500, column: 6, scope: !7099)
!7102 = !DILocation(line: 2500, column: 49, scope: !7099)
!7103 = !DILocation(line: 2500, column: 6, scope: !7061)
!7104 = !DILocation(line: 2501, column: 3, scope: !7099)
!7105 = !DILocation(line: 2503, column: 6, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2503, column: 6)
!7107 = !DILocation(line: 2503, column: 11, scope: !7106)
!7108 = !DILocation(line: 2503, column: 6, scope: !7061)
!7109 = !DILocation(line: 2504, column: 24, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2503, column: 25)
!7111 = !DILocation(line: 2504, column: 29, scope: !7110)
!7112 = !DILocation(line: 2504, column: 35, scope: !7110)
!7113 = !DILocation(line: 2504, column: 3, scope: !7110)
!7114 = !DILocation(line: 2505, column: 2, scope: !7110)
!7115 = !DILocation(line: 2506, column: 11, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2506, column: 11)
!7117 = !DILocation(line: 2506, column: 16, scope: !7116)
!7118 = !DILocation(line: 2506, column: 11, scope: !7106)
!7119 = !DILocation(line: 2507, column: 26, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 2506, column: 29)
!7121 = !DILocation(line: 2507, column: 31, scope: !7120)
!7122 = !DILocation(line: 2507, column: 37, scope: !7120)
!7123 = !DILocation(line: 2507, column: 12, scope: !7120)
!7124 = !DILocation(line: 2507, column: 9, scope: !7120)
!7125 = !DILocation(line: 2508, column: 2, scope: !7120)
!7126 = !DILocation(line: 2511, column: 6, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2511, column: 6)
!7128 = !DILocation(line: 2511, column: 13, scope: !7127)
!7129 = !DILocation(line: 2511, column: 20, scope: !7127)
!7130 = !DILocation(line: 2511, column: 11, scope: !7127)
!7131 = !DILocation(line: 2511, column: 31, scope: !7127)
!7132 = !DILocation(line: 2511, column: 36, scope: !7127)
!7133 = !DILocation(line: 2511, column: 39, scope: !7127)
!7134 = !DILocation(line: 2511, column: 47, scope: !7127)
!7135 = !DILocation(line: 2511, column: 54, scope: !7127)
!7136 = !DILocation(line: 2511, column: 44, scope: !7127)
!7137 = !DILocation(line: 2511, column: 6, scope: !7061)
!7138 = !DILocation(line: 2512, column: 23, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2511, column: 66)
!7140 = !DILocation(line: 2512, column: 3, scope: !7139)
!7141 = !DILocation(line: 2512, column: 10, scope: !7139)
!7142 = !DILocation(line: 2512, column: 21, scope: !7139)
!7143 = !DILocation(line: 2513, column: 3, scope: !7139)
!7144 = !DILocation(line: 2513, column: 10, scope: !7139)
!7145 = !DILocation(line: 2513, column: 15, scope: !7139)
!7146 = !DILocation(line: 2514, column: 2, scope: !7139)
!7147 = !DILocation(line: 2516, column: 11, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2516, column: 11)
!7149 = !DILocation(line: 2516, column: 11, scope: !7127)
!7150 = !DILocation(line: 2517, column: 3, scope: !7148)
!7151 = !DILocation(line: 2517, column: 10, scope: !7148)
!7152 = !DILocation(line: 2517, column: 15, scope: !7148)
!7153 = !DILocation(line: 2520, column: 6, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 2520, column: 6)
!7155 = !DILocation(line: 2520, column: 11, scope: !7154)
!7156 = !DILocation(line: 2520, column: 14, scope: !7154)
!7157 = !DILocation(line: 2520, column: 21, scope: !7154)
!7158 = !DILocation(line: 2520, column: 6, scope: !7061)
!7159 = !DILocation(line: 2521, column: 3, scope: !7154)
!7160 = !DILocation(line: 2521, column: 10, scope: !7154)
!7161 = !DILocation(line: 2521, column: 24, scope: !7154)
!7162 = !DILocation(line: 2521, column: 29, scope: !7154)
!7163 = !DILocation(line: 2521, column: 36, scope: !7154)
!7164 = !DILocation(line: 2521, column: 28, scope: !7154)
!7165 = !DILocation(line: 2521, column: 48, scope: !7154)
!7166 = !DILocation(line: 2523, column: 26, scope: !7061)
!7167 = !DILocation(line: 2523, column: 2, scope: !7061)
!7168 = !DILocation(line: 2525, column: 10, scope: !7061)
!7169 = !DILocation(line: 2525, column: 9, scope: !7061)
!7170 = !DILocation(line: 2525, column: 2, scope: !7061)
!7171 = !DILocation(line: 2526, column: 1, scope: !7061)
!7172 = distinct !DISubprogram(name: "ptcache_write_needed", scope: !3, file: !3, line: 2441, type: !7173, scopeLine: 2442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{!144, !2797, !144, !868}
!7175 = !DILocalVariable(name: "pid", arg: 1, scope: !7172, file: !3, line: 2441, type: !2797)
!7176 = !DILocation(line: 2441, column: 44, scope: !7172)
!7177 = !DILocalVariable(name: "cfra", arg: 2, scope: !7172, file: !3, line: 2441, type: !144)
!7178 = !DILocation(line: 2441, column: 53, scope: !7172)
!7179 = !DILocalVariable(name: "overwrite", arg: 3, scope: !7172, file: !3, line: 2441, type: !868)
!7180 = !DILocation(line: 2441, column: 64, scope: !7172)
!7181 = !DILocalVariable(name: "cache", scope: !7172, file: !3, line: 2443, type: !7069)
!7182 = !DILocation(line: 2443, column: 14, scope: !7172)
!7183 = !DILocation(line: 2443, column: 22, scope: !7172)
!7184 = !DILocation(line: 2443, column: 27, scope: !7172)
!7185 = !DILocalVariable(name: "ofra", scope: !7172, file: !3, line: 2444, type: !144)
!7186 = !DILocation(line: 2444, column: 6, scope: !7172)
!7187 = !DILocalVariable(name: "efra", scope: !7172, file: !3, line: 2444, type: !144)
!7188 = !DILocation(line: 2444, column: 16, scope: !7172)
!7189 = !DILocation(line: 2444, column: 23, scope: !7172)
!7190 = !DILocation(line: 2444, column: 30, scope: !7172)
!7191 = !DILocation(line: 2447, column: 6, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 2447, column: 6)
!7193 = !DILocation(line: 2447, column: 11, scope: !7192)
!7194 = !DILocation(line: 2447, column: 14, scope: !7192)
!7195 = !DILocation(line: 2447, column: 22, scope: !7192)
!7196 = !DILocation(line: 2447, column: 29, scope: !7192)
!7197 = !DILocation(line: 2447, column: 19, scope: !7192)
!7198 = !DILocation(line: 2447, column: 6, scope: !7172)
!7199 = !DILocation(line: 2448, column: 24, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2447, column: 41)
!7201 = !DILocation(line: 2448, column: 48, scope: !7200)
!7202 = !DILocation(line: 2448, column: 3, scope: !7200)
!7203 = !DILocation(line: 2449, column: 3, scope: !7200)
!7204 = !DILocation(line: 2449, column: 10, scope: !7200)
!7205 = !DILocation(line: 2449, column: 15, scope: !7200)
!7206 = !DILocation(line: 2450, column: 3, scope: !7200)
!7207 = !DILocation(line: 2453, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 2453, column: 6)
!7209 = !DILocation(line: 2453, column: 11, scope: !7208)
!7210 = !DILocation(line: 2453, column: 18, scope: !7208)
!7211 = !DILocation(line: 2453, column: 23, scope: !7208)
!7212 = !DILocation(line: 2453, column: 6, scope: !7172)
!7213 = !DILocation(line: 2454, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2454, column: 7)
!7215 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 2453, column: 45)
!7216 = !DILocation(line: 2454, column: 11, scope: !7214)
!7217 = !DILocation(line: 2454, column: 15, scope: !7214)
!7218 = !DILocation(line: 2454, column: 18, scope: !7214)
!7219 = !DILocation(line: 2454, column: 25, scope: !7214)
!7220 = !DILocation(line: 2454, column: 36, scope: !7214)
!7221 = !DILocation(line: 2454, column: 7, scope: !7215)
!7222 = !DILocation(line: 2455, column: 4, scope: !7214)
!7223 = !DILocation(line: 2458, column: 3, scope: !7215)
!7224 = !DILocation(line: 2458, column: 10, scope: !7215)
!7225 = !DILocation(line: 2458, column: 17, scope: !7215)
!7226 = !DILocation(line: 2458, column: 24, scope: !7215)
!7227 = !DILocation(line: 2458, column: 15, scope: !7215)
!7228 = !DILocation(line: 2458, column: 35, scope: !7215)
!7229 = !DILocation(line: 2458, column: 60, scope: !7215)
!7230 = !DILocation(line: 2458, column: 65, scope: !7215)
!7231 = !DILocation(line: 2458, column: 39, scope: !7215)
!7232 = !DILocation(line: 2458, column: 38, scope: !7215)
!7233 = !DILocation(line: 0, scope: !7215)
!7234 = !DILocation(line: 2459, column: 8, scope: !7215)
!7235 = distinct !{!7235, !7223, !7234}
!7236 = !DILocation(line: 2462, column: 10, scope: !7215)
!7237 = !DILocation(line: 2462, column: 14, scope: !7215)
!7238 = !DILocation(line: 2462, column: 8, scope: !7215)
!7239 = !DILocation(line: 2463, column: 3, scope: !7215)
!7240 = !DILocation(line: 2463, column: 10, scope: !7215)
!7241 = !DILocation(line: 2463, column: 17, scope: !7215)
!7242 = !DILocation(line: 2463, column: 24, scope: !7215)
!7243 = !DILocation(line: 2463, column: 15, scope: !7215)
!7244 = !DILocation(line: 2463, column: 35, scope: !7215)
!7245 = !DILocation(line: 2463, column: 60, scope: !7215)
!7246 = !DILocation(line: 2463, column: 65, scope: !7215)
!7247 = !DILocation(line: 2463, column: 39, scope: !7215)
!7248 = !DILocation(line: 2463, column: 38, scope: !7215)
!7249 = !DILocation(line: 2464, column: 8, scope: !7215)
!7250 = distinct !{!7250, !7239, !7249}
!7251 = !DILocation(line: 2465, column: 2, scope: !7215)
!7252 = !DILocalVariable(name: "pm", scope: !7253, file: !3, line: 2467, type: !3946)
!7253 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 2466, column: 7)
!7254 = !DILocation(line: 2467, column: 15, scope: !7253)
!7255 = !DILocation(line: 2467, column: 20, scope: !7253)
!7256 = !DILocation(line: 2467, column: 27, scope: !7253)
!7257 = !DILocation(line: 2467, column: 37, scope: !7253)
!7258 = !DILocation(line: 2469, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 2469, column: 7)
!7260 = !DILocation(line: 2469, column: 12, scope: !7259)
!7261 = !DILocation(line: 2469, column: 7, scope: !7253)
!7262 = !DILocation(line: 2470, column: 4, scope: !7259)
!7263 = !DILocation(line: 2472, column: 7, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 2472, column: 7)
!7265 = !DILocation(line: 2472, column: 10, scope: !7264)
!7266 = !DILocation(line: 2472, column: 7, scope: !7253)
!7267 = !DILocation(line: 2473, column: 4, scope: !7264)
!7268 = !DILocation(line: 2475, column: 10, scope: !7253)
!7269 = !DILocation(line: 2475, column: 14, scope: !7253)
!7270 = !DILocation(line: 2475, column: 8, scope: !7253)
!7271 = !DILocation(line: 2476, column: 11, scope: !7253)
!7272 = !DILocation(line: 2476, column: 15, scope: !7253)
!7273 = !DILocation(line: 2476, column: 22, scope: !7253)
!7274 = !DILocation(line: 2476, column: 26, scope: !7253)
!7275 = !DILocation(line: 2476, column: 32, scope: !7253)
!7276 = !DILocation(line: 2476, column: 40, scope: !7253)
!7277 = !DILocation(line: 2476, column: 47, scope: !7253)
!7278 = !DILocation(line: 2476, column: 54, scope: !7253)
!7279 = !DILocation(line: 2476, column: 45, scope: !7253)
!7280 = !DILocation(line: 2476, column: 8, scope: !7253)
!7281 = !DILocation(line: 2479, column: 6, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 2479, column: 6)
!7283 = !DILocation(line: 2479, column: 14, scope: !7282)
!7284 = !DILocation(line: 2479, column: 21, scope: !7282)
!7285 = !DILocation(line: 2479, column: 11, scope: !7282)
!7286 = !DILocation(line: 2479, column: 32, scope: !7282)
!7287 = !DILocation(line: 2479, column: 35, scope: !7282)
!7288 = !DILocation(line: 2479, column: 42, scope: !7282)
!7289 = !DILocation(line: 2479, column: 40, scope: !7282)
!7290 = !DILocation(line: 2479, column: 6, scope: !7172)
!7291 = !DILocation(line: 2480, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 2480, column: 7)
!7293 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2479, column: 48)
!7294 = !DILocation(line: 2480, column: 15, scope: !7292)
!7295 = !DILocation(line: 2480, column: 22, scope: !7292)
!7296 = !DILocation(line: 2480, column: 12, scope: !7292)
!7297 = !DILocation(line: 2480, column: 33, scope: !7292)
!7298 = !DILocation(line: 2480, column: 36, scope: !7292)
!7299 = !DILocation(line: 2480, column: 43, scope: !7292)
!7300 = !DILocation(line: 2480, column: 41, scope: !7292)
!7301 = !DILocation(line: 2480, column: 50, scope: !7292)
!7302 = !DILocation(line: 2480, column: 57, scope: !7292)
!7303 = !DILocation(line: 2480, column: 48, scope: !7292)
!7304 = !DILocation(line: 2480, column: 7, scope: !7293)
!7305 = !DILocation(line: 2482, column: 25, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 2480, column: 63)
!7307 = !DILocation(line: 2482, column: 51, scope: !7306)
!7308 = !DILocation(line: 2482, column: 4, scope: !7306)
!7309 = !DILocation(line: 2483, column: 5, scope: !7306)
!7310 = !DILocation(line: 2483, column: 15, scope: !7306)
!7311 = !DILocation(line: 2484, column: 3, scope: !7306)
!7312 = !DILocation(line: 2485, column: 3, scope: !7293)
!7313 = !DILocation(line: 2488, column: 2, scope: !7172)
!7314 = !DILocation(line: 2489, column: 1, scope: !7172)
!7315 = distinct !DISubprogram(name: "ptcache_write_stream", scope: !3, file: !3, line: 2339, type: !7316, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!144, !2797, !144, !144}
!7318 = !DILocalVariable(name: "pid", arg: 1, scope: !7315, file: !3, line: 2339, type: !2797)
!7319 = !DILocation(line: 2339, column: 44, scope: !7315)
!7320 = !DILocalVariable(name: "cfra", arg: 2, scope: !7315, file: !3, line: 2339, type: !144)
!7321 = !DILocation(line: 2339, column: 53, scope: !7315)
!7322 = !DILocalVariable(name: "totpoint", arg: 3, scope: !7315, file: !3, line: 2339, type: !144)
!7323 = !DILocation(line: 2339, column: 63, scope: !7315)
!7324 = !DILocalVariable(name: "pf", scope: !7315, file: !3, line: 2341, type: !1087)
!7325 = !DILocation(line: 2341, column: 15, scope: !7315)
!7326 = !DILocalVariable(name: "error", scope: !7315, file: !3, line: 2342, type: !144)
!7327 = !DILocation(line: 2342, column: 6, scope: !7315)
!7328 = !DILocation(line: 2344, column: 23, scope: !7315)
!7329 = !DILocation(line: 2344, column: 49, scope: !7315)
!7330 = !DILocation(line: 2344, column: 2, scope: !7315)
!7331 = !DILocation(line: 2346, column: 25, scope: !7315)
!7332 = !DILocation(line: 2346, column: 50, scope: !7315)
!7333 = !DILocation(line: 2346, column: 7, scope: !7315)
!7334 = !DILocation(line: 2346, column: 5, scope: !7315)
!7335 = !DILocation(line: 2348, column: 6, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2348, column: 6)
!7337 = !DILocation(line: 2348, column: 8, scope: !7336)
!7338 = !DILocation(line: 2348, column: 6, scope: !7315)
!7339 = !DILocation(line: 2349, column: 9, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 2349, column: 7)
!7341 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2348, column: 16)
!7342 = !DILocation(line: 2349, column: 15, scope: !7340)
!7343 = !DILocation(line: 2349, column: 7, scope: !7341)
!7344 = !DILocation(line: 2350, column: 4, scope: !7340)
!7345 = !DILocation(line: 2351, column: 3, scope: !7341)
!7346 = !DILocation(line: 2354, column: 19, scope: !7315)
!7347 = !DILocation(line: 2354, column: 24, scope: !7315)
!7348 = !DILocation(line: 2354, column: 2, scope: !7315)
!7349 = !DILocation(line: 2354, column: 6, scope: !7315)
!7350 = !DILocation(line: 2354, column: 17, scope: !7315)
!7351 = !DILocation(line: 2355, column: 17, scope: !7315)
!7352 = !DILocation(line: 2355, column: 2, scope: !7315)
!7353 = !DILocation(line: 2355, column: 6, scope: !7315)
!7354 = !DILocation(line: 2355, column: 15, scope: !7315)
!7355 = !DILocation(line: 2356, column: 13, scope: !7315)
!7356 = !DILocation(line: 2356, column: 18, scope: !7315)
!7357 = !DILocation(line: 2356, column: 2, scope: !7315)
!7358 = !DILocation(line: 2356, column: 6, scope: !7315)
!7359 = !DILocation(line: 2356, column: 11, scope: !7315)
!7360 = !DILocation(line: 2357, column: 2, scope: !7315)
!7361 = !DILocation(line: 2357, column: 6, scope: !7315)
!7362 = !DILocation(line: 2357, column: 11, scope: !7315)
!7363 = !DILocation(line: 2359, column: 7, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2359, column: 6)
!7365 = !DILocation(line: 2359, column: 13, scope: !7364)
!7366 = !DILocation(line: 2359, column: 50, scope: !7364)
!7367 = !DILocation(line: 2359, column: 18, scope: !7364)
!7368 = !DILocation(line: 2359, column: 54, scope: !7364)
!7369 = !DILocation(line: 2359, column: 58, scope: !7364)
!7370 = !DILocation(line: 2359, column: 63, scope: !7364)
!7371 = !DILocation(line: 2359, column: 76, scope: !7364)
!7372 = !DILocation(line: 2359, column: 6, scope: !7315)
!7373 = !DILocation(line: 2360, column: 9, scope: !7364)
!7374 = !DILocation(line: 2360, column: 3, scope: !7364)
!7375 = !DILocation(line: 2362, column: 7, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2362, column: 6)
!7377 = !DILocation(line: 2362, column: 13, scope: !7376)
!7378 = !DILocation(line: 2362, column: 16, scope: !7376)
!7379 = !DILocation(line: 2362, column: 21, scope: !7376)
!7380 = !DILocation(line: 2362, column: 6, scope: !7315)
!7381 = !DILocation(line: 2363, column: 3, scope: !7376)
!7382 = !DILocation(line: 2363, column: 8, scope: !7376)
!7383 = !DILocation(line: 2363, column: 21, scope: !7376)
!7384 = !DILocation(line: 2363, column: 25, scope: !7376)
!7385 = !DILocation(line: 2363, column: 30, scope: !7376)
!7386 = !DILocation(line: 2365, column: 21, scope: !7315)
!7387 = !DILocation(line: 2365, column: 2, scope: !7315)
!7388 = !DILocation(line: 2367, column: 6, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2367, column: 6)
!7390 = !DILocation(line: 2367, column: 12, scope: !7389)
!7391 = !DILocation(line: 2367, column: 17, scope: !7389)
!7392 = !DILocation(line: 2367, column: 23, scope: !7389)
!7393 = !DILocation(line: 2367, column: 6, scope: !7315)
!7394 = !DILocation(line: 2368, column: 3, scope: !7389)
!7395 = !DILocation(line: 2370, column: 9, scope: !7315)
!7396 = !DILocation(line: 2370, column: 15, scope: !7315)
!7397 = !DILocation(line: 2370, column: 2, scope: !7315)
!7398 = !DILocation(line: 2371, column: 1, scope: !7315)
!7399 = distinct !DISubprogram(name: "ptcache_write", scope: !3, file: !3, line: 2372, type: !7316, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7400 = !DILocalVariable(name: "pid", arg: 1, scope: !7399, file: !3, line: 2372, type: !2797)
!7401 = !DILocation(line: 2372, column: 37, scope: !7399)
!7402 = !DILocalVariable(name: "cfra", arg: 2, scope: !7399, file: !3, line: 2372, type: !144)
!7403 = !DILocation(line: 2372, column: 46, scope: !7399)
!7404 = !DILocalVariable(name: "overwrite", arg: 3, scope: !7399, file: !3, line: 2372, type: !144)
!7405 = !DILocation(line: 2372, column: 56, scope: !7399)
!7406 = !DILocalVariable(name: "cache", scope: !7399, file: !3, line: 2374, type: !7069)
!7407 = !DILocation(line: 2374, column: 14, scope: !7399)
!7408 = !DILocation(line: 2374, column: 22, scope: !7399)
!7409 = !DILocation(line: 2374, column: 27, scope: !7399)
!7410 = !DILocalVariable(name: "pm", scope: !7399, file: !3, line: 2375, type: !3946)
!7411 = !DILocation(line: 2375, column: 14, scope: !7399)
!7412 = !DILocalVariable(name: "pm2", scope: !7399, file: !3, line: 2375, type: !3946)
!7413 = !DILocation(line: 2375, column: 24, scope: !7399)
!7414 = !DILocalVariable(name: "totpoint", scope: !7399, file: !3, line: 2376, type: !144)
!7415 = !DILocation(line: 2376, column: 6, scope: !7399)
!7416 = !DILocation(line: 2376, column: 17, scope: !7399)
!7417 = !DILocation(line: 2376, column: 22, scope: !7399)
!7418 = !DILocation(line: 2376, column: 31, scope: !7399)
!7419 = !DILocation(line: 2376, column: 36, scope: !7399)
!7420 = !DILocation(line: 2376, column: 46, scope: !7399)
!7421 = !DILocalVariable(name: "i", scope: !7399, file: !3, line: 2377, type: !144)
!7422 = !DILocation(line: 2377, column: 6, scope: !7399)
!7423 = !DILocalVariable(name: "error", scope: !7399, file: !3, line: 2377, type: !144)
!7424 = !DILocation(line: 2377, column: 9, scope: !7399)
!7425 = !DILocation(line: 2379, column: 7, scope: !7399)
!7426 = !DILocation(line: 2379, column: 5, scope: !7399)
!7427 = !DILocation(line: 2381, column: 17, scope: !7399)
!7428 = !DILocation(line: 2381, column: 22, scope: !7399)
!7429 = !DILocation(line: 2381, column: 31, scope: !7399)
!7430 = !DILocation(line: 2381, column: 36, scope: !7399)
!7431 = !DILocation(line: 2381, column: 46, scope: !7399)
!7432 = !DILocation(line: 2381, column: 2, scope: !7399)
!7433 = !DILocation(line: 2381, column: 6, scope: !7399)
!7434 = !DILocation(line: 2381, column: 15, scope: !7399)
!7435 = !DILocation(line: 2382, column: 19, scope: !7399)
!7436 = !DILocation(line: 2382, column: 26, scope: !7399)
!7437 = !DILocation(line: 2382, column: 31, scope: !7399)
!7438 = !DILocation(line: 2382, column: 44, scope: !7399)
!7439 = !DILocation(line: 2382, column: 49, scope: !7399)
!7440 = !DILocation(line: 2382, column: 2, scope: !7399)
!7441 = !DILocation(line: 2382, column: 6, scope: !7399)
!7442 = !DILocation(line: 2382, column: 17, scope: !7399)
!7443 = !DILocation(line: 2384, column: 21, scope: !7399)
!7444 = !DILocation(line: 2384, column: 2, scope: !7399)
!7445 = !DILocation(line: 2385, column: 32, scope: !7399)
!7446 = !DILocation(line: 2385, column: 2, scope: !7399)
!7447 = !DILocation(line: 2387, column: 6, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2387, column: 6)
!7449 = !DILocation(line: 2387, column: 6, scope: !7399)
!7450 = !DILocation(line: 2388, column: 7, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 2388, column: 7)
!7452 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 2387, column: 17)
!7453 = !DILocation(line: 2388, column: 14, scope: !7451)
!7454 = !DILocation(line: 2388, column: 19, scope: !7451)
!7455 = !DILocation(line: 2388, column: 7, scope: !7452)
!7456 = !DILocalVariable(name: "fra", scope: !7457, file: !3, line: 2389, type: !144)
!7457 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2388, column: 41)
!7458 = !DILocation(line: 2389, column: 8, scope: !7457)
!7459 = !DILocation(line: 2389, column: 14, scope: !7457)
!7460 = !DILocation(line: 2389, column: 18, scope: !7457)
!7461 = !DILocation(line: 2391, column: 4, scope: !7457)
!7462 = !DILocation(line: 2391, column: 11, scope: !7457)
!7463 = !DILocation(line: 2391, column: 18, scope: !7457)
!7464 = !DILocation(line: 2391, column: 25, scope: !7457)
!7465 = !DILocation(line: 2391, column: 15, scope: !7457)
!7466 = !DILocation(line: 2391, column: 36, scope: !7457)
!7467 = !DILocation(line: 2391, column: 61, scope: !7457)
!7468 = !DILocation(line: 2391, column: 66, scope: !7457)
!7469 = !DILocation(line: 2391, column: 40, scope: !7457)
!7470 = !DILocation(line: 2391, column: 39, scope: !7457)
!7471 = !DILocation(line: 0, scope: !7457)
!7472 = !DILocation(line: 2392, column: 8, scope: !7457)
!7473 = distinct !{!7473, !7461, !7472}
!7474 = !DILocation(line: 2394, column: 36, scope: !7457)
!7475 = !DILocation(line: 2394, column: 41, scope: !7457)
!7476 = !DILocation(line: 2394, column: 10, scope: !7457)
!7477 = !DILocation(line: 2394, column: 8, scope: !7457)
!7478 = !DILocation(line: 2395, column: 3, scope: !7457)
!7479 = !DILocation(line: 2397, column: 10, scope: !7451)
!7480 = !DILocation(line: 2397, column: 17, scope: !7451)
!7481 = !DILocation(line: 2397, column: 27, scope: !7451)
!7482 = !DILocation(line: 2397, column: 8, scope: !7451)
!7483 = !DILocation(line: 2398, column: 2, scope: !7452)
!7484 = !DILocation(line: 2400, column: 6, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2400, column: 6)
!7486 = !DILocation(line: 2400, column: 11, scope: !7485)
!7487 = !DILocation(line: 2400, column: 6, scope: !7399)
!7488 = !DILocation(line: 2401, column: 9, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 2401, column: 3)
!7490 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 2400, column: 24)
!7491 = !DILocation(line: 2401, column: 8, scope: !7489)
!7492 = !DILocation(line: 2401, column: 13, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 2401, column: 3)
!7494 = !DILocation(line: 2401, column: 15, scope: !7493)
!7495 = !DILocation(line: 2401, column: 14, scope: !7493)
!7496 = !DILocation(line: 2401, column: 3, scope: !7489)
!7497 = !DILocalVariable(name: "write", scope: !7498, file: !3, line: 2402, type: !144)
!7498 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 2401, column: 30)
!7499 = !DILocation(line: 2402, column: 8, scope: !7498)
!7500 = !DILocation(line: 2402, column: 16, scope: !7498)
!7501 = !DILocation(line: 2402, column: 21, scope: !7498)
!7502 = !DILocation(line: 2402, column: 33, scope: !7498)
!7503 = !DILocation(line: 2402, column: 36, scope: !7498)
!7504 = !DILocation(line: 2402, column: 41, scope: !7498)
!7505 = !DILocation(line: 2402, column: 51, scope: !7498)
!7506 = !DILocation(line: 2402, column: 55, scope: !7498)
!7507 = !DILocation(line: 2402, column: 60, scope: !7498)
!7508 = !DILocation(line: 2403, column: 8, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2403, column: 8)
!7510 = !DILocation(line: 2403, column: 8, scope: !7498)
!7511 = !DILocation(line: 2404, column: 35, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 2403, column: 15)
!7513 = !DILocation(line: 2404, column: 5, scope: !7512)
!7514 = !DILocation(line: 2407, column: 9, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 2407, column: 9)
!7516 = !DILocation(line: 2407, column: 19, scope: !7515)
!7517 = !DILocation(line: 2407, column: 22, scope: !7515)
!7518 = !DILocation(line: 2407, column: 28, scope: !7515)
!7519 = !DILocation(line: 2407, column: 33, scope: !7515)
!7520 = !DILocation(line: 2407, column: 36, scope: !7515)
!7521 = !DILocation(line: 2407, column: 40, scope: !7515)
!7522 = !DILocation(line: 2407, column: 73, scope: !7515)
!7523 = !DILocation(line: 2407, column: 76, scope: !7515)
!7524 = !DILocation(line: 2407, column: 43, scope: !7515)
!7525 = !DILocation(line: 2407, column: 9, scope: !7512)
!7526 = !DILocation(line: 2408, column: 6, scope: !7515)
!7527 = !DILocation(line: 2408, column: 11, scope: !7515)
!7528 = !DILocation(line: 2408, column: 23, scope: !7515)
!7529 = !DILocation(line: 2408, column: 26, scope: !7515)
!7530 = !DILocation(line: 2408, column: 31, scope: !7515)
!7531 = !DILocation(line: 2408, column: 41, scope: !7515)
!7532 = !DILocation(line: 2408, column: 46, scope: !7515)
!7533 = !DILocation(line: 2408, column: 51, scope: !7515)
!7534 = !DILocation(line: 2409, column: 4, scope: !7512)
!7535 = !DILocation(line: 2410, column: 3, scope: !7498)
!7536 = !DILocation(line: 2401, column: 26, scope: !7493)
!7537 = !DILocation(line: 2401, column: 3, scope: !7493)
!7538 = distinct !{!7538, !7496, !7539}
!7539 = !DILocation(line: 2410, column: 3, scope: !7489)
!7540 = !DILocation(line: 2411, column: 2, scope: !7490)
!7541 = !DILocation(line: 2413, column: 6, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2413, column: 6)
!7543 = !DILocation(line: 2413, column: 11, scope: !7542)
!7544 = !DILocation(line: 2413, column: 6, scope: !7399)
!7545 = !DILocation(line: 2414, column: 3, scope: !7542)
!7546 = !DILocation(line: 2414, column: 8, scope: !7542)
!7547 = !DILocation(line: 2414, column: 25, scope: !7542)
!7548 = !DILocation(line: 2414, column: 30, scope: !7542)
!7549 = !DILocation(line: 2414, column: 40, scope: !7542)
!7550 = !DILocation(line: 2414, column: 44, scope: !7542)
!7551 = !DILocation(line: 2416, column: 14, scope: !7399)
!7552 = !DILocation(line: 2416, column: 2, scope: !7399)
!7553 = !DILocation(line: 2416, column: 6, scope: !7399)
!7554 = !DILocation(line: 2416, column: 12, scope: !7399)
!7555 = !DILocation(line: 2418, column: 6, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2418, column: 6)
!7557 = !DILocation(line: 2418, column: 13, scope: !7556)
!7558 = !DILocation(line: 2418, column: 18, scope: !7556)
!7559 = !DILocation(line: 2418, column: 6, scope: !7399)
!7560 = !DILocation(line: 2419, column: 39, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 2418, column: 40)
!7562 = !DILocation(line: 2419, column: 44, scope: !7561)
!7563 = !DILocation(line: 2419, column: 13, scope: !7561)
!7564 = !DILocation(line: 2419, column: 12, scope: !7561)
!7565 = !DILocation(line: 2419, column: 9, scope: !7561)
!7566 = !DILocation(line: 2423, column: 22, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 2422, column: 3)
!7568 = !DILocation(line: 2423, column: 4, scope: !7567)
!7569 = !DILocation(line: 2424, column: 23, scope: !7567)
!7570 = !DILocation(line: 2424, column: 4, scope: !7567)
!7571 = !DILocation(line: 2425, column: 4, scope: !7567)
!7572 = !DILocation(line: 2425, column: 14, scope: !7567)
!7573 = !DILocation(line: 2428, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 2428, column: 7)
!7575 = !DILocation(line: 2428, column: 7, scope: !7561)
!7576 = !DILocation(line: 2429, column: 40, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 2428, column: 12)
!7578 = !DILocation(line: 2429, column: 45, scope: !7577)
!7579 = !DILocation(line: 2429, column: 14, scope: !7577)
!7580 = !DILocation(line: 2429, column: 13, scope: !7577)
!7581 = !DILocation(line: 2429, column: 10, scope: !7577)
!7582 = !DILocation(line: 2430, column: 22, scope: !7577)
!7583 = !DILocation(line: 2430, column: 4, scope: !7577)
!7584 = !DILocation(line: 2431, column: 23, scope: !7577)
!7585 = !DILocation(line: 2431, column: 4, scope: !7577)
!7586 = !DILocation(line: 2432, column: 4, scope: !7577)
!7587 = !DILocation(line: 2432, column: 14, scope: !7577)
!7588 = !DILocation(line: 2433, column: 3, scope: !7577)
!7589 = !DILocation(line: 2434, column: 2, scope: !7561)
!7590 = !DILocation(line: 2436, column: 16, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 2435, column: 7)
!7592 = !DILocation(line: 2436, column: 23, scope: !7591)
!7593 = !DILocation(line: 2436, column: 34, scope: !7591)
!7594 = !DILocation(line: 2436, column: 3, scope: !7591)
!7595 = !DILocation(line: 2439, column: 9, scope: !7399)
!7596 = !DILocation(line: 2439, column: 2, scope: !7399)
!7597 = distinct !DISubprogram(name: "BKE_ptcache_update_info", scope: !3, file: !3, line: 3652, type: !7598, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{null, !2797}
!7600 = !DILocalVariable(name: "pid", arg: 1, scope: !7597, file: !3, line: 3652, type: !2797)
!7601 = !DILocation(line: 3652, column: 41, scope: !7597)
!7602 = !DILocalVariable(name: "cache", scope: !7597, file: !3, line: 3654, type: !7069)
!7603 = !DILocation(line: 3654, column: 14, scope: !7597)
!7604 = !DILocation(line: 3654, column: 22, scope: !7597)
!7605 = !DILocation(line: 3654, column: 27, scope: !7597)
!7606 = !DILocalVariable(name: "extra", scope: !7597, file: !3, line: 3655, type: !3958)
!7607 = !DILocation(line: 3655, column: 16, scope: !7597)
!7608 = !DILocalVariable(name: "totframes", scope: !7597, file: !3, line: 3656, type: !144)
!7609 = !DILocation(line: 3656, column: 6, scope: !7597)
!7610 = !DILocalVariable(name: "mem_info", scope: !7597, file: !3, line: 3657, type: !149)
!7611 = !DILocation(line: 3657, column: 7, scope: !7597)
!7612 = !DILocation(line: 3659, column: 6, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3659, column: 6)
!7614 = !DILocation(line: 3659, column: 13, scope: !7613)
!7615 = !DILocation(line: 3659, column: 18, scope: !7613)
!7616 = !DILocation(line: 3659, column: 6, scope: !7597)
!7617 = !DILocalVariable(name: "cfra", scope: !7618, file: !3, line: 3660, type: !144)
!7618 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3659, column: 38)
!7619 = !DILocation(line: 3660, column: 7, scope: !7618)
!7620 = !DILocation(line: 3660, column: 14, scope: !7618)
!7621 = !DILocation(line: 3660, column: 21, scope: !7618)
!7622 = !DILocation(line: 3662, column: 3, scope: !7618)
!7623 = !DILocation(line: 3662, column: 10, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 3662, column: 3)
!7625 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 3662, column: 3)
!7626 = !DILocation(line: 3662, column: 18, scope: !7624)
!7627 = !DILocation(line: 3662, column: 25, scope: !7624)
!7628 = !DILocation(line: 3662, column: 15, scope: !7624)
!7629 = !DILocation(line: 3662, column: 3, scope: !7625)
!7630 = !DILocation(line: 3663, column: 29, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 3663, column: 8)
!7632 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 3662, column: 43)
!7633 = !DILocation(line: 3663, column: 34, scope: !7631)
!7634 = !DILocation(line: 3663, column: 8, scope: !7631)
!7635 = !DILocation(line: 3663, column: 8, scope: !7632)
!7636 = !DILocation(line: 3664, column: 14, scope: !7631)
!7637 = !DILocation(line: 3664, column: 5, scope: !7631)
!7638 = !DILocation(line: 3665, column: 3, scope: !7632)
!7639 = !DILocation(line: 3662, column: 39, scope: !7624)
!7640 = !DILocation(line: 3662, column: 3, scope: !7624)
!7641 = distinct !{!7641, !7629, !7642}
!7642 = !DILocation(line: 3665, column: 3, scope: !7625)
!7643 = !DILocation(line: 3668, column: 7, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 3668, column: 7)
!7645 = !DILocation(line: 3668, column: 12, scope: !7644)
!7646 = !DILocation(line: 3668, column: 17, scope: !7644)
!7647 = !DILocation(line: 3668, column: 46, scope: !7644)
!7648 = !DILocation(line: 3668, column: 49, scope: !7644)
!7649 = !DILocation(line: 3668, column: 7, scope: !7618)
!7650 = !DILocation(line: 3669, column: 17, scope: !7644)
!7651 = !DILocation(line: 3669, column: 24, scope: !7644)
!7652 = !DILocation(line: 3669, column: 79, scope: !7644)
!7653 = !DILocation(line: 3669, column: 4, scope: !7644)
!7654 = !DILocation(line: 3670, column: 12, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3670, column: 12)
!7656 = !DILocation(line: 3670, column: 22, scope: !7655)
!7657 = !DILocation(line: 3670, column: 25, scope: !7655)
!7658 = !DILocation(line: 3670, column: 32, scope: !7655)
!7659 = !DILocation(line: 3670, column: 12, scope: !7644)
!7660 = !DILocation(line: 3671, column: 17, scope: !7655)
!7661 = !DILocation(line: 3671, column: 24, scope: !7655)
!7662 = !DILocation(line: 3671, column: 79, scope: !7655)
!7663 = !DILocation(line: 3671, column: 86, scope: !7655)
!7664 = !DILocation(line: 3671, column: 4, scope: !7655)
!7665 = !DILocation(line: 3673, column: 16, scope: !7655)
!7666 = !DILocation(line: 3673, column: 23, scope: !7655)
!7667 = !DILocation(line: 3673, column: 4, scope: !7655)
!7668 = !DILocation(line: 3674, column: 3, scope: !7618)
!7669 = !DILocation(line: 3677, column: 6, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3677, column: 6)
!7671 = !DILocation(line: 3677, column: 13, scope: !7670)
!7672 = !DILocation(line: 3677, column: 18, scope: !7670)
!7673 = !DILocation(line: 3677, column: 6, scope: !7597)
!7674 = !DILocation(line: 3678, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 3678, column: 7)
!7676 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 3677, column: 40)
!7677 = !DILocation(line: 3678, column: 12, scope: !7675)
!7678 = !DILocation(line: 3678, column: 17, scope: !7675)
!7679 = !DILocation(line: 3678, column: 7, scope: !7676)
!7680 = !DILocalVariable(name: "totpoint", scope: !7681, file: !3, line: 3679, type: !144)
!7681 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3678, column: 47)
!7682 = !DILocation(line: 3679, column: 8, scope: !7681)
!7683 = !DILocation(line: 3679, column: 19, scope: !7681)
!7684 = !DILocation(line: 3679, column: 24, scope: !7681)
!7685 = !DILocation(line: 3679, column: 33, scope: !7681)
!7686 = !DILocation(line: 3679, column: 38, scope: !7681)
!7687 = !DILocation(line: 3681, column: 8, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 3681, column: 8)
!7689 = !DILocation(line: 3681, column: 15, scope: !7688)
!7690 = !DILocation(line: 3681, column: 26, scope: !7688)
!7691 = !DILocation(line: 3681, column: 24, scope: !7688)
!7692 = !DILocation(line: 3681, column: 8, scope: !7681)
!7693 = !DILocation(line: 3682, column: 18, scope: !7688)
!7694 = !DILocation(line: 3682, column: 91, scope: !7688)
!7695 = !DILocation(line: 3682, column: 5, scope: !7688)
!7696 = !DILocation(line: 3684, column: 18, scope: !7688)
!7697 = !DILocation(line: 3684, column: 73, scope: !7688)
!7698 = !DILocation(line: 3684, column: 5, scope: !7688)
!7699 = !DILocation(line: 3685, column: 3, scope: !7681)
!7700 = !DILocalVariable(name: "cfra", scope: !7701, file: !3, line: 3687, type: !144)
!7701 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3686, column: 8)
!7702 = !DILocation(line: 3687, column: 8, scope: !7701)
!7703 = !DILocation(line: 3687, column: 15, scope: !7701)
!7704 = !DILocation(line: 3687, column: 22, scope: !7701)
!7705 = !DILocation(line: 3689, column: 4, scope: !7701)
!7706 = !DILocation(line: 3689, column: 11, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3689, column: 4)
!7708 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 3689, column: 4)
!7709 = !DILocation(line: 3689, column: 19, scope: !7707)
!7710 = !DILocation(line: 3689, column: 26, scope: !7707)
!7711 = !DILocation(line: 3689, column: 16, scope: !7707)
!7712 = !DILocation(line: 3689, column: 4, scope: !7708)
!7713 = !DILocation(line: 3690, column: 30, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 3690, column: 9)
!7715 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 3689, column: 44)
!7716 = !DILocation(line: 3690, column: 35, scope: !7714)
!7717 = !DILocation(line: 3690, column: 9, scope: !7714)
!7718 = !DILocation(line: 3690, column: 9, scope: !7715)
!7719 = !DILocation(line: 3691, column: 15, scope: !7714)
!7720 = !DILocation(line: 3691, column: 6, scope: !7714)
!7721 = !DILocation(line: 3692, column: 4, scope: !7715)
!7722 = !DILocation(line: 3689, column: 40, scope: !7707)
!7723 = !DILocation(line: 3689, column: 4, scope: !7707)
!7724 = distinct !{!7724, !7712, !7725}
!7725 = !DILocation(line: 3692, column: 4, scope: !7708)
!7726 = !DILocation(line: 3694, column: 17, scope: !7701)
!7727 = !DILocation(line: 3694, column: 74, scope: !7701)
!7728 = !DILocation(line: 3694, column: 4, scope: !7701)
!7729 = !DILocation(line: 3696, column: 2, scope: !7676)
!7730 = !DILocalVariable(name: "pm", scope: !7731, file: !3, line: 3698, type: !3946)
!7731 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 3697, column: 7)
!7732 = !DILocation(line: 3698, column: 15, scope: !7731)
!7733 = !DILocation(line: 3698, column: 20, scope: !7731)
!7734 = !DILocation(line: 3698, column: 27, scope: !7731)
!7735 = !DILocation(line: 3698, column: 37, scope: !7731)
!7736 = !DILocalVariable(name: "bytes", scope: !7731, file: !3, line: 3699, type: !256)
!7737 = !DILocation(line: 3699, column: 9, scope: !7731)
!7738 = !DILocalVariable(name: "i", scope: !7731, file: !3, line: 3700, type: !144)
!7739 = !DILocation(line: 3700, column: 7, scope: !7731)
!7740 = !DILocalVariable(name: "mb", scope: !7731, file: !3, line: 3700, type: !144)
!7741 = !DILocation(line: 3700, column: 10, scope: !7731)
!7742 = !DILocation(line: 3702, column: 3, scope: !7731)
!7743 = !DILocation(line: 3702, column: 10, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 3702, column: 3)
!7745 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 3702, column: 3)
!7746 = !DILocation(line: 3702, column: 3, scope: !7745)
!7747 = !DILocation(line: 3703, column: 10, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 3703, column: 4)
!7749 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 3702, column: 27)
!7750 = !DILocation(line: 3703, column: 9, scope: !7748)
!7751 = !DILocation(line: 3703, column: 14, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 3703, column: 4)
!7753 = !DILocation(line: 3703, column: 15, scope: !7752)
!7754 = !DILocation(line: 3703, column: 4, scope: !7748)
!7755 = !DILocation(line: 3704, column: 14, scope: !7752)
!7756 = !DILocation(line: 3704, column: 29, scope: !7752)
!7757 = !DILocation(line: 3704, column: 33, scope: !7752)
!7758 = !DILocation(line: 3704, column: 38, scope: !7752)
!7759 = !DILocation(line: 3704, column: 11, scope: !7752)
!7760 = !DILocation(line: 3704, column: 5, scope: !7752)
!7761 = !DILocation(line: 3703, column: 33, scope: !7752)
!7762 = !DILocation(line: 3703, column: 4, scope: !7752)
!7763 = distinct !{!7763, !7754, !7764}
!7764 = !DILocation(line: 3704, column: 40, scope: !7748)
!7765 = !DILocation(line: 3706, column: 15, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 3706, column: 4)
!7767 = !DILocation(line: 3706, column: 19, scope: !7766)
!7768 = !DILocation(line: 3706, column: 29, scope: !7766)
!7769 = !DILocation(line: 3706, column: 14, scope: !7766)
!7770 = !DILocation(line: 3706, column: 9, scope: !7766)
!7771 = !DILocation(line: 3706, column: 36, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 3706, column: 4)
!7773 = !DILocation(line: 3706, column: 4, scope: !7766)
!7774 = !DILocation(line: 3707, column: 14, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 3706, column: 62)
!7776 = !DILocation(line: 3707, column: 29, scope: !7775)
!7777 = !DILocation(line: 3707, column: 36, scope: !7775)
!7778 = !DILocation(line: 3707, column: 11, scope: !7775)
!7779 = !DILocation(line: 3708, column: 11, scope: !7775)
!7780 = !DILocation(line: 3709, column: 4, scope: !7775)
!7781 = !DILocation(line: 3706, column: 49, scope: !7772)
!7782 = !DILocation(line: 3706, column: 56, scope: !7772)
!7783 = !DILocation(line: 3706, column: 48, scope: !7772)
!7784 = !DILocation(line: 3706, column: 4, scope: !7772)
!7785 = distinct !{!7785, !7773, !7786}
!7786 = !DILocation(line: 3709, column: 4, scope: !7766)
!7787 = !DILocation(line: 3711, column: 10, scope: !7749)
!7788 = !DILocation(line: 3713, column: 13, scope: !7749)
!7789 = !DILocation(line: 3714, column: 3, scope: !7749)
!7790 = !DILocation(line: 3702, column: 17, scope: !7744)
!7791 = !DILocation(line: 3702, column: 21, scope: !7744)
!7792 = !DILocation(line: 3702, column: 16, scope: !7744)
!7793 = !DILocation(line: 3702, column: 3, scope: !7744)
!7794 = distinct !{!7794, !7746, !7795}
!7795 = !DILocation(line: 3714, column: 3, scope: !7745)
!7796 = !DILocation(line: 3716, column: 9, scope: !7731)
!7797 = !DILocation(line: 3716, column: 15, scope: !7731)
!7798 = !DILocation(line: 3716, column: 6, scope: !7731)
!7799 = !DILocation(line: 3718, column: 16, scope: !7731)
!7800 = !DILocation(line: 3719, column: 16, scope: !7731)
!7801 = !DILocation(line: 3720, column: 16, scope: !7731)
!7802 = !DILocation(line: 3720, column: 25, scope: !7731)
!7803 = !DILocation(line: 3720, column: 22, scope: !7731)
!7804 = !DILocation(line: 3721, column: 16, scope: !7731)
!7805 = !DILocation(line: 3718, column: 3, scope: !7731)
!7806 = !DILocation(line: 3724, column: 6, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3724, column: 6)
!7808 = !DILocation(line: 3724, column: 13, scope: !7807)
!7809 = !DILocation(line: 3724, column: 18, scope: !7807)
!7810 = !DILocation(line: 3724, column: 6, scope: !7597)
!7811 = !DILocation(line: 3725, column: 16, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 3724, column: 38)
!7813 = !DILocation(line: 3725, column: 23, scope: !7812)
!7814 = !DILocation(line: 3725, column: 84, scope: !7812)
!7815 = !DILocation(line: 3725, column: 3, scope: !7812)
!7816 = !DILocation(line: 3726, column: 2, scope: !7812)
!7817 = !DILocation(line: 3727, column: 11, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 3727, column: 11)
!7819 = !DILocation(line: 3727, column: 18, scope: !7818)
!7820 = !DILocation(line: 3727, column: 23, scope: !7818)
!7821 = !DILocation(line: 3727, column: 11, scope: !7807)
!7822 = !DILocation(line: 3728, column: 16, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 3727, column: 49)
!7824 = !DILocation(line: 3728, column: 23, scope: !7823)
!7825 = !DILocation(line: 3729, column: 16, scope: !7823)
!7826 = !DILocation(line: 3729, column: 26, scope: !7823)
!7827 = !DILocation(line: 3729, column: 33, scope: !7823)
!7828 = !DILocation(line: 3728, column: 3, scope: !7823)
!7829 = !DILocation(line: 3730, column: 2, scope: !7823)
!7830 = !DILocation(line: 3732, column: 16, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 3731, column: 7)
!7832 = !DILocation(line: 3732, column: 23, scope: !7831)
!7833 = !DILocation(line: 3732, column: 57, scope: !7831)
!7834 = !DILocation(line: 3732, column: 3, scope: !7831)
!7835 = !DILocation(line: 3734, column: 1, scope: !7597)
!7836 = distinct !DISubprogram(name: "ptcache_path", scope: !3, file: !3, line: 1436, type: !7837, scopeLine: 1437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7837 = !DISubroutineType(types: !7838)
!7838 = !{!144, !2797, !129}
!7839 = !DILocalVariable(name: "pid", arg: 1, scope: !7836, file: !3, line: 1436, type: !2797)
!7840 = !DILocation(line: 1436, column: 36, scope: !7836)
!7841 = !DILocalVariable(name: "filename", arg: 2, scope: !7836, file: !3, line: 1436, type: !129)
!7842 = !DILocation(line: 1436, column: 47, scope: !7836)
!7843 = !DILocalVariable(name: "lib", scope: !7836, file: !3, line: 1438, type: !7844)
!7844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7845, size: 64)
!7845 = !DIDerivedType(tag: DW_TAG_typedef, name: "Library", file: !159, line: 151, baseType: !168)
!7846 = !DILocation(line: 1438, column: 11, scope: !7836)
!7847 = !DILocation(line: 1438, column: 18, scope: !7836)
!7848 = !DILocation(line: 1438, column: 23, scope: !7836)
!7849 = !DILocation(line: 1438, column: 17, scope: !7836)
!7850 = !DILocation(line: 1438, column: 29, scope: !7836)
!7851 = !DILocation(line: 1438, column: 34, scope: !7836)
!7852 = !DILocation(line: 1438, column: 38, scope: !7836)
!7853 = !DILocation(line: 1438, column: 41, scope: !7836)
!7854 = !DILocalVariable(name: "blendfilename", scope: !7836, file: !3, line: 1439, type: !1199)
!7855 = !DILocation(line: 1439, column: 14, scope: !7836)
!7856 = !DILocation(line: 1439, column: 30, scope: !7836)
!7857 = !DILocation(line: 1439, column: 34, scope: !7836)
!7858 = !DILocation(line: 1439, column: 38, scope: !7836)
!7859 = !DILocation(line: 1439, column: 43, scope: !7836)
!7860 = !DILocation(line: 1439, column: 50, scope: !7836)
!7861 = !DILocation(line: 1439, column: 55, scope: !7836)
!7862 = !DILocation(line: 1439, column: 80, scope: !7836)
!7863 = !DILocation(line: 1439, column: 29, scope: !7836)
!7864 = !DILocation(line: 1439, column: 87, scope: !7836)
!7865 = !DILocation(line: 1439, column: 92, scope: !7836)
!7866 = !DILocation(line: 1439, column: 104, scope: !7836)
!7867 = !DILocation(line: 1439, column: 110, scope: !7836)
!7868 = !DILocation(line: 1439, column: 102, scope: !7836)
!7869 = !DILocalVariable(name: "i", scope: !7836, file: !3, line: 1440, type: !1139)
!7870 = !DILocation(line: 1440, column: 9, scope: !7836)
!7871 = !DILocation(line: 1442, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 1442, column: 6)
!7873 = !DILocation(line: 1442, column: 11, scope: !7872)
!7874 = !DILocation(line: 1442, column: 18, scope: !7872)
!7875 = !DILocation(line: 1442, column: 23, scope: !7872)
!7876 = !DILocation(line: 1442, column: 6, scope: !7836)
!7877 = !DILocation(line: 1443, column: 10, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1442, column: 43)
!7879 = !DILocation(line: 1443, column: 20, scope: !7878)
!7880 = !DILocation(line: 1443, column: 25, scope: !7878)
!7881 = !DILocation(line: 1443, column: 32, scope: !7878)
!7882 = !DILocation(line: 1443, column: 3, scope: !7878)
!7883 = !DILocation(line: 1445, column: 23, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 1445, column: 7)
!7885 = !DILocation(line: 1445, column: 7, scope: !7884)
!7886 = !DILocation(line: 1445, column: 7, scope: !7878)
!7887 = !DILocation(line: 1446, column: 17, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1445, column: 34)
!7889 = !DILocation(line: 1446, column: 27, scope: !7888)
!7890 = !DILocation(line: 1446, column: 4, scope: !7888)
!7891 = !DILocation(line: 1447, column: 3, scope: !7888)
!7892 = !DILocation(line: 1449, column: 24, scope: !7878)
!7893 = !DILocation(line: 1449, column: 10, scope: !7878)
!7894 = !DILocation(line: 1449, column: 3, scope: !7878)
!7895 = !DILocation(line: 1451, column: 13, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1451, column: 11)
!7897 = !DILocation(line: 1451, column: 11, scope: !7896)
!7898 = !DILocation(line: 1451, column: 27, scope: !7896)
!7899 = !DILocation(line: 1451, column: 30, scope: !7896)
!7900 = !DILocation(line: 1451, column: 11, scope: !7872)
!7901 = !DILocalVariable(name: "file", scope: !7902, file: !3, line: 1452, type: !177)
!7902 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 1451, column: 35)
!7903 = !DILocation(line: 1452, column: 8, scope: !7902)
!7904 = !DILocation(line: 1454, column: 23, scope: !7902)
!7905 = !DILocation(line: 1454, column: 38, scope: !7902)
!7906 = !DILocation(line: 1454, column: 3, scope: !7902)
!7907 = !DILocation(line: 1455, column: 14, scope: !7902)
!7908 = !DILocation(line: 1455, column: 7, scope: !7902)
!7909 = !DILocation(line: 1455, column: 5, scope: !7902)
!7910 = !DILocation(line: 1458, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1458, column: 7)
!7912 = !DILocation(line: 1458, column: 9, scope: !7911)
!7913 = !DILocation(line: 1458, column: 7, scope: !7902)
!7914 = !DILocation(line: 1459, column: 9, scope: !7911)
!7915 = !DILocation(line: 1459, column: 10, scope: !7911)
!7916 = !DILocation(line: 1459, column: 4, scope: !7911)
!7917 = !DILocation(line: 1459, column: 14, scope: !7911)
!7918 = !DILocation(line: 1461, column: 16, scope: !7902)
!7919 = !DILocation(line: 1461, column: 66, scope: !7902)
!7920 = !DILocation(line: 1461, column: 3, scope: !7902)
!7921 = !DILocation(line: 1462, column: 16, scope: !7902)
!7922 = !DILocation(line: 1462, column: 26, scope: !7902)
!7923 = !DILocation(line: 1462, column: 3, scope: !7902)
!7924 = !DILocation(line: 1463, column: 24, scope: !7902)
!7925 = !DILocation(line: 1463, column: 10, scope: !7902)
!7926 = !DILocation(line: 1463, column: 3, scope: !7902)
!7927 = !DILocation(line: 1468, column: 15, scope: !7836)
!7928 = !DILocation(line: 1468, column: 61, scope: !7836)
!7929 = !DILocation(line: 1468, column: 2, scope: !7836)
!7930 = !DILocation(line: 1470, column: 23, scope: !7836)
!7931 = !DILocation(line: 1470, column: 9, scope: !7836)
!7932 = !DILocation(line: 1470, column: 2, scope: !7836)
!7933 = !DILocation(line: 1471, column: 1, scope: !7836)
!7934 = distinct !DISubprogram(name: "ptcache_filename", scope: !3, file: !3, line: 1473, type: !7935, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!144, !2797, !129, !144, !190, !190}
!7937 = !DILocalVariable(name: "pid", arg: 1, scope: !7934, file: !3, line: 1473, type: !2797)
!7938 = !DILocation(line: 1473, column: 40, scope: !7934)
!7939 = !DILocalVariable(name: "filename", arg: 2, scope: !7934, file: !3, line: 1473, type: !129)
!7940 = !DILocation(line: 1473, column: 51, scope: !7934)
!7941 = !DILocalVariable(name: "cfra", arg: 3, scope: !7934, file: !3, line: 1473, type: !144)
!7942 = !DILocation(line: 1473, column: 65, scope: !7934)
!7943 = !DILocalVariable(name: "do_path", arg: 4, scope: !7934, file: !3, line: 1473, type: !190)
!7944 = !DILocation(line: 1473, column: 77, scope: !7934)
!7945 = !DILocalVariable(name: "do_ext", arg: 5, scope: !7934, file: !3, line: 1473, type: !190)
!7946 = !DILocation(line: 1473, column: 92, scope: !7934)
!7947 = !DILocalVariable(name: "len", scope: !7934, file: !3, line: 1475, type: !144)
!7948 = !DILocation(line: 1475, column: 6, scope: !7934)
!7949 = !DILocalVariable(name: "idname", scope: !7934, file: !3, line: 1476, type: !129)
!7950 = !DILocation(line: 1476, column: 8, scope: !7934)
!7951 = !DILocalVariable(name: "newname", scope: !7934, file: !3, line: 1477, type: !129)
!7952 = !DILocation(line: 1477, column: 8, scope: !7934)
!7953 = !DILocation(line: 1478, column: 2, scope: !7934)
!7954 = !DILocation(line: 1478, column: 14, scope: !7934)
!7955 = !DILocation(line: 1479, column: 12, scope: !7934)
!7956 = !DILocation(line: 1479, column: 10, scope: !7934)
!7957 = !DILocation(line: 1481, column: 9, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1481, column: 6)
!7959 = !DILocation(line: 1481, column: 7, scope: !7958)
!7960 = !DILocation(line: 1481, column: 23, scope: !7958)
!7961 = !DILocation(line: 1481, column: 27, scope: !7958)
!7962 = !DILocation(line: 1481, column: 32, scope: !7958)
!7963 = !DILocation(line: 1481, column: 39, scope: !7958)
!7964 = !DILocation(line: 1481, column: 44, scope: !7958)
!7965 = !DILocation(line: 1481, column: 63, scope: !7958)
!7966 = !DILocation(line: 1481, column: 6, scope: !7934)
!7967 = !DILocation(line: 1481, column: 68, scope: !7958)
!7968 = !DILocation(line: 1484, column: 6, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1484, column: 6)
!7970 = !DILocation(line: 1484, column: 6, scope: !7934)
!7971 = !DILocation(line: 1485, column: 22, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 1484, column: 15)
!7973 = !DILocation(line: 1485, column: 27, scope: !7972)
!7974 = !DILocation(line: 1485, column: 9, scope: !7972)
!7975 = !DILocation(line: 1485, column: 7, scope: !7972)
!7976 = !DILocation(line: 1486, column: 14, scope: !7972)
!7977 = !DILocation(line: 1486, column: 11, scope: !7972)
!7978 = !DILocation(line: 1487, column: 2, scope: !7972)
!7979 = !DILocation(line: 1488, column: 6, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1488, column: 6)
!7981 = !DILocation(line: 1488, column: 11, scope: !7980)
!7982 = !DILocation(line: 1488, column: 18, scope: !7980)
!7983 = !DILocation(line: 1488, column: 26, scope: !7980)
!7984 = !DILocation(line: 1488, column: 34, scope: !7980)
!7985 = !DILocation(line: 1488, column: 38, scope: !7980)
!7986 = !DILocation(line: 1488, column: 43, scope: !7980)
!7987 = !DILocation(line: 1488, column: 50, scope: !7980)
!7988 = !DILocation(line: 1488, column: 55, scope: !7980)
!7989 = !DILocation(line: 1488, column: 74, scope: !7980)
!7990 = !DILocation(line: 1488, column: 6, scope: !7934)
!7991 = !DILocation(line: 1489, column: 13, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1488, column: 79)
!7993 = !DILocation(line: 1489, column: 18, scope: !7992)
!7994 = !DILocation(line: 1489, column: 22, scope: !7992)
!7995 = !DILocation(line: 1489, column: 25, scope: !7992)
!7996 = !DILocation(line: 1489, column: 30, scope: !7992)
!7997 = !DILocation(line: 1489, column: 10, scope: !7992)
!7998 = !DILocation(line: 1491, column: 3, scope: !7992)
!7999 = !DILocation(line: 1491, column: 19, scope: !7992)
!8000 = !DILocation(line: 1491, column: 18, scope: !7992)
!8001 = !DILocation(line: 1491, column: 15, scope: !7992)
!8002 = !DILocation(line: 1492, column: 17, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1491, column: 27)
!8004 = !DILocation(line: 1492, column: 74, scope: !8003)
!8005 = !DILocation(line: 1492, column: 67, scope: !8003)
!8006 = !DILocation(line: 1492, column: 52, scope: !8003)
!8007 = !DILocation(line: 1492, column: 4, scope: !8003)
!8008 = !DILocation(line: 1493, column: 11, scope: !8003)
!8009 = !DILocation(line: 1494, column: 8, scope: !8003)
!8010 = distinct !{!8010, !7998, !8011}
!8011 = !DILocation(line: 1495, column: 3, scope: !7992)
!8012 = !DILocation(line: 1496, column: 2, scope: !7992)
!8013 = !DILocalVariable(name: "temp", scope: !8014, file: !3, line: 1498, type: !144)
!8014 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1497, column: 7)
!8015 = !DILocation(line: 1498, column: 7, scope: !8014)
!8016 = !DILocation(line: 1498, column: 26, scope: !8014)
!8017 = !DILocation(line: 1498, column: 31, scope: !8014)
!8018 = !DILocation(line: 1498, column: 38, scope: !8014)
!8019 = !DILocation(line: 1498, column: 19, scope: !8014)
!8020 = !DILocation(line: 1498, column: 14, scope: !8014)
!8021 = !DILocation(line: 1499, column: 10, scope: !8014)
!8022 = !DILocation(line: 1499, column: 19, scope: !8014)
!8023 = !DILocation(line: 1499, column: 24, scope: !8014)
!8024 = !DILocation(line: 1499, column: 31, scope: !8014)
!8025 = !DILocation(line: 1499, column: 3, scope: !8014)
!8026 = !DILocation(line: 1500, column: 12, scope: !8014)
!8027 = !DILocation(line: 1500, column: 10, scope: !8014)
!8028 = !DILocation(line: 1501, column: 10, scope: !8014)
!8029 = !DILocation(line: 1501, column: 7, scope: !8014)
!8030 = !DILocation(line: 1504, column: 6, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1504, column: 6)
!8032 = !DILocation(line: 1504, column: 6, scope: !7934)
!8033 = !DILocation(line: 1506, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 1506, column: 7)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 1504, column: 14)
!8036 = !DILocation(line: 1506, column: 12, scope: !8034)
!8037 = !DILocation(line: 1506, column: 19, scope: !8034)
!8038 = !DILocation(line: 1506, column: 25, scope: !8034)
!8039 = !DILocation(line: 1506, column: 7, scope: !8035)
!8040 = !DILocation(line: 1507, column: 70, scope: !8034)
!8041 = !DILocation(line: 1507, column: 75, scope: !8034)
!8042 = !DILocation(line: 1507, column: 44, scope: !8034)
!8043 = !DILocation(line: 1507, column: 25, scope: !8034)
!8044 = !DILocation(line: 1507, column: 30, scope: !8034)
!8045 = !DILocation(line: 1507, column: 42, scope: !8034)
!8046 = !DILocation(line: 1507, column: 4, scope: !8034)
!8047 = !DILocation(line: 1507, column: 9, scope: !8034)
!8048 = !DILocation(line: 1507, column: 16, scope: !8034)
!8049 = !DILocation(line: 1507, column: 22, scope: !8034)
!8050 = !DILocation(line: 1509, column: 7, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 1509, column: 7)
!8052 = !DILocation(line: 1509, column: 12, scope: !8051)
!8053 = !DILocation(line: 1509, column: 19, scope: !8051)
!8054 = !DILocation(line: 1509, column: 24, scope: !8051)
!8055 = !DILocation(line: 1509, column: 7, scope: !8035)
!8056 = !DILocation(line: 1510, column: 8, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1510, column: 8)
!8058 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1509, column: 44)
!8059 = !DILocation(line: 1510, column: 13, scope: !8057)
!8060 = !DILocation(line: 1510, column: 20, scope: !8057)
!8061 = !DILocation(line: 1510, column: 26, scope: !8057)
!8062 = !DILocation(line: 1510, column: 8, scope: !8058)
!8063 = !DILocation(line: 1511, column: 18, scope: !8057)
!8064 = !DILocation(line: 1511, column: 70, scope: !8057)
!8065 = !DILocation(line: 1511, column: 76, scope: !8057)
!8066 = !DILocation(line: 1511, column: 81, scope: !8057)
!8067 = !DILocation(line: 1511, column: 5, scope: !8057)
!8068 = !DILocation(line: 1513, column: 18, scope: !8057)
!8069 = !DILocation(line: 1513, column: 65, scope: !8057)
!8070 = !DILocation(line: 1513, column: 5, scope: !8057)
!8071 = !DILocation(line: 1514, column: 3, scope: !8058)
!8072 = !DILocation(line: 1516, column: 17, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1515, column: 8)
!8074 = !DILocation(line: 1516, column: 69, scope: !8073)
!8075 = !DILocation(line: 1516, column: 75, scope: !8073)
!8076 = !DILocation(line: 1516, column: 80, scope: !8073)
!8077 = !DILocation(line: 1516, column: 4, scope: !8073)
!8078 = !DILocation(line: 1518, column: 7, scope: !8035)
!8079 = !DILocation(line: 1519, column: 2, scope: !8035)
!8080 = !DILocation(line: 1521, column: 9, scope: !7934)
!8081 = !DILocation(line: 1521, column: 2, scope: !7934)
!8082 = !DILocation(line: 1522, column: 1, scope: !7934)
!8083 = distinct !DISubprogram(name: "ptcache_data_free", scope: !3, file: !3, line: 1844, type: !5619, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8084 = !DILocalVariable(name: "pm", arg: 1, scope: !8083, file: !3, line: 1844, type: !3946)
!8085 = !DILocation(line: 1844, column: 43, scope: !8083)
!8086 = !DILocalVariable(name: "data", scope: !8083, file: !3, line: 1846, type: !1074)
!8087 = !DILocation(line: 1846, column: 9, scope: !8083)
!8088 = !DILocation(line: 1846, column: 16, scope: !8083)
!8089 = !DILocation(line: 1846, column: 20, scope: !8083)
!8090 = !DILocalVariable(name: "i", scope: !8083, file: !3, line: 1847, type: !144)
!8091 = !DILocation(line: 1847, column: 6, scope: !8083)
!8092 = !DILocation(line: 1849, column: 8, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 1849, column: 2)
!8094 = !DILocation(line: 1849, column: 7, scope: !8093)
!8095 = !DILocation(line: 1849, column: 12, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1849, column: 2)
!8097 = !DILocation(line: 1849, column: 13, scope: !8096)
!8098 = !DILocation(line: 1849, column: 2, scope: !8093)
!8099 = !DILocation(line: 1850, column: 7, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 1850, column: 7)
!8101 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1849, column: 35)
!8102 = !DILocation(line: 1850, column: 12, scope: !8100)
!8103 = !DILocation(line: 1850, column: 7, scope: !8101)
!8104 = !DILocation(line: 1851, column: 4, scope: !8100)
!8105 = !DILocation(line: 1851, column: 14, scope: !8100)
!8106 = !DILocation(line: 1851, column: 19, scope: !8100)
!8107 = !DILocation(line: 1852, column: 2, scope: !8101)
!8108 = !DILocation(line: 1849, column: 31, scope: !8096)
!8109 = !DILocation(line: 1849, column: 2, scope: !8096)
!8110 = distinct !{!8110, !8098, !8111}
!8111 = !DILocation(line: 1852, column: 2, scope: !8093)
!8112 = !DILocation(line: 1853, column: 1, scope: !8083)
!8113 = distinct !DISubprogram(name: "ptcache_extra_free", scope: !3, file: !3, line: 1865, type: !5619, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8114 = !DILocalVariable(name: "pm", arg: 1, scope: !8113, file: !3, line: 1865, type: !3946)
!8115 = !DILocation(line: 1865, column: 44, scope: !8113)
!8116 = !DILocalVariable(name: "extra", scope: !8113, file: !3, line: 1867, type: !3958)
!8117 = !DILocation(line: 1867, column: 16, scope: !8113)
!8118 = !DILocation(line: 1867, column: 24, scope: !8113)
!8119 = !DILocation(line: 1867, column: 28, scope: !8113)
!8120 = !DILocation(line: 1867, column: 38, scope: !8113)
!8121 = !DILocation(line: 1869, column: 6, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 1869, column: 6)
!8123 = !DILocation(line: 1869, column: 6, scope: !8113)
!8124 = !DILocation(line: 1870, column: 3, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 1869, column: 13)
!8126 = !DILocation(line: 1870, column: 10, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 1870, column: 3)
!8128 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 1870, column: 3)
!8129 = !DILocation(line: 1870, column: 3, scope: !8128)
!8130 = !DILocation(line: 1871, column: 8, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1871, column: 8)
!8132 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 1870, column: 36)
!8133 = !DILocation(line: 1871, column: 15, scope: !8131)
!8134 = !DILocation(line: 1871, column: 8, scope: !8132)
!8135 = !DILocation(line: 1872, column: 5, scope: !8131)
!8136 = !DILocation(line: 1872, column: 15, scope: !8131)
!8137 = !DILocation(line: 1872, column: 22, scope: !8131)
!8138 = !DILocation(line: 1873, column: 3, scope: !8132)
!8139 = !DILocation(line: 1870, column: 23, scope: !8127)
!8140 = !DILocation(line: 1870, column: 30, scope: !8127)
!8141 = !DILocation(line: 1870, column: 22, scope: !8127)
!8142 = !DILocation(line: 1870, column: 3, scope: !8127)
!8143 = distinct !{!8143, !8129, !8144}
!8144 = !DILocation(line: 1873, column: 3, scope: !8128)
!8145 = !DILocation(line: 1875, column: 18, scope: !8125)
!8146 = !DILocation(line: 1875, column: 22, scope: !8125)
!8147 = !DILocation(line: 1875, column: 3, scope: !8125)
!8148 = !DILocation(line: 1876, column: 2, scope: !8125)
!8149 = !DILocation(line: 1877, column: 1, scope: !8113)
!8150 = distinct !DISubprogram(name: "BKE_ptcache_id_time", scope: !3, file: !3, line: 2704, type: !8151, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{null, !2797, !2734, !256, !868, !868, !745}
!8153 = !DILocalVariable(name: "pid", arg: 1, scope: !8150, file: !3, line: 2704, type: !2797)
!8154 = !DILocation(line: 2704, column: 37, scope: !8150)
!8155 = !DILocalVariable(name: "scene", arg: 2, scope: !8150, file: !3, line: 2704, type: !2734)
!8156 = !DILocation(line: 2704, column: 49, scope: !8150)
!8157 = !DILocalVariable(name: "cfra", arg: 3, scope: !8150, file: !3, line: 2704, type: !256)
!8158 = !DILocation(line: 2704, column: 62, scope: !8150)
!8159 = !DILocalVariable(name: "startframe", arg: 4, scope: !8150, file: !3, line: 2704, type: !868)
!8160 = !DILocation(line: 2704, column: 73, scope: !8150)
!8161 = !DILocalVariable(name: "endframe", arg: 5, scope: !8150, file: !3, line: 2704, type: !868)
!8162 = !DILocation(line: 2704, column: 90, scope: !8150)
!8163 = !DILocalVariable(name: "timescale", arg: 6, scope: !8150, file: !3, line: 2704, type: !745)
!8164 = !DILocation(line: 2704, column: 107, scope: !8150)
!8165 = !DILocalVariable(name: "cache", scope: !8150, file: !3, line: 2707, type: !7069)
!8166 = !DILocation(line: 2707, column: 14, scope: !8150)
!8167 = !DILocalVariable(name: "time", scope: !8150, file: !3, line: 2709, type: !256)
!8168 = !DILocation(line: 2709, column: 8, scope: !8150)
!8169 = !DILocalVariable(name: "nexttime", scope: !8150, file: !3, line: 2709, type: !256)
!8170 = !DILocation(line: 2709, column: 14, scope: !8150)
!8171 = !DILocation(line: 2724, column: 9, scope: !8150)
!8172 = !DILocation(line: 2724, column: 14, scope: !8150)
!8173 = !DILocation(line: 2724, column: 7, scope: !8150)
!8174 = !DILocation(line: 2726, column: 6, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2726, column: 6)
!8176 = !DILocation(line: 2726, column: 6, scope: !8150)
!8177 = !DILocation(line: 2727, column: 29, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2726, column: 17)
!8179 = !DILocation(line: 2727, column: 9, scope: !8178)
!8180 = !DILocation(line: 2727, column: 7, scope: !8178)
!8181 = !DILocation(line: 2728, column: 45, scope: !8178)
!8182 = !DILocation(line: 2728, column: 52, scope: !8178)
!8183 = !DILocation(line: 2728, column: 57, scope: !8178)
!8184 = !DILocation(line: 2728, column: 14, scope: !8178)
!8185 = !DILocation(line: 2728, column: 12, scope: !8178)
!8186 = !DILocation(line: 2730, column: 15, scope: !8178)
!8187 = !DILocation(line: 2730, column: 4, scope: !8178)
!8188 = !DILocation(line: 2730, column: 13, scope: !8178)
!8189 = !DILocation(line: 2731, column: 2, scope: !8178)
!8190 = !DILocation(line: 2733, column: 6, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2733, column: 6)
!8192 = !DILocation(line: 2733, column: 17, scope: !8191)
!8193 = !DILocation(line: 2733, column: 20, scope: !8191)
!8194 = !DILocation(line: 2733, column: 6, scope: !8150)
!8195 = !DILocation(line: 2734, column: 16, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2733, column: 30)
!8197 = !DILocation(line: 2734, column: 23, scope: !8196)
!8198 = !DILocation(line: 2734, column: 4, scope: !8196)
!8199 = !DILocation(line: 2734, column: 14, scope: !8196)
!8200 = !DILocation(line: 2735, column: 14, scope: !8196)
!8201 = !DILocation(line: 2735, column: 21, scope: !8196)
!8202 = !DILocation(line: 2735, column: 4, scope: !8196)
!8203 = !DILocation(line: 2735, column: 12, scope: !8196)
!8204 = !DILocation(line: 2749, column: 2, scope: !8196)
!8205 = !DILocation(line: 2752, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2752, column: 6)
!8207 = !DILocation(line: 2752, column: 13, scope: !8206)
!8208 = !DILocation(line: 2752, column: 6, scope: !8150)
!8209 = !DILocation(line: 2753, column: 7, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2753, column: 7)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 2752, column: 28)
!8212 = !DILocation(line: 2753, column: 22, scope: !8210)
!8213 = !DILocation(line: 2753, column: 29, scope: !8210)
!8214 = !DILocation(line: 2753, column: 63, scope: !8210)
!8215 = !DILocation(line: 2753, column: 70, scope: !8210)
!8216 = !DILocation(line: 2753, column: 79, scope: !8210)
!8217 = !DILocation(line: 2753, column: 86, scope: !8210)
!8218 = !DILocation(line: 2753, column: 78, scope: !8210)
!8219 = !DILocation(line: 2753, column: 96, scope: !8210)
!8220 = !DILocation(line: 2753, column: 62, scope: !8210)
!8221 = !DILocation(line: 2753, column: 60, scope: !8210)
!8222 = !DILocation(line: 2753, column: 44, scope: !8210)
!8223 = !DILocation(line: 2753, column: 7, scope: !8211)
!8224 = !DILocation(line: 2754, column: 4, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2753, column: 101)
!8226 = !DILocation(line: 2754, column: 14, scope: !8225)
!8227 = !DILocation(line: 2754, column: 21, scope: !8225)
!8228 = !DILocation(line: 2755, column: 4, scope: !8225)
!8229 = !DILocation(line: 2755, column: 11, scope: !8225)
!8230 = !DILocation(line: 2755, column: 25, scope: !8225)
!8231 = !DILocation(line: 2756, column: 3, scope: !8225)
!8232 = !DILocation(line: 2757, column: 2, scope: !8211)
!8233 = !DILocation(line: 2759, column: 6, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2759, column: 6)
!8235 = !DILocation(line: 2759, column: 13, scope: !8234)
!8236 = !DILocation(line: 2759, column: 26, scope: !8234)
!8237 = !DILocation(line: 2759, column: 33, scope: !8234)
!8238 = !DILocation(line: 2759, column: 36, scope: !8234)
!8239 = !DILocation(line: 2759, column: 43, scope: !8234)
!8240 = !DILocation(line: 2759, column: 54, scope: !8234)
!8241 = !DILocation(line: 2759, column: 61, scope: !8234)
!8242 = !DILocation(line: 2759, column: 52, scope: !8234)
!8243 = !DILocation(line: 2759, column: 6, scope: !8150)
!8244 = !DILocalVariable(name: "sta", scope: !8245, file: !3, line: 2760, type: !7)
!8245 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2759, column: 73)
!8246 = !DILocation(line: 2760, column: 16, scope: !8245)
!8247 = !DILocation(line: 2760, column: 20, scope: !8245)
!8248 = !DILocation(line: 2760, column: 27, scope: !8245)
!8249 = !DILocalVariable(name: "end", scope: !8245, file: !3, line: 2761, type: !7)
!8250 = !DILocation(line: 2761, column: 16, scope: !8245)
!8251 = !DILocation(line: 2761, column: 20, scope: !8245)
!8252 = !DILocation(line: 2761, column: 27, scope: !8245)
!8253 = !DILocation(line: 2763, column: 26, scope: !8245)
!8254 = !DILocation(line: 2763, column: 54, scope: !8245)
!8255 = !DILocation(line: 2763, column: 61, scope: !8245)
!8256 = !DILocation(line: 2763, column: 70, scope: !8245)
!8257 = !DILocation(line: 2763, column: 77, scope: !8245)
!8258 = !DILocation(line: 2763, column: 69, scope: !8245)
!8259 = !DILocation(line: 2763, column: 87, scope: !8245)
!8260 = !DILocation(line: 2763, column: 53, scope: !8245)
!8261 = !DILocation(line: 2763, column: 51, scope: !8245)
!8262 = !DILocation(line: 2763, column: 3, scope: !8245)
!8263 = !DILocation(line: 2763, column: 10, scope: !8245)
!8264 = !DILocation(line: 2763, column: 24, scope: !8245)
!8265 = !DILocation(line: 2765, column: 7, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 2765, column: 7)
!8267 = !DILocation(line: 2765, column: 12, scope: !8266)
!8268 = !DILocation(line: 2765, column: 19, scope: !8266)
!8269 = !DILocation(line: 2765, column: 24, scope: !8266)
!8270 = !DILocation(line: 2765, column: 7, scope: !8245)
!8271 = !DILocalVariable(name: "dir", scope: !8272, file: !3, line: 2767, type: !6641)
!8272 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 2765, column: 46)
!8273 = !DILocation(line: 2767, column: 9, scope: !8272)
!8274 = !DILocalVariable(name: "de", scope: !8272, file: !3, line: 2768, type: !6647)
!8275 = !DILocation(line: 2768, column: 19, scope: !8272)
!8276 = !DILocalVariable(name: "path", scope: !8272, file: !3, line: 2769, type: !177)
!8277 = !DILocation(line: 2769, column: 9, scope: !8272)
!8278 = !DILocalVariable(name: "filename", scope: !8272, file: !3, line: 2770, type: !6146)
!8279 = !DILocation(line: 2770, column: 9, scope: !8272)
!8280 = !DILocalVariable(name: "ext", scope: !8272, file: !3, line: 2771, type: !177)
!8281 = !DILocation(line: 2771, column: 9, scope: !8272)
!8282 = !DILocalVariable(name: "len", scope: !8272, file: !3, line: 2772, type: !7)
!8283 = !DILocation(line: 2772, column: 17, scope: !8272)
!8284 = !DILocation(line: 2774, column: 17, scope: !8272)
!8285 = !DILocation(line: 2774, column: 22, scope: !8272)
!8286 = !DILocation(line: 2774, column: 4, scope: !8272)
!8287 = !DILocation(line: 2776, column: 27, scope: !8272)
!8288 = !DILocation(line: 2776, column: 32, scope: !8272)
!8289 = !DILocation(line: 2776, column: 47, scope: !8272)
!8290 = !DILocation(line: 2776, column: 42, scope: !8272)
!8291 = !DILocation(line: 2776, column: 10, scope: !8272)
!8292 = !DILocation(line: 2776, column: 8, scope: !8272)
!8293 = !DILocation(line: 2778, column: 18, scope: !8272)
!8294 = !DILocation(line: 2778, column: 10, scope: !8272)
!8295 = !DILocation(line: 2778, column: 8, scope: !8272)
!8296 = !DILocation(line: 2779, column: 8, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 2779, column: 8)
!8298 = !DILocation(line: 2779, column: 11, scope: !8297)
!8299 = !DILocation(line: 2779, column: 8, scope: !8272)
!8300 = !DILocation(line: 2780, column: 5, scope: !8297)
!8301 = !DILocation(line: 2782, column: 17, scope: !8272)
!8302 = !DILocation(line: 2782, column: 55, scope: !8272)
!8303 = !DILocation(line: 2782, column: 60, scope: !8272)
!8304 = !DILocation(line: 2782, column: 4, scope: !8272)
!8305 = !DILocation(line: 2784, column: 4, scope: !8272)
!8306 = !DILocation(line: 2784, column: 25, scope: !8272)
!8307 = !DILocation(line: 2784, column: 17, scope: !8272)
!8308 = !DILocation(line: 2784, column: 15, scope: !8272)
!8309 = !DILocation(line: 2784, column: 31, scope: !8272)
!8310 = !DILocation(line: 2785, column: 16, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2785, column: 9)
!8312 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 2784, column: 40)
!8313 = !DILocation(line: 2785, column: 20, scope: !8311)
!8314 = !DILocation(line: 2785, column: 28, scope: !8311)
!8315 = !DILocation(line: 2785, column: 9, scope: !8311)
!8316 = !DILocation(line: 2785, column: 9, scope: !8312)
!8317 = !DILocation(line: 2786, column: 18, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 2786, column: 10)
!8319 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2785, column: 34)
!8320 = !DILocation(line: 2786, column: 28, scope: !8318)
!8321 = !DILocation(line: 2786, column: 32, scope: !8318)
!8322 = !DILocation(line: 2786, column: 40, scope: !8318)
!8323 = !DILocation(line: 2786, column: 10, scope: !8318)
!8324 = !DILocation(line: 2786, column: 46, scope: !8318)
!8325 = !DILocation(line: 2786, column: 10, scope: !8319)
!8326 = !DILocalVariable(name: "frame", scope: !8327, file: !3, line: 2788, type: !7)
!8327 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 2786, column: 52)
!8328 = !DILocation(line: 2788, column: 20, scope: !8327)
!8329 = !DILocalVariable(name: "len2", scope: !8327, file: !3, line: 2788, type: !7)
!8330 = !DILocation(line: 2788, column: 27, scope: !8327)
!8331 = !DILocation(line: 2788, column: 46, scope: !8327)
!8332 = !DILocation(line: 2788, column: 50, scope: !8327)
!8333 = !DILocation(line: 2788, column: 39, scope: !8327)
!8334 = !DILocation(line: 2788, column: 34, scope: !8327)
!8335 = !DILocalVariable(name: "num", scope: !8327, file: !3, line: 2789, type: !663)
!8336 = !DILocation(line: 2789, column: 12, scope: !8327)
!8337 = !DILocation(line: 2791, column: 11, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 2791, column: 11)
!8339 = !DILocation(line: 2791, column: 16, scope: !8338)
!8340 = !DILocation(line: 2791, column: 11, scope: !8327)
!8341 = !DILocation(line: 2792, column: 20, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2791, column: 22)
!8343 = !DILocation(line: 2792, column: 25, scope: !8342)
!8344 = !DILocation(line: 2792, column: 29, scope: !8342)
!8345 = !DILocation(line: 2792, column: 46, scope: !8342)
!8346 = !DILocation(line: 2792, column: 50, scope: !8342)
!8347 = !DILocation(line: 2792, column: 39, scope: !8342)
!8348 = !DILocation(line: 2792, column: 58, scope: !8342)
!8349 = !DILocation(line: 2792, column: 36, scope: !8342)
!8350 = !DILocation(line: 2792, column: 8, scope: !8342)
!8351 = !DILocation(line: 2793, column: 21, scope: !8342)
!8352 = !DILocation(line: 2793, column: 16, scope: !8342)
!8353 = !DILocation(line: 2793, column: 14, scope: !8342)
!8354 = !DILocation(line: 2795, column: 12, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 2795, column: 12)
!8356 = !DILocation(line: 2795, column: 21, scope: !8355)
!8357 = !DILocation(line: 2795, column: 18, scope: !8355)
!8358 = !DILocation(line: 2795, column: 25, scope: !8355)
!8359 = !DILocation(line: 2795, column: 28, scope: !8355)
!8360 = !DILocation(line: 2795, column: 37, scope: !8355)
!8361 = !DILocation(line: 2795, column: 34, scope: !8355)
!8362 = !DILocation(line: 2795, column: 12, scope: !8342)
!8363 = !DILocation(line: 2796, column: 9, scope: !8355)
!8364 = !DILocation(line: 2796, column: 16, scope: !8355)
!8365 = !DILocation(line: 2796, column: 30, scope: !8355)
!8366 = !DILocation(line: 2796, column: 36, scope: !8355)
!8367 = !DILocation(line: 2796, column: 35, scope: !8355)
!8368 = !DILocation(line: 2796, column: 41, scope: !8355)
!8369 = !DILocation(line: 2797, column: 7, scope: !8342)
!8370 = !DILocation(line: 2798, column: 6, scope: !8327)
!8371 = !DILocation(line: 2799, column: 5, scope: !8319)
!8372 = distinct !{!8372, !8305, !8373}
!8373 = !DILocation(line: 2800, column: 4, scope: !8272)
!8374 = !DILocation(line: 2801, column: 13, scope: !8272)
!8375 = !DILocation(line: 2801, column: 4, scope: !8272)
!8376 = !DILocation(line: 2802, column: 3, scope: !8272)
!8377 = !DILocalVariable(name: "pm", scope: !8378, file: !3, line: 2804, type: !3946)
!8378 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 2803, column: 8)
!8379 = !DILocation(line: 2804, column: 16, scope: !8378)
!8380 = !DILocation(line: 2804, column: 20, scope: !8378)
!8381 = !DILocation(line: 2804, column: 25, scope: !8378)
!8382 = !DILocation(line: 2804, column: 32, scope: !8378)
!8383 = !DILocation(line: 2804, column: 42, scope: !8378)
!8384 = !DILocation(line: 2806, column: 4, scope: !8378)
!8385 = !DILocation(line: 2806, column: 11, scope: !8378)
!8386 = !DILocation(line: 2807, column: 9, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2807, column: 9)
!8388 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2806, column: 15)
!8389 = !DILocation(line: 2807, column: 13, scope: !8387)
!8390 = !DILocation(line: 2807, column: 22, scope: !8387)
!8391 = !DILocation(line: 2807, column: 19, scope: !8387)
!8392 = !DILocation(line: 2807, column: 26, scope: !8387)
!8393 = !DILocation(line: 2807, column: 29, scope: !8387)
!8394 = !DILocation(line: 2807, column: 33, scope: !8387)
!8395 = !DILocation(line: 2807, column: 42, scope: !8387)
!8396 = !DILocation(line: 2807, column: 39, scope: !8387)
!8397 = !DILocation(line: 2807, column: 9, scope: !8388)
!8398 = !DILocation(line: 2808, column: 6, scope: !8387)
!8399 = !DILocation(line: 2808, column: 13, scope: !8387)
!8400 = !DILocation(line: 2808, column: 27, scope: !8387)
!8401 = !DILocation(line: 2808, column: 31, scope: !8387)
!8402 = !DILocation(line: 2808, column: 37, scope: !8387)
!8403 = !DILocation(line: 2808, column: 36, scope: !8387)
!8404 = !DILocation(line: 2808, column: 42, scope: !8387)
!8405 = !DILocation(line: 2809, column: 10, scope: !8388)
!8406 = !DILocation(line: 2809, column: 14, scope: !8388)
!8407 = !DILocation(line: 2809, column: 8, scope: !8388)
!8408 = distinct !{!8408, !8384, !8409}
!8409 = !DILocation(line: 2810, column: 4, scope: !8378)
!8410 = !DILocation(line: 2812, column: 2, scope: !8245)
!8411 = !DILocation(line: 2813, column: 1, scope: !8150)
!8412 = distinct !DISubprogram(name: "BKE_ptcache_id_reset", scope: !3, file: !3, line: 2814, type: !8413, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8413 = !DISubroutineType(types: !8414)
!8414 = !{!144, !2734, !2797, !144}
!8415 = !DILocalVariable(name: "scene", arg: 1, scope: !8412, file: !3, line: 2814, type: !2734)
!8416 = !DILocation(line: 2814, column: 34, scope: !8412)
!8417 = !DILocalVariable(name: "pid", arg: 2, scope: !8412, file: !3, line: 2814, type: !2797)
!8418 = !DILocation(line: 2814, column: 52, scope: !8412)
!8419 = !DILocalVariable(name: "mode", arg: 3, scope: !8412, file: !3, line: 2814, type: !144)
!8420 = !DILocation(line: 2814, column: 61, scope: !8412)
!8421 = !DILocalVariable(name: "cache", scope: !8412, file: !3, line: 2816, type: !7069)
!8422 = !DILocation(line: 2816, column: 14, scope: !8412)
!8423 = !DILocalVariable(name: "reset", scope: !8412, file: !3, line: 2817, type: !144)
!8424 = !DILocation(line: 2817, column: 6, scope: !8412)
!8425 = !DILocalVariable(name: "clear", scope: !8412, file: !3, line: 2817, type: !144)
!8426 = !DILocation(line: 2817, column: 13, scope: !8412)
!8427 = !DILocalVariable(name: "after", scope: !8412, file: !3, line: 2817, type: !144)
!8428 = !DILocation(line: 2817, column: 20, scope: !8412)
!8429 = !DILocation(line: 2819, column: 7, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2819, column: 6)
!8431 = !DILocation(line: 2819, column: 12, scope: !8430)
!8432 = !DILocation(line: 2819, column: 6, scope: !8412)
!8433 = !DILocation(line: 2820, column: 3, scope: !8430)
!8434 = !DILocation(line: 2822, column: 9, scope: !8412)
!8435 = !DILocation(line: 2822, column: 14, scope: !8412)
!8436 = !DILocation(line: 2822, column: 7, scope: !8412)
!8437 = !DILocation(line: 2823, column: 7, scope: !8412)
!8438 = !DILocation(line: 2824, column: 7, scope: !8412)
!8439 = !DILocation(line: 2825, column: 7, scope: !8412)
!8440 = !DILocation(line: 2827, column: 6, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2827, column: 6)
!8442 = !DILocation(line: 2827, column: 11, scope: !8441)
!8443 = !DILocation(line: 2827, column: 6, scope: !8412)
!8444 = !DILocation(line: 2828, column: 9, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2828, column: 7)
!8446 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 2827, column: 39)
!8447 = !DILocation(line: 2828, column: 16, scope: !8445)
!8448 = !DILocation(line: 2828, column: 21, scope: !8445)
!8449 = !DILocation(line: 2828, column: 7, scope: !8446)
!8450 = !DILocation(line: 2830, column: 9, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 2828, column: 39)
!8452 = !DILocation(line: 2831, column: 3, scope: !8451)
!8453 = !DILocation(line: 2833, column: 3, scope: !8446)
!8454 = !DILocation(line: 2833, column: 10, scope: !8446)
!8455 = !DILocation(line: 2833, column: 15, scope: !8446)
!8456 = !DILocation(line: 2834, column: 2, scope: !8446)
!8457 = !DILocation(line: 2835, column: 11, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 2835, column: 11)
!8459 = !DILocation(line: 2835, column: 16, scope: !8458)
!8460 = !DILocation(line: 2835, column: 11, scope: !8441)
!8461 = !DILocation(line: 2836, column: 3, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2835, column: 40)
!8463 = !DILocation(line: 2836, column: 10, scope: !8462)
!8464 = !DILocation(line: 2836, column: 15, scope: !8462)
!8465 = !DILocation(line: 2837, column: 2, scope: !8462)
!8466 = !DILocation(line: 2838, column: 11, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2838, column: 11)
!8468 = !DILocation(line: 2838, column: 16, scope: !8467)
!8469 = !DILocation(line: 2838, column: 11, scope: !8458)
!8470 = !DILocation(line: 2839, column: 9, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2838, column: 43)
!8472 = !DILocation(line: 2841, column: 7, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 2841, column: 7)
!8474 = !DILocation(line: 2841, column: 14, scope: !8473)
!8475 = !DILocation(line: 2841, column: 19, scope: !8473)
!8476 = !DILocation(line: 2841, column: 38, scope: !8473)
!8477 = !DILocation(line: 2841, column: 43, scope: !8473)
!8478 = !DILocation(line: 2841, column: 50, scope: !8473)
!8479 = !DILocation(line: 2841, column: 55, scope: !8473)
!8480 = !DILocation(line: 2841, column: 7, scope: !8471)
!8481 = !DILocation(line: 2842, column: 9, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 2841, column: 73)
!8483 = !DILocation(line: 2843, column: 4, scope: !8482)
!8484 = !DILocation(line: 2843, column: 11, scope: !8482)
!8485 = !DILocation(line: 2843, column: 16, scope: !8482)
!8486 = !DILocation(line: 2844, column: 3, scope: !8482)
!8487 = !DILocation(line: 2845, column: 2, scope: !8471)
!8488 = !DILocation(line: 2847, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2847, column: 6)
!8490 = !DILocation(line: 2847, column: 6, scope: !8412)
!8491 = !DILocation(line: 2848, column: 26, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2847, column: 13)
!8493 = !DILocation(line: 2848, column: 3, scope: !8492)
!8494 = !DILocation(line: 2849, column: 3, scope: !8492)
!8495 = !DILocation(line: 2849, column: 10, scope: !8492)
!8496 = !DILocation(line: 2849, column: 15, scope: !8492)
!8497 = !DILocation(line: 2851, column: 7, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 2851, column: 7)
!8499 = !DILocation(line: 2851, column: 12, scope: !8498)
!8500 = !DILocation(line: 2851, column: 17, scope: !8498)
!8501 = !DILocation(line: 2851, column: 7, scope: !8492)
!8502 = !DILocation(line: 2852, column: 24, scope: !8498)
!8503 = !DILocation(line: 2852, column: 29, scope: !8498)
!8504 = !DILocation(line: 2852, column: 4, scope: !8498)
!8505 = !DILocation(line: 2853, column: 12, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 2853, column: 12)
!8507 = !DILocation(line: 2853, column: 17, scope: !8506)
!8508 = !DILocation(line: 2853, column: 22, scope: !8506)
!8509 = !DILocation(line: 2853, column: 12, scope: !8498)
!8510 = !DILocation(line: 2854, column: 21, scope: !8506)
!8511 = !DILocation(line: 2854, column: 26, scope: !8506)
!8512 = !DILocation(line: 2854, column: 4, scope: !8506)
!8513 = !DILocation(line: 2855, column: 12, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2855, column: 12)
!8515 = !DILocation(line: 2855, column: 17, scope: !8514)
!8516 = !DILocation(line: 2855, column: 22, scope: !8514)
!8517 = !DILocation(line: 2855, column: 12, scope: !8506)
!8518 = !DILocation(line: 2856, column: 15, scope: !8514)
!8519 = !DILocation(line: 2856, column: 20, scope: !8514)
!8520 = !DILocation(line: 2856, column: 4, scope: !8514)
!8521 = !DILocation(line: 2863, column: 12, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 2863, column: 12)
!8523 = !DILocation(line: 2863, column: 17, scope: !8522)
!8524 = !DILocation(line: 2863, column: 22, scope: !8522)
!8525 = !DILocation(line: 2863, column: 12, scope: !8514)
!8526 = !DILocation(line: 2864, column: 30, scope: !8522)
!8527 = !DILocation(line: 2864, column: 59, scope: !8522)
!8528 = !DILocation(line: 2864, column: 64, scope: !8522)
!8529 = !DILocation(line: 2864, column: 37, scope: !8522)
!8530 = !DILocation(line: 2864, column: 4, scope: !8522)
!8531 = !DILocation(line: 2865, column: 2, scope: !8492)
!8532 = !DILocation(line: 2866, column: 6, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2866, column: 6)
!8534 = !DILocation(line: 2866, column: 6, scope: !8412)
!8535 = !DILocation(line: 2867, column: 24, scope: !8533)
!8536 = !DILocation(line: 2867, column: 3, scope: !8533)
!8537 = !DILocation(line: 2868, column: 11, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 2868, column: 11)
!8539 = !DILocation(line: 2868, column: 11, scope: !8533)
!8540 = !DILocation(line: 2869, column: 24, scope: !8538)
!8541 = !DILocation(line: 2869, column: 50, scope: !8538)
!8542 = !DILocation(line: 2869, column: 3, scope: !8538)
!8543 = !DILocation(line: 2871, column: 10, scope: !8412)
!8544 = !DILocation(line: 2871, column: 16, scope: !8412)
!8545 = !DILocation(line: 2871, column: 19, scope: !8412)
!8546 = !DILocation(line: 2871, column: 25, scope: !8412)
!8547 = !DILocation(line: 2871, column: 28, scope: !8412)
!8548 = !DILocation(line: 2871, column: 2, scope: !8412)
!8549 = !DILocation(line: 2872, column: 1, scope: !8412)
!8550 = distinct !DISubprogram(name: "BKE_ptcache_invalidate", scope: !3, file: !3, line: 3743, type: !8551, scopeLine: 3744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{null, !7069}
!8553 = !DILocalVariable(name: "cache", arg: 1, scope: !8550, file: !3, line: 3743, type: !7069)
!8554 = !DILocation(line: 3743, column: 41, scope: !8550)
!8555 = !DILocation(line: 3745, column: 6, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 3745, column: 6)
!8557 = !DILocation(line: 3745, column: 6, scope: !8550)
!8558 = !DILocation(line: 3746, column: 3, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 3745, column: 13)
!8560 = !DILocation(line: 3746, column: 10, scope: !8559)
!8561 = !DILocation(line: 3746, column: 15, scope: !8559)
!8562 = !DILocation(line: 3747, column: 3, scope: !8559)
!8563 = !DILocation(line: 3747, column: 10, scope: !8559)
!8564 = !DILocation(line: 3747, column: 19, scope: !8559)
!8565 = !DILocation(line: 3748, column: 23, scope: !8559)
!8566 = !DILocation(line: 3748, column: 3, scope: !8559)
!8567 = !DILocation(line: 3748, column: 10, scope: !8559)
!8568 = !DILocation(line: 3748, column: 21, scope: !8559)
!8569 = !DILocation(line: 3749, column: 2, scope: !8559)
!8570 = !DILocation(line: 3750, column: 1, scope: !8550)
!8571 = distinct !DISubprogram(name: "BKE_ptcache_object_reset", scope: !3, file: !3, line: 2873, type: !8572, scopeLine: 2874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!144, !2734, !2799, !144}
!8574 = !DILocalVariable(name: "scene", arg: 1, scope: !8571, file: !3, line: 2873, type: !2734)
!8575 = !DILocation(line: 2873, column: 38, scope: !8571)
!8576 = !DILocalVariable(name: "ob", arg: 2, scope: !8571, file: !3, line: 2873, type: !2799)
!8577 = !DILocation(line: 2873, column: 53, scope: !8571)
!8578 = !DILocalVariable(name: "mode", arg: 3, scope: !8571, file: !3, line: 2873, type: !144)
!8579 = !DILocation(line: 2873, column: 61, scope: !8571)
!8580 = !DILocalVariable(name: "pid", scope: !8571, file: !3, line: 2875, type: !2798)
!8581 = !DILocation(line: 2875, column: 12, scope: !8571)
!8582 = !DILocalVariable(name: "psys", scope: !8571, file: !3, line: 2876, type: !2655)
!8583 = !DILocation(line: 2876, column: 18, scope: !8571)
!8584 = !DILocalVariable(name: "md", scope: !8571, file: !3, line: 2877, type: !5225)
!8585 = !DILocation(line: 2877, column: 16, scope: !8571)
!8586 = !DILocalVariable(name: "reset", scope: !8571, file: !3, line: 2878, type: !144)
!8587 = !DILocation(line: 2878, column: 6, scope: !8571)
!8588 = !DILocalVariable(name: "skip", scope: !8571, file: !3, line: 2878, type: !144)
!8589 = !DILocation(line: 2878, column: 13, scope: !8571)
!8590 = !DILocation(line: 2880, column: 7, scope: !8571)
!8591 = !DILocation(line: 2881, column: 6, scope: !8571)
!8592 = !DILocation(line: 2883, column: 6, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2883, column: 6)
!8594 = !DILocation(line: 2883, column: 10, scope: !8593)
!8595 = !DILocation(line: 2883, column: 6, scope: !8571)
!8596 = !DILocation(line: 2884, column: 38, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 2883, column: 16)
!8598 = !DILocation(line: 2884, column: 42, scope: !8597)
!8599 = !DILocation(line: 2884, column: 46, scope: !8597)
!8600 = !DILocation(line: 2884, column: 3, scope: !8597)
!8601 = !DILocation(line: 2885, column: 33, scope: !8597)
!8602 = !DILocation(line: 2885, column: 46, scope: !8597)
!8603 = !DILocation(line: 2885, column: 12, scope: !8597)
!8604 = !DILocation(line: 2885, column: 9, scope: !8597)
!8605 = !DILocation(line: 2886, column: 2, scope: !8597)
!8606 = !DILocation(line: 2888, column: 12, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2888, column: 2)
!8608 = !DILocation(line: 2888, column: 16, scope: !8607)
!8609 = !DILocation(line: 2888, column: 31, scope: !8607)
!8610 = !DILocation(line: 2888, column: 11, scope: !8607)
!8611 = !DILocation(line: 2888, column: 7, scope: !8607)
!8612 = !DILocation(line: 2888, column: 38, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2888, column: 2)
!8614 = !DILocation(line: 2888, column: 2, scope: !8607)
!8615 = !DILocation(line: 2890, column: 7, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 2890, column: 7)
!8617 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 2888, column: 61)
!8618 = !DILocation(line: 2890, column: 13, scope: !8616)
!8619 = !DILocation(line: 2890, column: 20, scope: !8616)
!8620 = !DILocation(line: 2890, column: 39, scope: !8616)
!8621 = !DILocation(line: 2890, column: 42, scope: !8616)
!8622 = !DILocation(line: 2890, column: 48, scope: !8616)
!8623 = !DILocation(line: 2890, column: 55, scope: !8616)
!8624 = !DILocation(line: 2890, column: 7, scope: !8617)
!8625 = !DILocation(line: 2891, column: 9, scope: !8616)
!8626 = !DILocation(line: 2891, column: 4, scope: !8616)
!8627 = !DILocation(line: 2894, column: 12, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 2894, column: 12)
!8629 = !DILocation(line: 2894, column: 18, scope: !8628)
!8630 = !DILocation(line: 2894, column: 12, scope: !8616)
!8631 = !DILocation(line: 2895, column: 36, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2894, column: 24)
!8633 = !DILocation(line: 2895, column: 40, scope: !8632)
!8634 = !DILocation(line: 2895, column: 46, scope: !8632)
!8635 = !DILocation(line: 2895, column: 4, scope: !8632)
!8636 = !DILocation(line: 2896, column: 8, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 2896, column: 8)
!8638 = !DILocation(line: 2896, column: 13, scope: !8637)
!8639 = !DILocation(line: 2896, column: 31, scope: !8637)
!8640 = !DILocation(line: 2896, column: 36, scope: !8637)
!8641 = !DILocation(line: 2896, column: 42, scope: !8637)
!8642 = !DILocation(line: 2896, column: 48, scope: !8637)
!8643 = !DILocation(line: 2896, column: 53, scope: !8637)
!8644 = !DILocation(line: 2896, column: 66, scope: !8637)
!8645 = !DILocation(line: 2896, column: 74, scope: !8637)
!8646 = !DILocation(line: 2896, column: 81, scope: !8637)
!8647 = !DILocation(line: 2896, column: 86, scope: !8637)
!8648 = !DILocation(line: 2896, column: 8, scope: !8632)
!8649 = !DILocation(line: 2897, column: 35, scope: !8637)
!8650 = !DILocation(line: 2897, column: 48, scope: !8637)
!8651 = !DILocation(line: 2897, column: 14, scope: !8637)
!8652 = !DILocation(line: 2897, column: 11, scope: !8637)
!8653 = !DILocation(line: 2897, column: 5, scope: !8637)
!8654 = !DILocation(line: 2899, column: 10, scope: !8637)
!8655 = !DILocation(line: 2900, column: 3, scope: !8632)
!8656 = !DILocation(line: 2902, column: 7, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 2902, column: 7)
!8658 = !DILocation(line: 2902, column: 12, scope: !8657)
!8659 = !DILocation(line: 2902, column: 17, scope: !8657)
!8660 = !DILocation(line: 2902, column: 20, scope: !8657)
!8661 = !DILocation(line: 2902, column: 26, scope: !8657)
!8662 = !DILocation(line: 2902, column: 7, scope: !8617)
!8663 = !DILocation(line: 2903, column: 40, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 2902, column: 32)
!8665 = !DILocation(line: 2903, column: 44, scope: !8664)
!8666 = !DILocation(line: 2903, column: 4, scope: !8664)
!8667 = !DILocation(line: 2904, column: 34, scope: !8664)
!8668 = !DILocation(line: 2904, column: 47, scope: !8664)
!8669 = !DILocation(line: 2904, column: 13, scope: !8664)
!8670 = !DILocation(line: 2904, column: 10, scope: !8664)
!8671 = !DILocation(line: 2905, column: 3, scope: !8664)
!8672 = !DILocation(line: 2906, column: 2, scope: !8617)
!8673 = !DILocation(line: 2888, column: 49, scope: !8613)
!8674 = !DILocation(line: 2888, column: 55, scope: !8613)
!8675 = !DILocation(line: 2888, column: 48, scope: !8613)
!8676 = !DILocation(line: 2888, column: 2, scope: !8613)
!8677 = distinct !{!8677, !8614, !8678}
!8678 = !DILocation(line: 2906, column: 2, scope: !8607)
!8679 = !DILocation(line: 2908, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2908, column: 2)
!8681 = !DILocation(line: 2908, column: 14, scope: !8680)
!8682 = !DILocation(line: 2908, column: 24, scope: !8680)
!8683 = !DILocation(line: 2908, column: 9, scope: !8680)
!8684 = !DILocation(line: 2908, column: 7, scope: !8680)
!8685 = !DILocation(line: 2908, column: 31, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2908, column: 2)
!8687 = !DILocation(line: 2908, column: 2, scope: !8680)
!8688 = !DILocation(line: 2909, column: 7, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2909, column: 7)
!8690 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 2908, column: 48)
!8691 = !DILocation(line: 2909, column: 11, scope: !8689)
!8692 = !DILocation(line: 2909, column: 16, scope: !8689)
!8693 = !DILocation(line: 2909, column: 7, scope: !8690)
!8694 = !DILocation(line: 2910, column: 36, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2909, column: 40)
!8696 = !DILocation(line: 2910, column: 60, scope: !8695)
!8697 = !DILocation(line: 2910, column: 40, scope: !8695)
!8698 = !DILocation(line: 2910, column: 4, scope: !8695)
!8699 = !DILocation(line: 2911, column: 34, scope: !8695)
!8700 = !DILocation(line: 2911, column: 47, scope: !8695)
!8701 = !DILocation(line: 2911, column: 13, scope: !8695)
!8702 = !DILocation(line: 2911, column: 10, scope: !8695)
!8703 = !DILocation(line: 2912, column: 3, scope: !8695)
!8704 = !DILocation(line: 2913, column: 7, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2913, column: 7)
!8706 = !DILocation(line: 2913, column: 11, scope: !8705)
!8707 = !DILocation(line: 2913, column: 16, scope: !8705)
!8708 = !DILocation(line: 2913, column: 7, scope: !8690)
!8709 = !DILocalVariable(name: "smd", scope: !8710, file: !3, line: 2914, type: !2419)
!8710 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 2913, column: 40)
!8711 = !DILocation(line: 2914, column: 23, scope: !8710)
!8712 = !DILocation(line: 2914, column: 50, scope: !8710)
!8713 = !DILocation(line: 2914, column: 29, scope: !8710)
!8714 = !DILocation(line: 2915, column: 8, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 2915, column: 8)
!8716 = !DILocation(line: 2915, column: 13, scope: !8715)
!8717 = !DILocation(line: 2915, column: 18, scope: !8715)
!8718 = !DILocation(line: 2915, column: 8, scope: !8710)
!8719 = !DILocation(line: 2916, column: 37, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 2915, column: 43)
!8721 = !DILocation(line: 2916, column: 61, scope: !8720)
!8722 = !DILocation(line: 2916, column: 41, scope: !8720)
!8723 = !DILocation(line: 2916, column: 5, scope: !8720)
!8724 = !DILocation(line: 2917, column: 35, scope: !8720)
!8725 = !DILocation(line: 2917, column: 48, scope: !8720)
!8726 = !DILocation(line: 2917, column: 14, scope: !8720)
!8727 = !DILocation(line: 2917, column: 11, scope: !8720)
!8728 = !DILocation(line: 2918, column: 4, scope: !8720)
!8729 = !DILocation(line: 2919, column: 3, scope: !8710)
!8730 = !DILocation(line: 2920, column: 7, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2920, column: 7)
!8732 = !DILocation(line: 2920, column: 11, scope: !8731)
!8733 = !DILocation(line: 2920, column: 16, scope: !8731)
!8734 = !DILocation(line: 2920, column: 7, scope: !8690)
!8735 = !DILocalVariable(name: "pmd", scope: !8736, file: !3, line: 2921, type: !2540)
!8736 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 2920, column: 47)
!8737 = !DILocation(line: 2921, column: 30, scope: !8736)
!8738 = !DILocation(line: 2921, column: 64, scope: !8736)
!8739 = !DILocation(line: 2921, column: 36, scope: !8736)
!8740 = !DILocation(line: 2922, column: 8, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2922, column: 8)
!8742 = !DILocation(line: 2922, column: 13, scope: !8741)
!8743 = !DILocation(line: 2922, column: 8, scope: !8736)
!8744 = !DILocalVariable(name: "surface", scope: !8745, file: !3, line: 2923, type: !2587)
!8745 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 2922, column: 21)
!8746 = !DILocation(line: 2923, column: 26, scope: !8745)
!8747 = !DILocation(line: 2923, column: 36, scope: !8745)
!8748 = !DILocation(line: 2923, column: 41, scope: !8745)
!8749 = !DILocation(line: 2923, column: 49, scope: !8745)
!8750 = !DILocation(line: 2923, column: 58, scope: !8745)
!8751 = !DILocation(line: 2925, column: 5, scope: !8745)
!8752 = !DILocation(line: 2925, column: 12, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2925, column: 5)
!8754 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 2925, column: 5)
!8755 = !DILocation(line: 2925, column: 5, scope: !8754)
!8756 = !DILocation(line: 2926, column: 45, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 2925, column: 44)
!8758 = !DILocation(line: 2926, column: 49, scope: !8757)
!8759 = !DILocation(line: 2926, column: 6, scope: !8757)
!8760 = !DILocation(line: 2927, column: 36, scope: !8757)
!8761 = !DILocation(line: 2927, column: 49, scope: !8757)
!8762 = !DILocation(line: 2927, column: 15, scope: !8757)
!8763 = !DILocation(line: 2927, column: 12, scope: !8757)
!8764 = !DILocation(line: 2928, column: 5, scope: !8757)
!8765 = !DILocation(line: 2925, column: 29, scope: !8753)
!8766 = !DILocation(line: 2925, column: 38, scope: !8753)
!8767 = !DILocation(line: 2925, column: 28, scope: !8753)
!8768 = !DILocation(line: 2925, column: 5, scope: !8753)
!8769 = distinct !{!8769, !8755, !8770}
!8770 = !DILocation(line: 2928, column: 5, scope: !8754)
!8771 = !DILocation(line: 2929, column: 4, scope: !8745)
!8772 = !DILocation(line: 2930, column: 3, scope: !8736)
!8773 = !DILocation(line: 2931, column: 2, scope: !8690)
!8774 = !DILocation(line: 2908, column: 38, scope: !8686)
!8775 = !DILocation(line: 2908, column: 42, scope: !8686)
!8776 = !DILocation(line: 2908, column: 37, scope: !8686)
!8777 = !DILocation(line: 2908, column: 2, scope: !8686)
!8778 = distinct !{!8778, !8687, !8779}
!8779 = !DILocation(line: 2931, column: 2, scope: !8680)
!8780 = !DILocation(line: 2933, column: 6, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2933, column: 6)
!8782 = !DILocation(line: 2933, column: 13, scope: !8781)
!8783 = !DILocation(line: 2933, column: 29, scope: !8781)
!8784 = !DILocation(line: 2933, column: 33, scope: !8781)
!8785 = !DILocation(line: 2933, column: 37, scope: !8781)
!8786 = !DILocation(line: 2933, column: 54, scope: !8781)
!8787 = !DILocation(line: 2933, column: 57, scope: !8781)
!8788 = !DILocation(line: 2933, column: 61, scope: !8781)
!8789 = !DILocation(line: 2933, column: 6, scope: !8571)
!8790 = !DILocation(line: 2934, column: 7, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2934, column: 7)
!8792 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 2933, column: 84)
!8793 = !DILocation(line: 2934, column: 11, scope: !8791)
!8794 = !DILocation(line: 2934, column: 7, scope: !8792)
!8795 = !DILocation(line: 2935, column: 4, scope: !8791)
!8796 = !DILocation(line: 2935, column: 8, scope: !8791)
!8797 = !DILocation(line: 2935, column: 26, scope: !8791)
!8798 = !DILocation(line: 2935, column: 31, scope: !8791)
!8799 = !DILocation(line: 2936, column: 39, scope: !8792)
!8800 = !DILocation(line: 2936, column: 43, scope: !8792)
!8801 = !DILocation(line: 2936, column: 50, scope: !8792)
!8802 = !DILocation(line: 2936, column: 3, scope: !8792)
!8803 = !DILocation(line: 2938, column: 7, scope: !8792)
!8804 = !DILocation(line: 2938, column: 14, scope: !8792)
!8805 = !DILocation(line: 2938, column: 19, scope: !8792)
!8806 = !DILocation(line: 2939, column: 2, scope: !8792)
!8807 = !DILocation(line: 2941, column: 6, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2941, column: 6)
!8809 = !DILocation(line: 2941, column: 10, scope: !8808)
!8810 = !DILocation(line: 2941, column: 15, scope: !8808)
!8811 = !DILocation(line: 2941, column: 6, scope: !8571)
!8812 = !DILocation(line: 2942, column: 19, scope: !8808)
!8813 = !DILocation(line: 2942, column: 23, scope: !8808)
!8814 = !DILocation(line: 2942, column: 3, scope: !8808)
!8815 = !DILocation(line: 2944, column: 9, scope: !8571)
!8816 = !DILocation(line: 2944, column: 2, scope: !8571)
!8817 = distinct !DISubprogram(name: "BKE_ptcache_remove", scope: !3, file: !3, line: 2948, type: !8818, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{null}
!8820 = !DILocalVariable(name: "path", scope: !8817, file: !3, line: 2950, type: !177)
!8821 = !DILocation(line: 2950, column: 7, scope: !8817)
!8822 = !DILocalVariable(name: "path_full", scope: !8817, file: !3, line: 2951, type: !177)
!8823 = !DILocation(line: 2951, column: 7, scope: !8817)
!8824 = !DILocalVariable(name: "rmdir", scope: !8817, file: !3, line: 2952, type: !144)
!8825 = !DILocation(line: 2952, column: 6, scope: !8817)
!8826 = !DILocation(line: 2954, column: 21, scope: !8817)
!8827 = !DILocation(line: 2954, column: 2, scope: !8817)
!8828 = !DILocation(line: 2956, column: 17, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2956, column: 6)
!8830 = !DILocation(line: 2956, column: 6, scope: !8829)
!8831 = !DILocation(line: 2956, column: 6, scope: !8817)
!8832 = !DILocalVariable(name: "dir", scope: !8833, file: !3, line: 2959, type: !6641)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2956, column: 24)
!8834 = !DILocation(line: 2959, column: 8, scope: !8833)
!8835 = !DILocalVariable(name: "de", scope: !8833, file: !3, line: 2960, type: !6647)
!8836 = !DILocation(line: 2960, column: 18, scope: !8833)
!8837 = !DILocation(line: 2962, column: 17, scope: !8833)
!8838 = !DILocation(line: 2962, column: 9, scope: !8833)
!8839 = !DILocation(line: 2962, column: 7, scope: !8833)
!8840 = !DILocation(line: 2963, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2963, column: 7)
!8842 = !DILocation(line: 2963, column: 10, scope: !8841)
!8843 = !DILocation(line: 2963, column: 7, scope: !8833)
!8844 = !DILocation(line: 2964, column: 4, scope: !8841)
!8845 = !DILocation(line: 2966, column: 3, scope: !8833)
!8846 = !DILocation(line: 2966, column: 24, scope: !8833)
!8847 = !DILocation(line: 2966, column: 16, scope: !8833)
!8848 = !DILocation(line: 2966, column: 14, scope: !8833)
!8849 = !DILocation(line: 2966, column: 30, scope: !8833)
!8850 = !DILocation(line: 2967, column: 16, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2967, column: 9)
!8852 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2966, column: 39)
!8853 = !DILocation(line: 2967, column: 20, scope: !8851)
!8854 = !DILocation(line: 2967, column: 9, scope: !8851)
!8855 = !DILocation(line: 2967, column: 32, scope: !8851)
!8856 = !DILocation(line: 2967, column: 36, scope: !8851)
!8857 = !DILocation(line: 2967, column: 46, scope: !8851)
!8858 = !DILocation(line: 2967, column: 50, scope: !8851)
!8859 = !DILocation(line: 2967, column: 39, scope: !8851)
!8860 = !DILocation(line: 2967, column: 63, scope: !8851)
!8861 = !DILocation(line: 2967, column: 9, scope: !8852)
!8862 = !DILocation(line: 2969, column: 4, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 2967, column: 68)
!8864 = !DILocation(line: 2970, column: 20, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 2970, column: 13)
!8866 = !DILocation(line: 2970, column: 24, scope: !8865)
!8867 = !DILocation(line: 2970, column: 13, scope: !8865)
!8868 = !DILocation(line: 2970, column: 13, scope: !8851)
!8869 = !DILocation(line: 2971, column: 22, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2970, column: 46)
!8871 = !DILocation(line: 2971, column: 52, scope: !8870)
!8872 = !DILocation(line: 2971, column: 58, scope: !8870)
!8873 = !DILocation(line: 2971, column: 62, scope: !8870)
!8874 = !DILocation(line: 2971, column: 5, scope: !8870)
!8875 = !DILocation(line: 2972, column: 16, scope: !8870)
!8876 = !DILocation(line: 2972, column: 5, scope: !8870)
!8877 = !DILocation(line: 2973, column: 4, scope: !8870)
!8878 = !DILocation(line: 2975, column: 11, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2974, column: 9)
!8880 = distinct !{!8880, !8845, !8881}
!8881 = !DILocation(line: 2977, column: 3, scope: !8833)
!8882 = !DILocation(line: 2979, column: 12, scope: !8833)
!8883 = !DILocation(line: 2979, column: 3, scope: !8833)
!8884 = !DILocation(line: 2980, column: 2, scope: !8833)
!8885 = !DILocation(line: 2982, column: 9, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2981, column: 7)
!8887 = !DILocation(line: 2985, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2985, column: 6)
!8889 = !DILocation(line: 2985, column: 6, scope: !8817)
!8890 = !DILocation(line: 2986, column: 14, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2985, column: 13)
!8892 = !DILocation(line: 2986, column: 3, scope: !8891)
!8893 = !DILocation(line: 2987, column: 2, scope: !8891)
!8894 = !DILocation(line: 2988, column: 1, scope: !8817)
!8895 = distinct !DISubprogram(name: "BKE_ptcache_add", scope: !3, file: !3, line: 2992, type: !8896, scopeLine: 2993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{!931, !1642}
!8898 = !DILocalVariable(name: "ptcaches", arg: 1, scope: !8895, file: !3, line: 2992, type: !1642)
!8899 = !DILocation(line: 2992, column: 39, scope: !8895)
!8900 = !DILocalVariable(name: "cache", scope: !8895, file: !3, line: 2994, type: !7069)
!8901 = !DILocation(line: 2994, column: 14, scope: !8895)
!8902 = !DILocation(line: 2996, column: 9, scope: !8895)
!8903 = !DILocation(line: 2996, column: 7, scope: !8895)
!8904 = !DILocation(line: 2997, column: 2, scope: !8895)
!8905 = !DILocation(line: 2997, column: 9, scope: !8895)
!8906 = !DILocation(line: 2997, column: 19, scope: !8895)
!8907 = !DILocation(line: 2998, column: 2, scope: !8895)
!8908 = !DILocation(line: 2998, column: 9, scope: !8895)
!8909 = !DILocation(line: 2998, column: 17, scope: !8895)
!8910 = !DILocation(line: 2999, column: 2, scope: !8895)
!8911 = !DILocation(line: 2999, column: 9, scope: !8895)
!8912 = !DILocation(line: 2999, column: 14, scope: !8895)
!8913 = !DILocation(line: 3000, column: 2, scope: !8895)
!8914 = !DILocation(line: 3000, column: 9, scope: !8895)
!8915 = !DILocation(line: 3000, column: 15, scope: !8895)
!8916 = !DILocation(line: 3002, column: 14, scope: !8895)
!8917 = !DILocation(line: 3002, column: 24, scope: !8895)
!8918 = !DILocation(line: 3002, column: 2, scope: !8895)
!8919 = !DILocation(line: 3004, column: 9, scope: !8895)
!8920 = !DILocation(line: 3004, column: 2, scope: !8895)
!8921 = distinct !DISubprogram(name: "BKE_ptcache_free_mem", scope: !3, file: !3, line: 3007, type: !8922, scopeLine: 3008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !1642}
!8924 = !DILocalVariable(name: "mem_cache", arg: 1, scope: !8921, file: !3, line: 3007, type: !1642)
!8925 = !DILocation(line: 3007, column: 37, scope: !8921)
!8926 = !DILocalVariable(name: "pm", scope: !8921, file: !3, line: 3009, type: !3946)
!8927 = !DILocation(line: 3009, column: 14, scope: !8921)
!8928 = !DILocation(line: 3009, column: 19, scope: !8921)
!8929 = !DILocation(line: 3009, column: 30, scope: !8921)
!8930 = !DILocation(line: 3011, column: 6, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 3011, column: 6)
!8932 = !DILocation(line: 3011, column: 6, scope: !8921)
!8933 = !DILocation(line: 3012, column: 3, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 3011, column: 10)
!8935 = !DILocation(line: 3012, column: 10, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 3012, column: 3)
!8937 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 3012, column: 3)
!8938 = !DILocation(line: 3012, column: 3, scope: !8937)
!8939 = !DILocation(line: 3013, column: 22, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 3012, column: 27)
!8941 = !DILocation(line: 3013, column: 4, scope: !8940)
!8942 = !DILocation(line: 3014, column: 23, scope: !8940)
!8943 = !DILocation(line: 3014, column: 4, scope: !8940)
!8944 = !DILocation(line: 3015, column: 3, scope: !8940)
!8945 = !DILocation(line: 3012, column: 17, scope: !8936)
!8946 = !DILocation(line: 3012, column: 21, scope: !8936)
!8947 = !DILocation(line: 3012, column: 16, scope: !8936)
!8948 = !DILocation(line: 3012, column: 3, scope: !8936)
!8949 = distinct !{!8949, !8938, !8950}
!8950 = !DILocation(line: 3015, column: 3, scope: !8937)
!8951 = !DILocation(line: 3017, column: 17, scope: !8934)
!8952 = !DILocation(line: 3017, column: 3, scope: !8934)
!8953 = !DILocation(line: 3018, column: 2, scope: !8934)
!8954 = !DILocation(line: 3019, column: 1, scope: !8921)
!8955 = distinct !DISubprogram(name: "BKE_ptcache_free", scope: !3, file: !3, line: 3020, type: !8551, scopeLine: 3021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8956 = !DILocalVariable(name: "cache", arg: 1, scope: !8955, file: !3, line: 3020, type: !7069)
!8957 = !DILocation(line: 3020, column: 35, scope: !8955)
!8958 = !DILocation(line: 3022, column: 24, scope: !8955)
!8959 = !DILocation(line: 3022, column: 31, scope: !8955)
!8960 = !DILocation(line: 3022, column: 2, scope: !8955)
!8961 = !DILocation(line: 3023, column: 6, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 3023, column: 6)
!8963 = !DILocation(line: 3023, column: 13, scope: !8962)
!8964 = !DILocation(line: 3023, column: 18, scope: !8962)
!8965 = !DILocation(line: 3023, column: 21, scope: !8962)
!8966 = !DILocation(line: 3023, column: 28, scope: !8962)
!8967 = !DILocation(line: 3023, column: 6, scope: !8955)
!8968 = !DILocation(line: 3024, column: 3, scope: !8962)
!8969 = !DILocation(line: 3024, column: 10, scope: !8962)
!8970 = !DILocation(line: 3024, column: 20, scope: !8962)
!8971 = !DILocation(line: 3024, column: 27, scope: !8962)
!8972 = !DILocation(line: 3025, column: 6, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 3025, column: 6)
!8974 = !DILocation(line: 3025, column: 13, scope: !8973)
!8975 = !DILocation(line: 3025, column: 6, scope: !8955)
!8976 = !DILocation(line: 3026, column: 3, scope: !8973)
!8977 = !DILocation(line: 3026, column: 13, scope: !8973)
!8978 = !DILocation(line: 3026, column: 20, scope: !8973)
!8979 = !DILocation(line: 3027, column: 2, scope: !8955)
!8980 = !DILocation(line: 3027, column: 12, scope: !8955)
!8981 = !DILocation(line: 3028, column: 1, scope: !8955)
!8982 = distinct !DISubprogram(name: "BKE_ptcache_free_list", scope: !3, file: !3, line: 3029, type: !8922, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8983 = !DILocalVariable(name: "ptcaches", arg: 1, scope: !8982, file: !3, line: 3029, type: !1642)
!8984 = !DILocation(line: 3029, column: 38, scope: !8982)
!8985 = !DILocalVariable(name: "cache", scope: !8982, file: !3, line: 3031, type: !7069)
!8986 = !DILocation(line: 3031, column: 14, scope: !8982)
!8987 = !DILocation(line: 3033, column: 2, scope: !8982)
!8988 = !DILocation(line: 3033, column: 30, scope: !8982)
!8989 = !DILocation(line: 3033, column: 18, scope: !8982)
!8990 = !DILocation(line: 3033, column: 16, scope: !8982)
!8991 = !DILocation(line: 3034, column: 20, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 3033, column: 42)
!8993 = !DILocation(line: 3034, column: 3, scope: !8992)
!8994 = distinct !{!8994, !8987, !8995}
!8995 = !DILocation(line: 3035, column: 2, scope: !8982)
!8996 = !DILocation(line: 3036, column: 1, scope: !8982)
!8997 = distinct !DISubprogram(name: "BKE_ptcache_copy_list", scope: !3, file: !3, line: 3081, type: !8998, scopeLine: 3082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!8998 = !DISubroutineType(types: !8999)
!8999 = !{!931, !1642, !1642, !1610}
!9000 = !DILocalVariable(name: "ptcaches_new", arg: 1, scope: !8997, file: !3, line: 3081, type: !1642)
!9001 = !DILocation(line: 3081, column: 45, scope: !8997)
!9002 = !DILocalVariable(name: "ptcaches_old", arg: 2, scope: !8997, file: !3, line: 3081, type: !1642)
!9003 = !DILocation(line: 3081, column: 69, scope: !8997)
!9004 = !DILocalVariable(name: "copy_data", arg: 3, scope: !8997, file: !3, line: 3081, type: !1610)
!9005 = !DILocation(line: 3081, column: 88, scope: !8997)
!9006 = !DILocalVariable(name: "cache", scope: !8997, file: !3, line: 3083, type: !7069)
!9007 = !DILocation(line: 3083, column: 14, scope: !8997)
!9008 = !DILocation(line: 3083, column: 22, scope: !8997)
!9009 = !DILocation(line: 3083, column: 36, scope: !8997)
!9010 = !DILocation(line: 3085, column: 21, scope: !8997)
!9011 = !DILocation(line: 3085, column: 2, scope: !8997)
!9012 = !DILocation(line: 3087, column: 2, scope: !8997)
!9013 = !DILocation(line: 3087, column: 9, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 3087, column: 2)
!9015 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 3087, column: 2)
!9016 = !DILocation(line: 3087, column: 2, scope: !9015)
!9017 = !DILocation(line: 3088, column: 15, scope: !9014)
!9018 = !DILocation(line: 3088, column: 42, scope: !9014)
!9019 = !DILocation(line: 3088, column: 49, scope: !9014)
!9020 = !DILocation(line: 3088, column: 29, scope: !9014)
!9021 = !DILocation(line: 3088, column: 3, scope: !9014)
!9022 = !DILocation(line: 3087, column: 22, scope: !9014)
!9023 = !DILocation(line: 3087, column: 29, scope: !9014)
!9024 = !DILocation(line: 3087, column: 21, scope: !9014)
!9025 = !DILocation(line: 3087, column: 2, scope: !9014)
!9026 = distinct !{!9026, !9016, !9027}
!9027 = !DILocation(line: 3088, column: 59, scope: !9015)
!9028 = !DILocation(line: 3090, column: 9, scope: !8997)
!9029 = !DILocation(line: 3090, column: 23, scope: !8997)
!9030 = !DILocation(line: 3090, column: 2, scope: !8997)
!9031 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !9032, file: !9032, line: 89, type: !9033, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9032 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9033 = !DISubroutineType(types: !9034)
!9034 = !{null, !1211}
!9035 = !DILocalVariable(name: "lb", arg: 1, scope: !9031, file: !9032, line: 89, type: !1211)
!9036 = !DILocation(line: 89, column: 53, scope: !9031)
!9037 = !DILocation(line: 89, column: 71, scope: !9031)
!9038 = !DILocation(line: 89, column: 75, scope: !9031)
!9039 = !DILocation(line: 89, column: 80, scope: !9031)
!9040 = !DILocation(line: 89, column: 59, scope: !9031)
!9041 = !DILocation(line: 89, column: 63, scope: !9031)
!9042 = !DILocation(line: 89, column: 69, scope: !9031)
!9043 = !DILocation(line: 89, column: 93, scope: !9031)
!9044 = distinct !DISubprogram(name: "ptcache_copy", scope: !3, file: !3, line: 3038, type: !9045, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{!7069, !7069, !1610}
!9047 = !DILocalVariable(name: "cache", arg: 1, scope: !9044, file: !3, line: 3038, type: !7069)
!9048 = !DILocation(line: 3038, column: 45, scope: !9044)
!9049 = !DILocalVariable(name: "copy_data", arg: 2, scope: !9044, file: !3, line: 3038, type: !1610)
!9050 = !DILocation(line: 3038, column: 57, scope: !9044)
!9051 = !DILocalVariable(name: "ncache", scope: !9044, file: !3, line: 3040, type: !7069)
!9052 = !DILocation(line: 3040, column: 14, scope: !9044)
!9053 = !DILocation(line: 3042, column: 10, scope: !9044)
!9054 = !DILocation(line: 3042, column: 24, scope: !9044)
!9055 = !DILocation(line: 3042, column: 8, scope: !9044)
!9056 = !DILocation(line: 3044, column: 22, scope: !9044)
!9057 = !DILocation(line: 3044, column: 30, scope: !9044)
!9058 = !DILocation(line: 3044, column: 2, scope: !9044)
!9059 = !DILocation(line: 3046, column: 6, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 3046, column: 6)
!9061 = !DILocation(line: 3046, column: 16, scope: !9060)
!9062 = !DILocation(line: 3046, column: 6, scope: !9044)
!9063 = !DILocation(line: 3047, column: 3, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 3046, column: 26)
!9065 = !DILocation(line: 3047, column: 11, scope: !9064)
!9066 = !DILocation(line: 3047, column: 25, scope: !9064)
!9067 = !DILocation(line: 3050, column: 17, scope: !9064)
!9068 = !DILocation(line: 3050, column: 25, scope: !9064)
!9069 = !DILocation(line: 3050, column: 30, scope: !9064)
!9070 = !DILocation(line: 3050, column: 3, scope: !9064)
!9071 = !DILocation(line: 3050, column: 11, scope: !9064)
!9072 = !DILocation(line: 3050, column: 15, scope: !9064)
!9073 = !DILocation(line: 3051, column: 3, scope: !9064)
!9074 = !DILocation(line: 3051, column: 11, scope: !9064)
!9075 = !DILocation(line: 3051, column: 19, scope: !9064)
!9076 = !DILocation(line: 3052, column: 2, scope: !9064)
!9077 = !DILocalVariable(name: "pm", scope: !9078, file: !3, line: 3054, type: !3946)
!9078 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 3053, column: 7)
!9079 = !DILocation(line: 3054, column: 15, scope: !9078)
!9080 = !DILocation(line: 3056, column: 13, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 3056, column: 3)
!9082 = !DILocation(line: 3056, column: 20, scope: !9081)
!9083 = !DILocation(line: 3056, column: 30, scope: !9081)
!9084 = !DILocation(line: 3056, column: 11, scope: !9081)
!9085 = !DILocation(line: 3056, column: 8, scope: !9081)
!9086 = !DILocation(line: 3056, column: 37, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 3056, column: 3)
!9088 = !DILocation(line: 3056, column: 3, scope: !9081)
!9089 = !DILocalVariable(name: "pmn", scope: !9090, file: !3, line: 3057, type: !3946)
!9090 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 3056, column: 56)
!9091 = !DILocation(line: 3057, column: 16, scope: !9090)
!9092 = !DILocation(line: 3057, column: 22, scope: !9090)
!9093 = !DILocation(line: 3057, column: 36, scope: !9090)
!9094 = !DILocalVariable(name: "i", scope: !9090, file: !3, line: 3058, type: !144)
!9095 = !DILocation(line: 3058, column: 8, scope: !9090)
!9096 = !DILocation(line: 3060, column: 11, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 3060, column: 4)
!9098 = !DILocation(line: 3060, column: 9, scope: !9097)
!9099 = !DILocation(line: 3060, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 3060, column: 4)
!9101 = !DILocation(line: 3060, column: 18, scope: !9100)
!9102 = !DILocation(line: 3060, column: 4, scope: !9097)
!9103 = !DILocation(line: 3061, column: 9, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3061, column: 9)
!9105 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 3060, column: 41)
!9106 = !DILocation(line: 3061, column: 14, scope: !9104)
!9107 = !DILocation(line: 3061, column: 19, scope: !9104)
!9108 = !DILocation(line: 3061, column: 9, scope: !9105)
!9109 = !DILocation(line: 3062, column: 21, scope: !9104)
!9110 = !DILocation(line: 3062, column: 35, scope: !9104)
!9111 = !DILocation(line: 3062, column: 39, scope: !9104)
!9112 = !DILocation(line: 3062, column: 44, scope: !9104)
!9113 = !DILocation(line: 3062, column: 6, scope: !9104)
!9114 = !DILocation(line: 3062, column: 11, scope: !9104)
!9115 = !DILocation(line: 3062, column: 16, scope: !9104)
!9116 = !DILocation(line: 3062, column: 19, scope: !9104)
!9117 = !DILocation(line: 3063, column: 4, scope: !9105)
!9118 = !DILocation(line: 3060, column: 37, scope: !9100)
!9119 = !DILocation(line: 3060, column: 4, scope: !9100)
!9120 = distinct !{!9120, !9102, !9121}
!9121 = !DILocation(line: 3063, column: 4, scope: !9097)
!9122 = !DILocation(line: 3065, column: 34, scope: !9090)
!9123 = !DILocation(line: 3065, column: 4, scope: !9090)
!9124 = !DILocation(line: 3067, column: 17, scope: !9090)
!9125 = !DILocation(line: 3067, column: 25, scope: !9090)
!9126 = !DILocation(line: 3067, column: 36, scope: !9090)
!9127 = !DILocation(line: 3067, column: 4, scope: !9090)
!9128 = !DILocation(line: 3068, column: 3, scope: !9090)
!9129 = !DILocation(line: 3056, column: 46, scope: !9087)
!9130 = !DILocation(line: 3056, column: 50, scope: !9087)
!9131 = !DILocation(line: 3056, column: 44, scope: !9087)
!9132 = !DILocation(line: 3056, column: 3, scope: !9087)
!9133 = distinct !{!9133, !9088, !9134}
!9134 = !DILocation(line: 3068, column: 3, scope: !9081)
!9135 = !DILocation(line: 3070, column: 7, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 3070, column: 7)
!9137 = !DILocation(line: 3070, column: 15, scope: !9136)
!9138 = !DILocation(line: 3070, column: 7, scope: !9078)
!9139 = !DILocation(line: 3071, column: 28, scope: !9136)
!9140 = !DILocation(line: 3071, column: 42, scope: !9136)
!9141 = !DILocation(line: 3071, column: 49, scope: !9136)
!9142 = !DILocation(line: 3071, column: 4, scope: !9136)
!9143 = !DILocation(line: 3071, column: 12, scope: !9136)
!9144 = !DILocation(line: 3071, column: 26, scope: !9136)
!9145 = !DILocation(line: 3075, column: 2, scope: !9044)
!9146 = !DILocation(line: 3075, column: 10, scope: !9044)
!9147 = !DILocation(line: 3075, column: 15, scope: !9044)
!9148 = !DILocation(line: 3077, column: 9, scope: !9044)
!9149 = !DILocation(line: 3077, column: 2, scope: !9044)
!9150 = distinct !DISubprogram(name: "BKE_ptcache_quick_cache_all", scope: !3, file: !3, line: 3097, type: !9151, scopeLine: 3098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{null, !2668, !2734}
!9153 = !DILocalVariable(name: "bmain", arg: 1, scope: !9150, file: !3, line: 3097, type: !2668)
!9154 = !DILocation(line: 3097, column: 40, scope: !9150)
!9155 = !DILocalVariable(name: "scene", arg: 2, scope: !9150, file: !3, line: 3097, type: !2734)
!9156 = !DILocation(line: 3097, column: 54, scope: !9150)
!9157 = !DILocalVariable(name: "baker", scope: !9150, file: !3, line: 3099, type: !9158)
!9158 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheBaker", file: !958, line: 186, baseType: !9159)
!9159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheBaker", file: !958, line: 173, size: 640, elements: !9160)
!9160 = !{!9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9172, !9173, !9177, !9181}
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !9159, file: !958, line: 174, baseType: !2674, size: 64)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !9159, file: !958, line: 175, baseType: !153, size: 64, offset: 64)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !9159, file: !958, line: 176, baseType: !144, size: 32, offset: 128)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !9159, file: !958, line: 177, baseType: !144, size: 32, offset: 160)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "anim_init", scope: !9159, file: !958, line: 178, baseType: !144, size: 32, offset: 192)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "quick_step", scope: !9159, file: !958, line: 179, baseType: !144, size: 32, offset: 224)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !9159, file: !958, line: 180, baseType: !1058, size: 64, offset: 256)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "break_test", scope: !9159, file: !958, line: 181, baseType: !9169, size: 64, offset: 320)
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!144, !131}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "break_data", scope: !9159, file: !958, line: 182, baseType: !131, size: 64, offset: 384)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "progressbar", scope: !9159, file: !958, line: 183, baseType: !9174, size: 64, offset: 448)
!9174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9175, size: 64)
!9175 = !DISubroutineType(types: !9176)
!9176 = !{null, !131, !144}
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "progressend", scope: !9159, file: !958, line: 184, baseType: !9178, size: 64, offset: 512)
!9178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9179, size: 64)
!9179 = !DISubroutineType(types: !9180)
!9180 = !{null, !131}
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "progresscontext", scope: !9159, file: !958, line: 185, baseType: !131, size: 64, offset: 576)
!9182 = !DILocation(line: 3099, column: 15, scope: !9150)
!9183 = !DILocation(line: 3101, column: 8, scope: !9150)
!9184 = !DILocation(line: 3101, column: 12, scope: !9150)
!9185 = !DILocation(line: 3102, column: 8, scope: !9150)
!9186 = !DILocation(line: 3102, column: 18, scope: !9150)
!9187 = !DILocation(line: 3103, column: 8, scope: !9150)
!9188 = !DILocation(line: 3103, column: 18, scope: !9150)
!9189 = !DILocation(line: 3104, column: 8, scope: !9150)
!9190 = !DILocation(line: 3104, column: 11, scope: !9150)
!9191 = !DILocation(line: 3105, column: 8, scope: !9150)
!9192 = !DILocation(line: 3105, column: 19, scope: !9150)
!9193 = !DILocation(line: 3106, column: 8, scope: !9150)
!9194 = !DILocation(line: 3106, column: 19, scope: !9150)
!9195 = !DILocation(line: 3107, column: 8, scope: !9150)
!9196 = !DILocation(line: 3107, column: 23, scope: !9150)
!9197 = !DILocation(line: 3108, column: 8, scope: !9150)
!9198 = !DILocation(line: 3108, column: 14, scope: !9150)
!9199 = !DILocation(line: 3109, column: 8, scope: !9150)
!9200 = !DILocation(line: 3109, column: 18, scope: !9150)
!9201 = !DILocation(line: 3110, column: 13, scope: !9150)
!9202 = !DILocation(line: 3110, column: 8, scope: !9150)
!9203 = !DILocation(line: 3110, column: 12, scope: !9150)
!9204 = !DILocation(line: 3111, column: 14, scope: !9150)
!9205 = !DILocation(line: 3111, column: 8, scope: !9150)
!9206 = !DILocation(line: 3111, column: 13, scope: !9150)
!9207 = !DILocation(line: 3112, column: 19, scope: !9150)
!9208 = !DILocation(line: 3112, column: 26, scope: !9150)
!9209 = !DILocation(line: 3112, column: 43, scope: !9150)
!9210 = !DILocation(line: 3112, column: 8, scope: !9150)
!9211 = !DILocation(line: 3112, column: 18, scope: !9150)
!9212 = !DILocation(line: 3114, column: 2, scope: !9150)
!9213 = !DILocation(line: 3115, column: 1, scope: !9150)
!9214 = distinct !DISubprogram(name: "BKE_ptcache_bake", scope: !3, file: !3, line: 3188, type: !9215, scopeLine: 3189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{null, !9217}
!9217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9158, size: 64)
!9218 = !DILocalVariable(name: "baker", arg: 1, scope: !9214, file: !3, line: 3188, type: !9217)
!9219 = !DILocation(line: 3188, column: 37, scope: !9214)
!9220 = !DILocalVariable(name: "bmain", scope: !9214, file: !3, line: 3190, type: !2668)
!9221 = !DILocation(line: 3190, column: 8, scope: !9214)
!9222 = !DILocation(line: 3190, column: 16, scope: !9214)
!9223 = !DILocation(line: 3190, column: 23, scope: !9214)
!9224 = !DILocalVariable(name: "scene", scope: !9214, file: !3, line: 3191, type: !2734)
!9225 = !DILocation(line: 3191, column: 9, scope: !9214)
!9226 = !DILocation(line: 3191, column: 17, scope: !9214)
!9227 = !DILocation(line: 3191, column: 24, scope: !9214)
!9228 = !DILocalVariable(name: "sce_iter", scope: !9214, file: !3, line: 3192, type: !2734)
!9229 = !DILocation(line: 3192, column: 9, scope: !9214)
!9230 = !DILocalVariable(name: "base", scope: !9214, file: !3, line: 3193, type: !9231)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9232, size: 64)
!9232 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !155, line: 75, baseType: !1723)
!9233 = !DILocation(line: 3193, column: 8, scope: !9214)
!9234 = !DILocalVariable(name: "pidlist", scope: !9214, file: !3, line: 3194, type: !213)
!9235 = !DILocation(line: 3194, column: 11, scope: !9214)
!9236 = !DILocalVariable(name: "pid", scope: !9214, file: !3, line: 3195, type: !2797)
!9237 = !DILocation(line: 3195, column: 13, scope: !9214)
!9238 = !DILocation(line: 3195, column: 19, scope: !9214)
!9239 = !DILocation(line: 3195, column: 26, scope: !9214)
!9240 = !DILocalVariable(name: "cache", scope: !9214, file: !3, line: 3196, type: !7069)
!9241 = !DILocation(line: 3196, column: 14, scope: !9214)
!9242 = !DILocalVariable(name: "frameleno", scope: !9214, file: !3, line: 3197, type: !256)
!9243 = !DILocation(line: 3197, column: 8, scope: !9214)
!9244 = !DILocation(line: 3197, column: 20, scope: !9214)
!9245 = !DILocation(line: 3197, column: 27, scope: !9214)
!9246 = !DILocation(line: 3197, column: 29, scope: !9214)
!9247 = !DILocalVariable(name: "cfrao", scope: !9214, file: !3, line: 3198, type: !144)
!9248 = !DILocation(line: 3198, column: 6, scope: !9214)
!9249 = !DILocation(line: 3198, column: 14, scope: !9214)
!9250 = !DILocalVariable(name: "startframe", scope: !9214, file: !3, line: 3199, type: !144)
!9251 = !DILocation(line: 3199, column: 6, scope: !9214)
!9252 = !DILocalVariable(name: "bake", scope: !9214, file: !3, line: 3200, type: !144)
!9253 = !DILocation(line: 3200, column: 6, scope: !9214)
!9254 = !DILocation(line: 3200, column: 13, scope: !9214)
!9255 = !DILocation(line: 3200, column: 20, scope: !9214)
!9256 = !DILocalVariable(name: "render", scope: !9214, file: !3, line: 3201, type: !144)
!9257 = !DILocation(line: 3201, column: 6, scope: !9214)
!9258 = !DILocation(line: 3201, column: 15, scope: !9214)
!9259 = !DILocation(line: 3201, column: 22, scope: !9214)
!9260 = !DILocalVariable(name: "threads", scope: !9214, file: !3, line: 3202, type: !213)
!9261 = !DILocation(line: 3202, column: 11, scope: !9214)
!9262 = !DILocalVariable(name: "thread_data", scope: !9214, file: !3, line: 3203, type: !2659)
!9263 = !DILocation(line: 3203, column: 20, scope: !9214)
!9264 = !DILocalVariable(name: "progress", scope: !9214, file: !3, line: 3204, type: !144)
!9265 = !DILocation(line: 3204, column: 6, scope: !9214)
!9266 = !DILocalVariable(name: "old_progress", scope: !9214, file: !3, line: 3204, type: !144)
!9267 = !DILocation(line: 3204, column: 16, scope: !9214)
!9268 = !DILocation(line: 3206, column: 25, scope: !9214)
!9269 = !DILocation(line: 3206, column: 32, scope: !9214)
!9270 = !DILocation(line: 3206, column: 44, scope: !9214)
!9271 = !DILocation(line: 3206, column: 51, scope: !9214)
!9272 = !DILocation(line: 3206, column: 53, scope: !9214)
!9273 = !DILocation(line: 3206, column: 60, scope: !9214)
!9274 = !DILocation(line: 3206, column: 14, scope: !9214)
!9275 = !DILocation(line: 3206, column: 23, scope: !9214)
!9276 = !DILocation(line: 3207, column: 21, scope: !9214)
!9277 = !DILocation(line: 3207, column: 28, scope: !9214)
!9278 = !DILocation(line: 3207, column: 14, scope: !9214)
!9279 = !DILocation(line: 3207, column: 19, scope: !9214)
!9280 = !DILocation(line: 3208, column: 26, scope: !9214)
!9281 = !DILocation(line: 3208, column: 14, scope: !9214)
!9282 = !DILocation(line: 3208, column: 23, scope: !9214)
!9283 = !DILocation(line: 3209, column: 22, scope: !9214)
!9284 = !DILocation(line: 3209, column: 29, scope: !9214)
!9285 = !DILocation(line: 3209, column: 14, scope: !9214)
!9286 = !DILocation(line: 3209, column: 20, scope: !9214)
!9287 = !DILocation(line: 3210, column: 21, scope: !9214)
!9288 = !DILocation(line: 3210, column: 28, scope: !9214)
!9289 = !DILocation(line: 3210, column: 14, scope: !9214)
!9290 = !DILocation(line: 3210, column: 19, scope: !9214)
!9291 = !DILocation(line: 3212, column: 13, scope: !9214)
!9292 = !DILocation(line: 3215, column: 6, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3215, column: 6)
!9294 = !DILocation(line: 3215, column: 6, scope: !9214)
!9295 = !DILocation(line: 3217, column: 11, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 3215, column: 11)
!9297 = !DILocation(line: 3217, column: 16, scope: !9296)
!9298 = !DILocation(line: 3217, column: 9, scope: !9296)
!9299 = !DILocation(line: 3218, column: 8, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 3218, column: 7)
!9301 = !DILocation(line: 3218, column: 15, scope: !9300)
!9302 = !DILocation(line: 3218, column: 20, scope: !9300)
!9303 = !DILocation(line: 3218, column: 36, scope: !9300)
!9304 = !DILocation(line: 3218, column: 7, scope: !9296)
!9305 = !DILocation(line: 3219, column: 8, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3219, column: 8)
!9307 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 3218, column: 41)
!9308 = !DILocation(line: 3219, column: 13, scope: !9306)
!9309 = !DILocation(line: 3219, column: 17, scope: !9306)
!9310 = !DILocation(line: 3219, column: 8, scope: !9307)
!9311 = !DILocalVariable(name: "psys", scope: !9312, file: !3, line: 3220, type: !2655)
!9312 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 3219, column: 43)
!9313 = !DILocation(line: 3220, column: 21, scope: !9312)
!9314 = !DILocation(line: 3220, column: 27, scope: !9312)
!9315 = !DILocation(line: 3220, column: 32, scope: !9312)
!9316 = !DILocation(line: 3223, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 3223, column: 9)
!9318 = !DILocation(line: 3223, column: 15, scope: !9317)
!9319 = !DILocation(line: 3223, column: 21, scope: !9317)
!9320 = !DILocation(line: 3223, column: 26, scope: !9317)
!9321 = !DILocation(line: 3223, column: 9, scope: !9312)
!9322 = !DILocation(line: 3224, column: 36, scope: !9317)
!9323 = !DILocation(line: 3224, column: 43, scope: !9317)
!9324 = !DILocation(line: 3224, column: 48, scope: !9317)
!9325 = !DILocation(line: 3224, column: 59, scope: !9317)
!9326 = !DILocation(line: 3224, column: 66, scope: !9317)
!9327 = !DILocation(line: 3224, column: 79, scope: !9317)
!9328 = !DILocation(line: 3224, column: 86, scope: !9317)
!9329 = !DILocation(line: 3224, column: 6, scope: !9317)
!9330 = !DILocation(line: 3225, column: 4, scope: !9312)
!9331 = !DILocation(line: 3226, column: 13, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9306, file: !3, line: 3226, column: 13)
!9333 = !DILocation(line: 3226, column: 18, scope: !9332)
!9334 = !DILocation(line: 3226, column: 23, scope: !9332)
!9335 = !DILocation(line: 3226, column: 13, scope: !9306)
!9336 = !DILocalVariable(name: "pidlist2", scope: !9337, file: !3, line: 3228, type: !213)
!9337 = distinct !DILexicalBlock(scope: !9332, file: !3, line: 3226, column: 54)
!9338 = !DILocation(line: 3228, column: 14, scope: !9337)
!9339 = !DILocalVariable(name: "pid2", scope: !9337, file: !3, line: 3229, type: !2797)
!9340 = !DILocation(line: 3229, column: 16, scope: !9337)
!9341 = !DILocation(line: 3230, column: 44, scope: !9337)
!9342 = !DILocation(line: 3230, column: 49, scope: !9337)
!9343 = !DILocation(line: 3230, column: 53, scope: !9337)
!9344 = !DILocation(line: 3230, column: 5, scope: !9337)
!9345 = !DILocation(line: 3231, column: 24, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 3231, column: 5)
!9347 = !DILocation(line: 3231, column: 15, scope: !9346)
!9348 = !DILocation(line: 3231, column: 14, scope: !9346)
!9349 = !DILocation(line: 3231, column: 10, scope: !9346)
!9350 = !DILocation(line: 3231, column: 31, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3231, column: 5)
!9352 = !DILocation(line: 3231, column: 5, scope: !9346)
!9353 = !DILocation(line: 3232, column: 10, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 3232, column: 10)
!9355 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 3231, column: 54)
!9356 = !DILocation(line: 3232, column: 16, scope: !9354)
!9357 = !DILocation(line: 3232, column: 21, scope: !9354)
!9358 = !DILocation(line: 3232, column: 10, scope: !9355)
!9359 = !DILocation(line: 3233, column: 11, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 3233, column: 11)
!9361 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 3232, column: 51)
!9362 = !DILocation(line: 3233, column: 17, scope: !9360)
!9363 = !DILocation(line: 3233, column: 23, scope: !9360)
!9364 = !DILocation(line: 3233, column: 28, scope: !9360)
!9365 = !DILocation(line: 3233, column: 34, scope: !9360)
!9366 = !DILocation(line: 3233, column: 41, scope: !9360)
!9367 = !DILocation(line: 3233, column: 46, scope: !9360)
!9368 = !DILocation(line: 3233, column: 11, scope: !9361)
!9369 = !DILocation(line: 3234, column: 12, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 3234, column: 12)
!9371 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 3233, column: 64)
!9372 = !DILocation(line: 3234, column: 17, scope: !9370)
!9373 = !DILocation(line: 3234, column: 20, scope: !9370)
!9374 = !DILocation(line: 3234, column: 26, scope: !9370)
!9375 = !DILocation(line: 3234, column: 33, scope: !9370)
!9376 = !DILocation(line: 3234, column: 38, scope: !9370)
!9377 = !DILocation(line: 3234, column: 12, scope: !9371)
!9378 = !DILocation(line: 3235, column: 30, scope: !9370)
!9379 = !DILocation(line: 3235, column: 9, scope: !9370)
!9380 = !DILocation(line: 3236, column: 12, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 3236, column: 12)
!9382 = !DILocation(line: 3236, column: 12, scope: !9371)
!9383 = !DILocation(line: 3237, column: 9, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3236, column: 18)
!9385 = !DILocation(line: 3237, column: 15, scope: !9384)
!9386 = !DILocation(line: 3237, column: 22, scope: !9384)
!9387 = !DILocation(line: 3237, column: 27, scope: !9384)
!9388 = !DILocation(line: 3238, column: 9, scope: !9384)
!9389 = !DILocation(line: 3238, column: 15, scope: !9384)
!9390 = !DILocation(line: 3238, column: 22, scope: !9384)
!9391 = !DILocation(line: 3238, column: 27, scope: !9384)
!9392 = !DILocation(line: 3239, column: 8, scope: !9384)
!9393 = !DILocation(line: 3240, column: 7, scope: !9371)
!9394 = !DILocation(line: 3241, column: 6, scope: !9361)
!9395 = !DILocation(line: 3242, column: 5, scope: !9355)
!9396 = !DILocation(line: 3231, column: 42, scope: !9351)
!9397 = !DILocation(line: 3231, column: 48, scope: !9351)
!9398 = !DILocation(line: 3231, column: 41, scope: !9351)
!9399 = !DILocation(line: 3231, column: 5, scope: !9351)
!9400 = distinct !{!9400, !9352, !9401}
!9401 = !DILocation(line: 3242, column: 5, scope: !9346)
!9402 = !DILocation(line: 3243, column: 5, scope: !9337)
!9403 = !DILocation(line: 3244, column: 4, scope: !9337)
!9404 = !DILocation(line: 3246, column: 8, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3246, column: 8)
!9406 = !DILocation(line: 3246, column: 13, scope: !9405)
!9407 = !DILocation(line: 3246, column: 16, scope: !9405)
!9408 = !DILocation(line: 3246, column: 23, scope: !9405)
!9409 = !DILocation(line: 3246, column: 28, scope: !9405)
!9410 = !DILocation(line: 3246, column: 8, scope: !9307)
!9411 = !DILocation(line: 3247, column: 26, scope: !9405)
!9412 = !DILocation(line: 3247, column: 5, scope: !9405)
!9413 = !DILocation(line: 3249, column: 17, scope: !9307)
!9414 = !DILocation(line: 3249, column: 15, scope: !9307)
!9415 = !DILocation(line: 3251, column: 8, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3251, column: 8)
!9417 = !DILocation(line: 3251, column: 8, scope: !9307)
!9418 = !DILocation(line: 3252, column: 28, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3251, column: 14)
!9420 = !DILocation(line: 3252, column: 35, scope: !9419)
!9421 = !DILocation(line: 3252, column: 17, scope: !9419)
!9422 = !DILocation(line: 3252, column: 26, scope: !9419)
!9423 = !DILocation(line: 3253, column: 5, scope: !9419)
!9424 = !DILocation(line: 3253, column: 12, scope: !9419)
!9425 = !DILocation(line: 3253, column: 17, scope: !9419)
!9426 = !DILocation(line: 3254, column: 4, scope: !9419)
!9427 = !DILocation(line: 3256, column: 28, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3255, column: 9)
!9429 = !DILocation(line: 3256, column: 17, scope: !9428)
!9430 = !DILocation(line: 3256, column: 26, scope: !9428)
!9431 = !DILocation(line: 3259, column: 4, scope: !9307)
!9432 = !DILocation(line: 3259, column: 11, scope: !9307)
!9433 = !DILocation(line: 3259, column: 16, scope: !9307)
!9434 = !DILocation(line: 3260, column: 3, scope: !9307)
!9435 = !DILocation(line: 3261, column: 2, scope: !9296)
!9436 = !DILocation(line: 3263, column: 8, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 3263, column: 3)
!9438 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 3262, column: 7)
!9439 = !DILocation(line: 3263, column: 8, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 3263, column: 3)
!9441 = !DILocation(line: 3263, column: 3, scope: !9437)
!9442 = !DILocation(line: 3265, column: 42, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 3263, column: 42)
!9444 = !DILocation(line: 3265, column: 48, scope: !9443)
!9445 = !DILocation(line: 3265, column: 56, scope: !9443)
!9446 = !DILocation(line: 3265, column: 4, scope: !9443)
!9447 = !DILocation(line: 3267, column: 21, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 3267, column: 4)
!9449 = !DILocation(line: 3267, column: 13, scope: !9448)
!9450 = !DILocation(line: 3267, column: 12, scope: !9448)
!9451 = !DILocation(line: 3267, column: 9, scope: !9448)
!9452 = !DILocation(line: 3267, column: 28, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 3267, column: 4)
!9454 = !DILocation(line: 3267, column: 4, scope: !9448)
!9455 = !DILocation(line: 3268, column: 13, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 3267, column: 48)
!9457 = !DILocation(line: 3268, column: 18, scope: !9456)
!9458 = !DILocation(line: 3268, column: 11, scope: !9456)
!9459 = !DILocation(line: 3269, column: 10, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 3269, column: 9)
!9461 = !DILocation(line: 3269, column: 17, scope: !9460)
!9462 = !DILocation(line: 3269, column: 22, scope: !9460)
!9463 = !DILocation(line: 3269, column: 38, scope: !9460)
!9464 = !DILocation(line: 3269, column: 9, scope: !9456)
!9465 = !DILocation(line: 3270, column: 10, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 3270, column: 10)
!9467 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 3269, column: 43)
!9468 = !DILocation(line: 3270, column: 15, scope: !9466)
!9469 = !DILocation(line: 3270, column: 19, scope: !9466)
!9470 = !DILocation(line: 3270, column: 10, scope: !9467)
!9471 = !DILocalVariable(name: "psys", scope: !9472, file: !3, line: 3271, type: !2655)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 3270, column: 45)
!9473 = !DILocation(line: 3271, column: 23, scope: !9472)
!9474 = !DILocation(line: 3271, column: 47, scope: !9472)
!9475 = !DILocation(line: 3271, column: 52, scope: !9472)
!9476 = !DILocation(line: 3271, column: 30, scope: !9472)
!9477 = !DILocation(line: 3273, column: 11, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 3273, column: 11)
!9479 = !DILocation(line: 3273, column: 17, scope: !9478)
!9480 = !DILocation(line: 3273, column: 23, scope: !9478)
!9481 = !DILocation(line: 3273, column: 28, scope: !9478)
!9482 = !DILocation(line: 3273, column: 41, scope: !9478)
!9483 = !DILocation(line: 3273, column: 44, scope: !9478)
!9484 = !DILocation(line: 3273, column: 50, scope: !9478)
!9485 = !DILocation(line: 3273, column: 56, scope: !9478)
!9486 = !DILocation(line: 3273, column: 65, scope: !9478)
!9487 = !DILocation(line: 3273, column: 11, scope: !9472)
!9488 = !DILocation(line: 3274, column: 8, scope: !9478)
!9489 = !DILocation(line: 3276, column: 37, scope: !9472)
!9490 = !DILocation(line: 3276, column: 44, scope: !9472)
!9491 = !DILocation(line: 3276, column: 49, scope: !9472)
!9492 = !DILocation(line: 3276, column: 60, scope: !9472)
!9493 = !DILocation(line: 3276, column: 67, scope: !9472)
!9494 = !DILocation(line: 3276, column: 80, scope: !9472)
!9495 = !DILocation(line: 3276, column: 87, scope: !9472)
!9496 = !DILocation(line: 3276, column: 7, scope: !9472)
!9497 = !DILocation(line: 3277, column: 6, scope: !9472)
!9498 = !DILocation(line: 3279, column: 11, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 3279, column: 10)
!9500 = !DILocation(line: 3279, column: 18, scope: !9499)
!9501 = !DILocation(line: 3279, column: 23, scope: !9499)
!9502 = !DILocation(line: 3279, column: 45, scope: !9499)
!9503 = !DILocation(line: 3279, column: 49, scope: !9499)
!9504 = !DILocation(line: 3279, column: 56, scope: !9499)
!9505 = !DILocation(line: 3279, column: 61, scope: !9499)
!9506 = !DILocation(line: 3279, column: 88, scope: !9499)
!9507 = !DILocation(line: 3279, column: 93, scope: !9499)
!9508 = !DILocation(line: 3280, column: 11, scope: !9499)
!9509 = !DILocation(line: 3280, column: 18, scope: !9499)
!9510 = !DILocation(line: 3280, column: 21, scope: !9499)
!9511 = !DILocation(line: 3279, column: 10, scope: !9467)
!9512 = !DILocation(line: 3282, column: 28, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3281, column: 6)
!9514 = !DILocation(line: 3282, column: 7, scope: !9513)
!9515 = !DILocation(line: 3283, column: 6, scope: !9513)
!9516 = !DILocation(line: 3285, column: 19, scope: !9467)
!9517 = !DILocation(line: 3285, column: 17, scope: !9467)
!9518 = !DILocation(line: 3287, column: 10, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 3287, column: 10)
!9520 = !DILocation(line: 3287, column: 15, scope: !9519)
!9521 = !DILocation(line: 3287, column: 18, scope: !9519)
!9522 = !DILocation(line: 3287, column: 10, scope: !9467)
!9523 = !DILocation(line: 3288, column: 7, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 3287, column: 26)
!9525 = !DILocation(line: 3288, column: 14, scope: !9524)
!9526 = !DILocation(line: 3288, column: 19, scope: !9524)
!9527 = !DILocation(line: 3290, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3290, column: 11)
!9529 = !DILocation(line: 3290, column: 11, scope: !9524)
!9530 = !DILocation(line: 3291, column: 31, scope: !9528)
!9531 = !DILocation(line: 3291, column: 20, scope: !9528)
!9532 = !DILocation(line: 3291, column: 29, scope: !9528)
!9533 = !DILocation(line: 3291, column: 8, scope: !9528)
!9534 = !DILocation(line: 3292, column: 6, scope: !9524)
!9535 = !DILocation(line: 3294, column: 6, scope: !9467)
!9536 = !DILocation(line: 3294, column: 13, scope: !9467)
!9537 = !DILocation(line: 3294, column: 18, scope: !9467)
!9538 = !DILocation(line: 3296, column: 5, scope: !9467)
!9539 = !DILocation(line: 3297, column: 4, scope: !9456)
!9540 = !DILocation(line: 3267, column: 37, scope: !9453)
!9541 = !DILocation(line: 3267, column: 42, scope: !9453)
!9542 = !DILocation(line: 3267, column: 36, scope: !9453)
!9543 = !DILocation(line: 3267, column: 4, scope: !9453)
!9544 = distinct !{!9544, !9454, !9545}
!9545 = !DILocation(line: 3297, column: 4, scope: !9448)
!9546 = !DILocation(line: 3298, column: 4, scope: !9443)
!9547 = !DILocation(line: 3299, column: 3, scope: !9443)
!9548 = !DILocation(line: 3263, column: 3, scope: !9440)
!9549 = distinct !{!9549, !9441, !9550}
!9550 = !DILocation(line: 3299, column: 3, scope: !9437)
!9551 = !DILocation(line: 3302, column: 9, scope: !9214)
!9552 = !DILocation(line: 3302, column: 2, scope: !9214)
!9553 = !DILocation(line: 3302, column: 7, scope: !9214)
!9554 = !DILocation(line: 3303, column: 2, scope: !9214)
!9555 = !DILocation(line: 3303, column: 9, scope: !9214)
!9556 = !DILocation(line: 3303, column: 11, scope: !9214)
!9557 = !DILocation(line: 3303, column: 20, scope: !9214)
!9558 = !DILocation(line: 3304, column: 14, scope: !9214)
!9559 = !DILocation(line: 3304, column: 30, scope: !9214)
!9560 = !DILocation(line: 3305, column: 14, scope: !9214)
!9561 = !DILocation(line: 3305, column: 27, scope: !9214)
!9562 = !DILocation(line: 3306, column: 15, scope: !9214)
!9563 = !DILocation(line: 3308, column: 2, scope: !9214)
!9564 = !DILocation(line: 3310, column: 8, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3310, column: 6)
!9566 = !DILocation(line: 3310, column: 6, scope: !9565)
!9567 = !DILocation(line: 3310, column: 6, scope: !9214)
!9568 = !DILocation(line: 3311, column: 23, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 3310, column: 20)
!9570 = !DILocation(line: 3311, column: 3, scope: !9569)
!9571 = !DILocation(line: 3312, column: 2, scope: !9569)
!9572 = !DILocation(line: 3314, column: 3, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 3313, column: 7)
!9574 = !DILocation(line: 3315, column: 31, scope: !9573)
!9575 = !DILocation(line: 3315, column: 3, scope: !9573)
!9576 = !DILocation(line: 3317, column: 3, scope: !9573)
!9577 = !DILocation(line: 3317, column: 22, scope: !9573)
!9578 = !DILocation(line: 3317, column: 35, scope: !9573)
!9579 = !DILocation(line: 3319, column: 8, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 3319, column: 8)
!9581 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 3317, column: 45)
!9582 = !DILocation(line: 3319, column: 8, scope: !9581)
!9583 = !DILocation(line: 3320, column: 39, scope: !9580)
!9584 = !DILocation(line: 3320, column: 46, scope: !9580)
!9585 = !DILocation(line: 3320, column: 44, scope: !9580)
!9586 = !DILocation(line: 3320, column: 31, scope: !9580)
!9587 = !DILocation(line: 3320, column: 29, scope: !9580)
!9588 = !DILocation(line: 3320, column: 78, scope: !9580)
!9589 = !DILocation(line: 3320, column: 87, scope: !9580)
!9590 = !DILocation(line: 3320, column: 86, scope: !9580)
!9591 = !DILocation(line: 3320, column: 58, scope: !9580)
!9592 = !DILocation(line: 3320, column: 57, scope: !9580)
!9593 = !DILocation(line: 3320, column: 16, scope: !9580)
!9594 = !DILocation(line: 3320, column: 14, scope: !9580)
!9595 = !DILocation(line: 3320, column: 5, scope: !9580)
!9596 = !DILocation(line: 3322, column: 16, scope: !9580)
!9597 = !DILocation(line: 3322, column: 14, scope: !9580)
!9598 = !DILocation(line: 3325, column: 9, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 3325, column: 8)
!9600 = !DILocation(line: 3325, column: 16, scope: !9599)
!9601 = !DILocation(line: 3325, column: 8, scope: !9599)
!9602 = !DILocation(line: 3325, column: 29, scope: !9599)
!9603 = !DILocation(line: 3325, column: 33, scope: !9599)
!9604 = !DILocation(line: 3325, column: 45, scope: !9599)
!9605 = !DILocation(line: 3325, column: 42, scope: !9599)
!9606 = !DILocation(line: 3325, column: 8, scope: !9581)
!9607 = !DILocation(line: 3326, column: 5, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 3325, column: 60)
!9609 = !DILocation(line: 3326, column: 12, scope: !9608)
!9610 = !DILocation(line: 3326, column: 24, scope: !9608)
!9611 = !DILocation(line: 3326, column: 31, scope: !9608)
!9612 = !DILocation(line: 3326, column: 48, scope: !9608)
!9613 = !DILocation(line: 3327, column: 20, scope: !9608)
!9614 = !DILocation(line: 3327, column: 18, scope: !9608)
!9615 = !DILocation(line: 3328, column: 4, scope: !9608)
!9616 = !DILocation(line: 3331, column: 4, scope: !9581)
!9617 = !DILocation(line: 3334, column: 8, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 3334, column: 8)
!9619 = !DILocation(line: 3334, column: 29, scope: !9618)
!9620 = !DILocation(line: 3334, column: 45, scope: !9618)
!9621 = !DILocation(line: 3334, column: 33, scope: !9618)
!9622 = !DILocation(line: 3334, column: 8, scope: !9581)
!9623 = !DILocation(line: 3335, column: 17, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 3334, column: 62)
!9625 = !DILocation(line: 3335, column: 33, scope: !9624)
!9626 = !DILocation(line: 3336, column: 9, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 3336, column: 9)
!9628 = !DILocation(line: 3336, column: 16, scope: !9627)
!9629 = !DILocation(line: 3336, column: 9, scope: !9624)
!9630 = !DILocation(line: 3337, column: 6, scope: !9627)
!9631 = !DILocation(line: 3337, column: 13, scope: !9627)
!9632 = !DILocation(line: 3337, column: 25, scope: !9627)
!9633 = !DILocation(line: 3337, column: 32, scope: !9627)
!9634 = !DILocation(line: 3338, column: 5, scope: !9624)
!9635 = !DILocation(line: 3339, column: 4, scope: !9624)
!9636 = distinct !{!9636, !9576, !9637}
!9637 = !DILocation(line: 3340, column: 3, scope: !9573)
!9638 = !DILocation(line: 3342, column: 2, scope: !9573)
!9639 = !DILocation(line: 3345, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3345, column: 6)
!9641 = !DILocation(line: 3345, column: 6, scope: !9214)
!9642 = !DILocation(line: 3346, column: 3, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 3345, column: 11)
!9644 = !DILocation(line: 3346, column: 10, scope: !9643)
!9645 = !DILocation(line: 3346, column: 15, scope: !9643)
!9646 = !DILocation(line: 3347, column: 3, scope: !9643)
!9647 = !DILocation(line: 3347, column: 10, scope: !9643)
!9648 = !DILocation(line: 3347, column: 15, scope: !9643)
!9649 = !DILocation(line: 3348, column: 7, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 3348, column: 7)
!9651 = !DILocation(line: 3348, column: 7, scope: !9643)
!9652 = !DILocation(line: 3349, column: 4, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 3348, column: 13)
!9654 = !DILocation(line: 3349, column: 11, scope: !9653)
!9655 = !DILocation(line: 3349, column: 16, scope: !9653)
!9656 = !DILocation(line: 3351, column: 8, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 3351, column: 8)
!9658 = !DILocation(line: 3351, column: 15, scope: !9657)
!9659 = !DILocation(line: 3351, column: 20, scope: !9657)
!9660 = !DILocation(line: 3351, column: 8, scope: !9653)
!9661 = !DILocation(line: 3352, column: 23, scope: !9657)
!9662 = !DILocation(line: 3352, column: 5, scope: !9657)
!9663 = !DILocation(line: 3353, column: 3, scope: !9653)
!9664 = !DILocation(line: 3354, column: 2, scope: !9643)
!9665 = !DILocation(line: 3356, column: 8, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 3356, column: 3)
!9667 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 3355, column: 7)
!9668 = !DILocation(line: 3356, column: 8, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 3356, column: 3)
!9670 = !DILocation(line: 3356, column: 3, scope: !9666)
!9671 = !DILocation(line: 3357, column: 42, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 3356, column: 42)
!9673 = !DILocation(line: 3357, column: 48, scope: !9672)
!9674 = !DILocation(line: 3357, column: 56, scope: !9672)
!9675 = !DILocation(line: 3357, column: 4, scope: !9672)
!9676 = !DILocation(line: 3359, column: 21, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 3359, column: 4)
!9678 = !DILocation(line: 3359, column: 13, scope: !9677)
!9679 = !DILocation(line: 3359, column: 12, scope: !9677)
!9680 = !DILocation(line: 3359, column: 9, scope: !9677)
!9681 = !DILocation(line: 3359, column: 28, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 3359, column: 4)
!9683 = !DILocation(line: 3359, column: 4, scope: !9677)
!9684 = !DILocation(line: 3361, column: 9, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 3361, column: 9)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 3359, column: 48)
!9687 = !DILocation(line: 3361, column: 14, scope: !9685)
!9688 = !DILocation(line: 3361, column: 18, scope: !9685)
!9689 = !DILocation(line: 3361, column: 43, scope: !9685)
!9690 = !DILocation(line: 3361, column: 64, scope: !9685)
!9691 = !DILocation(line: 3361, column: 69, scope: !9685)
!9692 = !DILocation(line: 3361, column: 47, scope: !9685)
!9693 = !DILocation(line: 3361, column: 80, scope: !9685)
!9694 = !DILocation(line: 3361, column: 86, scope: !9685)
!9695 = !DILocation(line: 3361, column: 46, scope: !9685)
!9696 = !DILocation(line: 3361, column: 91, scope: !9685)
!9697 = !DILocation(line: 3361, column: 9, scope: !9686)
!9698 = !DILocation(line: 3362, column: 6, scope: !9685)
!9699 = !DILocation(line: 3364, column: 13, scope: !9686)
!9700 = !DILocation(line: 3364, column: 18, scope: !9686)
!9701 = !DILocation(line: 3364, column: 11, scope: !9686)
!9702 = !DILocation(line: 3366, column: 21, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 3366, column: 9)
!9704 = !DILocation(line: 3366, column: 26, scope: !9703)
!9705 = !DILocation(line: 3366, column: 9, scope: !9686)
!9706 = !DILocation(line: 3367, column: 6, scope: !9703)
!9707 = !DILocation(line: 3367, column: 13, scope: !9703)
!9708 = !DILocation(line: 3367, column: 18, scope: !9703)
!9709 = !DILocation(line: 3369, column: 6, scope: !9703)
!9710 = !DILocation(line: 3369, column: 13, scope: !9703)
!9711 = !DILocation(line: 3369, column: 18, scope: !9703)
!9712 = !DILocation(line: 3371, column: 5, scope: !9686)
!9713 = !DILocation(line: 3371, column: 12, scope: !9686)
!9714 = !DILocation(line: 3371, column: 17, scope: !9686)
!9715 = !DILocation(line: 3373, column: 9, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 3373, column: 9)
!9717 = !DILocation(line: 3373, column: 9, scope: !9686)
!9718 = !DILocation(line: 3374, column: 6, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 3373, column: 15)
!9720 = !DILocation(line: 3374, column: 13, scope: !9719)
!9721 = !DILocation(line: 3374, column: 18, scope: !9719)
!9722 = !DILocation(line: 3375, column: 10, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 3375, column: 10)
!9724 = !DILocation(line: 3375, column: 17, scope: !9723)
!9725 = !DILocation(line: 3375, column: 22, scope: !9723)
!9726 = !DILocation(line: 3375, column: 10, scope: !9719)
!9727 = !DILocation(line: 3376, column: 25, scope: !9723)
!9728 = !DILocation(line: 3376, column: 7, scope: !9723)
!9729 = !DILocation(line: 3377, column: 5, scope: !9719)
!9730 = !DILocation(line: 3378, column: 4, scope: !9686)
!9731 = !DILocation(line: 3359, column: 37, scope: !9682)
!9732 = !DILocation(line: 3359, column: 42, scope: !9682)
!9733 = !DILocation(line: 3359, column: 36, scope: !9682)
!9734 = !DILocation(line: 3359, column: 4, scope: !9682)
!9735 = distinct !{!9735, !9683, !9736}
!9736 = !DILocation(line: 3378, column: 4, scope: !9677)
!9737 = !DILocation(line: 3379, column: 4, scope: !9672)
!9738 = !DILocation(line: 3380, column: 3, scope: !9672)
!9739 = !DILocation(line: 3356, column: 3, scope: !9669)
!9740 = distinct !{!9740, !9670, !9741}
!9741 = !DILocation(line: 3380, column: 3, scope: !9666)
!9742 = !DILocation(line: 3383, column: 22, scope: !9214)
!9743 = !DILocation(line: 3383, column: 2, scope: !9214)
!9744 = !DILocation(line: 3383, column: 9, scope: !9214)
!9745 = !DILocation(line: 3383, column: 11, scope: !9214)
!9746 = !DILocation(line: 3383, column: 20, scope: !9214)
!9747 = !DILocation(line: 3384, column: 9, scope: !9214)
!9748 = !DILocation(line: 3384, column: 2, scope: !9214)
!9749 = !DILocation(line: 3384, column: 7, scope: !9214)
!9750 = !DILocation(line: 3386, column: 6, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3386, column: 6)
!9752 = !DILocation(line: 3386, column: 6, scope: !9214)
!9753 = !DILocation(line: 3387, column: 33, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 3386, column: 12)
!9755 = !DILocation(line: 3387, column: 40, scope: !9754)
!9756 = !DILocation(line: 3387, column: 50, scope: !9754)
!9757 = !DILocation(line: 3387, column: 57, scope: !9754)
!9758 = !DILocation(line: 3387, column: 64, scope: !9754)
!9759 = !DILocation(line: 3387, column: 71, scope: !9754)
!9760 = !DILocation(line: 3387, column: 3, scope: !9754)
!9761 = !DILocation(line: 3388, column: 2, scope: !9754)
!9762 = !DILocation(line: 3390, column: 18, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 3390, column: 6)
!9764 = !DILocation(line: 3390, column: 6, scope: !9763)
!9765 = !DILocation(line: 3390, column: 6, scope: !9214)
!9766 = !DILocation(line: 3391, column: 3, scope: !9763)
!9767 = !DILocation(line: 3392, column: 11, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 3392, column: 11)
!9769 = !DILocation(line: 3392, column: 18, scope: !9768)
!9770 = !DILocation(line: 3392, column: 11, scope: !9763)
!9771 = !DILocation(line: 3393, column: 3, scope: !9768)
!9772 = !DILocation(line: 3393, column: 10, scope: !9768)
!9773 = !DILocation(line: 3393, column: 22, scope: !9768)
!9774 = !DILocation(line: 3393, column: 29, scope: !9768)
!9775 = !DILocation(line: 3395, column: 2, scope: !9214)
!9776 = !DILocation(line: 3398, column: 1, scope: !9214)
!9777 = distinct !DISubprogram(name: "ptcache_bake_thread", scope: !3, file: !3, line: 3141, type: !9778, scopeLine: 3142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9778 = !DISubroutineType(types: !9779)
!9779 = !{!131, !131}
!9780 = !DILocalVariable(name: "ptr", arg: 1, scope: !9777, file: !3, line: 3141, type: !131)
!9781 = !DILocation(line: 3141, column: 40, scope: !9777)
!9782 = !DILocalVariable(name: "use_timer", scope: !9777, file: !3, line: 3143, type: !1610)
!9783 = !DILocation(line: 3143, column: 7, scope: !9777)
!9784 = !DILocalVariable(name: "sfra", scope: !9777, file: !3, line: 3144, type: !144)
!9785 = !DILocation(line: 3144, column: 6, scope: !9777)
!9786 = !DILocalVariable(name: "efra", scope: !9777, file: !3, line: 3144, type: !144)
!9787 = !DILocation(line: 3144, column: 12, scope: !9777)
!9788 = !DILocalVariable(name: "stime", scope: !9777, file: !3, line: 3145, type: !9789)
!9789 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!9790 = !DILocation(line: 3145, column: 9, scope: !9777)
!9791 = !DILocalVariable(name: "ptime", scope: !9777, file: !3, line: 3145, type: !9789)
!9792 = !DILocation(line: 3145, column: 16, scope: !9777)
!9793 = !DILocalVariable(name: "ctime", scope: !9777, file: !3, line: 3145, type: !9789)
!9794 = !DILocation(line: 3145, column: 23, scope: !9777)
!9795 = !DILocalVariable(name: "fetd", scope: !9777, file: !3, line: 3145, type: !9789)
!9796 = !DILocation(line: 3145, column: 30, scope: !9777)
!9797 = !DILocalVariable(name: "run", scope: !9777, file: !3, line: 3146, type: !2196)
!9798 = !DILocation(line: 3146, column: 7, scope: !9777)
!9799 = !DILocalVariable(name: "cur", scope: !9777, file: !3, line: 3146, type: !2196)
!9800 = !DILocation(line: 3146, column: 16, scope: !9777)
!9801 = !DILocalVariable(name: "etd", scope: !9777, file: !3, line: 3146, type: !2196)
!9802 = !DILocation(line: 3146, column: 25, scope: !9777)
!9803 = !DILocalVariable(name: "data", scope: !9777, file: !3, line: 3148, type: !2658)
!9804 = !DILocation(line: 3148, column: 21, scope: !9777)
!9805 = !DILocation(line: 3148, column: 48, scope: !9777)
!9806 = !DILocation(line: 3148, column: 28, scope: !9777)
!9807 = !DILocation(line: 3150, column: 18, scope: !9777)
!9808 = !DILocation(line: 3150, column: 16, scope: !9777)
!9809 = !DILocation(line: 3150, column: 8, scope: !9777)
!9810 = !DILocation(line: 3151, column: 10, scope: !9777)
!9811 = !DILocation(line: 3151, column: 16, scope: !9777)
!9812 = !DILocation(line: 3151, column: 9, scope: !9777)
!9813 = !DILocation(line: 3151, column: 7, scope: !9777)
!9814 = !DILocation(line: 3152, column: 9, scope: !9777)
!9815 = !DILocation(line: 3152, column: 15, scope: !9777)
!9816 = !DILocation(line: 3152, column: 7, scope: !9777)
!9817 = !DILocation(line: 3154, column: 2, scope: !9777)
!9818 = !DILocation(line: 3154, column: 11, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 3154, column: 2)
!9820 = distinct !DILexicalBlock(scope: !9777, file: !3, line: 3154, column: 2)
!9821 = !DILocation(line: 3154, column: 17, scope: !9819)
!9822 = !DILocation(line: 3154, column: 10, scope: !9819)
!9823 = !DILocation(line: 3154, column: 29, scope: !9819)
!9824 = !DILocation(line: 3154, column: 35, scope: !9819)
!9825 = !DILocation(line: 3154, column: 26, scope: !9819)
!9826 = !DILocation(line: 3154, column: 45, scope: !9819)
!9827 = !DILocation(line: 3154, column: 49, scope: !9819)
!9828 = !DILocation(line: 3154, column: 55, scope: !9819)
!9829 = !DILocation(line: 3154, column: 48, scope: !9819)
!9830 = !DILocation(line: 0, scope: !9819)
!9831 = !DILocation(line: 3154, column: 2, scope: !9820)
!9832 = !DILocation(line: 3155, column: 35, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 3154, column: 101)
!9834 = !DILocation(line: 3155, column: 41, scope: !9833)
!9835 = !DILocation(line: 3155, column: 51, scope: !9833)
!9836 = !DILocation(line: 3155, column: 57, scope: !9833)
!9837 = !DILocation(line: 3155, column: 63, scope: !9833)
!9838 = !DILocation(line: 3155, column: 69, scope: !9833)
!9839 = !DILocation(line: 3155, column: 76, scope: !9833)
!9840 = !DILocation(line: 3155, column: 82, scope: !9833)
!9841 = !DILocation(line: 3155, column: 89, scope: !9833)
!9842 = !DILocation(line: 3155, column: 3, scope: !9833)
!9843 = !DILocation(line: 3156, column: 9, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 3156, column: 7)
!9845 = !DILocation(line: 3156, column: 7, scope: !9844)
!9846 = !DILocation(line: 3156, column: 7, scope: !9833)
!9847 = !DILocation(line: 3157, column: 43, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 3156, column: 21)
!9849 = !DILocation(line: 3157, column: 49, scope: !9848)
!9850 = !DILocation(line: 3157, column: 42, scope: !9848)
!9851 = !DILocation(line: 3157, column: 59, scope: !9848)
!9852 = !DILocation(line: 3157, column: 65, scope: !9848)
!9853 = !DILocation(line: 3157, column: 4, scope: !9848)
!9854 = !DILocation(line: 3158, column: 3, scope: !9848)
!9855 = !DILocation(line: 3160, column: 12, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 3159, column: 8)
!9857 = !DILocation(line: 3160, column: 10, scope: !9856)
!9858 = !DILocation(line: 3162, column: 12, scope: !9856)
!9859 = !DILocation(line: 3162, column: 18, scope: !9856)
!9860 = !DILocation(line: 3162, column: 17, scope: !9856)
!9861 = !DILocation(line: 3162, column: 26, scope: !9856)
!9862 = !DILocation(line: 3162, column: 32, scope: !9856)
!9863 = !DILocation(line: 3162, column: 38, scope: !9856)
!9864 = !DILocation(line: 3162, column: 31, scope: !9856)
!9865 = !DILocation(line: 3162, column: 30, scope: !9856)
!9866 = !DILocation(line: 3162, column: 25, scope: !9856)
!9867 = !DILocation(line: 3162, column: 24, scope: !9856)
!9868 = !DILocation(line: 3162, column: 48, scope: !9856)
!9869 = !DILocation(line: 3162, column: 54, scope: !9856)
!9870 = !DILocation(line: 3162, column: 47, scope: !9856)
!9871 = !DILocation(line: 3162, column: 9, scope: !9856)
!9872 = !DILocation(line: 3164, column: 8, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9856, file: !3, line: 3164, column: 8)
!9874 = !DILocation(line: 3164, column: 18, scope: !9873)
!9875 = !DILocation(line: 3164, column: 21, scope: !9873)
!9876 = !DILocation(line: 3164, column: 26, scope: !9873)
!9877 = !DILocation(line: 3164, column: 8, scope: !9856)
!9878 = !DILocation(line: 3165, column: 15, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 3164, column: 34)
!9880 = !DILocation(line: 3167, column: 23, scope: !9879)
!9881 = !DILocation(line: 3167, column: 28, scope: !9879)
!9882 = !DILocation(line: 3167, column: 34, scope: !9879)
!9883 = !DILocation(line: 3167, column: 33, scope: !9879)
!9884 = !DILocation(line: 3167, column: 5, scope: !9879)
!9885 = !DILocation(line: 3168, column: 23, scope: !9879)
!9886 = !DILocation(line: 3168, column: 28, scope: !9879)
!9887 = !DILocation(line: 3168, column: 34, scope: !9879)
!9888 = !DILocation(line: 3168, column: 33, scope: !9879)
!9889 = !DILocation(line: 3168, column: 5, scope: !9879)
!9890 = !DILocation(line: 3169, column: 23, scope: !9879)
!9891 = !DILocation(line: 3169, column: 28, scope: !9879)
!9892 = !DILocation(line: 3169, column: 5, scope: !9879)
!9893 = !DILocation(line: 3171, column: 69, scope: !9879)
!9894 = !DILocation(line: 3171, column: 75, scope: !9879)
!9895 = !DILocation(line: 3171, column: 81, scope: !9879)
!9896 = !DILocation(line: 3171, column: 74, scope: !9879)
!9897 = !DILocation(line: 3171, column: 90, scope: !9879)
!9898 = !DILocation(line: 3171, column: 89, scope: !9879)
!9899 = !DILocation(line: 3171, column: 94, scope: !9879)
!9900 = !DILocation(line: 3171, column: 98, scope: !9879)
!9901 = !DILocation(line: 3171, column: 103, scope: !9879)
!9902 = !DILocation(line: 3171, column: 102, scope: !9879)
!9903 = !DILocation(line: 3171, column: 107, scope: !9879)
!9904 = !DILocation(line: 3171, column: 111, scope: !9879)
!9905 = !DILocation(line: 3171, column: 117, scope: !9879)
!9906 = !DILocation(line: 3171, column: 116, scope: !9879)
!9907 = !DILocation(line: 3171, column: 124, scope: !9879)
!9908 = !DILocation(line: 3171, column: 5, scope: !9879)
!9909 = !DILocation(line: 3172, column: 4, scope: !9879)
!9910 = !DILocation(line: 3173, column: 12, scope: !9856)
!9911 = !DILocation(line: 3173, column: 10, scope: !9856)
!9912 = !DILocation(line: 3175, column: 2, scope: !9833)
!9913 = !DILocation(line: 3154, column: 89, scope: !9819)
!9914 = !DILocation(line: 3154, column: 95, scope: !9819)
!9915 = !DILocation(line: 3154, column: 73, scope: !9819)
!9916 = !DILocation(line: 3154, column: 79, scope: !9819)
!9917 = !DILocation(line: 3154, column: 87, scope: !9819)
!9918 = !DILocation(line: 3154, column: 2, scope: !9819)
!9919 = distinct !{!9919, !9831, !9920}
!9920 = !DILocation(line: 3175, column: 2, scope: !9820)
!9921 = !DILocation(line: 3177, column: 6, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9777, file: !3, line: 3177, column: 6)
!9923 = !DILocation(line: 3177, column: 6, scope: !9777)
!9924 = !DILocation(line: 3179, column: 21, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3177, column: 17)
!9926 = !DILocation(line: 3179, column: 26, scope: !9925)
!9927 = !DILocation(line: 3179, column: 52, scope: !9925)
!9928 = !DILocation(line: 3179, column: 51, scope: !9925)
!9929 = !DILocation(line: 3179, column: 3, scope: !9925)
!9930 = !DILocation(line: 3180, column: 52, scope: !9925)
!9931 = !DILocation(line: 3180, column: 58, scope: !9925)
!9932 = !DILocation(line: 3180, column: 111, scope: !9925)
!9933 = !DILocation(line: 3180, column: 117, scope: !9925)
!9934 = !DILocation(line: 3180, column: 123, scope: !9925)
!9935 = !DILocation(line: 3180, column: 116, scope: !9925)
!9936 = !DILocation(line: 3180, column: 132, scope: !9925)
!9937 = !DILocation(line: 3180, column: 131, scope: !9925)
!9938 = !DILocation(line: 3180, column: 3, scope: !9925)
!9939 = !DILocation(line: 3181, column: 2, scope: !9925)
!9940 = !DILocation(line: 3183, column: 2, scope: !9777)
!9941 = !DILocation(line: 3183, column: 8, scope: !9777)
!9942 = !DILocation(line: 3183, column: 21, scope: !9777)
!9943 = !DILocation(line: 3184, column: 2, scope: !9777)
!9944 = distinct !DISubprogram(name: "BKE_ptcache_disk_to_mem", scope: !3, file: !3, line: 3400, type: !7598, scopeLine: 3401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!9945 = !DILocalVariable(name: "pid", arg: 1, scope: !9944, file: !3, line: 3400, type: !2797)
!9946 = !DILocation(line: 3400, column: 41, scope: !9944)
!9947 = !DILocalVariable(name: "cache", scope: !9944, file: !3, line: 3402, type: !7069)
!9948 = !DILocation(line: 3402, column: 14, scope: !9944)
!9949 = !DILocation(line: 3402, column: 22, scope: !9944)
!9950 = !DILocation(line: 3402, column: 27, scope: !9944)
!9951 = !DILocalVariable(name: "pm", scope: !9944, file: !3, line: 3403, type: !3946)
!9952 = !DILocation(line: 3403, column: 14, scope: !9944)
!9953 = !DILocalVariable(name: "baked", scope: !9944, file: !3, line: 3404, type: !144)
!9954 = !DILocation(line: 3404, column: 6, scope: !9944)
!9955 = !DILocation(line: 3404, column: 14, scope: !9944)
!9956 = !DILocation(line: 3404, column: 21, scope: !9944)
!9957 = !DILocation(line: 3404, column: 26, scope: !9944)
!9958 = !DILocalVariable(name: "cfra", scope: !9944, file: !3, line: 3405, type: !144)
!9959 = !DILocation(line: 3405, column: 6, scope: !9944)
!9960 = !DILocalVariable(name: "sfra", scope: !9944, file: !3, line: 3405, type: !144)
!9961 = !DILocation(line: 3405, column: 12, scope: !9944)
!9962 = !DILocation(line: 3405, column: 19, scope: !9944)
!9963 = !DILocation(line: 3405, column: 26, scope: !9944)
!9964 = !DILocalVariable(name: "efra", scope: !9944, file: !3, line: 3405, type: !144)
!9965 = !DILocation(line: 3405, column: 38, scope: !9944)
!9966 = !DILocation(line: 3405, column: 45, scope: !9944)
!9967 = !DILocation(line: 3405, column: 52, scope: !9944)
!9968 = !DILocation(line: 3408, column: 2, scope: !9944)
!9969 = !DILocation(line: 3408, column: 9, scope: !9944)
!9970 = !DILocation(line: 3408, column: 14, scope: !9944)
!9971 = !DILocation(line: 3411, column: 23, scope: !9944)
!9972 = !DILocation(line: 3411, column: 2, scope: !9944)
!9973 = !DILocation(line: 3414, column: 17, scope: !9944)
!9974 = !DILocation(line: 3414, column: 2, scope: !9944)
!9975 = !DILocation(line: 3414, column: 9, scope: !9944)
!9976 = !DILocation(line: 3414, column: 14, scope: !9944)
!9977 = !DILocation(line: 3416, column: 12, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 3416, column: 2)
!9979 = !DILocation(line: 3416, column: 11, scope: !9978)
!9980 = !DILocation(line: 3416, column: 7, scope: !9978)
!9981 = !DILocation(line: 3416, column: 18, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 3416, column: 2)
!9983 = !DILocation(line: 3416, column: 26, scope: !9982)
!9984 = !DILocation(line: 3416, column: 23, scope: !9982)
!9985 = !DILocation(line: 3416, column: 2, scope: !9978)
!9986 = !DILocation(line: 3417, column: 34, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 3416, column: 40)
!9988 = !DILocation(line: 3417, column: 39, scope: !9987)
!9989 = !DILocation(line: 3417, column: 8, scope: !9987)
!9990 = !DILocation(line: 3417, column: 6, scope: !9987)
!9991 = !DILocation(line: 3419, column: 7, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 3419, column: 7)
!9993 = !DILocation(line: 3419, column: 7, scope: !9987)
!9994 = !DILocation(line: 3420, column: 17, scope: !9992)
!9995 = !DILocation(line: 3420, column: 22, scope: !9992)
!9996 = !DILocation(line: 3420, column: 29, scope: !9992)
!9997 = !DILocation(line: 3420, column: 40, scope: !9992)
!9998 = !DILocation(line: 3420, column: 4, scope: !9992)
!9999 = !DILocation(line: 3421, column: 2, scope: !9987)
!10000 = !DILocation(line: 3416, column: 36, scope: !9982)
!10001 = !DILocation(line: 3416, column: 2, scope: !9982)
!10002 = distinct !{!10002, !9985, !10003}
!10003 = !DILocation(line: 3421, column: 2, scope: !9978)
!10004 = !DILocation(line: 3422, column: 1, scope: !9944)
!10005 = distinct !DISubprogram(name: "ptcache_disk_frame_to_mem", scope: !3, file: !3, line: 1943, type: !10006, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!3946, !2797, !144}
!10008 = !DILocalVariable(name: "pid", arg: 1, scope: !10005, file: !3, line: 1943, type: !2797)
!10009 = !DILocation(line: 1943, column: 57, scope: !10005)
!10010 = !DILocalVariable(name: "cfra", arg: 2, scope: !10005, file: !3, line: 1943, type: !144)
!10011 = !DILocation(line: 1943, column: 66, scope: !10005)
!10012 = !DILocalVariable(name: "pf", scope: !10005, file: !3, line: 1945, type: !1087)
!10013 = !DILocation(line: 1945, column: 15, scope: !10005)
!10014 = !DILocation(line: 1945, column: 38, scope: !10005)
!10015 = !DILocation(line: 1945, column: 62, scope: !10005)
!10016 = !DILocation(line: 1945, column: 20, scope: !10005)
!10017 = !DILocalVariable(name: "pm", scope: !10005, file: !3, line: 1946, type: !3946)
!10018 = !DILocation(line: 1946, column: 14, scope: !10005)
!10019 = !DILocalVariable(name: "i", scope: !10005, file: !3, line: 1947, type: !7)
!10020 = !DILocation(line: 1947, column: 15, scope: !10005)
!10021 = !DILocalVariable(name: "error", scope: !10005, file: !3, line: 1947, type: !7)
!10022 = !DILocation(line: 1947, column: 18, scope: !10005)
!10023 = !DILocation(line: 1949, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1949, column: 6)
!10025 = !DILocation(line: 1949, column: 9, scope: !10024)
!10026 = !DILocation(line: 1949, column: 6, scope: !10005)
!10027 = !DILocation(line: 1950, column: 3, scope: !10024)
!10028 = !DILocation(line: 1952, column: 38, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1952, column: 6)
!10030 = !DILocation(line: 1952, column: 7, scope: !10029)
!10031 = !DILocation(line: 1952, column: 6, scope: !10005)
!10032 = !DILocation(line: 1953, column: 9, scope: !10029)
!10033 = !DILocation(line: 1953, column: 3, scope: !10029)
!10034 = !DILocation(line: 1955, column: 7, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1955, column: 6)
!10036 = !DILocation(line: 1955, column: 13, scope: !10035)
!10037 = !DILocation(line: 1955, column: 17, scope: !10035)
!10038 = !DILocation(line: 1955, column: 21, scope: !10035)
!10039 = !DILocation(line: 1955, column: 29, scope: !10035)
!10040 = !DILocation(line: 1955, column: 34, scope: !10035)
!10041 = !DILocation(line: 1955, column: 26, scope: !10035)
!10042 = !DILocation(line: 1955, column: 39, scope: !10035)
!10043 = !DILocation(line: 1955, column: 43, scope: !10035)
!10044 = !DILocation(line: 1955, column: 48, scope: !10035)
!10045 = !DILocation(line: 1955, column: 60, scope: !10035)
!10046 = !DILocation(line: 1955, column: 6, scope: !10005)
!10047 = !DILocation(line: 1956, column: 9, scope: !10035)
!10048 = !DILocation(line: 1956, column: 3, scope: !10035)
!10049 = !DILocation(line: 1958, column: 7, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1958, column: 6)
!10051 = !DILocation(line: 1958, column: 6, scope: !10005)
!10052 = !DILocation(line: 1959, column: 8, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 1958, column: 14)
!10054 = !DILocation(line: 1959, column: 6, scope: !10053)
!10055 = !DILocation(line: 1961, column: 18, scope: !10053)
!10056 = !DILocation(line: 1961, column: 22, scope: !10053)
!10057 = !DILocation(line: 1961, column: 3, scope: !10053)
!10058 = !DILocation(line: 1961, column: 7, scope: !10053)
!10059 = !DILocation(line: 1961, column: 16, scope: !10053)
!10060 = !DILocation(line: 1962, column: 20, scope: !10053)
!10061 = !DILocation(line: 1962, column: 24, scope: !10053)
!10062 = !DILocation(line: 1962, column: 3, scope: !10053)
!10063 = !DILocation(line: 1962, column: 7, scope: !10053)
!10064 = !DILocation(line: 1962, column: 18, scope: !10053)
!10065 = !DILocation(line: 1963, column: 15, scope: !10053)
!10066 = !DILocation(line: 1963, column: 19, scope: !10053)
!10067 = !DILocation(line: 1963, column: 3, scope: !10053)
!10068 = !DILocation(line: 1963, column: 7, scope: !10053)
!10069 = !DILocation(line: 1963, column: 13, scope: !10053)
!10070 = !DILocation(line: 1965, column: 22, scope: !10053)
!10071 = !DILocation(line: 1965, column: 3, scope: !10053)
!10072 = !DILocation(line: 1967, column: 7, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 1967, column: 7)
!10074 = !DILocation(line: 1967, column: 11, scope: !10073)
!10075 = !DILocation(line: 1967, column: 16, scope: !10073)
!10076 = !DILocation(line: 1967, column: 7, scope: !10053)
!10077 = !DILocation(line: 1968, column: 10, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 1968, column: 4)
!10079 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 1967, column: 45)
!10080 = !DILocation(line: 1968, column: 9, scope: !10078)
!10081 = !DILocation(line: 1968, column: 14, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 1968, column: 4)
!10083 = !DILocation(line: 1968, column: 15, scope: !10082)
!10084 = !DILocation(line: 1968, column: 4, scope: !10078)
!10085 = !DILocalVariable(name: "out_len", scope: !10086, file: !3, line: 1969, type: !7)
!10086 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 1968, column: 37)
!10087 = !DILocation(line: 1969, column: 18, scope: !10086)
!10088 = !DILocation(line: 1969, column: 28, scope: !10086)
!10089 = !DILocation(line: 1969, column: 32, scope: !10086)
!10090 = !DILocation(line: 1969, column: 59, scope: !10086)
!10091 = !DILocation(line: 1969, column: 41, scope: !10086)
!10092 = !DILocation(line: 1969, column: 40, scope: !10086)
!10093 = !DILocation(line: 1970, column: 9, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1970, column: 9)
!10095 = !DILocation(line: 1970, column: 13, scope: !10094)
!10096 = !DILocation(line: 1970, column: 30, scope: !10094)
!10097 = !DILocation(line: 1970, column: 28, scope: !10094)
!10098 = !DILocation(line: 1970, column: 24, scope: !10094)
!10099 = !DILocation(line: 1970, column: 9, scope: !10086)
!10100 = !DILocation(line: 1971, column: 35, scope: !10094)
!10101 = !DILocation(line: 1971, column: 57, scope: !10094)
!10102 = !DILocation(line: 1971, column: 61, scope: !10094)
!10103 = !DILocation(line: 1971, column: 66, scope: !10094)
!10104 = !DILocation(line: 1971, column: 71, scope: !10094)
!10105 = !DILocation(line: 1971, column: 6, scope: !10094)
!10106 = !DILocation(line: 1972, column: 4, scope: !10086)
!10107 = !DILocation(line: 1968, column: 33, scope: !10082)
!10108 = !DILocation(line: 1968, column: 4, scope: !10082)
!10109 = distinct !{!10109, !10084, !10110}
!10110 = !DILocation(line: 1972, column: 4, scope: !10078)
!10111 = !DILocation(line: 1973, column: 3, scope: !10079)
!10112 = !DILocation(line: 1975, column: 34, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 1974, column: 8)
!10114 = !DILocation(line: 1975, column: 4, scope: !10113)
!10115 = !DILocation(line: 1976, column: 31, scope: !10113)
!10116 = !DILocation(line: 1976, column: 4, scope: !10113)
!10117 = !DILocation(line: 1978, column: 10, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 1978, column: 4)
!10119 = !DILocation(line: 1978, column: 9, scope: !10118)
!10120 = !DILocation(line: 1978, column: 14, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10118, file: !3, line: 1978, column: 4)
!10122 = !DILocation(line: 1978, column: 16, scope: !10121)
!10123 = !DILocation(line: 1978, column: 20, scope: !10121)
!10124 = !DILocation(line: 1978, column: 15, scope: !10121)
!10125 = !DILocation(line: 1978, column: 4, scope: !10118)
!10126 = !DILocation(line: 1979, column: 33, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 1979, column: 9)
!10128 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1978, column: 35)
!10129 = !DILocation(line: 1979, column: 10, scope: !10127)
!10130 = !DILocation(line: 1979, column: 9, scope: !10128)
!10131 = !DILocation(line: 1980, column: 12, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 1979, column: 38)
!10133 = !DILocation(line: 1981, column: 6, scope: !10132)
!10134 = !DILocation(line: 1983, column: 23, scope: !10128)
!10135 = !DILocation(line: 1983, column: 27, scope: !10128)
!10136 = !DILocation(line: 1983, column: 32, scope: !10128)
!10137 = !DILocation(line: 1983, column: 36, scope: !10128)
!10138 = !DILocation(line: 1983, column: 5, scope: !10128)
!10139 = !DILocation(line: 1984, column: 35, scope: !10128)
!10140 = !DILocation(line: 1984, column: 5, scope: !10128)
!10141 = !DILocation(line: 1985, column: 4, scope: !10128)
!10142 = !DILocation(line: 1978, column: 31, scope: !10121)
!10143 = !DILocation(line: 1978, column: 4, scope: !10121)
!10144 = distinct !{!10144, !10125, !10145}
!10145 = !DILocation(line: 1985, column: 4, scope: !10118)
!10146 = !DILocation(line: 1987, column: 2, scope: !10053)
!10147 = !DILocation(line: 1989, column: 7, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1989, column: 6)
!10149 = !DILocation(line: 1989, column: 13, scope: !10148)
!10150 = !DILocation(line: 1989, column: 16, scope: !10148)
!10151 = !DILocation(line: 1989, column: 20, scope: !10148)
!10152 = !DILocation(line: 1989, column: 25, scope: !10148)
!10153 = !DILocation(line: 1989, column: 6, scope: !10005)
!10154 = !DILocalVariable(name: "extratype", scope: !10155, file: !3, line: 1990, type: !7)
!10155 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1989, column: 55)
!10156 = !DILocation(line: 1990, column: 16, scope: !10155)
!10157 = !DILocation(line: 1992, column: 3, scope: !10155)
!10158 = !DILocation(line: 1992, column: 28, scope: !10155)
!10159 = !DILocation(line: 1992, column: 32, scope: !10155)
!10160 = !DILocation(line: 1992, column: 10, scope: !10155)
!10161 = !DILocalVariable(name: "extra", scope: !10162, file: !3, line: 1993, type: !3958)
!10162 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 1992, column: 70)
!10163 = !DILocation(line: 1993, column: 18, scope: !10162)
!10164 = !DILocation(line: 1993, column: 26, scope: !10162)
!10165 = !DILocation(line: 1995, column: 18, scope: !10162)
!10166 = !DILocation(line: 1995, column: 4, scope: !10162)
!10167 = !DILocation(line: 1995, column: 11, scope: !10162)
!10168 = !DILocation(line: 1995, column: 16, scope: !10162)
!10169 = !DILocation(line: 1997, column: 22, scope: !10162)
!10170 = !DILocation(line: 1997, column: 27, scope: !10162)
!10171 = !DILocation(line: 1997, column: 34, scope: !10162)
!10172 = !DILocation(line: 1997, column: 26, scope: !10162)
!10173 = !DILocation(line: 1997, column: 4, scope: !10162)
!10174 = !DILocation(line: 1999, column: 18, scope: !10162)
!10175 = !DILocation(line: 1999, column: 30, scope: !10162)
!10176 = !DILocation(line: 1999, column: 37, scope: !10162)
!10177 = !DILocation(line: 1999, column: 70, scope: !10162)
!10178 = !DILocation(line: 1999, column: 77, scope: !10162)
!10179 = !DILocation(line: 1999, column: 47, scope: !10162)
!10180 = !DILocation(line: 1999, column: 45, scope: !10162)
!10181 = !DILocation(line: 1999, column: 4, scope: !10162)
!10182 = !DILocation(line: 1999, column: 11, scope: !10162)
!10183 = !DILocation(line: 1999, column: 16, scope: !10162)
!10184 = !DILocation(line: 2001, column: 8, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 2001, column: 8)
!10186 = !DILocation(line: 2001, column: 12, scope: !10185)
!10187 = !DILocation(line: 2001, column: 17, scope: !10185)
!10188 = !DILocation(line: 2001, column: 8, scope: !10162)
!10189 = !DILocation(line: 2002, column: 34, scope: !10185)
!10190 = !DILocation(line: 2002, column: 56, scope: !10185)
!10191 = !DILocation(line: 2002, column: 63, scope: !10185)
!10192 = !DILocation(line: 2002, column: 70, scope: !10185)
!10193 = !DILocation(line: 2002, column: 77, scope: !10185)
!10194 = !DILocation(line: 2002, column: 108, scope: !10185)
!10195 = !DILocation(line: 2002, column: 115, scope: !10185)
!10196 = !DILocation(line: 2002, column: 85, scope: !10185)
!10197 = !DILocation(line: 2002, column: 84, scope: !10185)
!10198 = !DILocation(line: 2002, column: 5, scope: !10185)
!10199 = !DILocation(line: 2004, column: 23, scope: !10185)
!10200 = !DILocation(line: 2004, column: 27, scope: !10185)
!10201 = !DILocation(line: 2004, column: 34, scope: !10185)
!10202 = !DILocation(line: 2004, column: 40, scope: !10185)
!10203 = !DILocation(line: 2004, column: 47, scope: !10185)
!10204 = !DILocation(line: 2004, column: 79, scope: !10185)
!10205 = !DILocation(line: 2004, column: 86, scope: !10185)
!10206 = !DILocation(line: 2004, column: 56, scope: !10185)
!10207 = !DILocation(line: 2004, column: 5, scope: !10185)
!10208 = !DILocation(line: 2006, column: 17, scope: !10162)
!10209 = !DILocation(line: 2006, column: 21, scope: !10162)
!10210 = !DILocation(line: 2006, column: 32, scope: !10162)
!10211 = !DILocation(line: 2006, column: 4, scope: !10162)
!10212 = distinct !{!10212, !10157, !10213}
!10213 = !DILocation(line: 2007, column: 3, scope: !10155)
!10214 = !DILocation(line: 2008, column: 2, scope: !10155)
!10215 = !DILocation(line: 2010, column: 6, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2010, column: 6)
!10217 = !DILocation(line: 2010, column: 12, scope: !10216)
!10218 = !DILocation(line: 2010, column: 15, scope: !10216)
!10219 = !DILocation(line: 2010, column: 6, scope: !10005)
!10220 = !DILocation(line: 2011, column: 21, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 2010, column: 19)
!10222 = !DILocation(line: 2011, column: 3, scope: !10221)
!10223 = !DILocation(line: 2012, column: 22, scope: !10221)
!10224 = !DILocation(line: 2012, column: 3, scope: !10221)
!10225 = !DILocation(line: 2013, column: 3, scope: !10221)
!10226 = !DILocation(line: 2013, column: 13, scope: !10221)
!10227 = !DILocation(line: 2014, column: 6, scope: !10221)
!10228 = !DILocation(line: 2015, column: 2, scope: !10221)
!10229 = !DILocation(line: 2017, column: 21, scope: !10005)
!10230 = !DILocation(line: 2017, column: 2, scope: !10005)
!10231 = !DILocation(line: 2019, column: 6, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2019, column: 6)
!10233 = !DILocation(line: 2019, column: 12, scope: !10232)
!10234 = !DILocation(line: 2019, column: 17, scope: !10232)
!10235 = !DILocation(line: 2019, column: 23, scope: !10232)
!10236 = !DILocation(line: 2019, column: 6, scope: !10005)
!10237 = !DILocation(line: 2020, column: 3, scope: !10232)
!10238 = !DILocation(line: 2022, column: 9, scope: !10005)
!10239 = !DILocation(line: 2022, column: 2, scope: !10005)
!10240 = !DILocation(line: 2023, column: 1, scope: !10005)
!10241 = distinct !DISubprogram(name: "BKE_ptcache_mem_to_disk", scope: !3, file: !3, line: 3423, type: !7598, scopeLine: 3424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10242 = !DILocalVariable(name: "pid", arg: 1, scope: !10241, file: !3, line: 3423, type: !2797)
!10243 = !DILocation(line: 3423, column: 41, scope: !10241)
!10244 = !DILocalVariable(name: "cache", scope: !10241, file: !3, line: 3425, type: !7069)
!10245 = !DILocation(line: 3425, column: 14, scope: !10241)
!10246 = !DILocation(line: 3425, column: 22, scope: !10241)
!10247 = !DILocation(line: 3425, column: 27, scope: !10241)
!10248 = !DILocalVariable(name: "pm", scope: !10241, file: !3, line: 3426, type: !3946)
!10249 = !DILocation(line: 3426, column: 14, scope: !10241)
!10250 = !DILocation(line: 3426, column: 19, scope: !10241)
!10251 = !DILocation(line: 3426, column: 26, scope: !10241)
!10252 = !DILocation(line: 3426, column: 36, scope: !10241)
!10253 = !DILocalVariable(name: "baked", scope: !10241, file: !3, line: 3427, type: !144)
!10254 = !DILocation(line: 3427, column: 6, scope: !10241)
!10255 = !DILocation(line: 3427, column: 14, scope: !10241)
!10256 = !DILocation(line: 3427, column: 21, scope: !10241)
!10257 = !DILocation(line: 3427, column: 26, scope: !10241)
!10258 = !DILocation(line: 3430, column: 2, scope: !10241)
!10259 = !DILocation(line: 3430, column: 9, scope: !10241)
!10260 = !DILocation(line: 3430, column: 14, scope: !10241)
!10261 = !DILocation(line: 3433, column: 23, scope: !10241)
!10262 = !DILocation(line: 3433, column: 2, scope: !10241)
!10263 = !DILocation(line: 3436, column: 17, scope: !10241)
!10264 = !DILocation(line: 3436, column: 2, scope: !10241)
!10265 = !DILocation(line: 3436, column: 9, scope: !10241)
!10266 = !DILocation(line: 3436, column: 14, scope: !10241)
!10267 = !DILocation(line: 3438, column: 2, scope: !10241)
!10268 = !DILocation(line: 3438, column: 9, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 3438, column: 2)
!10270 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 3438, column: 2)
!10271 = !DILocation(line: 3438, column: 2, scope: !10270)
!10272 = !DILocation(line: 3439, column: 33, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 3439, column: 7)
!10274 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 3438, column: 26)
!10275 = !DILocation(line: 3439, column: 38, scope: !10273)
!10276 = !DILocation(line: 3439, column: 7, scope: !10273)
!10277 = !DILocation(line: 3439, column: 41, scope: !10273)
!10278 = !DILocation(line: 3439, column: 7, scope: !10274)
!10279 = !DILocation(line: 3440, column: 4, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 3439, column: 46)
!10281 = !DILocation(line: 3440, column: 11, scope: !10280)
!10282 = !DILocation(line: 3440, column: 16, scope: !10280)
!10283 = !DILocation(line: 3441, column: 4, scope: !10280)
!10284 = !DILocation(line: 3443, column: 2, scope: !10274)
!10285 = !DILocation(line: 3438, column: 16, scope: !10269)
!10286 = !DILocation(line: 3438, column: 20, scope: !10269)
!10287 = !DILocation(line: 3438, column: 15, scope: !10269)
!10288 = !DILocation(line: 3438, column: 2, scope: !10269)
!10289 = distinct !{!10289, !10271, !10290}
!10290 = !DILocation(line: 3443, column: 2, scope: !10270)
!10291 = !DILocation(line: 3446, column: 6, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 3446, column: 6)
!10293 = !DILocation(line: 3446, column: 13, scope: !10292)
!10294 = !DILocation(line: 3446, column: 18, scope: !10292)
!10295 = !DILocation(line: 3446, column: 6, scope: !10241)
!10296 = !DILocation(line: 3447, column: 21, scope: !10292)
!10297 = !DILocation(line: 3447, column: 3, scope: !10292)
!10298 = !DILocation(line: 3448, column: 1, scope: !10241)
!10299 = distinct !DISubprogram(name: "ptcache_mem_frame_to_disk", scope: !3, file: !3, line: 2024, type: !10300, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!144, !2797, !3946}
!10302 = !DILocalVariable(name: "pid", arg: 1, scope: !10299, file: !3, line: 2024, type: !2797)
!10303 = !DILocation(line: 2024, column: 49, scope: !10299)
!10304 = !DILocalVariable(name: "pm", arg: 2, scope: !10299, file: !3, line: 2024, type: !3946)
!10305 = !DILocation(line: 2024, column: 66, scope: !10299)
!10306 = !DILocalVariable(name: "pf", scope: !10299, file: !3, line: 2026, type: !1087)
!10307 = !DILocation(line: 2026, column: 15, scope: !10299)
!10308 = !DILocalVariable(name: "i", scope: !10299, file: !3, line: 2027, type: !7)
!10309 = !DILocation(line: 2027, column: 15, scope: !10299)
!10310 = !DILocalVariable(name: "error", scope: !10299, file: !3, line: 2027, type: !7)
!10311 = !DILocation(line: 2027, column: 18, scope: !10299)
!10312 = !DILocation(line: 2029, column: 23, scope: !10299)
!10313 = !DILocation(line: 2029, column: 49, scope: !10299)
!10314 = !DILocation(line: 2029, column: 53, scope: !10299)
!10315 = !DILocation(line: 2029, column: 2, scope: !10299)
!10316 = !DILocation(line: 2031, column: 25, scope: !10299)
!10317 = !DILocation(line: 2031, column: 50, scope: !10299)
!10318 = !DILocation(line: 2031, column: 54, scope: !10299)
!10319 = !DILocation(line: 2031, column: 7, scope: !10299)
!10320 = !DILocation(line: 2031, column: 5, scope: !10299)
!10321 = !DILocation(line: 2033, column: 6, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2033, column: 6)
!10323 = !DILocation(line: 2033, column: 8, scope: !10322)
!10324 = !DILocation(line: 2033, column: 6, scope: !10299)
!10325 = !DILocation(line: 2034, column: 9, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2034, column: 7)
!10327 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 2033, column: 16)
!10328 = !DILocation(line: 2034, column: 15, scope: !10326)
!10329 = !DILocation(line: 2034, column: 7, scope: !10327)
!10330 = !DILocation(line: 2035, column: 4, scope: !10326)
!10331 = !DILocation(line: 2036, column: 3, scope: !10327)
!10332 = !DILocation(line: 2039, column: 19, scope: !10299)
!10333 = !DILocation(line: 2039, column: 23, scope: !10299)
!10334 = !DILocation(line: 2039, column: 2, scope: !10299)
!10335 = !DILocation(line: 2039, column: 6, scope: !10299)
!10336 = !DILocation(line: 2039, column: 17, scope: !10299)
!10337 = !DILocation(line: 2040, column: 17, scope: !10299)
!10338 = !DILocation(line: 2040, column: 21, scope: !10299)
!10339 = !DILocation(line: 2040, column: 2, scope: !10299)
!10340 = !DILocation(line: 2040, column: 6, scope: !10299)
!10341 = !DILocation(line: 2040, column: 15, scope: !10299)
!10342 = !DILocation(line: 2041, column: 13, scope: !10299)
!10343 = !DILocation(line: 2041, column: 18, scope: !10299)
!10344 = !DILocation(line: 2041, column: 2, scope: !10299)
!10345 = !DILocation(line: 2041, column: 6, scope: !10299)
!10346 = !DILocation(line: 2041, column: 11, scope: !10299)
!10347 = !DILocation(line: 2042, column: 2, scope: !10299)
!10348 = !DILocation(line: 2042, column: 6, scope: !10299)
!10349 = !DILocation(line: 2042, column: 11, scope: !10299)
!10350 = !DILocation(line: 2044, column: 6, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2044, column: 6)
!10352 = !DILocation(line: 2044, column: 10, scope: !10351)
!10353 = !DILocation(line: 2044, column: 20, scope: !10351)
!10354 = !DILocation(line: 2044, column: 6, scope: !10299)
!10355 = !DILocation(line: 2045, column: 3, scope: !10351)
!10356 = !DILocation(line: 2045, column: 7, scope: !10351)
!10357 = !DILocation(line: 2045, column: 12, scope: !10351)
!10358 = !DILocation(line: 2047, column: 6, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2047, column: 6)
!10360 = !DILocation(line: 2047, column: 11, scope: !10359)
!10361 = !DILocation(line: 2047, column: 18, scope: !10359)
!10362 = !DILocation(line: 2047, column: 6, scope: !10299)
!10363 = !DILocation(line: 2048, column: 3, scope: !10359)
!10364 = !DILocation(line: 2048, column: 7, scope: !10359)
!10365 = !DILocation(line: 2048, column: 12, scope: !10359)
!10366 = !DILocation(line: 2050, column: 39, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2050, column: 6)
!10368 = !DILocation(line: 2050, column: 7, scope: !10367)
!10369 = !DILocation(line: 2050, column: 43, scope: !10367)
!10370 = !DILocation(line: 2050, column: 47, scope: !10367)
!10371 = !DILocation(line: 2050, column: 52, scope: !10367)
!10372 = !DILocation(line: 2050, column: 65, scope: !10367)
!10373 = !DILocation(line: 2050, column: 6, scope: !10299)
!10374 = !DILocation(line: 2051, column: 9, scope: !10367)
!10375 = !DILocation(line: 2051, column: 3, scope: !10367)
!10376 = !DILocation(line: 2053, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2053, column: 6)
!10378 = !DILocation(line: 2053, column: 6, scope: !10299)
!10379 = !DILocation(line: 2054, column: 7, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 2054, column: 7)
!10381 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 2053, column: 14)
!10382 = !DILocation(line: 2054, column: 12, scope: !10380)
!10383 = !DILocation(line: 2054, column: 19, scope: !10380)
!10384 = !DILocation(line: 2054, column: 7, scope: !10381)
!10385 = !DILocation(line: 2055, column: 10, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 2055, column: 4)
!10387 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 2054, column: 32)
!10388 = !DILocation(line: 2055, column: 9, scope: !10386)
!10389 = !DILocation(line: 2055, column: 14, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 2055, column: 4)
!10391 = !DILocation(line: 2055, column: 15, scope: !10390)
!10392 = !DILocation(line: 2055, column: 4, scope: !10386)
!10393 = !DILocation(line: 2056, column: 9, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 2056, column: 9)
!10395 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 2055, column: 37)
!10396 = !DILocation(line: 2056, column: 13, scope: !10394)
!10397 = !DILocation(line: 2056, column: 18, scope: !10394)
!10398 = !DILocation(line: 2056, column: 9, scope: !10395)
!10399 = !DILocalVariable(name: "in_len", scope: !10400, file: !3, line: 2057, type: !7)
!10400 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 2056, column: 22)
!10401 = !DILocation(line: 2057, column: 19, scope: !10400)
!10402 = !DILocation(line: 2057, column: 28, scope: !10400)
!10403 = !DILocation(line: 2057, column: 32, scope: !10400)
!10404 = !DILocation(line: 2057, column: 59, scope: !10400)
!10405 = !DILocation(line: 2057, column: 41, scope: !10400)
!10406 = !DILocation(line: 2057, column: 40, scope: !10400)
!10407 = !DILocalVariable(name: "out", scope: !10400, file: !3, line: 2058, type: !2657)
!10408 = !DILocation(line: 2058, column: 21, scope: !10400)
!10409 = !DILocation(line: 2058, column: 44, scope: !10400)
!10410 = !DILocation(line: 2058, column: 56, scope: !10400)
!10411 = !DILocation(line: 2058, column: 76, scope: !10400)
!10412 = !DILocation(line: 2059, column: 36, scope: !10400)
!10413 = !DILocation(line: 2059, column: 58, scope: !10400)
!10414 = !DILocation(line: 2059, column: 62, scope: !10400)
!10415 = !DILocation(line: 2059, column: 67, scope: !10400)
!10416 = !DILocation(line: 2059, column: 72, scope: !10400)
!10417 = !DILocation(line: 2059, column: 80, scope: !10400)
!10418 = !DILocation(line: 2059, column: 85, scope: !10400)
!10419 = !DILocation(line: 2059, column: 90, scope: !10400)
!10420 = !DILocation(line: 2059, column: 97, scope: !10400)
!10421 = !DILocation(line: 2059, column: 6, scope: !10400)
!10422 = !DILocation(line: 2060, column: 6, scope: !10400)
!10423 = !DILocation(line: 2060, column: 16, scope: !10400)
!10424 = !DILocation(line: 2061, column: 5, scope: !10400)
!10425 = !DILocation(line: 2062, column: 4, scope: !10395)
!10426 = !DILocation(line: 2055, column: 33, scope: !10390)
!10427 = !DILocation(line: 2055, column: 4, scope: !10390)
!10428 = distinct !{!10428, !10392, !10429}
!10429 = !DILocation(line: 2062, column: 4, scope: !10386)
!10430 = !DILocation(line: 2063, column: 3, scope: !10387)
!10431 = !DILocation(line: 2065, column: 34, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 2064, column: 8)
!10433 = !DILocation(line: 2065, column: 4, scope: !10432)
!10434 = !DILocation(line: 2066, column: 31, scope: !10432)
!10435 = !DILocation(line: 2066, column: 4, scope: !10432)
!10436 = !DILocation(line: 2068, column: 10, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 2068, column: 4)
!10438 = !DILocation(line: 2068, column: 9, scope: !10437)
!10439 = !DILocation(line: 2068, column: 14, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2068, column: 4)
!10441 = !DILocation(line: 2068, column: 16, scope: !10440)
!10442 = !DILocation(line: 2068, column: 20, scope: !10440)
!10443 = !DILocation(line: 2068, column: 15, scope: !10440)
!10444 = !DILocation(line: 2068, column: 4, scope: !10437)
!10445 = !DILocation(line: 2069, column: 23, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2068, column: 35)
!10447 = !DILocation(line: 2069, column: 27, scope: !10446)
!10448 = !DILocation(line: 2069, column: 32, scope: !10446)
!10449 = !DILocation(line: 2069, column: 36, scope: !10446)
!10450 = !DILocation(line: 2069, column: 5, scope: !10446)
!10451 = !DILocation(line: 2070, column: 34, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 2070, column: 9)
!10453 = !DILocation(line: 2070, column: 10, scope: !10452)
!10454 = !DILocation(line: 2070, column: 9, scope: !10446)
!10455 = !DILocation(line: 2071, column: 12, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 2070, column: 39)
!10457 = !DILocation(line: 2072, column: 6, scope: !10456)
!10458 = !DILocation(line: 2074, column: 35, scope: !10446)
!10459 = !DILocation(line: 2074, column: 5, scope: !10446)
!10460 = !DILocation(line: 2075, column: 4, scope: !10446)
!10461 = !DILocation(line: 2068, column: 31, scope: !10440)
!10462 = !DILocation(line: 2068, column: 4, scope: !10440)
!10463 = distinct !{!10463, !10444, !10464}
!10464 = !DILocation(line: 2075, column: 4, scope: !10437)
!10465 = !DILocation(line: 2077, column: 2, scope: !10381)
!10466 = !DILocation(line: 2079, column: 7, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2079, column: 6)
!10468 = !DILocation(line: 2079, column: 13, scope: !10467)
!10469 = !DILocation(line: 2079, column: 16, scope: !10467)
!10470 = !DILocation(line: 2079, column: 20, scope: !10467)
!10471 = !DILocation(line: 2079, column: 30, scope: !10467)
!10472 = !DILocation(line: 2079, column: 6, scope: !10299)
!10473 = !DILocalVariable(name: "extra", scope: !10474, file: !3, line: 2080, type: !3958)
!10474 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2079, column: 37)
!10475 = !DILocation(line: 2080, column: 17, scope: !10474)
!10476 = !DILocation(line: 2080, column: 25, scope: !10474)
!10477 = !DILocation(line: 2080, column: 29, scope: !10474)
!10478 = !DILocation(line: 2080, column: 39, scope: !10474)
!10479 = !DILocation(line: 2082, column: 3, scope: !10474)
!10480 = !DILocation(line: 2082, column: 10, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 2082, column: 3)
!10482 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 2082, column: 3)
!10483 = !DILocation(line: 2082, column: 3, scope: !10482)
!10484 = !DILocation(line: 2083, column: 8, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 2083, column: 8)
!10486 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 2082, column: 36)
!10487 = !DILocation(line: 2083, column: 15, scope: !10485)
!10488 = !DILocation(line: 2083, column: 20, scope: !10485)
!10489 = !DILocation(line: 2083, column: 28, scope: !10485)
!10490 = !DILocation(line: 2083, column: 31, scope: !10485)
!10491 = !DILocation(line: 2083, column: 38, scope: !10485)
!10492 = !DILocation(line: 2083, column: 46, scope: !10485)
!10493 = !DILocation(line: 2083, column: 8, scope: !10486)
!10494 = !DILocation(line: 2084, column: 5, scope: !10485)
!10495 = !DILocation(line: 2086, column: 23, scope: !10486)
!10496 = !DILocation(line: 2086, column: 28, scope: !10486)
!10497 = !DILocation(line: 2086, column: 35, scope: !10486)
!10498 = !DILocation(line: 2086, column: 27, scope: !10486)
!10499 = !DILocation(line: 2086, column: 4, scope: !10486)
!10500 = !DILocation(line: 2087, column: 23, scope: !10486)
!10501 = !DILocation(line: 2087, column: 28, scope: !10486)
!10502 = !DILocation(line: 2087, column: 35, scope: !10486)
!10503 = !DILocation(line: 2087, column: 27, scope: !10486)
!10504 = !DILocation(line: 2087, column: 4, scope: !10486)
!10505 = !DILocation(line: 2089, column: 8, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 2089, column: 8)
!10507 = !DILocation(line: 2089, column: 13, scope: !10506)
!10508 = !DILocation(line: 2089, column: 20, scope: !10506)
!10509 = !DILocation(line: 2089, column: 8, scope: !10486)
!10510 = !DILocalVariable(name: "in_len", scope: !10511, file: !3, line: 2090, type: !7)
!10511 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2089, column: 33)
!10512 = !DILocation(line: 2090, column: 18, scope: !10511)
!10513 = !DILocation(line: 2090, column: 27, scope: !10511)
!10514 = !DILocation(line: 2090, column: 34, scope: !10511)
!10515 = !DILocation(line: 2090, column: 67, scope: !10511)
!10516 = !DILocation(line: 2090, column: 74, scope: !10511)
!10517 = !DILocation(line: 2090, column: 44, scope: !10511)
!10518 = !DILocation(line: 2090, column: 42, scope: !10511)
!10519 = !DILocalVariable(name: "out", scope: !10511, file: !3, line: 2091, type: !2657)
!10520 = !DILocation(line: 2091, column: 20, scope: !10511)
!10521 = !DILocation(line: 2091, column: 43, scope: !10511)
!10522 = !DILocation(line: 2091, column: 55, scope: !10511)
!10523 = !DILocation(line: 2091, column: 75, scope: !10511)
!10524 = !DILocation(line: 2092, column: 35, scope: !10511)
!10525 = !DILocation(line: 2092, column: 57, scope: !10511)
!10526 = !DILocation(line: 2092, column: 64, scope: !10511)
!10527 = !DILocation(line: 2092, column: 71, scope: !10511)
!10528 = !DILocation(line: 2092, column: 79, scope: !10511)
!10529 = !DILocation(line: 2092, column: 84, scope: !10511)
!10530 = !DILocation(line: 2092, column: 89, scope: !10511)
!10531 = !DILocation(line: 2092, column: 96, scope: !10511)
!10532 = !DILocation(line: 2092, column: 5, scope: !10511)
!10533 = !DILocation(line: 2093, column: 5, scope: !10511)
!10534 = !DILocation(line: 2093, column: 15, scope: !10511)
!10535 = !DILocation(line: 2094, column: 4, scope: !10511)
!10536 = !DILocation(line: 2096, column: 24, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2095, column: 9)
!10538 = !DILocation(line: 2096, column: 28, scope: !10537)
!10539 = !DILocation(line: 2096, column: 35, scope: !10537)
!10540 = !DILocation(line: 2096, column: 41, scope: !10537)
!10541 = !DILocation(line: 2096, column: 48, scope: !10537)
!10542 = !DILocation(line: 2096, column: 80, scope: !10537)
!10543 = !DILocation(line: 2096, column: 87, scope: !10537)
!10544 = !DILocation(line: 2096, column: 57, scope: !10537)
!10545 = !DILocation(line: 2096, column: 5, scope: !10537)
!10546 = !DILocation(line: 2098, column: 3, scope: !10486)
!10547 = !DILocation(line: 2082, column: 23, scope: !10481)
!10548 = !DILocation(line: 2082, column: 30, scope: !10481)
!10549 = !DILocation(line: 2082, column: 22, scope: !10481)
!10550 = !DILocation(line: 2082, column: 3, scope: !10481)
!10551 = distinct !{!10551, !10483, !10552}
!10552 = !DILocation(line: 2098, column: 3, scope: !10482)
!10553 = !DILocation(line: 2099, column: 2, scope: !10474)
!10554 = !DILocation(line: 2101, column: 21, scope: !10299)
!10555 = !DILocation(line: 2101, column: 2, scope: !10299)
!10556 = !DILocation(line: 2103, column: 6, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2103, column: 6)
!10558 = !DILocation(line: 2103, column: 12, scope: !10557)
!10559 = !DILocation(line: 2103, column: 17, scope: !10557)
!10560 = !DILocation(line: 2103, column: 23, scope: !10557)
!10561 = !DILocation(line: 2103, column: 6, scope: !10299)
!10562 = !DILocation(line: 2104, column: 3, scope: !10557)
!10563 = !DILocation(line: 2106, column: 9, scope: !10299)
!10564 = !DILocation(line: 2106, column: 14, scope: !10299)
!10565 = !DILocation(line: 2106, column: 2, scope: !10299)
!10566 = !DILocation(line: 2107, column: 1, scope: !10299)
!10567 = distinct !DISubprogram(name: "BKE_ptcache_toggle_disk_cache", scope: !3, file: !3, line: 3449, type: !7598, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10568 = !DILocalVariable(name: "pid", arg: 1, scope: !10567, file: !3, line: 3449, type: !2797)
!10569 = !DILocation(line: 3449, column: 47, scope: !10567)
!10570 = !DILocalVariable(name: "cache", scope: !10567, file: !3, line: 3451, type: !7069)
!10571 = !DILocation(line: 3451, column: 14, scope: !10567)
!10572 = !DILocation(line: 3451, column: 22, scope: !10567)
!10573 = !DILocation(line: 3451, column: 27, scope: !10567)
!10574 = !DILocalVariable(name: "last_exact", scope: !10567, file: !3, line: 3452, type: !144)
!10575 = !DILocation(line: 3452, column: 6, scope: !10567)
!10576 = !DILocation(line: 3452, column: 19, scope: !10567)
!10577 = !DILocation(line: 3452, column: 26, scope: !10567)
!10578 = !DILocation(line: 3454, column: 9, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3454, column: 6)
!10580 = !DILocation(line: 3454, column: 7, scope: !10579)
!10581 = !DILocation(line: 3454, column: 6, scope: !10567)
!10582 = !DILocation(line: 3455, column: 3, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3454, column: 24)
!10584 = !DILocation(line: 3455, column: 10, scope: !10583)
!10585 = !DILocation(line: 3455, column: 15, scope: !10583)
!10586 = !DILocation(line: 3456, column: 9, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 3456, column: 7)
!10588 = !DILocation(line: 3456, column: 15, scope: !10587)
!10589 = !DILocation(line: 3456, column: 7, scope: !10583)
!10590 = !DILocation(line: 3457, column: 4, scope: !10587)
!10591 = !DILocation(line: 3458, column: 3, scope: !10583)
!10592 = !DILocation(line: 3461, column: 6, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3461, column: 6)
!10594 = !DILocation(line: 3461, column: 13, scope: !10593)
!10595 = !DILocation(line: 3461, column: 6, scope: !10567)
!10596 = !DILocation(line: 3462, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 3461, column: 28)
!10598 = !DILocation(line: 3462, column: 13, scope: !10597)
!10599 = !DILocation(line: 3462, column: 20, scope: !10597)
!10600 = !DILocation(line: 3463, column: 3, scope: !10597)
!10601 = !DILocation(line: 3463, column: 10, scope: !10597)
!10602 = !DILocation(line: 3463, column: 23, scope: !10597)
!10603 = !DILocation(line: 3464, column: 2, scope: !10597)
!10604 = !DILocation(line: 3466, column: 6, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3466, column: 6)
!10606 = !DILocation(line: 3466, column: 13, scope: !10605)
!10607 = !DILocation(line: 3466, column: 18, scope: !10605)
!10608 = !DILocation(line: 3466, column: 6, scope: !10567)
!10609 = !DILocation(line: 3467, column: 27, scope: !10605)
!10610 = !DILocation(line: 3467, column: 3, scope: !10605)
!10611 = !DILocation(line: 3469, column: 27, scope: !10605)
!10612 = !DILocation(line: 3469, column: 3, scope: !10605)
!10613 = !DILocation(line: 3471, column: 2, scope: !10567)
!10614 = !DILocation(line: 3471, column: 9, scope: !10567)
!10615 = !DILocation(line: 3471, column: 14, scope: !10567)
!10616 = !DILocation(line: 3472, column: 23, scope: !10567)
!10617 = !DILocation(line: 3472, column: 2, scope: !10567)
!10618 = !DILocation(line: 3473, column: 2, scope: !10567)
!10619 = !DILocation(line: 3473, column: 9, scope: !10567)
!10620 = !DILocation(line: 3473, column: 14, scope: !10567)
!10621 = !DILocation(line: 3475, column: 22, scope: !10567)
!10622 = !DILocation(line: 3475, column: 2, scope: !10567)
!10623 = !DILocation(line: 3475, column: 9, scope: !10567)
!10624 = !DILocation(line: 3475, column: 20, scope: !10567)
!10625 = !DILocation(line: 3477, column: 22, scope: !10567)
!10626 = !DILocation(line: 3477, column: 2, scope: !10567)
!10627 = !DILocation(line: 3479, column: 26, scope: !10567)
!10628 = !DILocation(line: 3479, column: 2, scope: !10567)
!10629 = !DILocation(line: 3481, column: 7, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 3481, column: 6)
!10631 = !DILocation(line: 3481, column: 14, scope: !10630)
!10632 = !DILocation(line: 3481, column: 19, scope: !10630)
!10633 = !DILocation(line: 3481, column: 41, scope: !10630)
!10634 = !DILocation(line: 3481, column: 6, scope: !10567)
!10635 = !DILocation(line: 3482, column: 7, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3482, column: 7)
!10637 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 3481, column: 47)
!10638 = !DILocation(line: 3482, column: 14, scope: !10636)
!10639 = !DILocation(line: 3482, column: 7, scope: !10637)
!10640 = !DILocation(line: 3483, column: 30, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 3482, column: 21)
!10642 = !DILocation(line: 3483, column: 35, scope: !10641)
!10643 = !DILocation(line: 3483, column: 39, scope: !10641)
!10644 = !DILocation(line: 3483, column: 46, scope: !10641)
!10645 = !DILocation(line: 3483, column: 4, scope: !10641)
!10646 = !DILocation(line: 3484, column: 4, scope: !10641)
!10647 = !DILocation(line: 3484, column: 11, scope: !10641)
!10648 = !DILocation(line: 3484, column: 17, scope: !10641)
!10649 = !DILocation(line: 3485, column: 3, scope: !10641)
!10650 = !DILocation(line: 3486, column: 2, scope: !10637)
!10651 = !DILocation(line: 3487, column: 1, scope: !10567)
!10652 = distinct !DISubprogram(name: "BKE_ptcache_disk_cache_rename", scope: !3, file: !3, line: 3489, type: !10653, scopeLine: 3490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10653 = !DISubroutineType(types: !10654)
!10654 = !{null, !2797, !1199, !1199}
!10655 = !DILocalVariable(name: "pid", arg: 1, scope: !10652, file: !3, line: 3489, type: !2797)
!10656 = !DILocation(line: 3489, column: 47, scope: !10652)
!10657 = !DILocalVariable(name: "name_src", arg: 2, scope: !10652, file: !3, line: 3489, type: !1199)
!10658 = !DILocation(line: 3489, column: 64, scope: !10652)
!10659 = !DILocalVariable(name: "name_dst", arg: 3, scope: !10652, file: !3, line: 3489, type: !1199)
!10660 = !DILocation(line: 3489, column: 86, scope: !10652)
!10661 = !DILocalVariable(name: "old_name", scope: !10652, file: !3, line: 3491, type: !10662)
!10662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 640, elements: !10663)
!10663 = !{!10664}
!10664 = !DISubrange(count: 80)
!10665 = !DILocation(line: 3491, column: 7, scope: !10652)
!10666 = !DILocalVariable(name: "len", scope: !10652, file: !3, line: 3492, type: !144)
!10667 = !DILocation(line: 3492, column: 6, scope: !10652)
!10668 = !DILocalVariable(name: "dir", scope: !10652, file: !3, line: 3494, type: !6641)
!10669 = !DILocation(line: 3494, column: 7, scope: !10652)
!10670 = !DILocalVariable(name: "de", scope: !10652, file: !3, line: 3495, type: !6647)
!10671 = !DILocation(line: 3495, column: 17, scope: !10652)
!10672 = !DILocalVariable(name: "path", scope: !10652, file: !3, line: 3496, type: !177)
!10673 = !DILocation(line: 3496, column: 7, scope: !10652)
!10674 = !DILocalVariable(name: "old_filename", scope: !10652, file: !3, line: 3497, type: !6146)
!10675 = !DILocation(line: 3497, column: 7, scope: !10652)
!10676 = !DILocalVariable(name: "new_path_full", scope: !10652, file: !3, line: 3498, type: !6146)
!10677 = !DILocation(line: 3498, column: 7, scope: !10652)
!10678 = !DILocalVariable(name: "old_path_full", scope: !10652, file: !3, line: 3499, type: !6146)
!10679 = !DILocation(line: 3499, column: 7, scope: !10652)
!10680 = !DILocalVariable(name: "ext", scope: !10652, file: !3, line: 3500, type: !177)
!10681 = !DILocation(line: 3500, column: 7, scope: !10652)
!10682 = !DILocation(line: 3503, column: 14, scope: !10652)
!10683 = !DILocation(line: 3503, column: 24, scope: !10652)
!10684 = !DILocation(line: 3503, column: 29, scope: !10652)
!10685 = !DILocation(line: 3503, column: 36, scope: !10652)
!10686 = !DILocation(line: 3503, column: 2, scope: !10652)
!10687 = !DILocation(line: 3506, column: 14, scope: !10652)
!10688 = !DILocation(line: 3506, column: 19, scope: !10652)
!10689 = !DILocation(line: 3506, column: 26, scope: !10652)
!10690 = !DILocation(line: 3506, column: 32, scope: !10652)
!10691 = !DILocation(line: 3506, column: 2, scope: !10652)
!10692 = !DILocation(line: 3508, column: 25, scope: !10652)
!10693 = !DILocation(line: 3508, column: 30, scope: !10652)
!10694 = !DILocation(line: 3508, column: 8, scope: !10652)
!10695 = !DILocation(line: 3508, column: 6, scope: !10652)
!10696 = !DILocation(line: 3510, column: 15, scope: !10652)
!10697 = !DILocation(line: 3510, column: 20, scope: !10652)
!10698 = !DILocation(line: 3510, column: 2, scope: !10652)
!10699 = !DILocation(line: 3511, column: 16, scope: !10652)
!10700 = !DILocation(line: 3511, column: 8, scope: !10652)
!10701 = !DILocation(line: 3511, column: 6, scope: !10652)
!10702 = !DILocation(line: 3512, column: 6, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 3512, column: 6)
!10704 = !DILocation(line: 3512, column: 9, scope: !10703)
!10705 = !DILocation(line: 3512, column: 6, scope: !10652)
!10706 = !DILocation(line: 3513, column: 15, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 3512, column: 17)
!10708 = !DILocation(line: 3513, column: 20, scope: !10707)
!10709 = !DILocation(line: 3513, column: 27, scope: !10707)
!10710 = !DILocation(line: 3513, column: 33, scope: !10707)
!10711 = !DILocation(line: 3513, column: 3, scope: !10707)
!10712 = !DILocation(line: 3514, column: 3, scope: !10707)
!10713 = !DILocation(line: 3517, column: 15, scope: !10652)
!10714 = !DILocation(line: 3517, column: 53, scope: !10652)
!10715 = !DILocation(line: 3517, column: 58, scope: !10652)
!10716 = !DILocation(line: 3517, column: 2, scope: !10652)
!10717 = !DILocation(line: 3520, column: 14, scope: !10652)
!10718 = !DILocation(line: 3520, column: 19, scope: !10652)
!10719 = !DILocation(line: 3520, column: 26, scope: !10652)
!10720 = !DILocation(line: 3520, column: 32, scope: !10652)
!10721 = !DILocation(line: 3520, column: 2, scope: !10652)
!10722 = !DILocation(line: 3522, column: 2, scope: !10652)
!10723 = !DILocation(line: 3522, column: 23, scope: !10652)
!10724 = !DILocation(line: 3522, column: 15, scope: !10652)
!10725 = !DILocation(line: 3522, column: 13, scope: !10652)
!10726 = !DILocation(line: 3522, column: 29, scope: !10652)
!10727 = !DILocation(line: 3523, column: 14, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 3523, column: 7)
!10729 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 3522, column: 38)
!10730 = !DILocation(line: 3523, column: 18, scope: !10728)
!10731 = !DILocation(line: 3523, column: 26, scope: !10728)
!10732 = !DILocation(line: 3523, column: 7, scope: !10728)
!10733 = !DILocation(line: 3523, column: 7, scope: !10729)
!10734 = !DILocation(line: 3524, column: 16, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 3524, column: 8)
!10736 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 3523, column: 32)
!10737 = !DILocation(line: 3524, column: 30, scope: !10735)
!10738 = !DILocation(line: 3524, column: 34, scope: !10735)
!10739 = !DILocation(line: 3524, column: 42, scope: !10735)
!10740 = !DILocation(line: 3524, column: 8, scope: !10735)
!10741 = !DILocation(line: 3524, column: 48, scope: !10735)
!10742 = !DILocation(line: 3524, column: 8, scope: !10736)
!10743 = !DILocalVariable(name: "frame", scope: !10744, file: !3, line: 3526, type: !144)
!10744 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 3524, column: 54)
!10745 = !DILocation(line: 3526, column: 9, scope: !10744)
!10746 = !DILocalVariable(name: "len2", scope: !10744, file: !3, line: 3526, type: !144)
!10747 = !DILocation(line: 3526, column: 16, scope: !10744)
!10748 = !DILocation(line: 3526, column: 35, scope: !10744)
!10749 = !DILocation(line: 3526, column: 39, scope: !10744)
!10750 = !DILocation(line: 3526, column: 28, scope: !10744)
!10751 = !DILocation(line: 3526, column: 23, scope: !10744)
!10752 = !DILocalVariable(name: "num", scope: !10744, file: !3, line: 3527, type: !663)
!10753 = !DILocation(line: 3527, column: 10, scope: !10744)
!10754 = !DILocation(line: 3529, column: 9, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 3529, column: 9)
!10756 = !DILocation(line: 3529, column: 14, scope: !10755)
!10757 = !DILocation(line: 3529, column: 9, scope: !10744)
!10758 = !DILocation(line: 3530, column: 18, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 3529, column: 20)
!10760 = !DILocation(line: 3530, column: 23, scope: !10759)
!10761 = !DILocation(line: 3530, column: 27, scope: !10759)
!10762 = !DILocation(line: 3530, column: 44, scope: !10759)
!10763 = !DILocation(line: 3530, column: 48, scope: !10759)
!10764 = !DILocation(line: 3530, column: 37, scope: !10759)
!10765 = !DILocation(line: 3530, column: 56, scope: !10759)
!10766 = !DILocation(line: 3530, column: 34, scope: !10759)
!10767 = !DILocation(line: 3530, column: 6, scope: !10759)
!10768 = !DILocation(line: 3531, column: 19, scope: !10759)
!10769 = !DILocation(line: 3531, column: 14, scope: !10759)
!10770 = !DILocation(line: 3531, column: 12, scope: !10759)
!10771 = !DILocation(line: 3533, column: 23, scope: !10759)
!10772 = !DILocation(line: 3533, column: 61, scope: !10759)
!10773 = !DILocation(line: 3533, column: 67, scope: !10759)
!10774 = !DILocation(line: 3533, column: 71, scope: !10759)
!10775 = !DILocation(line: 3533, column: 6, scope: !10759)
!10776 = !DILocation(line: 3534, column: 23, scope: !10759)
!10777 = !DILocation(line: 3534, column: 28, scope: !10759)
!10778 = !DILocation(line: 3534, column: 43, scope: !10759)
!10779 = !DILocation(line: 3534, column: 6, scope: !10759)
!10780 = !DILocation(line: 3535, column: 17, scope: !10759)
!10781 = !DILocation(line: 3535, column: 32, scope: !10759)
!10782 = !DILocation(line: 3535, column: 6, scope: !10759)
!10783 = !DILocation(line: 3536, column: 5, scope: !10759)
!10784 = !DILocation(line: 3537, column: 4, scope: !10744)
!10785 = !DILocation(line: 3538, column: 3, scope: !10736)
!10786 = distinct !{!10786, !10722, !10787}
!10787 = !DILocation(line: 3539, column: 2, scope: !10652)
!10788 = !DILocation(line: 3540, column: 11, scope: !10652)
!10789 = !DILocation(line: 3540, column: 2, scope: !10652)
!10790 = !DILocation(line: 3542, column: 14, scope: !10652)
!10791 = !DILocation(line: 3542, column: 19, scope: !10652)
!10792 = !DILocation(line: 3542, column: 26, scope: !10652)
!10793 = !DILocation(line: 3542, column: 32, scope: !10652)
!10794 = !DILocation(line: 3542, column: 2, scope: !10652)
!10795 = !DILocation(line: 3543, column: 1, scope: !10652)
!10796 = distinct !DISubprogram(name: "BKE_ptcache_load_external", scope: !3, file: !3, line: 3545, type: !7598, scopeLine: 3546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!10797 = !DILocalVariable(name: "pid", arg: 1, scope: !10796, file: !3, line: 3545, type: !2797)
!10798 = !DILocation(line: 3545, column: 43, scope: !10796)
!10799 = !DILocalVariable(name: "cache", scope: !10796, file: !3, line: 3548, type: !7069)
!10800 = !DILocation(line: 3548, column: 14, scope: !10796)
!10801 = !DILocation(line: 3548, column: 22, scope: !10796)
!10802 = !DILocation(line: 3548, column: 27, scope: !10796)
!10803 = !DILocalVariable(name: "len", scope: !10796, file: !3, line: 3549, type: !144)
!10804 = !DILocation(line: 3549, column: 6, scope: !10796)
!10805 = !DILocalVariable(name: "info", scope: !10796, file: !3, line: 3550, type: !144)
!10806 = !DILocation(line: 3550, column: 6, scope: !10796)
!10807 = !DILocalVariable(name: "start", scope: !10796, file: !3, line: 3551, type: !144)
!10808 = !DILocation(line: 3551, column: 6, scope: !10796)
!10809 = !DILocalVariable(name: "end", scope: !10796, file: !3, line: 3552, type: !144)
!10810 = !DILocation(line: 3552, column: 6, scope: !10796)
!10811 = !DILocalVariable(name: "dir", scope: !10796, file: !3, line: 3555, type: !6641)
!10812 = !DILocation(line: 3555, column: 7, scope: !10796)
!10813 = !DILocalVariable(name: "de", scope: !10796, file: !3, line: 3556, type: !6647)
!10814 = !DILocation(line: 3556, column: 17, scope: !10796)
!10815 = !DILocalVariable(name: "path", scope: !10796, file: !3, line: 3557, type: !177)
!10816 = !DILocation(line: 3557, column: 7, scope: !10796)
!10817 = !DILocalVariable(name: "filename", scope: !10796, file: !3, line: 3558, type: !6146)
!10818 = !DILocation(line: 3558, column: 7, scope: !10796)
!10819 = !DILocalVariable(name: "ext", scope: !10796, file: !3, line: 3559, type: !177)
!10820 = !DILocation(line: 3559, column: 7, scope: !10796)
!10821 = !DILocation(line: 3561, column: 7, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3561, column: 6)
!10823 = !DILocation(line: 3561, column: 6, scope: !10796)
!10824 = !DILocation(line: 3562, column: 3, scope: !10822)
!10825 = !DILocation(line: 3564, column: 15, scope: !10796)
!10826 = !DILocation(line: 3564, column: 20, scope: !10796)
!10827 = !DILocation(line: 3564, column: 2, scope: !10796)
!10828 = !DILocation(line: 3566, column: 25, scope: !10796)
!10829 = !DILocation(line: 3566, column: 30, scope: !10796)
!10830 = !DILocation(line: 3566, column: 8, scope: !10796)
!10831 = !DILocation(line: 3566, column: 6, scope: !10796)
!10832 = !DILocation(line: 3568, column: 16, scope: !10796)
!10833 = !DILocation(line: 3568, column: 8, scope: !10796)
!10834 = !DILocation(line: 3568, column: 6, scope: !10796)
!10835 = !DILocation(line: 3569, column: 6, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3569, column: 6)
!10837 = !DILocation(line: 3569, column: 9, scope: !10836)
!10838 = !DILocation(line: 3569, column: 6, scope: !10796)
!10839 = !DILocation(line: 3570, column: 3, scope: !10836)
!10840 = !DILocation(line: 3572, column: 6, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3572, column: 6)
!10842 = !DILocation(line: 3572, column: 13, scope: !10841)
!10843 = !DILocation(line: 3572, column: 19, scope: !10841)
!10844 = !DILocation(line: 3572, column: 6, scope: !10796)
!10845 = !DILocation(line: 3573, column: 16, scope: !10841)
!10846 = !DILocation(line: 3573, column: 54, scope: !10841)
!10847 = !DILocation(line: 3573, column: 61, scope: !10841)
!10848 = !DILocation(line: 3573, column: 3, scope: !10841)
!10849 = !DILocation(line: 3575, column: 15, scope: !10841)
!10850 = !DILocation(line: 3575, column: 3, scope: !10841)
!10851 = !DILocation(line: 3577, column: 2, scope: !10796)
!10852 = !DILocation(line: 3577, column: 23, scope: !10796)
!10853 = !DILocation(line: 3577, column: 15, scope: !10796)
!10854 = !DILocation(line: 3577, column: 13, scope: !10796)
!10855 = !DILocation(line: 3577, column: 29, scope: !10796)
!10856 = !DILocation(line: 3578, column: 14, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 3578, column: 7)
!10858 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3577, column: 38)
!10859 = !DILocation(line: 3578, column: 18, scope: !10857)
!10860 = !DILocation(line: 3578, column: 26, scope: !10857)
!10861 = !DILocation(line: 3578, column: 7, scope: !10857)
!10862 = !DILocation(line: 3578, column: 7, scope: !10858)
!10863 = !DILocation(line: 3579, column: 16, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 3579, column: 8)
!10865 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 3578, column: 32)
!10866 = !DILocation(line: 3579, column: 26, scope: !10864)
!10867 = !DILocation(line: 3579, column: 30, scope: !10864)
!10868 = !DILocation(line: 3579, column: 38, scope: !10864)
!10869 = !DILocation(line: 3579, column: 8, scope: !10864)
!10870 = !DILocation(line: 3579, column: 44, scope: !10864)
!10871 = !DILocation(line: 3579, column: 8, scope: !10865)
!10872 = !DILocalVariable(name: "frame", scope: !10873, file: !3, line: 3581, type: !144)
!10873 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3579, column: 50)
!10874 = !DILocation(line: 3581, column: 9, scope: !10873)
!10875 = !DILocalVariable(name: "len2", scope: !10873, file: !3, line: 3581, type: !144)
!10876 = !DILocation(line: 3581, column: 16, scope: !10873)
!10877 = !DILocation(line: 3581, column: 35, scope: !10873)
!10878 = !DILocation(line: 3581, column: 39, scope: !10873)
!10879 = !DILocation(line: 3581, column: 28, scope: !10873)
!10880 = !DILocation(line: 3581, column: 23, scope: !10873)
!10881 = !DILocalVariable(name: "num", scope: !10873, file: !3, line: 3582, type: !663)
!10882 = !DILocation(line: 3582, column: 10, scope: !10873)
!10883 = !DILocation(line: 3584, column: 9, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 3584, column: 9)
!10885 = !DILocation(line: 3584, column: 14, scope: !10884)
!10886 = !DILocation(line: 3584, column: 9, scope: !10873)
!10887 = !DILocation(line: 3585, column: 18, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 3584, column: 20)
!10889 = !DILocation(line: 3585, column: 23, scope: !10888)
!10890 = !DILocation(line: 3585, column: 27, scope: !10888)
!10891 = !DILocation(line: 3585, column: 44, scope: !10888)
!10892 = !DILocation(line: 3585, column: 48, scope: !10888)
!10893 = !DILocation(line: 3585, column: 37, scope: !10888)
!10894 = !DILocation(line: 3585, column: 56, scope: !10888)
!10895 = !DILocation(line: 3585, column: 34, scope: !10888)
!10896 = !DILocation(line: 3585, column: 6, scope: !10888)
!10897 = !DILocation(line: 3586, column: 19, scope: !10888)
!10898 = !DILocation(line: 3586, column: 14, scope: !10888)
!10899 = !DILocation(line: 3586, column: 12, scope: !10888)
!10900 = !DILocation(line: 3588, column: 10, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 3588, column: 10)
!10902 = !DILocation(line: 3588, column: 10, scope: !10888)
!10903 = !DILocation(line: 3589, column: 15, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 3588, column: 17)
!10905 = !DILocation(line: 3589, column: 13, scope: !10904)
!10906 = !DILocation(line: 3590, column: 13, scope: !10904)
!10907 = !DILocation(line: 3590, column: 11, scope: !10904)
!10908 = !DILocation(line: 3591, column: 6, scope: !10904)
!10909 = !DILocation(line: 3593, column: 12, scope: !10901)
!10910 = !DILocation(line: 3594, column: 5, scope: !10888)
!10911 = !DILocation(line: 3595, column: 4, scope: !10873)
!10912 = !DILocation(line: 3596, column: 3, scope: !10865)
!10913 = distinct !{!10913, !10851, !10914}
!10914 = !DILocation(line: 3597, column: 2, scope: !10796)
!10915 = !DILocation(line: 3598, column: 11, scope: !10796)
!10916 = !DILocation(line: 3598, column: 2, scope: !10796)
!10917 = !DILocation(line: 3600, column: 6, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3600, column: 6)
!10919 = !DILocation(line: 3600, column: 12, scope: !10918)
!10920 = !DILocation(line: 3600, column: 6, scope: !10796)
!10921 = !DILocalVariable(name: "pf", scope: !10922, file: !3, line: 3601, type: !1087)
!10922 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 3600, column: 25)
!10923 = !DILocation(line: 3601, column: 16, scope: !10922)
!10924 = !DILocation(line: 3603, column: 23, scope: !10922)
!10925 = !DILocation(line: 3603, column: 3, scope: !10922)
!10926 = !DILocation(line: 3603, column: 10, scope: !10922)
!10927 = !DILocation(line: 3603, column: 21, scope: !10922)
!10928 = !DILocation(line: 3604, column: 21, scope: !10922)
!10929 = !DILocation(line: 3604, column: 3, scope: !10922)
!10930 = !DILocation(line: 3604, column: 10, scope: !10922)
!10931 = !DILocation(line: 3604, column: 19, scope: !10922)
!10932 = !DILocation(line: 3605, column: 3, scope: !10922)
!10933 = !DILocation(line: 3605, column: 10, scope: !10922)
!10934 = !DILocation(line: 3605, column: 19, scope: !10922)
!10935 = !DILocation(line: 3607, column: 7, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 3607, column: 7)
!10937 = !DILocation(line: 3607, column: 12, scope: !10936)
!10938 = !DILocation(line: 3607, column: 17, scope: !10936)
!10939 = !DILocation(line: 3607, column: 7, scope: !10922)
!10940 = !DILocation(line: 3609, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3607, column: 47)
!10942 = !DILocation(line: 3611, column: 12, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 3611, column: 12)
!10944 = !DILocation(line: 3611, column: 12, scope: !10936)
!10945 = !DILocation(line: 3612, column: 26, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 3611, column: 18)
!10947 = !DILocation(line: 3612, column: 8, scope: !10946)
!10948 = !DILocation(line: 3612, column: 6, scope: !10946)
!10949 = !DILocation(line: 3614, column: 8, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3614, column: 8)
!10951 = !DILocation(line: 3614, column: 8, scope: !10946)
!10952 = !DILocation(line: 3615, column: 40, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 3615, column: 9)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 3614, column: 12)
!10955 = !DILocation(line: 3615, column: 9, scope: !10953)
!10956 = !DILocation(line: 3615, column: 9, scope: !10954)
!10957 = !DILocation(line: 3616, column: 10, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3616, column: 10)
!10959 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3615, column: 45)
!10960 = !DILocation(line: 3616, column: 14, scope: !10958)
!10961 = !DILocation(line: 3616, column: 22, scope: !10958)
!10962 = !DILocation(line: 3616, column: 27, scope: !10958)
!10963 = !DILocation(line: 3616, column: 19, scope: !10958)
!10964 = !DILocation(line: 3616, column: 32, scope: !10958)
!10965 = !DILocation(line: 3616, column: 35, scope: !10958)
!10966 = !DILocation(line: 3616, column: 40, scope: !10958)
!10967 = !DILocation(line: 3616, column: 52, scope: !10958)
!10968 = !DILocation(line: 3616, column: 10, scope: !10959)
!10969 = !DILocation(line: 3617, column: 25, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 3616, column: 57)
!10971 = !DILocation(line: 3617, column: 29, scope: !10970)
!10972 = !DILocation(line: 3617, column: 7, scope: !10970)
!10973 = !DILocation(line: 3617, column: 14, scope: !10970)
!10974 = !DILocation(line: 3617, column: 23, scope: !10970)
!10975 = !DILocation(line: 3618, column: 7, scope: !10970)
!10976 = !DILocation(line: 3618, column: 14, scope: !10970)
!10977 = !DILocation(line: 3618, column: 19, scope: !10970)
!10978 = !DILocation(line: 3619, column: 6, scope: !10970)
!10979 = !DILocation(line: 3621, column: 7, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 3620, column: 11)
!10981 = !DILocation(line: 3621, column: 14, scope: !10980)
!10982 = !DILocation(line: 3621, column: 23, scope: !10980)
!10983 = !DILocation(line: 3623, column: 5, scope: !10959)
!10984 = !DILocation(line: 3624, column: 24, scope: !10954)
!10985 = !DILocation(line: 3624, column: 5, scope: !10954)
!10986 = !DILocation(line: 3625, column: 4, scope: !10954)
!10987 = !DILocation(line: 3626, column: 3, scope: !10946)
!10988 = !DILocalVariable(name: "old_data", scope: !10989, file: !3, line: 3629, type: !1281)
!10989 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 3628, column: 8)
!10990 = !DILocation(line: 3629, column: 10, scope: !10989)
!10991 = !DILocalVariable(name: "elemsize", scope: !10989, file: !3, line: 3630, type: !144)
!10992 = !DILocation(line: 3630, column: 8, scope: !10989)
!10993 = !DILocation(line: 3630, column: 40, scope: !10989)
!10994 = !DILocation(line: 3630, column: 19, scope: !10989)
!10995 = !DILocation(line: 3631, column: 26, scope: !10989)
!10996 = !DILocation(line: 3631, column: 50, scope: !10989)
!10997 = !DILocation(line: 3631, column: 57, scope: !10989)
!10998 = !DILocation(line: 3631, column: 8, scope: !10989)
!10999 = !DILocation(line: 3631, column: 6, scope: !10989)
!11000 = !DILocation(line: 3633, column: 8, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 3633, column: 8)
!11002 = !DILocation(line: 3633, column: 8, scope: !10989)
!11003 = !DILocation(line: 3634, column: 5, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 3633, column: 12)
!11005 = !DILocation(line: 3634, column: 30, scope: !11004)
!11006 = !DILocation(line: 3634, column: 34, scope: !11004)
!11007 = !DILocation(line: 3634, column: 47, scope: !11004)
!11008 = !DILocation(line: 3634, column: 12, scope: !11004)
!11009 = !DILocation(line: 3635, column: 6, scope: !11004)
!11010 = !DILocation(line: 3635, column: 13, scope: !11004)
!11011 = !DILocation(line: 3635, column: 21, scope: !11004)
!11012 = distinct !{!11012, !11003, !11011}
!11013 = !DILocation(line: 3637, column: 24, scope: !11004)
!11014 = !DILocation(line: 3637, column: 5, scope: !11004)
!11015 = !DILocation(line: 3638, column: 4, scope: !11004)
!11016 = !DILocation(line: 3640, column: 3, scope: !10922)
!11017 = !DILocation(line: 3640, column: 10, scope: !10922)
!11018 = !DILocation(line: 3640, column: 15, scope: !10922)
!11019 = !DILocation(line: 3641, column: 3, scope: !10922)
!11020 = !DILocation(line: 3641, column: 10, scope: !10922)
!11021 = !DILocation(line: 3641, column: 15, scope: !10922)
!11022 = !DILocation(line: 3642, column: 2, scope: !10922)
!11023 = !DILocation(line: 3645, column: 6, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 3645, column: 6)
!11025 = !DILocation(line: 3645, column: 13, scope: !11024)
!11026 = !DILocation(line: 3645, column: 6, scope: !10796)
!11027 = !DILocation(line: 3646, column: 3, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 3645, column: 28)
!11029 = !DILocation(line: 3646, column: 13, scope: !11028)
!11030 = !DILocation(line: 3646, column: 20, scope: !11028)
!11031 = !DILocation(line: 3647, column: 3, scope: !11028)
!11032 = !DILocation(line: 3647, column: 10, scope: !11028)
!11033 = !DILocation(line: 3647, column: 23, scope: !11028)
!11034 = !DILocation(line: 3648, column: 2, scope: !11028)
!11035 = !DILocation(line: 3649, column: 26, scope: !10796)
!11036 = !DILocation(line: 3649, column: 2, scope: !10796)
!11037 = !DILocation(line: 3650, column: 1, scope: !10796)
!11038 = distinct !DISubprogram(name: "ptcache_file_open", scope: !3, file: !3, line: 1525, type: !11039, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!1087, !2797, !144, !144}
!11041 = !DILocalVariable(name: "pid", arg: 1, scope: !11038, file: !3, line: 1525, type: !2797)
!11042 = !DILocation(line: 1525, column: 50, scope: !11038)
!11043 = !DILocalVariable(name: "mode", arg: 2, scope: !11038, file: !3, line: 1525, type: !144)
!11044 = !DILocation(line: 1525, column: 59, scope: !11038)
!11045 = !DILocalVariable(name: "cfra", arg: 3, scope: !11038, file: !3, line: 1525, type: !144)
!11046 = !DILocation(line: 1525, column: 69, scope: !11038)
!11047 = !DILocalVariable(name: "pf", scope: !11038, file: !3, line: 1527, type: !1087)
!11048 = !DILocation(line: 1527, column: 15, scope: !11038)
!11049 = !DILocalVariable(name: "fp", scope: !11038, file: !3, line: 1528, type: !1092)
!11050 = !DILocation(line: 1528, column: 8, scope: !11038)
!11051 = !DILocalVariable(name: "filename", scope: !11038, file: !3, line: 1529, type: !6146)
!11052 = !DILocation(line: 1529, column: 7, scope: !11038)
!11053 = !DILocation(line: 1536, column: 9, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 1536, column: 6)
!11055 = !DILocation(line: 1536, column: 7, scope: !11054)
!11056 = !DILocation(line: 1536, column: 23, scope: !11054)
!11057 = !DILocation(line: 1536, column: 27, scope: !11054)
!11058 = !DILocation(line: 1536, column: 32, scope: !11054)
!11059 = !DILocation(line: 1536, column: 39, scope: !11054)
!11060 = !DILocation(line: 1536, column: 44, scope: !11054)
!11061 = !DILocation(line: 1536, column: 63, scope: !11054)
!11062 = !DILocation(line: 1536, column: 6, scope: !11038)
!11063 = !DILocation(line: 1536, column: 68, scope: !11054)
!11064 = !DILocation(line: 1538, column: 19, scope: !11038)
!11065 = !DILocation(line: 1538, column: 24, scope: !11038)
!11066 = !DILocation(line: 1538, column: 34, scope: !11038)
!11067 = !DILocation(line: 1538, column: 2, scope: !11038)
!11068 = !DILocation(line: 1540, column: 6, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 1540, column: 6)
!11070 = !DILocation(line: 1540, column: 10, scope: !11069)
!11071 = !DILocation(line: 1540, column: 6, scope: !11038)
!11072 = !DILocation(line: 1541, column: 19, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 1541, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 1540, column: 31)
!11075 = !DILocation(line: 1541, column: 8, scope: !11073)
!11076 = !DILocation(line: 1541, column: 7, scope: !11074)
!11077 = !DILocation(line: 1542, column: 4, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 1541, column: 30)
!11079 = !DILocation(line: 1544, column: 18, scope: !11074)
!11080 = !DILocation(line: 1544, column: 8, scope: !11074)
!11081 = !DILocation(line: 1544, column: 6, scope: !11074)
!11082 = !DILocation(line: 1545, column: 2, scope: !11074)
!11083 = !DILocation(line: 1546, column: 11, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 1546, column: 11)
!11085 = !DILocation(line: 1546, column: 15, scope: !11084)
!11086 = !DILocation(line: 1546, column: 11, scope: !11069)
!11087 = !DILocation(line: 1547, column: 26, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 1546, column: 37)
!11089 = !DILocation(line: 1547, column: 3, scope: !11088)
!11090 = !DILocation(line: 1548, column: 18, scope: !11088)
!11091 = !DILocation(line: 1548, column: 8, scope: !11088)
!11092 = !DILocation(line: 1548, column: 6, scope: !11088)
!11093 = !DILocation(line: 1549, column: 2, scope: !11088)
!11094 = !DILocation(line: 1550, column: 11, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 1550, column: 11)
!11096 = !DILocation(line: 1550, column: 15, scope: !11095)
!11097 = !DILocation(line: 1550, column: 11, scope: !11084)
!11098 = !DILocation(line: 1551, column: 26, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 1550, column: 38)
!11100 = !DILocation(line: 1551, column: 3, scope: !11099)
!11101 = !DILocation(line: 1552, column: 18, scope: !11099)
!11102 = !DILocation(line: 1552, column: 8, scope: !11099)
!11103 = !DILocation(line: 1552, column: 6, scope: !11099)
!11104 = !DILocation(line: 1553, column: 2, scope: !11099)
!11105 = !DILocation(line: 1555, column: 7, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 1555, column: 6)
!11107 = !DILocation(line: 1555, column: 6, scope: !11038)
!11108 = !DILocation(line: 1556, column: 3, scope: !11106)
!11109 = !DILocation(line: 1558, column: 6, scope: !11038)
!11110 = !DILocation(line: 1558, column: 4, scope: !11038)
!11111 = !DILocation(line: 1559, column: 10, scope: !11038)
!11112 = !DILocation(line: 1559, column: 2, scope: !11038)
!11113 = !DILocation(line: 1559, column: 6, scope: !11038)
!11114 = !DILocation(line: 1559, column: 8, scope: !11038)
!11115 = !DILocation(line: 1560, column: 2, scope: !11038)
!11116 = !DILocation(line: 1560, column: 6, scope: !11038)
!11117 = !DILocation(line: 1560, column: 17, scope: !11038)
!11118 = !DILocation(line: 1561, column: 14, scope: !11038)
!11119 = !DILocation(line: 1561, column: 2, scope: !11038)
!11120 = !DILocation(line: 1561, column: 6, scope: !11038)
!11121 = !DILocation(line: 1561, column: 12, scope: !11038)
!11122 = !DILocation(line: 1563, column: 9, scope: !11038)
!11123 = !DILocation(line: 1563, column: 2, scope: !11038)
!11124 = !DILocation(line: 1564, column: 1, scope: !11038)
!11125 = distinct !DISubprogram(name: "ptcache_file_header_begin_read", scope: !3, file: !3, line: 1704, type: !1204, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11126 = !DILocalVariable(name: "pf", arg: 1, scope: !11125, file: !3, line: 1704, type: !1087)
!11127 = !DILocation(line: 1704, column: 56, scope: !11125)
!11128 = !DILocalVariable(name: "typeflag", scope: !11125, file: !3, line: 1706, type: !7)
!11129 = !DILocation(line: 1706, column: 15, scope: !11125)
!11130 = !DILocalVariable(name: "error", scope: !11125, file: !3, line: 1707, type: !144)
!11131 = !DILocation(line: 1707, column: 6, scope: !11125)
!11132 = !DILocalVariable(name: "bphysics", scope: !11125, file: !3, line: 1708, type: !1891)
!11133 = !DILocation(line: 1708, column: 7, scope: !11125)
!11134 = !DILocation(line: 1710, column: 2, scope: !11125)
!11135 = !DILocation(line: 1710, column: 6, scope: !11125)
!11136 = !DILocation(line: 1710, column: 17, scope: !11125)
!11137 = !DILocation(line: 1712, column: 12, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 1712, column: 6)
!11139 = !DILocation(line: 1712, column: 39, scope: !11138)
!11140 = !DILocation(line: 1712, column: 43, scope: !11138)
!11141 = !DILocation(line: 1712, column: 6, scope: !11138)
!11142 = !DILocation(line: 1712, column: 47, scope: !11138)
!11143 = !DILocation(line: 1712, column: 6, scope: !11125)
!11144 = !DILocation(line: 1713, column: 9, scope: !11138)
!11145 = !DILocation(line: 1713, column: 3, scope: !11138)
!11146 = !DILocation(line: 1715, column: 7, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 1715, column: 6)
!11148 = !DILocation(line: 1715, column: 13, scope: !11147)
!11149 = !DILocation(line: 1715, column: 24, scope: !11147)
!11150 = !DILocation(line: 1715, column: 16, scope: !11147)
!11151 = !DILocation(line: 1715, column: 6, scope: !11125)
!11152 = !DILocation(line: 1716, column: 9, scope: !11147)
!11153 = !DILocation(line: 1716, column: 3, scope: !11147)
!11154 = !DILocation(line: 1718, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 1718, column: 6)
!11156 = !DILocation(line: 1718, column: 13, scope: !11155)
!11157 = !DILocation(line: 1718, column: 23, scope: !11155)
!11158 = !DILocation(line: 1718, column: 59, scope: !11155)
!11159 = !DILocation(line: 1718, column: 63, scope: !11155)
!11160 = !DILocation(line: 1718, column: 17, scope: !11155)
!11161 = !DILocation(line: 1718, column: 6, scope: !11125)
!11162 = !DILocation(line: 1719, column: 9, scope: !11155)
!11163 = !DILocation(line: 1719, column: 3, scope: !11155)
!11164 = !DILocation(line: 1721, column: 14, scope: !11125)
!11165 = !DILocation(line: 1721, column: 23, scope: !11125)
!11166 = !DILocation(line: 1721, column: 2, scope: !11125)
!11167 = !DILocation(line: 1721, column: 6, scope: !11125)
!11168 = !DILocation(line: 1721, column: 11, scope: !11125)
!11169 = !DILocation(line: 1722, column: 14, scope: !11125)
!11170 = !DILocation(line: 1722, column: 23, scope: !11125)
!11171 = !DILocation(line: 1722, column: 2, scope: !11125)
!11172 = !DILocation(line: 1722, column: 6, scope: !11125)
!11173 = !DILocation(line: 1722, column: 11, scope: !11125)
!11174 = !DILocation(line: 1725, column: 6, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 1725, column: 6)
!11176 = !DILocation(line: 1725, column: 6, scope: !11125)
!11177 = !DILocation(line: 1726, column: 9, scope: !11175)
!11178 = !DILocation(line: 1726, column: 13, scope: !11175)
!11179 = !DILocation(line: 1726, column: 3, scope: !11175)
!11180 = !DILocation(line: 1728, column: 10, scope: !11125)
!11181 = !DILocation(line: 1728, column: 9, scope: !11125)
!11182 = !DILocation(line: 1728, column: 2, scope: !11125)
!11183 = distinct !DISubprogram(name: "ptcache_file_close", scope: !3, file: !3, line: 1565, type: !11184, scopeLine: 1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11184 = !DISubroutineType(types: !11185)
!11185 = !{null, !1087}
!11186 = !DILocalVariable(name: "pf", arg: 1, scope: !11183, file: !3, line: 1565, type: !1087)
!11187 = !DILocation(line: 1565, column: 45, scope: !11183)
!11188 = !DILocation(line: 1567, column: 6, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 1567, column: 6)
!11190 = !DILocation(line: 1567, column: 6, scope: !11183)
!11191 = !DILocation(line: 1568, column: 10, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 1567, column: 10)
!11193 = !DILocation(line: 1568, column: 14, scope: !11192)
!11194 = !DILocation(line: 1568, column: 3, scope: !11192)
!11195 = !DILocation(line: 1569, column: 3, scope: !11192)
!11196 = !DILocation(line: 1569, column: 13, scope: !11192)
!11197 = !DILocation(line: 1570, column: 2, scope: !11192)
!11198 = !DILocation(line: 1571, column: 1, scope: !11183)
!11199 = distinct !DISubprogram(name: "ptcache_old_elemsize", scope: !3, file: !3, line: 1878, type: !11200, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!144, !2797}
!11202 = !DILocalVariable(name: "pid", arg: 1, scope: !11199, file: !3, line: 1878, type: !2797)
!11203 = !DILocation(line: 1878, column: 44, scope: !11199)
!11204 = !DILocation(line: 1880, column: 6, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 1880, column: 6)
!11206 = !DILocation(line: 1880, column: 11, scope: !11205)
!11207 = !DILocation(line: 1880, column: 15, scope: !11205)
!11208 = !DILocation(line: 1880, column: 6, scope: !11199)
!11209 = !DILocation(line: 1881, column: 3, scope: !11205)
!11210 = !DILocation(line: 1882, column: 11, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 1882, column: 11)
!11212 = !DILocation(line: 1882, column: 16, scope: !11211)
!11213 = !DILocation(line: 1882, column: 20, scope: !11211)
!11214 = !DILocation(line: 1882, column: 11, scope: !11205)
!11215 = !DILocation(line: 1883, column: 3, scope: !11211)
!11216 = !DILocation(line: 1884, column: 11, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1884, column: 11)
!11218 = !DILocation(line: 1884, column: 16, scope: !11217)
!11219 = !DILocation(line: 1884, column: 20, scope: !11217)
!11220 = !DILocation(line: 1884, column: 11, scope: !11211)
!11221 = !DILocation(line: 1885, column: 3, scope: !11217)
!11222 = !DILocation(line: 1887, column: 2, scope: !11199)
!11223 = !DILocation(line: 1888, column: 1, scope: !11199)
!11224 = distinct !DISubprogram(name: "ptcache_file_read", scope: !3, file: !3, line: 1674, type: !11225, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11225 = !DISubroutineType(types: !11226)
!11226 = !{!144, !1087, !131, !7, !7}
!11227 = !DILocalVariable(name: "pf", arg: 1, scope: !11224, file: !3, line: 1674, type: !1087)
!11228 = !DILocation(line: 1674, column: 43, scope: !11224)
!11229 = !DILocalVariable(name: "f", arg: 2, scope: !11224, file: !3, line: 1674, type: !131)
!11230 = !DILocation(line: 1674, column: 53, scope: !11224)
!11231 = !DILocalVariable(name: "tot", arg: 3, scope: !11224, file: !3, line: 1674, type: !7)
!11232 = !DILocation(line: 1674, column: 69, scope: !11224)
!11233 = !DILocalVariable(name: "size", arg: 4, scope: !11224, file: !3, line: 1674, type: !7)
!11234 = !DILocation(line: 1674, column: 87, scope: !11224)
!11235 = !DILocation(line: 1676, column: 16, scope: !11224)
!11236 = !DILocation(line: 1676, column: 19, scope: !11224)
!11237 = !DILocation(line: 1676, column: 25, scope: !11224)
!11238 = !DILocation(line: 1676, column: 30, scope: !11224)
!11239 = !DILocation(line: 1676, column: 34, scope: !11224)
!11240 = !DILocation(line: 1676, column: 10, scope: !11224)
!11241 = !DILocation(line: 1676, column: 41, scope: !11224)
!11242 = !DILocation(line: 1676, column: 38, scope: !11224)
!11243 = !DILocation(line: 1676, column: 2, scope: !11224)
!11244 = distinct !DISubprogram(name: "BKE_ptcache_validate", scope: !3, file: !3, line: 3736, type: !11245, scopeLine: 3737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{null, !7069, !144}
!11247 = !DILocalVariable(name: "cache", arg: 1, scope: !11244, file: !3, line: 3736, type: !7069)
!11248 = !DILocation(line: 3736, column: 39, scope: !11244)
!11249 = !DILocalVariable(name: "framenr", arg: 2, scope: !11244, file: !3, line: 3736, type: !144)
!11250 = !DILocation(line: 3736, column: 50, scope: !11244)
!11251 = !DILocation(line: 3738, column: 6, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 3738, column: 6)
!11253 = !DILocation(line: 3738, column: 6, scope: !11244)
!11254 = !DILocation(line: 3739, column: 3, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 3738, column: 13)
!11256 = !DILocation(line: 3739, column: 10, scope: !11255)
!11257 = !DILocation(line: 3739, column: 15, scope: !11255)
!11258 = !DILocation(line: 3740, column: 21, scope: !11255)
!11259 = !DILocation(line: 3740, column: 3, scope: !11255)
!11260 = !DILocation(line: 3740, column: 10, scope: !11255)
!11261 = !DILocation(line: 3740, column: 19, scope: !11255)
!11262 = !DILocation(line: 3741, column: 2, scope: !11255)
!11263 = !DILocation(line: 3742, column: 1, scope: !11244)
!11264 = distinct !DISubprogram(name: "copy_v3_v3", scope: !11265, file: !11265, line: 64, type: !11266, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11265 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11266 = !DISubroutineType(types: !11267)
!11267 = !{null, !745, !11268}
!11268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11269, size: 64)
!11269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!11270 = !DILocalVariable(name: "r", arg: 1, scope: !11264, file: !11265, line: 64, type: !745)
!11271 = !DILocation(line: 64, column: 31, scope: !11264)
!11272 = !DILocalVariable(name: "a", arg: 2, scope: !11264, file: !11265, line: 64, type: !11268)
!11273 = !DILocation(line: 64, column: 49, scope: !11264)
!11274 = !DILocation(line: 66, column: 9, scope: !11264)
!11275 = !DILocation(line: 66, column: 2, scope: !11264)
!11276 = !DILocation(line: 66, column: 7, scope: !11264)
!11277 = !DILocation(line: 67, column: 9, scope: !11264)
!11278 = !DILocation(line: 67, column: 2, scope: !11264)
!11279 = !DILocation(line: 67, column: 7, scope: !11264)
!11280 = !DILocation(line: 68, column: 9, scope: !11264)
!11281 = !DILocation(line: 68, column: 2, scope: !11264)
!11282 = !DILocation(line: 68, column: 7, scope: !11264)
!11283 = !DILocation(line: 69, column: 1, scope: !11264)
!11284 = distinct !DISubprogram(name: "mul_v3_fl", scope: !11265, file: !11265, line: 392, type: !11285, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{null, !745, !256}
!11287 = !DILocalVariable(name: "r", arg: 1, scope: !11284, file: !11265, line: 392, type: !745)
!11288 = !DILocation(line: 392, column: 30, scope: !11284)
!11289 = !DILocalVariable(name: "f", arg: 2, scope: !11284, file: !11265, line: 392, type: !256)
!11290 = !DILocation(line: 392, column: 42, scope: !11284)
!11291 = !DILocation(line: 394, column: 10, scope: !11284)
!11292 = !DILocation(line: 394, column: 2, scope: !11284)
!11293 = !DILocation(line: 394, column: 7, scope: !11284)
!11294 = !DILocation(line: 395, column: 10, scope: !11284)
!11295 = !DILocation(line: 395, column: 2, scope: !11284)
!11296 = !DILocation(line: 395, column: 7, scope: !11284)
!11297 = !DILocation(line: 396, column: 10, scope: !11284)
!11298 = !DILocation(line: 396, column: 2, scope: !11284)
!11299 = !DILocation(line: 396, column: 7, scope: !11284)
!11300 = !DILocation(line: 397, column: 1, scope: !11284)
!11301 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !11265, file: !11265, line: 357, type: !11302, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{null, !745, !11268, !11268}
!11304 = !DILocalVariable(name: "r", arg: 1, scope: !11301, file: !11265, line: 357, type: !745)
!11305 = !DILocation(line: 357, column: 32, scope: !11301)
!11306 = !DILocalVariable(name: "a", arg: 2, scope: !11301, file: !11265, line: 357, type: !11268)
!11307 = !DILocation(line: 357, column: 50, scope: !11301)
!11308 = !DILocalVariable(name: "b", arg: 3, scope: !11301, file: !11265, line: 357, type: !11268)
!11309 = !DILocation(line: 357, column: 68, scope: !11301)
!11310 = !DILocation(line: 359, column: 9, scope: !11301)
!11311 = !DILocation(line: 359, column: 16, scope: !11301)
!11312 = !DILocation(line: 359, column: 14, scope: !11301)
!11313 = !DILocation(line: 359, column: 2, scope: !11301)
!11314 = !DILocation(line: 359, column: 7, scope: !11301)
!11315 = !DILocation(line: 360, column: 9, scope: !11301)
!11316 = !DILocation(line: 360, column: 16, scope: !11301)
!11317 = !DILocation(line: 360, column: 14, scope: !11301)
!11318 = !DILocation(line: 360, column: 2, scope: !11301)
!11319 = !DILocation(line: 360, column: 7, scope: !11301)
!11320 = !DILocation(line: 361, column: 9, scope: !11301)
!11321 = !DILocation(line: 361, column: 16, scope: !11301)
!11322 = !DILocation(line: 361, column: 14, scope: !11301)
!11323 = !DILocation(line: 361, column: 2, scope: !11301)
!11324 = !DILocation(line: 361, column: 7, scope: !11301)
!11325 = !DILocation(line: 362, column: 1, scope: !11301)
!11326 = distinct !DISubprogram(name: "ptcache_file_write", scope: !3, file: !3, line: 1678, type: !11327, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11327 = !DISubroutineType(types: !11328)
!11328 = !{!144, !1087, !11329, !7, !7}
!11329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11330, size: 64)
!11330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11331 = !DILocalVariable(name: "pf", arg: 1, scope: !11326, file: !3, line: 1678, type: !1087)
!11332 = !DILocation(line: 1678, column: 44, scope: !11326)
!11333 = !DILocalVariable(name: "f", arg: 2, scope: !11326, file: !3, line: 1678, type: !11329)
!11334 = !DILocation(line: 1678, column: 60, scope: !11326)
!11335 = !DILocalVariable(name: "tot", arg: 3, scope: !11326, file: !3, line: 1678, type: !7)
!11336 = !DILocation(line: 1678, column: 76, scope: !11326)
!11337 = !DILocalVariable(name: "size", arg: 4, scope: !11326, file: !3, line: 1678, type: !7)
!11338 = !DILocation(line: 1678, column: 94, scope: !11326)
!11339 = !DILocation(line: 1680, column: 17, scope: !11326)
!11340 = !DILocation(line: 1680, column: 20, scope: !11326)
!11341 = !DILocation(line: 1680, column: 26, scope: !11326)
!11342 = !DILocation(line: 1680, column: 31, scope: !11326)
!11343 = !DILocation(line: 1680, column: 35, scope: !11326)
!11344 = !DILocation(line: 1680, column: 10, scope: !11326)
!11345 = !DILocation(line: 1680, column: 42, scope: !11326)
!11346 = !DILocation(line: 1680, column: 39, scope: !11326)
!11347 = !DILocation(line: 1680, column: 2, scope: !11326)
!11348 = distinct !DISubprogram(name: "ptcache_file_compressed_write", scope: !3, file: !3, line: 1620, type: !11349, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!144, !1087, !2657, !7, !2657, !144}
!11351 = !DILocalVariable(name: "pf", arg: 1, scope: !11348, file: !3, line: 1620, type: !1087)
!11352 = !DILocation(line: 1620, column: 55, scope: !11348)
!11353 = !DILocalVariable(name: "in", arg: 2, scope: !11348, file: !3, line: 1620, type: !2657)
!11354 = !DILocation(line: 1620, column: 74, scope: !11348)
!11355 = !DILocalVariable(name: "in_len", arg: 3, scope: !11348, file: !3, line: 1620, type: !7)
!11356 = !DILocation(line: 1620, column: 91, scope: !11348)
!11357 = !DILocalVariable(name: "out", arg: 4, scope: !11348, file: !3, line: 1620, type: !2657)
!11358 = !DILocation(line: 1620, column: 114, scope: !11348)
!11359 = !DILocalVariable(name: "mode", arg: 5, scope: !11348, file: !3, line: 1620, type: !144)
!11360 = !DILocation(line: 1620, column: 123, scope: !11348)
!11361 = !DILocalVariable(name: "r", scope: !11348, file: !3, line: 1622, type: !144)
!11362 = !DILocation(line: 1622, column: 6, scope: !11348)
!11363 = !DILocalVariable(name: "compressed", scope: !11348, file: !3, line: 1623, type: !1610)
!11364 = !DILocation(line: 1623, column: 16, scope: !11348)
!11365 = !DILocalVariable(name: "out_len", scope: !11348, file: !3, line: 1624, type: !1139)
!11366 = !DILocation(line: 1624, column: 9, scope: !11348)
!11367 = !DILocalVariable(name: "props", scope: !11348, file: !3, line: 1625, type: !2657)
!11368 = !DILocation(line: 1625, column: 17, scope: !11348)
!11369 = !DILocation(line: 1625, column: 25, scope: !11348)
!11370 = !DILocalVariable(name: "sizeOfIt", scope: !11348, file: !3, line: 1626, type: !1139)
!11371 = !DILocation(line: 1626, column: 9, scope: !11348)
!11372 = !DILocation(line: 1628, column: 8, scope: !11348)
!11373 = !DILocation(line: 1655, column: 21, scope: !11348)
!11374 = !DILocation(line: 1655, column: 2, scope: !11348)
!11375 = !DILocation(line: 1656, column: 6, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 1656, column: 6)
!11377 = !DILocation(line: 1656, column: 6, scope: !11348)
!11378 = !DILocalVariable(name: "size", scope: !11379, file: !3, line: 1657, type: !7)
!11379 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1656, column: 18)
!11380 = !DILocation(line: 1657, column: 16, scope: !11379)
!11381 = !DILocation(line: 1657, column: 23, scope: !11379)
!11382 = !DILocation(line: 1658, column: 22, scope: !11379)
!11383 = !DILocation(line: 1658, column: 26, scope: !11379)
!11384 = !DILocation(line: 1658, column: 3, scope: !11379)
!11385 = !DILocation(line: 1659, column: 22, scope: !11379)
!11386 = !DILocation(line: 1659, column: 26, scope: !11379)
!11387 = !DILocation(line: 1659, column: 31, scope: !11379)
!11388 = !DILocation(line: 1659, column: 3, scope: !11379)
!11389 = !DILocation(line: 1660, column: 2, scope: !11379)
!11390 = !DILocation(line: 1662, column: 22, scope: !11376)
!11391 = !DILocation(line: 1662, column: 26, scope: !11376)
!11392 = !DILocation(line: 1662, column: 30, scope: !11376)
!11393 = !DILocation(line: 1662, column: 3, scope: !11376)
!11394 = !DILocation(line: 1664, column: 6, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 1664, column: 6)
!11396 = !DILocation(line: 1664, column: 17, scope: !11395)
!11397 = !DILocation(line: 1664, column: 6, scope: !11348)
!11398 = !DILocalVariable(name: "size", scope: !11399, file: !3, line: 1665, type: !7)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1664, column: 23)
!11400 = !DILocation(line: 1665, column: 16, scope: !11399)
!11401 = !DILocation(line: 1665, column: 23, scope: !11399)
!11402 = !DILocation(line: 1666, column: 22, scope: !11399)
!11403 = !DILocation(line: 1666, column: 26, scope: !11399)
!11404 = !DILocation(line: 1666, column: 3, scope: !11399)
!11405 = !DILocation(line: 1667, column: 22, scope: !11399)
!11406 = !DILocation(line: 1667, column: 26, scope: !11399)
!11407 = !DILocation(line: 1667, column: 33, scope: !11399)
!11408 = !DILocation(line: 1667, column: 3, scope: !11399)
!11409 = !DILocation(line: 1668, column: 2, scope: !11399)
!11410 = !DILocation(line: 1670, column: 2, scope: !11348)
!11411 = !DILocation(line: 1670, column: 12, scope: !11348)
!11412 = !DILocation(line: 1672, column: 9, scope: !11348)
!11413 = !DILocation(line: 1672, column: 2, scope: !11348)
!11414 = distinct !DISubprogram(name: "ptcache_file_compressed_read", scope: !3, file: !3, line: 1573, type: !11415, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11415 = !DISubroutineType(types: !11416)
!11416 = !{!144, !1087, !2657, !7}
!11417 = !DILocalVariable(name: "pf", arg: 1, scope: !11414, file: !3, line: 1573, type: !1087)
!11418 = !DILocation(line: 1573, column: 54, scope: !11414)
!11419 = !DILocalVariable(name: "result", arg: 2, scope: !11414, file: !3, line: 1573, type: !2657)
!11420 = !DILocation(line: 1573, column: 73, scope: !11414)
!11421 = !DILocalVariable(name: "len", arg: 3, scope: !11414, file: !3, line: 1573, type: !7)
!11422 = !DILocation(line: 1573, column: 94, scope: !11414)
!11423 = !DILocalVariable(name: "r", scope: !11414, file: !3, line: 1575, type: !144)
!11424 = !DILocation(line: 1575, column: 6, scope: !11414)
!11425 = !DILocalVariable(name: "compressed", scope: !11414, file: !3, line: 1576, type: !1610)
!11426 = !DILocation(line: 1576, column: 16, scope: !11414)
!11427 = !DILocalVariable(name: "in_len", scope: !11414, file: !3, line: 1577, type: !1139)
!11428 = !DILocation(line: 1577, column: 9, scope: !11414)
!11429 = !DILocalVariable(name: "in", scope: !11414, file: !3, line: 1581, type: !2657)
!11430 = !DILocation(line: 1581, column: 17, scope: !11414)
!11431 = !DILocalVariable(name: "props", scope: !11414, file: !3, line: 1582, type: !2657)
!11432 = !DILocation(line: 1582, column: 17, scope: !11414)
!11433 = !DILocation(line: 1582, column: 25, scope: !11414)
!11434 = !DILocation(line: 1584, column: 20, scope: !11414)
!11435 = !DILocation(line: 1584, column: 2, scope: !11414)
!11436 = !DILocation(line: 1585, column: 6, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 1585, column: 6)
!11438 = !DILocation(line: 1585, column: 6, scope: !11414)
!11439 = !DILocalVariable(name: "size", scope: !11440, file: !3, line: 1586, type: !7)
!11440 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 1585, column: 18)
!11441 = !DILocation(line: 1586, column: 16, scope: !11440)
!11442 = !DILocation(line: 1587, column: 21, scope: !11440)
!11443 = !DILocation(line: 1587, column: 25, scope: !11440)
!11444 = !DILocation(line: 1587, column: 3, scope: !11440)
!11445 = !DILocation(line: 1588, column: 20, scope: !11440)
!11446 = !DILocation(line: 1588, column: 12, scope: !11440)
!11447 = !DILocation(line: 1588, column: 10, scope: !11440)
!11448 = !DILocation(line: 1589, column: 7, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 1589, column: 7)
!11450 = !DILocation(line: 1589, column: 13, scope: !11449)
!11451 = !DILocation(line: 1589, column: 7, scope: !11440)
!11452 = !DILocation(line: 1591, column: 3, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 1589, column: 18)
!11454 = !DILocation(line: 1593, column: 26, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 1592, column: 8)
!11456 = !DILocation(line: 1593, column: 60, scope: !11455)
!11457 = !DILocation(line: 1593, column: 59, scope: !11455)
!11458 = !DILocation(line: 1593, column: 7, scope: !11455)
!11459 = !DILocation(line: 1594, column: 22, scope: !11455)
!11460 = !DILocation(line: 1594, column: 26, scope: !11455)
!11461 = !DILocation(line: 1594, column: 30, scope: !11455)
!11462 = !DILocation(line: 1594, column: 4, scope: !11455)
!11463 = !DILocation(line: 1609, column: 4, scope: !11455)
!11464 = !DILocation(line: 1609, column: 14, scope: !11455)
!11465 = !DILocation(line: 1611, column: 2, scope: !11440)
!11466 = !DILocation(line: 1613, column: 21, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 1612, column: 7)
!11468 = !DILocation(line: 1613, column: 25, scope: !11467)
!11469 = !DILocation(line: 1613, column: 33, scope: !11467)
!11470 = !DILocation(line: 1613, column: 3, scope: !11467)
!11471 = !DILocation(line: 1616, column: 2, scope: !11414)
!11472 = !DILocation(line: 1616, column: 12, scope: !11414)
!11473 = !DILocation(line: 1618, column: 9, scope: !11414)
!11474 = !DILocation(line: 1618, column: 2, scope: !11414)
!11475 = distinct !DISubprogram(name: "ptcache_file_pointers_init", scope: !3, file: !3, line: 1750, type: !11184, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11476 = !DILocalVariable(name: "pf", arg: 1, scope: !11475, file: !3, line: 1750, type: !1087)
!11477 = !DILocation(line: 1750, column: 53, scope: !11475)
!11478 = !DILocalVariable(name: "data_types", scope: !11475, file: !3, line: 1752, type: !144)
!11479 = !DILocation(line: 1752, column: 6, scope: !11475)
!11480 = !DILocation(line: 1752, column: 19, scope: !11475)
!11481 = !DILocation(line: 1752, column: 23, scope: !11475)
!11482 = !DILocation(line: 1754, column: 32, scope: !11475)
!11483 = !DILocation(line: 1754, column: 43, scope: !11475)
!11484 = !DILocation(line: 1754, column: 31, scope: !11475)
!11485 = !DILocation(line: 1754, column: 72, scope: !11475)
!11486 = !DILocation(line: 1754, column: 76, scope: !11475)
!11487 = !DILocation(line: 1754, column: 81, scope: !11475)
!11488 = !DILocation(line: 1754, column: 2, scope: !11475)
!11489 = !DILocation(line: 1754, column: 6, scope: !11475)
!11490 = !DILocation(line: 1754, column: 28, scope: !11475)
!11491 = !DILocation(line: 1755, column: 34, scope: !11475)
!11492 = !DILocation(line: 1755, column: 45, scope: !11475)
!11493 = !DILocation(line: 1755, column: 33, scope: !11475)
!11494 = !DILocation(line: 1755, column: 77, scope: !11475)
!11495 = !DILocation(line: 1755, column: 81, scope: !11475)
!11496 = !DILocation(line: 1755, column: 86, scope: !11475)
!11497 = !DILocation(line: 1755, column: 2, scope: !11475)
!11498 = !DILocation(line: 1755, column: 6, scope: !11475)
!11499 = !DILocation(line: 1755, column: 31, scope: !11475)
!11500 = !DILocation(line: 1756, column: 34, scope: !11475)
!11501 = !DILocation(line: 1756, column: 45, scope: !11475)
!11502 = !DILocation(line: 1756, column: 33, scope: !11475)
!11503 = !DILocation(line: 1756, column: 77, scope: !11475)
!11504 = !DILocation(line: 1756, column: 81, scope: !11475)
!11505 = !DILocation(line: 1756, column: 86, scope: !11475)
!11506 = !DILocation(line: 1756, column: 2, scope: !11475)
!11507 = !DILocation(line: 1756, column: 6, scope: !11475)
!11508 = !DILocation(line: 1756, column: 31, scope: !11475)
!11509 = !DILocation(line: 1757, column: 34, scope: !11475)
!11510 = !DILocation(line: 1757, column: 45, scope: !11475)
!11511 = !DILocation(line: 1757, column: 33, scope: !11475)
!11512 = !DILocation(line: 1757, column: 77, scope: !11475)
!11513 = !DILocation(line: 1757, column: 81, scope: !11475)
!11514 = !DILocation(line: 1757, column: 86, scope: !11475)
!11515 = !DILocation(line: 1757, column: 2, scope: !11475)
!11516 = !DILocation(line: 1757, column: 6, scope: !11475)
!11517 = !DILocation(line: 1757, column: 31, scope: !11475)
!11518 = !DILocation(line: 1758, column: 35, scope: !11475)
!11519 = !DILocation(line: 1758, column: 46, scope: !11475)
!11520 = !DILocation(line: 1758, column: 34, scope: !11475)
!11521 = !DILocation(line: 1758, column: 78, scope: !11475)
!11522 = !DILocation(line: 1758, column: 82, scope: !11475)
!11523 = !DILocation(line: 1758, column: 87, scope: !11475)
!11524 = !DILocation(line: 1758, column: 2, scope: !11475)
!11525 = !DILocation(line: 1758, column: 6, scope: !11475)
!11526 = !DILocation(line: 1758, column: 32, scope: !11475)
!11527 = !DILocation(line: 1759, column: 31, scope: !11475)
!11528 = !DILocation(line: 1759, column: 42, scope: !11475)
!11529 = !DILocation(line: 1759, column: 30, scope: !11475)
!11530 = !DILocation(line: 1759, column: 71, scope: !11475)
!11531 = !DILocation(line: 1759, column: 75, scope: !11475)
!11532 = !DILocation(line: 1759, column: 80, scope: !11475)
!11533 = !DILocation(line: 1759, column: 2, scope: !11475)
!11534 = !DILocation(line: 1759, column: 6, scope: !11475)
!11535 = !DILocation(line: 1759, column: 27, scope: !11475)
!11536 = !DILocation(line: 1760, column: 32, scope: !11475)
!11537 = !DILocation(line: 1760, column: 43, scope: !11475)
!11538 = !DILocation(line: 1760, column: 31, scope: !11475)
!11539 = !DILocation(line: 1760, column: 72, scope: !11475)
!11540 = !DILocation(line: 1760, column: 76, scope: !11475)
!11541 = !DILocation(line: 1760, column: 81, scope: !11475)
!11542 = !DILocation(line: 1760, column: 2, scope: !11475)
!11543 = !DILocation(line: 1760, column: 6, scope: !11475)
!11544 = !DILocation(line: 1760, column: 28, scope: !11475)
!11545 = !DILocation(line: 1761, column: 32, scope: !11475)
!11546 = !DILocation(line: 1761, column: 43, scope: !11475)
!11547 = !DILocation(line: 1761, column: 31, scope: !11475)
!11548 = !DILocation(line: 1761, column: 72, scope: !11475)
!11549 = !DILocation(line: 1761, column: 76, scope: !11475)
!11550 = !DILocation(line: 1761, column: 81, scope: !11475)
!11551 = !DILocation(line: 1761, column: 2, scope: !11475)
!11552 = !DILocation(line: 1761, column: 6, scope: !11475)
!11553 = !DILocation(line: 1761, column: 28, scope: !11475)
!11554 = !DILocation(line: 1762, column: 1, scope: !11475)
!11555 = distinct !DISubprogram(name: "ptcache_file_header_begin_write", scope: !3, file: !3, line: 1730, type: !1204, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11556 = !DILocalVariable(name: "pf", arg: 1, scope: !11555, file: !3, line: 1730, type: !1087)
!11557 = !DILocation(line: 1730, column: 57, scope: !11555)
!11558 = !DILocalVariable(name: "bphysics", scope: !11555, file: !3, line: 1732, type: !1199)
!11559 = !DILocation(line: 1732, column: 14, scope: !11555)
!11560 = !DILocalVariable(name: "typeflag", scope: !11555, file: !3, line: 1733, type: !7)
!11561 = !DILocation(line: 1733, column: 15, scope: !11555)
!11562 = !DILocation(line: 1733, column: 26, scope: !11555)
!11563 = !DILocation(line: 1733, column: 30, scope: !11555)
!11564 = !DILocation(line: 1733, column: 37, scope: !11555)
!11565 = !DILocation(line: 1733, column: 41, scope: !11555)
!11566 = !DILocation(line: 1733, column: 35, scope: !11555)
!11567 = !DILocation(line: 1735, column: 13, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 1735, column: 6)
!11569 = !DILocation(line: 1735, column: 40, scope: !11568)
!11570 = !DILocation(line: 1735, column: 44, scope: !11568)
!11571 = !DILocation(line: 1735, column: 6, scope: !11568)
!11572 = !DILocation(line: 1735, column: 48, scope: !11568)
!11573 = !DILocation(line: 1735, column: 6, scope: !11555)
!11574 = !DILocation(line: 1736, column: 3, scope: !11568)
!11575 = !DILocation(line: 1738, column: 14, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 1738, column: 6)
!11577 = !DILocation(line: 1738, column: 50, scope: !11576)
!11578 = !DILocation(line: 1738, column: 54, scope: !11576)
!11579 = !DILocation(line: 1738, column: 7, scope: !11576)
!11580 = !DILocation(line: 1738, column: 6, scope: !11555)
!11581 = !DILocation(line: 1739, column: 3, scope: !11576)
!11582 = !DILocation(line: 1741, column: 2, scope: !11555)
!11583 = !DILocation(line: 1742, column: 1, scope: !11555)
!11584 = distinct !DISubprogram(name: "ptcache_data_alloc", scope: !3, file: !3, line: 1833, type: !5619, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11585 = !DILocalVariable(name: "pm", arg: 1, scope: !11584, file: !3, line: 1833, type: !3946)
!11586 = !DILocation(line: 1833, column: 44, scope: !11584)
!11587 = !DILocalVariable(name: "data_types", scope: !11584, file: !3, line: 1835, type: !144)
!11588 = !DILocation(line: 1835, column: 6, scope: !11584)
!11589 = !DILocation(line: 1835, column: 19, scope: !11584)
!11590 = !DILocation(line: 1835, column: 23, scope: !11584)
!11591 = !DILocalVariable(name: "totpoint", scope: !11584, file: !3, line: 1836, type: !144)
!11592 = !DILocation(line: 1836, column: 6, scope: !11584)
!11593 = !DILocation(line: 1836, column: 17, scope: !11584)
!11594 = !DILocation(line: 1836, column: 21, scope: !11584)
!11595 = !DILocalVariable(name: "i", scope: !11584, file: !3, line: 1837, type: !144)
!11596 = !DILocation(line: 1837, column: 6, scope: !11584)
!11597 = !DILocation(line: 1839, column: 8, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 1839, column: 2)
!11599 = !DILocation(line: 1839, column: 7, scope: !11598)
!11600 = !DILocation(line: 1839, column: 12, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 1839, column: 2)
!11602 = !DILocation(line: 1839, column: 13, scope: !11601)
!11603 = !DILocation(line: 1839, column: 2, scope: !11598)
!11604 = !DILocation(line: 1840, column: 7, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1840, column: 7)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !3, line: 1839, column: 35)
!11607 = !DILocation(line: 1840, column: 24, scope: !11605)
!11608 = !DILocation(line: 1840, column: 22, scope: !11605)
!11609 = !DILocation(line: 1840, column: 18, scope: !11605)
!11610 = !DILocation(line: 1840, column: 7, scope: !11606)
!11611 = !DILocation(line: 1841, column: 18, scope: !11605)
!11612 = !DILocation(line: 1841, column: 30, scope: !11605)
!11613 = !DILocation(line: 1841, column: 59, scope: !11605)
!11614 = !DILocation(line: 1841, column: 41, scope: !11605)
!11615 = !DILocation(line: 1841, column: 39, scope: !11605)
!11616 = !DILocation(line: 1841, column: 4, scope: !11605)
!11617 = !DILocation(line: 1841, column: 8, scope: !11605)
!11618 = !DILocation(line: 1841, column: 13, scope: !11605)
!11619 = !DILocation(line: 1841, column: 16, scope: !11605)
!11620 = !DILocation(line: 1842, column: 2, scope: !11606)
!11621 = !DILocation(line: 1839, column: 31, scope: !11601)
!11622 = !DILocation(line: 1839, column: 2, scope: !11601)
!11623 = distinct !{!11623, !11603, !11624}
!11624 = !DILocation(line: 1842, column: 2, scope: !11598)
!11625 = !DILocation(line: 1843, column: 1, scope: !11584)
!11626 = distinct !DISubprogram(name: "ptcache_dt_to_str", scope: !3, file: !3, line: 3129, type: !11627, scopeLine: 3130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11627 = !DISubroutineType(types: !11628)
!11628 = !{null, !129, !9789}
!11629 = !DILocalVariable(name: "str", arg: 1, scope: !11626, file: !3, line: 3129, type: !129)
!11630 = !DILocation(line: 3129, column: 37, scope: !11626)
!11631 = !DILocalVariable(name: "dtime", arg: 2, scope: !11626, file: !3, line: 3129, type: !9789)
!11632 = !DILocation(line: 3129, column: 49, scope: !11626)
!11633 = !DILocation(line: 3131, column: 6, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 3131, column: 6)
!11635 = !DILocation(line: 3131, column: 12, scope: !11634)
!11636 = !DILocation(line: 3131, column: 6, scope: !11626)
!11637 = !DILocation(line: 3132, column: 7, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 3132, column: 7)
!11639 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 3131, column: 20)
!11640 = !DILocation(line: 3132, column: 13, scope: !11638)
!11641 = !DILocation(line: 3132, column: 7, scope: !11639)
!11642 = !DILocation(line: 3133, column: 12, scope: !11638)
!11643 = !DILocation(line: 3133, column: 38, scope: !11638)
!11644 = !DILocation(line: 3133, column: 43, scope: !11638)
!11645 = !DILocation(line: 3133, column: 32, scope: !11638)
!11646 = !DILocation(line: 3133, column: 58, scope: !11638)
!11647 = !DILocation(line: 3133, column: 63, scope: !11638)
!11648 = !DILocation(line: 3133, column: 52, scope: !11638)
!11649 = !DILocation(line: 3133, column: 68, scope: !11638)
!11650 = !DILocation(line: 3133, column: 79, scope: !11638)
!11651 = !DILocation(line: 3133, column: 74, scope: !11638)
!11652 = !DILocation(line: 3133, column: 86, scope: !11638)
!11653 = !DILocation(line: 3133, column: 4, scope: !11638)
!11654 = !DILocation(line: 3135, column: 12, scope: !11638)
!11655 = !DILocation(line: 3135, column: 35, scope: !11638)
!11656 = !DILocation(line: 3135, column: 40, scope: !11638)
!11657 = !DILocation(line: 3135, column: 29, scope: !11638)
!11658 = !DILocation(line: 3135, column: 45, scope: !11638)
!11659 = !DILocation(line: 3135, column: 56, scope: !11638)
!11660 = !DILocation(line: 3135, column: 51, scope: !11638)
!11661 = !DILocation(line: 3135, column: 63, scope: !11638)
!11662 = !DILocation(line: 3135, column: 4, scope: !11638)
!11663 = !DILocation(line: 3136, column: 2, scope: !11639)
!11664 = !DILocation(line: 3138, column: 11, scope: !11634)
!11665 = !DILocation(line: 3138, column: 29, scope: !11634)
!11666 = !DILocation(line: 3138, column: 24, scope: !11634)
!11667 = !DILocation(line: 3138, column: 36, scope: !11634)
!11668 = !DILocation(line: 3138, column: 3, scope: !11634)
!11669 = !DILocation(line: 3139, column: 1, scope: !11626)
!11670 = distinct !DISubprogram(name: "ptcache_file_data_read", scope: !3, file: !3, line: 1682, type: !1204, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11671 = !DILocalVariable(name: "pf", arg: 1, scope: !11670, file: !3, line: 1682, type: !1087)
!11672 = !DILocation(line: 1682, column: 48, scope: !11670)
!11673 = !DILocalVariable(name: "i", scope: !11670, file: !3, line: 1684, type: !144)
!11674 = !DILocation(line: 1684, column: 6, scope: !11670)
!11675 = !DILocation(line: 1686, column: 8, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1686, column: 2)
!11677 = !DILocation(line: 1686, column: 7, scope: !11676)
!11678 = !DILocation(line: 1686, column: 12, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11676, file: !3, line: 1686, column: 2)
!11680 = !DILocation(line: 1686, column: 13, scope: !11679)
!11681 = !DILocation(line: 1686, column: 2, scope: !11676)
!11682 = !DILocation(line: 1687, column: 8, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 1687, column: 7)
!11684 = distinct !DILexicalBlock(scope: !11679, file: !3, line: 1686, column: 35)
!11685 = !DILocation(line: 1687, column: 12, scope: !11683)
!11686 = !DILocation(line: 1687, column: 29, scope: !11683)
!11687 = !DILocation(line: 1687, column: 27, scope: !11683)
!11688 = !DILocation(line: 1687, column: 23, scope: !11683)
!11689 = !DILocation(line: 1687, column: 33, scope: !11683)
!11690 = !DILocation(line: 1687, column: 55, scope: !11683)
!11691 = !DILocation(line: 1687, column: 59, scope: !11683)
!11692 = !DILocation(line: 1687, column: 63, scope: !11683)
!11693 = !DILocation(line: 1687, column: 67, scope: !11683)
!11694 = !DILocation(line: 1687, column: 92, scope: !11683)
!11695 = !DILocation(line: 1687, column: 74, scope: !11683)
!11696 = !DILocation(line: 1687, column: 37, scope: !11683)
!11697 = !DILocation(line: 1687, column: 7, scope: !11684)
!11698 = !DILocation(line: 1688, column: 4, scope: !11683)
!11699 = !DILocation(line: 1689, column: 2, scope: !11684)
!11700 = !DILocation(line: 1686, column: 31, scope: !11679)
!11701 = !DILocation(line: 1686, column: 2, scope: !11679)
!11702 = distinct !{!11702, !11681, !11703}
!11703 = !DILocation(line: 1689, column: 2, scope: !11676)
!11704 = !DILocation(line: 1691, column: 2, scope: !11670)
!11705 = !DILocation(line: 1692, column: 1, scope: !11670)
!11706 = distinct !DISubprogram(name: "ptcache_data_copy", scope: !3, file: !3, line: 1854, type: !11707, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11707 = !DISubroutineType(types: !11708)
!11708 = !{null, !1074, !1074}
!11709 = !DILocalVariable(name: "from", arg: 1, scope: !11706, file: !3, line: 1854, type: !1074)
!11710 = !DILocation(line: 1854, column: 37, scope: !11706)
!11711 = !DILocalVariable(name: "to", arg: 2, scope: !11706, file: !3, line: 1854, type: !1074)
!11712 = !DILocation(line: 1854, column: 51, scope: !11706)
!11713 = !DILocalVariable(name: "i", scope: !11706, file: !3, line: 1856, type: !144)
!11714 = !DILocation(line: 1856, column: 6, scope: !11706)
!11715 = !DILocation(line: 1857, column: 8, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 1857, column: 2)
!11717 = !DILocation(line: 1857, column: 7, scope: !11716)
!11718 = !DILocation(line: 1857, column: 12, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1857, column: 2)
!11720 = !DILocation(line: 1857, column: 13, scope: !11719)
!11721 = !DILocation(line: 1857, column: 2, scope: !11716)
!11722 = !DILocation(line: 1860, column: 7, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 1860, column: 7)
!11724 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 1857, column: 35)
!11725 = !DILocation(line: 1860, column: 12, scope: !11723)
!11726 = !DILocation(line: 1860, column: 15, scope: !11723)
!11727 = !DILocation(line: 1860, column: 18, scope: !11723)
!11728 = !DILocation(line: 1860, column: 21, scope: !11723)
!11729 = !DILocation(line: 1860, column: 7, scope: !11724)
!11730 = !DILocation(line: 1861, column: 11, scope: !11723)
!11731 = !DILocation(line: 1861, column: 14, scope: !11723)
!11732 = !DILocation(line: 1861, column: 18, scope: !11723)
!11733 = !DILocation(line: 1861, column: 23, scope: !11723)
!11734 = !DILocation(line: 1861, column: 45, scope: !11723)
!11735 = !DILocation(line: 1861, column: 27, scope: !11723)
!11736 = !DILocation(line: 1861, column: 4, scope: !11723)
!11737 = !DILocation(line: 1862, column: 2, scope: !11724)
!11738 = !DILocation(line: 1857, column: 31, scope: !11719)
!11739 = !DILocation(line: 1857, column: 2, scope: !11719)
!11740 = distinct !{!11740, !11721, !11741}
!11741 = !DILocation(line: 1862, column: 2, scope: !11716)
!11742 = !DILocation(line: 1863, column: 1, scope: !11706)
!11743 = distinct !DISubprogram(name: "ptcache_file_data_write", scope: !3, file: !3, line: 1693, type: !1204, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2748)
!11744 = !DILocalVariable(name: "pf", arg: 1, scope: !11743, file: !3, line: 1693, type: !1087)
!11745 = !DILocation(line: 1693, column: 49, scope: !11743)
!11746 = !DILocalVariable(name: "i", scope: !11743, file: !3, line: 1695, type: !144)
!11747 = !DILocation(line: 1695, column: 6, scope: !11743)
!11748 = !DILocation(line: 1697, column: 8, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11743, file: !3, line: 1697, column: 2)
!11750 = !DILocation(line: 1697, column: 7, scope: !11749)
!11751 = !DILocation(line: 1697, column: 12, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1697, column: 2)
!11753 = !DILocation(line: 1697, column: 13, scope: !11752)
!11754 = !DILocation(line: 1697, column: 2, scope: !11749)
!11755 = !DILocation(line: 1698, column: 8, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !3, line: 1698, column: 7)
!11757 = distinct !DILexicalBlock(scope: !11752, file: !3, line: 1697, column: 35)
!11758 = !DILocation(line: 1698, column: 12, scope: !11756)
!11759 = !DILocation(line: 1698, column: 29, scope: !11756)
!11760 = !DILocation(line: 1698, column: 27, scope: !11756)
!11761 = !DILocation(line: 1698, column: 23, scope: !11756)
!11762 = !DILocation(line: 1698, column: 33, scope: !11756)
!11763 = !DILocation(line: 1698, column: 56, scope: !11756)
!11764 = !DILocation(line: 1698, column: 60, scope: !11756)
!11765 = !DILocation(line: 1698, column: 64, scope: !11756)
!11766 = !DILocation(line: 1698, column: 68, scope: !11756)
!11767 = !DILocation(line: 1698, column: 93, scope: !11756)
!11768 = !DILocation(line: 1698, column: 75, scope: !11756)
!11769 = !DILocation(line: 1698, column: 37, scope: !11756)
!11770 = !DILocation(line: 1698, column: 7, scope: !11757)
!11771 = !DILocation(line: 1699, column: 4, scope: !11756)
!11772 = !DILocation(line: 1700, column: 2, scope: !11757)
!11773 = !DILocation(line: 1697, column: 31, scope: !11752)
!11774 = !DILocation(line: 1697, column: 2, scope: !11752)
!11775 = distinct !{!11775, !11754, !11776}
!11776 = !DILocation(line: 1700, column: 2, scope: !11749)
!11777 = !DILocation(line: 1702, column: 2, scope: !11743)
!11778 = !DILocation(line: 1703, column: 1, scope: !11743)
