graph G {
Function="_Z10bubbleSortPii";
Registers=164;
0 [label="3.323922e-02 %0:gr32 = ADD32ri8 %11:gr32(tied-def 0), -1, implicit-def dead $eflags
%13:gr32 = MOV32r0 implicit-def dead $eflags
%1:gr32 = PHI %0:gr32, %bb.1, %9:gr32, %bb.7
%2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
%14:gr32 = MOV32rr %1:gr32
%3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
%21:gr32 = COPY %3.sub_32bit:gr64
%8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
%9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
0 -- 1;
0 -- 2;
0 -- 3;
0 -- 4;
0 -- 5;
0 -- 6;
0 -- 7;
0 -- 8;
0 -- 9;
0 -- 10;
0 -- 11;
0 -- 13;
0 -- 14;
0 -- 15;
0 -- 16;
0 -- 17;
0 -- 21;
1 [label="7.378472e-02 %1:gr32 = PHI %0:gr32, %bb.1, %9:gr32, %bb.7
%2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
"];
1 -- 2;
1 -- 10;
1 -- 11;
1 -- 13;
2 [label="5.746695e-02 %2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
%14:gr32 = MOV32rr %1:gr32
%3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
%21:gr32 = COPY %3.sub_32bit:gr64
"];
2 -- 3;
2 -- 4;
2 -- 5;
2 -- 6;
2 -- 7;
2 -- 10;
2 -- 11;
2 -- 13;
2 -- 14;
2 -- 15;
2 -- 16;
2 -- 17;
2 -- 21;
3 [label="4.487404e-01 %3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
"];
3 -- 4;
3 -- 5;
3 -- 6;
3 -- 7;
3 -- 10;
3 -- 11;
3 -- 13;
3 -- 15;
3 -- 16;
3 -- 17;
4 [label="2.940487e+00 %4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
"];
4 -- 5;
4 -- 6;
4 -- 7;
4 -- 10;
4 -- 11;
4 -- 13;
5 [label="1.514796e+00 %5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
"];
5 -- 6;
5 -- 7;
5 -- 10;
5 -- 11;
5 -- 13;
6 [label="1.672147e+00 %6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
"];
6 -- 7;
6 -- 10;
6 -- 11;
6 -- 13;
7 [label="1.612525e+00 %7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
"];
7 -- 10;
7 -- 11;
7 -- 13;
8 [label="1.667103e-01 %8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
%9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
8 -- 9;
8 -- 10;
8 -- 11;
8 -- 13;
8 -- 21;
9 [label="1.379870e-01 %9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
9 -- 10;
9 -- 11;
9 -- 13;
10 [label="9.206428e-01 %10:gr64 = COPY $rdi
CMP32ri8 %11:gr32, 2, implicit-def $eflags
JCC_1 %bb.8, 12, implicit $eflags
JMP_1 %bb.1
%0:gr32 = ADD32ri8 %11:gr32(tied-def 0), -1, implicit-def dead $eflags
%13:gr32 = MOV32r0 implicit-def dead $eflags
%1:gr32 = PHI %0:gr32, %bb.1, %9:gr32, %bb.7
%2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
%14:gr32 = MOV32rr %1:gr32
%3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
%21:gr32 = COPY %3.sub_32bit:gr64
%8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
%9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
10 -- 11;
10 -- 13;
10 -- 14;
10 -- 15;
10 -- 16;
10 -- 17;
10 -- 21;
11 [label="1.740362e-02 %11:gr32 = COPY $esi
%10:gr64 = COPY $rdi
CMP32ri8 %11:gr32, 2, implicit-def $eflags
JCC_1 %bb.8, 12, implicit $eflags
JMP_1 %bb.1
%0:gr32 = ADD32ri8 %11:gr32(tied-def 0), -1, implicit-def dead $eflags
%13:gr32 = MOV32r0 implicit-def dead $eflags
%1:gr32 = PHI %0:gr32, %bb.1, %9:gr32, %bb.7
%2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
%14:gr32 = MOV32rr %1:gr32
%3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
%21:gr32 = COPY %3.sub_32bit:gr64
%8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
%9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
11 -- 13;
11 -- 14;
11 -- 15;
11 -- 16;
11 -- 17;
11 -- 21;
13 [label="1.376566e-02 %13:gr32 = MOV32r0 implicit-def dead $eflags
%1:gr32 = PHI %0:gr32, %bb.1, %9:gr32, %bb.7
%2:gr32 = PHI %13:gr32, %bb.1, %8:gr32, %bb.7
%14:gr32 = MOV32rr %1:gr32
%3:gr64 = SUBREG_TO_REG 0, %14:gr32, %subreg.sub_32bit
%15:gr32 = NOT32r %2:gr32(tied-def 0)
%16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
TEST32rr %16:gr32, %16:gr32, implicit-def $eflags
JCC_1 %bb.7, 14, implicit $eflags
JMP_1 %bb.3
%17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
%4:gr64_nosp = PHI %17:gr64, %bb.3, %6:gr64, %bb.6
%5:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 0, $noreg :: (load 4 from %ir.17, !tbaa !2)
%7:gr32 = MOV32rm %10:gr64, 4, %4:gr64_nosp, 4, $noreg :: (load 4 from %ir.21, !tbaa !2)
%6:gr64 = nuw nsw ADD64ri8 %4:gr64_nosp(tied-def 0), 1, implicit-def dead $eflags
CMP32rr %5:gr32, %7:gr32, implicit-def $eflags
JCC_1 %bb.6, 14, implicit $eflags
JMP_1 %bb.5
MOV32mr %10:gr64, 4, %4:gr64_nosp, 0, $noreg, %7:gr32 :: (store 4 into %ir.26, !tbaa !2)
MOV32mr %10:gr64, 4, %4:gr64_nosp, 4, $noreg, %5:gr32 :: (store 4 into %ir.28, !tbaa !2)
CMP64rr %3:gr64, %6:gr64, implicit-def $eflags
JCC_1 %bb.4, 5, implicit $eflags
JMP_1 %bb.7
%21:gr32 = COPY %3.sub_32bit:gr64
%8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
%9:gr32 = ADD32ri8 %21:gr32(tied-def 0), -1, implicit-def dead $eflags
CMP32rr %8:gr32, %0:gr32, implicit-def $eflags
JCC_1 %bb.2, 5, implicit $eflags
JMP_1 %bb.8
"];
13 -- 14;
13 -- 15;
13 -- 16;
13 -- 17;
13 -- 21;
14 [label="INF %14:gr32 = MOV32rr %1:gr32
"];
15 [label="INF %15:gr32 = NOT32r %2:gr32(tied-def 0)
"];
16 [label="INF %16:gr32 = ADD32rr %15:gr32(tied-def 0), %11:gr32, implicit-def dead $eflags
"];
17 [label="INF %17:gr64 = SUBREG_TO_REG 0, %13:gr32, %subreg.sub_32bit
"];
21 [label="7.378472e-02 %21:gr32 = COPY %3.sub_32bit:gr64
%8:gr32 = nuw nsw ADD32ri8 %2:gr32(tied-def 0), 1, implicit-def dead $eflags
"];
}