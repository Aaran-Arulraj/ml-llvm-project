syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.registerallocationinference";
option java_outer_classname = "RegisterAllocationInferenceProto";
option objc_class_prefix = "REG";

package registerallocationinference;

// General Register Allocation Service 
service RegisterAllocationInference{

// RPC function to send Inference graph data and receive color data for codegen
//  rpc getColouring(Empty) returns (ColorData) {}
//rpc setGraph(GraphList) returns (Data) {}
  rpc getInfo(RegisterProfileList) returns (Data) {}
}

message GraphList {
  bytes payload=1;
}

message ColorData {
  bytes payload=1;
}

message RegisterProfileList {
  message vector {
    repeated double vec=1;
  }
  message RegisterProfile {
    uint32 regID=1;
    uint32 color=2;
    float spillWeight=3;
    string cls=4;
    repeated uint32 interferences=5;
    repeated uint32 useDistances=6;
    repeated float positionalSpillWeights=7;
    repeated vector vectors=8;
  }
  repeated RegisterProfile regProf=1;
  bool result=2;
}

message Data {
  string message = 1;
  uint32 regidx = 2;
  int64 payload = 3;
  bytes colorData = 4;
}

message Empty {}
