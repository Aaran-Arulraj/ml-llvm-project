; ModuleID = '../temp.ll'
source_filename = "temp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%c \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@__const.main.str = private unnamed_addr constant [15 x i8] c"HAPPY BIRTHDAY\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @initposvel(i32* %0, i32* %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  store i32 0, i32* %9, align 4
  br label %10

10:                                               ; preds = %36, %4
  %11 = load i32, i32* %9, align 4
  %12 = icmp slt i32 %11, 14
  br i1 %12, label %13, label %39

13:                                               ; preds = %10
  %14 = load i32, i32* %9, align 4
  %15 = sub nsw i32 28, %14
  %16 = load i32*, i32** %5, align 8
  %17 = load i32, i32* %9, align 4
  %18 = sub nsw i32 13, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %16, i64 %19
  store i32 %15, i32* %20, align 4
  %21 = load i32, i32* %9, align 4
  %22 = sub nsw i32 16, %21
  %23 = load i32*, i32** %6, align 8
  %24 = load i32, i32* %9, align 4
  %25 = sub nsw i32 13, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32 %22, i32* %27, align 4
  %28 = load i32*, i32** %7, align 8
  %29 = load i32, i32* %9, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  store i32 -1, i32* %31, align 4
  %32 = load i32*, i32** %8, align 8
  %33 = load i32, i32* %9, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %32, i64 %34
  store i32 -1, i32* %35, align 4
  br label %36

36:                                               ; preds = %13
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %10

39:                                               ; preds = %10
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updatescreen([36 x i8]* %0, i8* %1, i32* %2, i32* %3, i32* %4, i32* %5) #0 {
  %7 = alloca [36 x i8]*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  store [36 x i8]* %0, [36 x i8]** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %4, i32** %11, align 8
  store i32* %5, i32** %12, align 8
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %132, %6
  %15 = load i32, i32* %13, align 4
  %16 = icmp slt i32 %15, 14
  br i1 %16, label %17, label %135

17:                                               ; preds = %14
  %18 = load i32*, i32** %11, align 8
  %19 = load i32, i32* %13, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = load i32*, i32** %9, align 8
  %24 = load i32, i32* %13, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, %22
  store i32 %28, i32* %26, align 4
  %29 = load i32*, i32** %12, align 8
  %30 = load i32, i32* %13, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %29, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32*, i32** %10, align 8
  %35 = load i32, i32* %13, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %34, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, %33
  store i32 %39, i32* %37, align 4
  %40 = load i32*, i32** %9, align 8
  %41 = load i32, i32* %13, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %57

46:                                               ; preds = %17
  %47 = load i32*, i32** %9, align 8
  %48 = load i32, i32* %13, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, 2
  store i32 %52, i32* %50, align 4
  %53 = load i32*, i32** %11, align 8
  %54 = load i32, i32* %13, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  store i32 1, i32* %56, align 4
  br label %57

57:                                               ; preds = %46, %17
  %58 = load i32*, i32** %10, align 8
  %59 = load i32, i32* %13, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %75

64:                                               ; preds = %57
  %65 = load i32*, i32** %10, align 8
  %66 = load i32, i32* %13, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, 2
  store i32 %70, i32* %68, align 4
  %71 = load i32*, i32** %12, align 8
  %72 = load i32, i32* %13, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  store i32 1, i32* %74, align 4
  br label %75

75:                                               ; preds = %64, %57
  %76 = load i32*, i32** %9, align 8
  %77 = load i32, i32* %13, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 36
  br i1 %81, label %82, label %93

82:                                               ; preds = %75
  %83 = load i32*, i32** %9, align 8
  %84 = load i32, i32* %13, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %83, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sub nsw i32 %87, 2
  store i32 %88, i32* %86, align 4
  %89 = load i32*, i32** %11, align 8
  %90 = load i32, i32* %13, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %89, i64 %91
  store i32 -1, i32* %92, align 4
  br label %93

93:                                               ; preds = %82, %75
  %94 = load i32*, i32** %10, align 8
  %95 = load i32, i32* %13, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 18
  br i1 %99, label %100, label %111

100:                                              ; preds = %93
  %101 = load i32*, i32** %10, align 8
  %102 = load i32, i32* %13, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %101, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = sub nsw i32 %105, 2
  store i32 %106, i32* %104, align 4
  %107 = load i32*, i32** %12, align 8
  %108 = load i32, i32* %13, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  store i32 -1, i32* %110, align 4
  br label %111

111:                                              ; preds = %100, %93
  %112 = load i8*, i8** %8, align 8
  %113 = load i32, i32* %13, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %112, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = load [36 x i8]*, [36 x i8]** %7, align 8
  %118 = load i32*, i32** %10, align 8
  %119 = load i32, i32* %13, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [36 x i8], [36 x i8]* %117, i64 %123
  %125 = load i32*, i32** %9, align 8
  %126 = load i32, i32* %13, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %125, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [36 x i8], [36 x i8]* %124, i64 0, i64 %130
  store i8 %116, i8* %131, align 1
  br label %132

132:                                              ; preds = %111
  %133 = load i32, i32* %13, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %13, align 4
  br label %14

135:                                              ; preds = %14
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @clearscreen([36 x i8]* %0) #0 {
  %2 = alloca [36 x i8]*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store [36 x i8]* %0, [36 x i8]** %2, align 8
  store i32 0, i32* %3, align 4
  br label %5

5:                                                ; preds = %24, %1
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 18
  br i1 %7, label %8, label %27

8:                                                ; preds = %5
  store i32 0, i32* %4, align 4
  br label %9

9:                                                ; preds = %20, %8
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 36
  br i1 %11, label %12, label %23

12:                                               ; preds = %9
  %13 = load [36 x i8]*, [36 x i8]** %2, align 8
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [36 x i8], [36 x i8]* %13, i64 %15
  %17 = load i32, i32* %4, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [36 x i8], [36 x i8]* %16, i64 0, i64 %18
  store i8 46, i8* %19, align 1
  br label %20

20:                                               ; preds = %12
  %21 = load i32, i32* %4, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %4, align 4
  br label %9

23:                                               ; preds = %9
  br label %24

24:                                               ; preds = %23
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %3, align 4
  br label %5

27:                                               ; preds = %5
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @printscreen([36 x i8]* %0) #0 {
  %2 = alloca [36 x i8]*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store [36 x i8]* %0, [36 x i8]** %2, align 8
  %5 = call i32 @system(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %29, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 18
  br i1 %8, label %9, label %32

9:                                                ; preds = %6
  store i32 0, i32* %4, align 4
  br label %10

10:                                               ; preds = %24, %9
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %11, 36
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = load [36 x i8]*, [36 x i8]** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [36 x i8], [36 x i8]* %14, i64 %16
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [36 x i8], [36 x i8]* %17, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %22)
  br label %24

24:                                               ; preds = %13
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %4, align 4
  br label %10

27:                                               ; preds = %10
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %3, align 4
  br label %6

32:                                               ; preds = %6
  ret i32 0
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [15 x i8], align 1
  %3 = alloca i32, align 4
  %4 = alloca [14 x i32], align 16
  %5 = alloca [14 x i32], align 16
  %6 = alloca [14 x i32], align 16
  %7 = alloca [14 x i32], align 16
  %8 = alloca [18 x [36 x i8]], align 16
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %11 = bitcast [15 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @__const.main.str, i32 0, i32 0), i64 15, i1 false)
  store i32 14, i32* %3, align 4
  %12 = getelementptr inbounds [14 x i32], [14 x i32]* %4, i64 0, i64 0
  %13 = getelementptr inbounds [14 x i32], [14 x i32]* %5, i64 0, i64 0
  %14 = getelementptr inbounds [14 x i32], [14 x i32]* %6, i64 0, i64 0
  %15 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 0
  %16 = call i32 @initposvel(i32* %12, i32* %13, i32* %14, i32* %15)
  %17 = getelementptr inbounds [18 x [36 x i8]], [18 x [36 x i8]]* %8, i64 0, i64 0
  %18 = call i32 @clearscreen([36 x i8]* %17)
  store i8 46, i8* %9, align 1
  store i32 0, i32* %10, align 4
  br label %19

19:                                               ; preds = %35, %0
  %20 = load i32, i32* %10, align 4
  %21 = icmp slt i32 %20, 1000
  br i1 %21, label %22, label %38

22:                                               ; preds = %19
  %23 = call i32 @usleep(i32 300000)
  %24 = getelementptr inbounds [18 x [36 x i8]], [18 x [36 x i8]]* %8, i64 0, i64 0
  %25 = call i32 @clearscreen([36 x i8]* %24)
  %26 = getelementptr inbounds [18 x [36 x i8]], [18 x [36 x i8]]* %8, i64 0, i64 0
  %27 = getelementptr inbounds [15 x i8], [15 x i8]* %2, i64 0, i64 0
  %28 = getelementptr inbounds [14 x i32], [14 x i32]* %4, i64 0, i64 0
  %29 = getelementptr inbounds [14 x i32], [14 x i32]* %5, i64 0, i64 0
  %30 = getelementptr inbounds [14 x i32], [14 x i32]* %6, i64 0, i64 0
  %31 = getelementptr inbounds [14 x i32], [14 x i32]* %7, i64 0, i64 0
  %32 = call i32 @updatescreen([36 x i8]* %26, i8* %27, i32* %28, i32* %29, i32* %30, i32* %31)
  %33 = getelementptr inbounds [18 x [36 x i8]], [18 x [36 x i8]]* %8, i64 0, i64 0
  %34 = call i32 @printscreen([36 x i8]* %33)
  br label %35

35:                                               ; preds = %22
  %36 = load i32, i32* %10, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %10, align 4
  br label %19

38:                                               ; preds = %19
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @usleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/IITH-Compilers/ml-llvm-project.git d5150859bc1a2d13b8b368d2d932c547523234b4)"}
