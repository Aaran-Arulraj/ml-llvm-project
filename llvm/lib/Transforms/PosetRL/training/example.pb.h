// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_example_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_example_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_example_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_example_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_example_2eproto;
namespace posetrl {
class ActionRequest;
struct ActionRequestDefaultTypeInternal;
extern ActionRequestDefaultTypeInternal _ActionRequest_default_instance_;
class EmbeddingResponse;
struct EmbeddingResponseDefaultTypeInternal;
extern EmbeddingResponseDefaultTypeInternal _EmbeddingResponse_default_instance_;
}  // namespace posetrl
PROTOBUF_NAMESPACE_OPEN
template<> ::posetrl::ActionRequest* Arena::CreateMaybeMessage<::posetrl::ActionRequest>(Arena*);
template<> ::posetrl::EmbeddingResponse* Arena::CreateMaybeMessage<::posetrl::EmbeddingResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace posetrl {

// ===================================================================

class EmbeddingResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:posetrl.EmbeddingResponse) */ {
 public:
  inline EmbeddingResponse() : EmbeddingResponse(nullptr) {}
  ~EmbeddingResponse() override;
  explicit PROTOBUF_CONSTEXPR EmbeddingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EmbeddingResponse(const EmbeddingResponse& from);
  EmbeddingResponse(EmbeddingResponse&& from) noexcept
    : EmbeddingResponse() {
    *this = ::std::move(from);
  }

  inline EmbeddingResponse& operator=(const EmbeddingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmbeddingResponse& operator=(EmbeddingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmbeddingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmbeddingResponse* internal_default_instance() {
    return reinterpret_cast<const EmbeddingResponse*>(
               &_EmbeddingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EmbeddingResponse& a, EmbeddingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EmbeddingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmbeddingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmbeddingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmbeddingResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EmbeddingResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const EmbeddingResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmbeddingResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "posetrl.EmbeddingResponse";
  }
  protected:
  explicit EmbeddingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmbeddingFieldNumber = 1,
  };
  // repeated float embedding = 1;
  int embedding_size() const;
  private:
  int _internal_embedding_size() const;
  public:
  void clear_embedding();
  private:
  float _internal_embedding(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_embedding() const;
  void _internal_add_embedding(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_embedding();
  public:
  float embedding(int index) const;
  void set_embedding(int index, float value);
  void add_embedding(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      embedding() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_embedding();

  // @@protoc_insertion_point(class_scope:posetrl.EmbeddingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > embedding_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_2eproto;
};
// -------------------------------------------------------------------

class ActionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:posetrl.ActionRequest) */ {
 public:
  inline ActionRequest() : ActionRequest(nullptr) {}
  ~ActionRequest() override;
  explicit PROTOBUF_CONSTEXPR ActionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ActionRequest(const ActionRequest& from);
  ActionRequest(ActionRequest&& from) noexcept
    : ActionRequest() {
    *this = ::std::move(from);
  }

  inline ActionRequest& operator=(const ActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionRequest& operator=(ActionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActionRequest* internal_default_instance() {
    return reinterpret_cast<const ActionRequest*>(
               &_ActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ActionRequest& a, ActionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ActionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ActionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "posetrl.ActionRequest";
  }
  protected:
  explicit ActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
  };
  // int32 action = 1;
  void clear_action();
  int32_t action() const;
  void set_action(int32_t value);
  private:
  int32_t _internal_action() const;
  void _internal_set_action(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:posetrl.ActionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_example_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EmbeddingResponse

// repeated float embedding = 1;
inline int EmbeddingResponse::_internal_embedding_size() const {
  return embedding_.size();
}
inline int EmbeddingResponse::embedding_size() const {
  return _internal_embedding_size();
}
inline void EmbeddingResponse::clear_embedding() {
  embedding_.Clear();
}
inline float EmbeddingResponse::_internal_embedding(int index) const {
  return embedding_.Get(index);
}
inline float EmbeddingResponse::embedding(int index) const {
  // @@protoc_insertion_point(field_get:posetrl.EmbeddingResponse.embedding)
  return _internal_embedding(index);
}
inline void EmbeddingResponse::set_embedding(int index, float value) {
  embedding_.Set(index, value);
  // @@protoc_insertion_point(field_set:posetrl.EmbeddingResponse.embedding)
}
inline void EmbeddingResponse::_internal_add_embedding(float value) {
  embedding_.Add(value);
}
inline void EmbeddingResponse::add_embedding(float value) {
  _internal_add_embedding(value);
  // @@protoc_insertion_point(field_add:posetrl.EmbeddingResponse.embedding)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
EmbeddingResponse::_internal_embedding() const {
  return embedding_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
EmbeddingResponse::embedding() const {
  // @@protoc_insertion_point(field_list:posetrl.EmbeddingResponse.embedding)
  return _internal_embedding();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
EmbeddingResponse::_internal_mutable_embedding() {
  return &embedding_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
EmbeddingResponse::mutable_embedding() {
  // @@protoc_insertion_point(field_mutable_list:posetrl.EmbeddingResponse.embedding)
  return _internal_mutable_embedding();
}

// -------------------------------------------------------------------

// ActionRequest

// int32 action = 1;
inline void ActionRequest::clear_action() {
  action_ = 0;
}
inline int32_t ActionRequest::_internal_action() const {
  return action_;
}
inline int32_t ActionRequest::action() const {
  // @@protoc_insertion_point(field_get:posetrl.ActionRequest.action)
  return _internal_action();
}
inline void ActionRequest::_internal_set_action(int32_t value) {
  
  action_ = value;
}
inline void ActionRequest::set_action(int32_t value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:posetrl.ActionRequest.action)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace posetrl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_example_2eproto
