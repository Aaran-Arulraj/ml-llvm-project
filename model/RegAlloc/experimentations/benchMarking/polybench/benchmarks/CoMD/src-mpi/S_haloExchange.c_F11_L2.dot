digraph G {
1 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv181, metadata !1262, metadata !DIExpression()), !dbg !1273"];
2 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv183, metadata !1260, metadata !DIExpression()), !dbg !1273"];
3 [label="  store i32 %17, i32* %gid6, align 8, !dbg !353, !tbaa !354
  %17 = load i32, i32* %arrayidx3, align 4, !dbg !351, !tbaa !327
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv183, !dbg !351
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %gid6 = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 0, !dbg !352
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
4 [label="  store i32 %18, i32* %type, align 4, !dbg !359, !tbaa !360
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !357, !tbaa !327
  %arrayidx8 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv183, !dbg !357
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %type = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 1, !dbg !358
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
5 [label="  store i64 %20, i64* %21, align 8, !dbg !364, !tbaa !365
  %20 = load i64, i64* %19, align 8, !dbg !361, !tbaa !362
  %19 = bitcast double* %arrayidx13 to i64*, !dbg !361
  %arrayidx13 = getelementptr inbounds [3 x double], [3 x double]* %6, i64 %indvars.iv183, i64 0, !dbg !361
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %21 = bitcast double* %rx to i64*, !dbg !364
  %rx = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 2, !dbg !363
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
6 [label="  store i64 %23, i64* %24, align 8, !dbg !368, !tbaa !369
  %23 = load i64, i64* %22, align 8, !dbg !366, !tbaa !362
  %22 = bitcast double* %arrayidx19 to i64*, !dbg !366
  %arrayidx19 = getelementptr inbounds [3 x double], [3 x double]* %6, i64 %indvars.iv183, i64 1, !dbg !366
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %24 = bitcast double* %ry to i64*, !dbg !368
  %ry = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 3, !dbg !367
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
7 [label="  store i64 %26, i64* %27, align 8, !dbg !372, !tbaa !373
  %26 = load i64, i64* %25, align 8, !dbg !370, !tbaa !362
  %25 = bitcast double* %arrayidx25 to i64*, !dbg !370
  %arrayidx25 = getelementptr inbounds [3 x double], [3 x double]* %6, i64 %indvars.iv183, i64 2, !dbg !370
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %27 = bitcast double* %rz to i64*, !dbg !372
  %rz = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 4, !dbg !371
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
8 [label="  store i64 %29, i64* %30, align 8, !dbg !376, !tbaa !377
  %29 = load i64, i64* %28, align 8, !dbg !374, !tbaa !362
  %28 = bitcast double* %arrayidx30 to i64*, !dbg !374
  %arrayidx30 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 %indvars.iv183, i64 0, !dbg !374
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %30 = bitcast double* %px to i64*, !dbg !376
  %px = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 5, !dbg !375
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
9 [label="  store i64 %32, i64* %33, align 8, !dbg !380, !tbaa !381
  %32 = load i64, i64* %31, align 8, !dbg !378, !tbaa !362
  %31 = bitcast double* %arrayidx36 to i64*, !dbg !378
  %arrayidx36 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 %indvars.iv183, i64 1, !dbg !378
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %33 = bitcast double* %py to i64*, !dbg !380
  %py = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 6, !dbg !379
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
10 [label="  store i64 %35, i64* %36, align 8, !dbg !384, !tbaa !385
  %35 = load i64, i64* %34, align 8, !dbg !382, !tbaa !362
  %34 = bitcast double* %arrayidx42 to i64*, !dbg !382
  %arrayidx42 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 %indvars.iv183, i64 2, !dbg !382
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %36 = bitcast double* %pz to i64*, !dbg !384
  %pz = getelementptr inbounds %struct.AtomMsgSt, %struct.AtomMsgSt* %vla, i64 %indvars.iv181, i32 7, !dbg !383
  %indvars.iv181 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next182, %for.body ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1, !dbg !387"];
11 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv.next184, metadata !1260, metadata !DIExpression()), !dbg !1273"];
12 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv.next182, metadata !1262, metadata !DIExpression()), !dbg !1273"];
13 [label="  %cmp = icmp slt i64 %indvars.iv.next184, %9, !dbg !333
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %8 = sext i32 %mul to i64, !dbg !335
  %mul = shl i32 %iBox, 6, !dbg !330
  %9 = sext i32 %add to i64, !dbg !335
  %add = add nsw i32 %1, %mul, !dbg !331
  %1 = load i32, i32* %arrayidx, align 4, !dbg !326, !tbaa !327
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !326
  %0 = load i32*, i32** %nAtoms1, align 8, !dbg !319, !tbaa !320
  %nAtoms1 = getelementptr inbounds %struct.LinkCellSt, %struct.LinkCellSt* %boxes, i64 0, i32 8, !dbg !319
  %idxprom = sext i32 %iBox to i64, !dbg !326"];
14 [label="  br i1 %cmp, label %for.body, label %for.cond.cleanup, !dbg !335, !llvm.loop !388, !IR2Vec-SCC-LoopID !390
  %cmp = icmp slt i64 %indvars.iv.next184, %9, !dbg !333
  %indvars.iv.next184 = add nsw i64 %indvars.iv183, 1, !dbg !386
  %indvars.iv183 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next184, %for.body ]
  %8 = sext i32 %mul to i64, !dbg !335
  %mul = shl i32 %iBox, 6, !dbg !330
  %9 = sext i32 %add to i64, !dbg !335
  %add = add nsw i32 %1, %mul, !dbg !331
  %1 = load i32, i32* %arrayidx, align 4, !dbg !326, !tbaa !327
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !326
  %0 = load i32*, i32** %nAtoms1, align 8, !dbg !319, !tbaa !320
  %nAtoms1 = getelementptr inbounds %struct.LinkCellSt, %struct.LinkCellSt* %boxes, i64 0, i32 8, !dbg !319
  %idxprom = sext i32 %iBox to i64, !dbg !326"];
15 [label=""];
3 -> 13[label="  def-use"];
4 -> 13[label="  def-use"];
5 -> 13[label="  def-use"];
6 -> 13[label="  def-use"];
7 -> 13[label="  def-use"];
8 -> 13[label="  def-use"];
9 -> 13[label="  def-use"];
10 -> 13[label="  def-use"];
13 -> 14[label="  def-use"];
15 -> 1[label="  rooted"];
15 -> 2[label="  rooted"];
15 -> 3[label="  rooted"];
15 -> 4[label="  rooted"];
15 -> 5[label="  rooted"];
15 -> 6[label="  rooted"];
15 -> 7[label="  rooted"];
15 -> 8[label="  rooted"];
15 -> 9[label="  rooted"];
15 -> 10[label="  rooted"];
15 -> 11[label="  rooted"];
15 -> 12[label="  rooted"];
}