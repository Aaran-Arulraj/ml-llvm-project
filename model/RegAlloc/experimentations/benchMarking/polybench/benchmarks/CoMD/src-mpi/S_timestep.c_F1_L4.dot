digraph G {
1 [label="  call void @llvm.dbg.value(metadata i32 undef, metadata !273, metadata !DIExpression()), !dbg !452"];
2 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv69.i64, metadata !272, metadata !DIExpression()), !dbg !452"];
3 [label="  store double %add.i69, double* %arrayidx12.i68, align 8, !dbg !463, !tbaa !343
  %add.i69 = fadd double %mul8.i67, %57, !dbg !463
  %mul8.i67 = fmul double %mul, %56, !dbg !461
  %56 = load double, double* %arrayidx7.i66, align 8, !dbg !460, !tbaa !343
  %arrayidx7.i66 = getelementptr inbounds [3 x double], [3 x double]* %53, i64 %indvars.iv69.i64, i64 0, !dbg !460
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %57 = load double, double* %arrayidx12.i68, align 8, !dbg !463, !tbaa !343
  %arrayidx12.i68 = getelementptr inbounds [3 x double], [3 x double]* %54, i64 %indvars.iv69.i64, i64 0, !dbg !462"];
4 [label="  store double %add24.i73, double* %arrayidx23.i72, align 8, !dbg !467, !tbaa !343
  %add24.i73 = fadd double %59, %mul18.i71, !dbg !467
  %59 = load double, double* %arrayidx23.i72, align 8, !dbg !467, !tbaa !343
  %arrayidx23.i72 = getelementptr inbounds [3 x double], [3 x double]* %54, i64 %indvars.iv69.i64, i64 1, !dbg !466
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %mul18.i71 = fmul double %mul, %58, !dbg !465
  %58 = load double, double* %arrayidx17.i70, align 8, !dbg !464, !tbaa !343
  %arrayidx17.i70 = getelementptr inbounds [3 x double], [3 x double]* %53, i64 %indvars.iv69.i64, i64 1, !dbg !464"];
5 [label="  store double %add36.i77, double* %arrayidx35.i76, align 8, !dbg !471, !tbaa !343
  %add36.i77 = fadd double %61, %mul30.i75, !dbg !471
  %61 = load double, double* %arrayidx35.i76, align 8, !dbg !471, !tbaa !343
  %arrayidx35.i76 = getelementptr inbounds [3 x double], [3 x double]* %54, i64 %indvars.iv69.i64, i64 2, !dbg !470
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %mul30.i75 = fmul double %mul, %60, !dbg !469
  %60 = load double, double* %arrayidx29.i74, align 8, !dbg !468, !tbaa !343
  %arrayidx29.i74 = getelementptr inbounds [3 x double], [3 x double]* %53, i64 %indvars.iv69.i64, i64 2, !dbg !468"];
6 [label="  call void @llvm.dbg.value(metadata i32 undef, metadata !273, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !452"];
7 [label="  call void @llvm.dbg.value(metadata i64 %indvars.iv.next70.i79, metadata !272, metadata !DIExpression()), !dbg !452"];
8 [label="  %lftr.wideiv107 = trunc i64 %indvars.iv.next70.i79 to i32, !dbg !454
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %51 = zext i32 %indvars.iv.i53 to i64, !dbg !453
  %indvars.iv.i53 = phi i32 [ 0, %for.body.lr.ph.i51 ], [ %indvars.iv.next.i61, %for.cond.cleanup3.i63 ]
  %indvars.iv.next.i61 = add i32 %indvars.iv.i53, 64, !dbg !450"];
9 [label="  %exitcond108 = icmp eq i32 %55, %lftr.wideiv107, !dbg !454
  %55 = add i32 %50, %indvars.iv.i53, !dbg !455
  %50 = load i32, i32* %arrayidx63.i54, align 4, !dbg !453, !tbaa !332
  %arrayidx63.i54 = getelementptr inbounds i32, i32* %49, i64 %indvars.iv71.i52, !dbg !453
  %49 = load i32*, i32** %nAtoms62.i48, align 8, !dbg !451, !tbaa !329
  %nAtoms62.i48 = getelementptr inbounds %struct.LinkCellSt, %struct.LinkCellSt* %47, i64 0, i32 8, !dbg !451
  %47 = load %struct.LinkCellSt*, %struct.LinkCellSt** %boxes, align 8, !dbg !444, !tbaa !320
  %boxes = getelementptr inbounds %struct.SimFlatSt, %struct.SimFlatSt* %s, i64 0, i32 4, !dbg !255
  %indvars.iv71.i52 = phi i64 [ 0, %for.body.lr.ph.i51 ], [ %indvars.iv.next72.i60, %for.cond.cleanup3.i63 ]
  %indvars.iv.next72.i60 = add nuw nsw i64 %indvars.iv71.i52, 1, !dbg !457
  %indvars.iv.i53 = phi i32 [ 0, %for.body.lr.ph.i51 ], [ %indvars.iv.next.i61, %for.cond.cleanup3.i63 ]
  %indvars.iv.next.i61 = add i32 %indvars.iv.i53, 64, !dbg !450
  %lftr.wideiv107 = trunc i64 %indvars.iv.next70.i79 to i32, !dbg !454
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %51 = zext i32 %indvars.iv.i53 to i64, !dbg !453"];
10 [label="  br i1 %exitcond108, label %for.cond.cleanup3.i63.loopexit, label %for.body4.i81, !dbg !455, !llvm.loop !473, !IR2Vec-SCC-LoopID !475
  %exitcond108 = icmp eq i32 %55, %lftr.wideiv107, !dbg !454
  %55 = add i32 %50, %indvars.iv.i53, !dbg !455
  %50 = load i32, i32* %arrayidx63.i54, align 4, !dbg !453, !tbaa !332
  %arrayidx63.i54 = getelementptr inbounds i32, i32* %49, i64 %indvars.iv71.i52, !dbg !453
  %49 = load i32*, i32** %nAtoms62.i48, align 8, !dbg !451, !tbaa !329
  %nAtoms62.i48 = getelementptr inbounds %struct.LinkCellSt, %struct.LinkCellSt* %47, i64 0, i32 8, !dbg !451
  %47 = load %struct.LinkCellSt*, %struct.LinkCellSt** %boxes, align 8, !dbg !444, !tbaa !320
  %boxes = getelementptr inbounds %struct.SimFlatSt, %struct.SimFlatSt* %s, i64 0, i32 4, !dbg !255
  %indvars.iv71.i52 = phi i64 [ 0, %for.body.lr.ph.i51 ], [ %indvars.iv.next72.i60, %for.cond.cleanup3.i63 ]
  %indvars.iv.next72.i60 = add nuw nsw i64 %indvars.iv71.i52, 1, !dbg !457
  %indvars.iv.i53 = phi i32 [ 0, %for.body.lr.ph.i51 ], [ %indvars.iv.next.i61, %for.cond.cleanup3.i63 ]
  %indvars.iv.next.i61 = add i32 %indvars.iv.i53, 64, !dbg !450
  %lftr.wideiv107 = trunc i64 %indvars.iv.next70.i79 to i32, !dbg !454
  %indvars.iv.next70.i79 = add nuw nsw i64 %indvars.iv69.i64, 1, !dbg !472
  %indvars.iv69.i64 = phi i64 [ %51, %for.body4.lr.ph.i59 ], [ %indvars.iv.next70.i79, %for.body4.i81 ]
  %51 = zext i32 %indvars.iv.i53 to i64, !dbg !453"];
11 [label=""];
3 -> 8[label="  def-use"];
3 -> 3[label="  memory: 0"];
4 -> 8[label="  def-use"];
4 -> 4[label="  memory: 0"];
5 -> 8[label="  def-use"];
5 -> 5[label="  memory: 0"];
8 -> 9[label="  def-use"];
9 -> 10[label="  def-use"];
11 -> 1[label="  rooted"];
11 -> 2[label="  rooted"];
11 -> 3[label="  rooted"];
11 -> 4[label="  rooted"];
11 -> 5[label="  rooted"];
11 -> 6[label="  rooted"];
11 -> 7[label="  rooted"];
}